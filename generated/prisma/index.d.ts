
/**
 * Client
**/

import * as runtime from './runtime/client.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Bounties
 * 
 */
export type Bounties = $Result.DefaultSelection<Prisma.$BountiesPayload>
/**
 * Model BountiesTemplates
 * 
 */
export type BountiesTemplates = $Result.DefaultSelection<Prisma.$BountiesTemplatesPayload>
/**
 * Model Comment
 * 
 */
export type Comment = $Result.DefaultSelection<Prisma.$CommentPayload>
/**
 * Model Grants
 * 
 */
export type Grants = $Result.DefaultSelection<Prisma.$GrantsPayload>
/**
 * Model GrantApplication
 * 
 */
export type GrantApplication = $Result.DefaultSelection<Prisma.$GrantApplicationPayload>
/**
 * Model GrantTranche
 * 
 */
export type GrantTranche = $Result.DefaultSelection<Prisma.$GrantTranchePayload>
/**
 * Model Submission
 * 
 */
export type Submission = $Result.DefaultSelection<Prisma.$SubmissionPayload>
/**
 * Model Sponsors
 * 
 */
export type Sponsors = $Result.DefaultSelection<Prisma.$SponsorsPayload>
/**
 * Model Account
 * 
 */
export type Account = $Result.DefaultSelection<Prisma.$AccountPayload>
/**
 * Model Session
 * 
 */
export type Session = $Result.DefaultSelection<Prisma.$SessionPayload>
/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model Scouts
 * 
 */
export type Scouts = $Result.DefaultSelection<Prisma.$ScoutsPayload>
/**
 * Model TalentRankings
 * 
 */
export type TalentRankings = $Result.DefaultSelection<Prisma.$TalentRankingsPayload>
/**
 * Model PoW
 * 
 */
export type PoW = $Result.DefaultSelection<Prisma.$PoWPayload>
/**
 * Model EmailSettings
 * 
 */
export type EmailSettings = $Result.DefaultSelection<Prisma.$EmailSettingsPayload>
/**
 * Model UserSponsors
 * 
 */
export type UserSponsors = $Result.DefaultSelection<Prisma.$UserSponsorsPayload>
/**
 * Model UserInvites
 * 
 */
export type UserInvites = $Result.DefaultSelection<Prisma.$UserInvitesPayload>
/**
 * Model emailLogs
 * 
 */
export type emailLogs = $Result.DefaultSelection<Prisma.$emailLogsPayload>
/**
 * Model ResendLogs
 * 
 */
export type ResendLogs = $Result.DefaultSelection<Prisma.$ResendLogsPayload>
/**
 * Model SubscribeBounty
 * 
 */
export type SubscribeBounty = $Result.DefaultSelection<Prisma.$SubscribeBountyPayload>
/**
 * Model SubscribeHackathon
 * 
 */
export type SubscribeHackathon = $Result.DefaultSelection<Prisma.$SubscribeHackathonPayload>
/**
 * Model VerificationToken
 * 
 */
export type VerificationToken = $Result.DefaultSelection<Prisma.$VerificationTokenPayload>
/**
 * Model Hackathon
 * 
 */
export type Hackathon = $Result.DefaultSelection<Prisma.$HackathonPayload>
/**
 * Model UnsubscribedEmail
 * 
 */
export type UnsubscribedEmail = $Result.DefaultSelection<Prisma.$UnsubscribedEmailPayload>
/**
 * Model BlockedEmail
 * 
 */
export type BlockedEmail = $Result.DefaultSelection<Prisma.$BlockedEmailPayload>
/**
 * Model CreditLedger
 * 
 */
export type CreditLedger = $Result.DefaultSelection<Prisma.$CreditLedgerPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const CreditEventType: {
  SUBMISSION: 'SUBMISSION',
  SPAM_PENALTY: 'SPAM_PENALTY',
  WIN_BONUS: 'WIN_BONUS',
  MONTHLY_CREDIT: 'MONTHLY_CREDIT',
  CREDIT_REFUND: 'CREDIT_REFUND',
  GRANT_WIN_BONUS: 'GRANT_WIN_BONUS',
  GRANT_SPAM_PENALTY: 'GRANT_SPAM_PENALTY'
};

export type CreditEventType = (typeof CreditEventType)[keyof typeof CreditEventType]


export const TalentRankingSkills: {
  DEVELOPMENT: 'DEVELOPMENT',
  DESIGN: 'DESIGN',
  CONTENT: 'CONTENT',
  OTHER: 'OTHER',
  ALL: 'ALL'
};

export type TalentRankingSkills = (typeof TalentRankingSkills)[keyof typeof TalentRankingSkills]


export const EmailType: {
  BOUNTY_REVIEW: 'BOUNTY_REVIEW',
  BOUNTY_DEADLINE: 'BOUNTY_DEADLINE',
  BOUNTY_DEADLINE_WEEK: 'BOUNTY_DEADLINE_WEEK',
  BOUNTY_CLOSE_DEADLINE: 'BOUNTY_CLOSE_DEADLINE',
  NO_VERIFICATION: 'NO_VERIFICATION',
  NO_ACTIVITY: 'NO_ACTIVITY',
  NO_REVIEW_SPONSOR_1: 'NO_REVIEW_SPONSOR_1',
  NO_REVIEW_SPONSOR_2: 'NO_REVIEW_SPONSOR_2',
  ROLLING_15_DAYS: 'ROLLING_15_DAYS',
  ROLLING_30_DAYS: 'ROLLING_30_DAYS',
  NEW_LISTING: 'NEW_LISTING',
  ROLLING_UNPUBLISH: 'ROLLING_UNPUBLISH',
  UNFILLED_PROFILE: 'UNFILLED_PROFILE',
  WALLET_ANNOUNCEMENT: 'WALLET_ANNOUNCEMENT',
  CREDITS_ANNOUNCEMENT: 'CREDITS_ANNOUNCEMENT',
  AUTO_GENERATE_ANNOUNCEMENT: 'AUTO_GENERATE_ANNOUNCEMENT'
};

export type EmailType = (typeof EmailType)[keyof typeof EmailType]


export const Role: {
  ADMIN: 'ADMIN',
  MEMBER: 'MEMBER'
};

export type Role = (typeof Role)[keyof typeof Role]


export const Source: {
  NATIVE: 'NATIVE',
  IMPORT: 'IMPORT'
};

export type Source = (typeof Source)[keyof typeof Source]


export const ApplicationType: {
  rolling: 'rolling',
  fixed: 'fixed'
};

export type ApplicationType = (typeof ApplicationType)[keyof typeof ApplicationType]


export const status: {
  OPEN: 'OPEN',
  REVIEW: 'REVIEW',
  CLOSED: 'CLOSED',
  VERIFYING: 'VERIFYING',
  VERIFY_FAIL: 'VERIFY_FAIL'
};

export type status = (typeof status)[keyof typeof status]


export const GrantStatus: {
  OPEN: 'OPEN',
  CLOSED: 'CLOSED'
};

export type GrantStatus = (typeof GrantStatus)[keyof typeof GrantStatus]


export const GrantApplicationStatus: {
  Pending: 'Pending',
  Approved: 'Approved',
  Completed: 'Completed',
  Rejected: 'Rejected'
};

export type GrantApplicationStatus = (typeof GrantApplicationStatus)[keyof typeof GrantApplicationStatus]


export const BountyType: {
  bounty: 'bounty',
  project: 'project',
  hackathon: 'hackathon'
};

export type BountyType = (typeof BountyType)[keyof typeof BountyType]


export const CommentRefType: {
  BOUNTY: 'BOUNTY',
  SUBMISSION: 'SUBMISSION',
  GRANT_APPLICATION: 'GRANT_APPLICATION',
  POW: 'POW'
};

export type CommentRefType = (typeof CommentRefType)[keyof typeof CommentRefType]


export const CommentType: {
  NORMAL: 'NORMAL',
  SUBMISSION: 'SUBMISSION',
  DEADLINE_EXTENSION: 'DEADLINE_EXTENSION',
  WINNER_ANNOUNCEMENT: 'WINNER_ANNOUNCEMENT'
};

export type CommentType = (typeof CommentType)[keyof typeof CommentType]


export const JobType: {
  parttime: 'parttime',
  fulltime: 'fulltime',
  internship: 'internship'
};

export type JobType = (typeof JobType)[keyof typeof JobType]


export const CompensationType: {
  fixed: 'fixed',
  range: 'range',
  variable: 'variable'
};

export type CompensationType = (typeof CompensationType)[keyof typeof CompensationType]


export const SubmissionLabels: {
  Unreviewed: 'Unreviewed',
  Reviewed: 'Reviewed',
  Shortlisted: 'Shortlisted',
  Spam: 'Spam',
  Low_Quality: 'Low_Quality',
  Mid_Quality: 'Mid_Quality',
  High_Quality: 'High_Quality',
  Pending: 'Pending'
};

export type SubmissionLabels = (typeof SubmissionLabels)[keyof typeof SubmissionLabels]


export const TalentRankingTimeframe: {
  THIS_YEAR: 'THIS_YEAR',
  LAST_30_DAYS: 'LAST_30_DAYS',
  LAST_7_DAYS: 'LAST_7_DAYS',
  ALL_TIME: 'ALL_TIME'
};

export type TalentRankingTimeframe = (typeof TalentRankingTimeframe)[keyof typeof TalentRankingTimeframe]


export const SubmissionStatus: {
  Pending: 'Pending',
  Approved: 'Approved',
  Rejected: 'Rejected'
};

export type SubmissionStatus = (typeof SubmissionStatus)[keyof typeof SubmissionStatus]


export const GrantTrancheStatus: {
  Pending: 'Pending',
  Approved: 'Approved',
  Rejected: 'Rejected',
  Paid: 'Paid'
};

export type GrantTrancheStatus = (typeof GrantTrancheStatus)[keyof typeof GrantTrancheStatus]

}

export type CreditEventType = $Enums.CreditEventType

export const CreditEventType: typeof $Enums.CreditEventType

export type TalentRankingSkills = $Enums.TalentRankingSkills

export const TalentRankingSkills: typeof $Enums.TalentRankingSkills

export type EmailType = $Enums.EmailType

export const EmailType: typeof $Enums.EmailType

export type Role = $Enums.Role

export const Role: typeof $Enums.Role

export type Source = $Enums.Source

export const Source: typeof $Enums.Source

export type ApplicationType = $Enums.ApplicationType

export const ApplicationType: typeof $Enums.ApplicationType

export type status = $Enums.status

export const status: typeof $Enums.status

export type GrantStatus = $Enums.GrantStatus

export const GrantStatus: typeof $Enums.GrantStatus

export type GrantApplicationStatus = $Enums.GrantApplicationStatus

export const GrantApplicationStatus: typeof $Enums.GrantApplicationStatus

export type BountyType = $Enums.BountyType

export const BountyType: typeof $Enums.BountyType

export type CommentRefType = $Enums.CommentRefType

export const CommentRefType: typeof $Enums.CommentRefType

export type CommentType = $Enums.CommentType

export const CommentType: typeof $Enums.CommentType

export type JobType = $Enums.JobType

export const JobType: typeof $Enums.JobType

export type CompensationType = $Enums.CompensationType

export const CompensationType: typeof $Enums.CompensationType

export type SubmissionLabels = $Enums.SubmissionLabels

export const SubmissionLabels: typeof $Enums.SubmissionLabels

export type TalentRankingTimeframe = $Enums.TalentRankingTimeframe

export const TalentRankingTimeframe: typeof $Enums.TalentRankingTimeframe

export type SubmissionStatus = $Enums.SubmissionStatus

export const SubmissionStatus: typeof $Enums.SubmissionStatus

export type GrantTrancheStatus = $Enums.GrantTrancheStatus

export const GrantTrancheStatus: typeof $Enums.GrantTrancheStatus

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Bounties
 * const bounties = await prisma.bounties.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Bounties
   * const bounties = await prisma.bounties.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.bounties`: Exposes CRUD operations for the **Bounties** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Bounties
    * const bounties = await prisma.bounties.findMany()
    * ```
    */
  get bounties(): Prisma.BountiesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.bountiesTemplates`: Exposes CRUD operations for the **BountiesTemplates** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more BountiesTemplates
    * const bountiesTemplates = await prisma.bountiesTemplates.findMany()
    * ```
    */
  get bountiesTemplates(): Prisma.BountiesTemplatesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.comment`: Exposes CRUD operations for the **Comment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Comments
    * const comments = await prisma.comment.findMany()
    * ```
    */
  get comment(): Prisma.CommentDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.grants`: Exposes CRUD operations for the **Grants** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Grants
    * const grants = await prisma.grants.findMany()
    * ```
    */
  get grants(): Prisma.GrantsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.grantApplication`: Exposes CRUD operations for the **GrantApplication** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more GrantApplications
    * const grantApplications = await prisma.grantApplication.findMany()
    * ```
    */
  get grantApplication(): Prisma.GrantApplicationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.grantTranche`: Exposes CRUD operations for the **GrantTranche** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more GrantTranches
    * const grantTranches = await prisma.grantTranche.findMany()
    * ```
    */
  get grantTranche(): Prisma.GrantTrancheDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.submission`: Exposes CRUD operations for the **Submission** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Submissions
    * const submissions = await prisma.submission.findMany()
    * ```
    */
  get submission(): Prisma.SubmissionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sponsors`: Exposes CRUD operations for the **Sponsors** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sponsors
    * const sponsors = await prisma.sponsors.findMany()
    * ```
    */
  get sponsors(): Prisma.SponsorsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.account`: Exposes CRUD operations for the **Account** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Accounts
    * const accounts = await prisma.account.findMany()
    * ```
    */
  get account(): Prisma.AccountDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.session`: Exposes CRUD operations for the **Session** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sessions
    * const sessions = await prisma.session.findMany()
    * ```
    */
  get session(): Prisma.SessionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.scouts`: Exposes CRUD operations for the **Scouts** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Scouts
    * const scouts = await prisma.scouts.findMany()
    * ```
    */
  get scouts(): Prisma.ScoutsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.talentRankings`: Exposes CRUD operations for the **TalentRankings** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TalentRankings
    * const talentRankings = await prisma.talentRankings.findMany()
    * ```
    */
  get talentRankings(): Prisma.TalentRankingsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.poW`: Exposes CRUD operations for the **PoW** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PoWS
    * const poWS = await prisma.poW.findMany()
    * ```
    */
  get poW(): Prisma.PoWDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.emailSettings`: Exposes CRUD operations for the **EmailSettings** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EmailSettings
    * const emailSettings = await prisma.emailSettings.findMany()
    * ```
    */
  get emailSettings(): Prisma.EmailSettingsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.userSponsors`: Exposes CRUD operations for the **UserSponsors** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UserSponsors
    * const userSponsors = await prisma.userSponsors.findMany()
    * ```
    */
  get userSponsors(): Prisma.UserSponsorsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.userInvites`: Exposes CRUD operations for the **UserInvites** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UserInvites
    * const userInvites = await prisma.userInvites.findMany()
    * ```
    */
  get userInvites(): Prisma.UserInvitesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.emailLogs`: Exposes CRUD operations for the **emailLogs** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EmailLogs
    * const emailLogs = await prisma.emailLogs.findMany()
    * ```
    */
  get emailLogs(): Prisma.emailLogsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.resendLogs`: Exposes CRUD operations for the **ResendLogs** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ResendLogs
    * const resendLogs = await prisma.resendLogs.findMany()
    * ```
    */
  get resendLogs(): Prisma.ResendLogsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.subscribeBounty`: Exposes CRUD operations for the **SubscribeBounty** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SubscribeBounties
    * const subscribeBounties = await prisma.subscribeBounty.findMany()
    * ```
    */
  get subscribeBounty(): Prisma.SubscribeBountyDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.subscribeHackathon`: Exposes CRUD operations for the **SubscribeHackathon** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SubscribeHackathons
    * const subscribeHackathons = await prisma.subscribeHackathon.findMany()
    * ```
    */
  get subscribeHackathon(): Prisma.SubscribeHackathonDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.verificationToken`: Exposes CRUD operations for the **VerificationToken** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more VerificationTokens
    * const verificationTokens = await prisma.verificationToken.findMany()
    * ```
    */
  get verificationToken(): Prisma.VerificationTokenDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.hackathon`: Exposes CRUD operations for the **Hackathon** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Hackathons
    * const hackathons = await prisma.hackathon.findMany()
    * ```
    */
  get hackathon(): Prisma.HackathonDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.unsubscribedEmail`: Exposes CRUD operations for the **UnsubscribedEmail** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UnsubscribedEmails
    * const unsubscribedEmails = await prisma.unsubscribedEmail.findMany()
    * ```
    */
  get unsubscribedEmail(): Prisma.UnsubscribedEmailDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.blockedEmail`: Exposes CRUD operations for the **BlockedEmail** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more BlockedEmails
    * const blockedEmails = await prisma.blockedEmail.findMany()
    * ```
    */
  get blockedEmail(): Prisma.BlockedEmailDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.creditLedger`: Exposes CRUD operations for the **CreditLedger** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CreditLedgers
    * const creditLedgers = await prisma.creditLedger.findMany()
    * ```
    */
  get creditLedger(): Prisma.CreditLedgerDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.10.1
   * Query Engine version: 9b628578b3b7cae625e8c927178f15a170e74a9c
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Bounties: 'Bounties',
    BountiesTemplates: 'BountiesTemplates',
    Comment: 'Comment',
    Grants: 'Grants',
    GrantApplication: 'GrantApplication',
    GrantTranche: 'GrantTranche',
    Submission: 'Submission',
    Sponsors: 'Sponsors',
    Account: 'Account',
    Session: 'Session',
    User: 'User',
    Scouts: 'Scouts',
    TalentRankings: 'TalentRankings',
    PoW: 'PoW',
    EmailSettings: 'EmailSettings',
    UserSponsors: 'UserSponsors',
    UserInvites: 'UserInvites',
    emailLogs: 'emailLogs',
    ResendLogs: 'ResendLogs',
    SubscribeBounty: 'SubscribeBounty',
    SubscribeHackathon: 'SubscribeHackathon',
    VerificationToken: 'VerificationToken',
    Hackathon: 'Hackathon',
    UnsubscribedEmail: 'UnsubscribedEmail',
    BlockedEmail: 'BlockedEmail',
    CreditLedger: 'CreditLedger'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "bounties" | "bountiesTemplates" | "comment" | "grants" | "grantApplication" | "grantTranche" | "submission" | "sponsors" | "account" | "session" | "user" | "scouts" | "talentRankings" | "poW" | "emailSettings" | "userSponsors" | "userInvites" | "emailLogs" | "resendLogs" | "subscribeBounty" | "subscribeHackathon" | "verificationToken" | "hackathon" | "unsubscribedEmail" | "blockedEmail" | "creditLedger"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Bounties: {
        payload: Prisma.$BountiesPayload<ExtArgs>
        fields: Prisma.BountiesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BountiesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BountiesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BountiesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BountiesPayload>
          }
          findFirst: {
            args: Prisma.BountiesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BountiesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BountiesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BountiesPayload>
          }
          findMany: {
            args: Prisma.BountiesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BountiesPayload>[]
          }
          create: {
            args: Prisma.BountiesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BountiesPayload>
          }
          createMany: {
            args: Prisma.BountiesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.BountiesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BountiesPayload>
          }
          update: {
            args: Prisma.BountiesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BountiesPayload>
          }
          deleteMany: {
            args: Prisma.BountiesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BountiesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.BountiesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BountiesPayload>
          }
          aggregate: {
            args: Prisma.BountiesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBounties>
          }
          groupBy: {
            args: Prisma.BountiesGroupByArgs<ExtArgs>
            result: $Utils.Optional<BountiesGroupByOutputType>[]
          }
          count: {
            args: Prisma.BountiesCountArgs<ExtArgs>
            result: $Utils.Optional<BountiesCountAggregateOutputType> | number
          }
        }
      }
      BountiesTemplates: {
        payload: Prisma.$BountiesTemplatesPayload<ExtArgs>
        fields: Prisma.BountiesTemplatesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BountiesTemplatesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BountiesTemplatesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BountiesTemplatesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BountiesTemplatesPayload>
          }
          findFirst: {
            args: Prisma.BountiesTemplatesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BountiesTemplatesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BountiesTemplatesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BountiesTemplatesPayload>
          }
          findMany: {
            args: Prisma.BountiesTemplatesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BountiesTemplatesPayload>[]
          }
          create: {
            args: Prisma.BountiesTemplatesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BountiesTemplatesPayload>
          }
          createMany: {
            args: Prisma.BountiesTemplatesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.BountiesTemplatesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BountiesTemplatesPayload>
          }
          update: {
            args: Prisma.BountiesTemplatesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BountiesTemplatesPayload>
          }
          deleteMany: {
            args: Prisma.BountiesTemplatesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BountiesTemplatesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.BountiesTemplatesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BountiesTemplatesPayload>
          }
          aggregate: {
            args: Prisma.BountiesTemplatesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBountiesTemplates>
          }
          groupBy: {
            args: Prisma.BountiesTemplatesGroupByArgs<ExtArgs>
            result: $Utils.Optional<BountiesTemplatesGroupByOutputType>[]
          }
          count: {
            args: Prisma.BountiesTemplatesCountArgs<ExtArgs>
            result: $Utils.Optional<BountiesTemplatesCountAggregateOutputType> | number
          }
        }
      }
      Comment: {
        payload: Prisma.$CommentPayload<ExtArgs>
        fields: Prisma.CommentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CommentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CommentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload>
          }
          findFirst: {
            args: Prisma.CommentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CommentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload>
          }
          findMany: {
            args: Prisma.CommentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload>[]
          }
          create: {
            args: Prisma.CommentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload>
          }
          createMany: {
            args: Prisma.CommentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.CommentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload>
          }
          update: {
            args: Prisma.CommentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload>
          }
          deleteMany: {
            args: Prisma.CommentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CommentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CommentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload>
          }
          aggregate: {
            args: Prisma.CommentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateComment>
          }
          groupBy: {
            args: Prisma.CommentGroupByArgs<ExtArgs>
            result: $Utils.Optional<CommentGroupByOutputType>[]
          }
          count: {
            args: Prisma.CommentCountArgs<ExtArgs>
            result: $Utils.Optional<CommentCountAggregateOutputType> | number
          }
        }
      }
      Grants: {
        payload: Prisma.$GrantsPayload<ExtArgs>
        fields: Prisma.GrantsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.GrantsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GrantsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.GrantsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GrantsPayload>
          }
          findFirst: {
            args: Prisma.GrantsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GrantsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.GrantsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GrantsPayload>
          }
          findMany: {
            args: Prisma.GrantsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GrantsPayload>[]
          }
          create: {
            args: Prisma.GrantsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GrantsPayload>
          }
          createMany: {
            args: Prisma.GrantsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.GrantsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GrantsPayload>
          }
          update: {
            args: Prisma.GrantsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GrantsPayload>
          }
          deleteMany: {
            args: Prisma.GrantsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.GrantsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.GrantsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GrantsPayload>
          }
          aggregate: {
            args: Prisma.GrantsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateGrants>
          }
          groupBy: {
            args: Prisma.GrantsGroupByArgs<ExtArgs>
            result: $Utils.Optional<GrantsGroupByOutputType>[]
          }
          count: {
            args: Prisma.GrantsCountArgs<ExtArgs>
            result: $Utils.Optional<GrantsCountAggregateOutputType> | number
          }
        }
      }
      GrantApplication: {
        payload: Prisma.$GrantApplicationPayload<ExtArgs>
        fields: Prisma.GrantApplicationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.GrantApplicationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GrantApplicationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.GrantApplicationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GrantApplicationPayload>
          }
          findFirst: {
            args: Prisma.GrantApplicationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GrantApplicationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.GrantApplicationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GrantApplicationPayload>
          }
          findMany: {
            args: Prisma.GrantApplicationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GrantApplicationPayload>[]
          }
          create: {
            args: Prisma.GrantApplicationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GrantApplicationPayload>
          }
          createMany: {
            args: Prisma.GrantApplicationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.GrantApplicationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GrantApplicationPayload>
          }
          update: {
            args: Prisma.GrantApplicationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GrantApplicationPayload>
          }
          deleteMany: {
            args: Prisma.GrantApplicationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.GrantApplicationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.GrantApplicationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GrantApplicationPayload>
          }
          aggregate: {
            args: Prisma.GrantApplicationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateGrantApplication>
          }
          groupBy: {
            args: Prisma.GrantApplicationGroupByArgs<ExtArgs>
            result: $Utils.Optional<GrantApplicationGroupByOutputType>[]
          }
          count: {
            args: Prisma.GrantApplicationCountArgs<ExtArgs>
            result: $Utils.Optional<GrantApplicationCountAggregateOutputType> | number
          }
        }
      }
      GrantTranche: {
        payload: Prisma.$GrantTranchePayload<ExtArgs>
        fields: Prisma.GrantTrancheFieldRefs
        operations: {
          findUnique: {
            args: Prisma.GrantTrancheFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GrantTranchePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.GrantTrancheFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GrantTranchePayload>
          }
          findFirst: {
            args: Prisma.GrantTrancheFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GrantTranchePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.GrantTrancheFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GrantTranchePayload>
          }
          findMany: {
            args: Prisma.GrantTrancheFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GrantTranchePayload>[]
          }
          create: {
            args: Prisma.GrantTrancheCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GrantTranchePayload>
          }
          createMany: {
            args: Prisma.GrantTrancheCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.GrantTrancheDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GrantTranchePayload>
          }
          update: {
            args: Prisma.GrantTrancheUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GrantTranchePayload>
          }
          deleteMany: {
            args: Prisma.GrantTrancheDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.GrantTrancheUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.GrantTrancheUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GrantTranchePayload>
          }
          aggregate: {
            args: Prisma.GrantTrancheAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateGrantTranche>
          }
          groupBy: {
            args: Prisma.GrantTrancheGroupByArgs<ExtArgs>
            result: $Utils.Optional<GrantTrancheGroupByOutputType>[]
          }
          count: {
            args: Prisma.GrantTrancheCountArgs<ExtArgs>
            result: $Utils.Optional<GrantTrancheCountAggregateOutputType> | number
          }
        }
      }
      Submission: {
        payload: Prisma.$SubmissionPayload<ExtArgs>
        fields: Prisma.SubmissionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SubmissionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubmissionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SubmissionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubmissionPayload>
          }
          findFirst: {
            args: Prisma.SubmissionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubmissionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SubmissionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubmissionPayload>
          }
          findMany: {
            args: Prisma.SubmissionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubmissionPayload>[]
          }
          create: {
            args: Prisma.SubmissionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubmissionPayload>
          }
          createMany: {
            args: Prisma.SubmissionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.SubmissionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubmissionPayload>
          }
          update: {
            args: Prisma.SubmissionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubmissionPayload>
          }
          deleteMany: {
            args: Prisma.SubmissionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SubmissionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SubmissionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubmissionPayload>
          }
          aggregate: {
            args: Prisma.SubmissionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSubmission>
          }
          groupBy: {
            args: Prisma.SubmissionGroupByArgs<ExtArgs>
            result: $Utils.Optional<SubmissionGroupByOutputType>[]
          }
          count: {
            args: Prisma.SubmissionCountArgs<ExtArgs>
            result: $Utils.Optional<SubmissionCountAggregateOutputType> | number
          }
        }
      }
      Sponsors: {
        payload: Prisma.$SponsorsPayload<ExtArgs>
        fields: Prisma.SponsorsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SponsorsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SponsorsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SponsorsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SponsorsPayload>
          }
          findFirst: {
            args: Prisma.SponsorsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SponsorsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SponsorsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SponsorsPayload>
          }
          findMany: {
            args: Prisma.SponsorsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SponsorsPayload>[]
          }
          create: {
            args: Prisma.SponsorsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SponsorsPayload>
          }
          createMany: {
            args: Prisma.SponsorsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.SponsorsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SponsorsPayload>
          }
          update: {
            args: Prisma.SponsorsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SponsorsPayload>
          }
          deleteMany: {
            args: Prisma.SponsorsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SponsorsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SponsorsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SponsorsPayload>
          }
          aggregate: {
            args: Prisma.SponsorsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSponsors>
          }
          groupBy: {
            args: Prisma.SponsorsGroupByArgs<ExtArgs>
            result: $Utils.Optional<SponsorsGroupByOutputType>[]
          }
          count: {
            args: Prisma.SponsorsCountArgs<ExtArgs>
            result: $Utils.Optional<SponsorsCountAggregateOutputType> | number
          }
        }
      }
      Account: {
        payload: Prisma.$AccountPayload<ExtArgs>
        fields: Prisma.AccountFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AccountFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AccountFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          findFirst: {
            args: Prisma.AccountFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AccountFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          findMany: {
            args: Prisma.AccountFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>[]
          }
          create: {
            args: Prisma.AccountCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          createMany: {
            args: Prisma.AccountCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.AccountDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          update: {
            args: Prisma.AccountUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          deleteMany: {
            args: Prisma.AccountDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AccountUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AccountUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          aggregate: {
            args: Prisma.AccountAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAccount>
          }
          groupBy: {
            args: Prisma.AccountGroupByArgs<ExtArgs>
            result: $Utils.Optional<AccountGroupByOutputType>[]
          }
          count: {
            args: Prisma.AccountCountArgs<ExtArgs>
            result: $Utils.Optional<AccountCountAggregateOutputType> | number
          }
        }
      }
      Session: {
        payload: Prisma.$SessionPayload<ExtArgs>
        fields: Prisma.SessionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SessionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SessionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          findFirst: {
            args: Prisma.SessionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SessionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          findMany: {
            args: Prisma.SessionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>[]
          }
          create: {
            args: Prisma.SessionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          createMany: {
            args: Prisma.SessionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.SessionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          update: {
            args: Prisma.SessionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          deleteMany: {
            args: Prisma.SessionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SessionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SessionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          aggregate: {
            args: Prisma.SessionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSession>
          }
          groupBy: {
            args: Prisma.SessionGroupByArgs<ExtArgs>
            result: $Utils.Optional<SessionGroupByOutputType>[]
          }
          count: {
            args: Prisma.SessionCountArgs<ExtArgs>
            result: $Utils.Optional<SessionCountAggregateOutputType> | number
          }
        }
      }
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      Scouts: {
        payload: Prisma.$ScoutsPayload<ExtArgs>
        fields: Prisma.ScoutsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ScoutsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ScoutsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ScoutsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ScoutsPayload>
          }
          findFirst: {
            args: Prisma.ScoutsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ScoutsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ScoutsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ScoutsPayload>
          }
          findMany: {
            args: Prisma.ScoutsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ScoutsPayload>[]
          }
          create: {
            args: Prisma.ScoutsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ScoutsPayload>
          }
          createMany: {
            args: Prisma.ScoutsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ScoutsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ScoutsPayload>
          }
          update: {
            args: Prisma.ScoutsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ScoutsPayload>
          }
          deleteMany: {
            args: Prisma.ScoutsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ScoutsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ScoutsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ScoutsPayload>
          }
          aggregate: {
            args: Prisma.ScoutsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateScouts>
          }
          groupBy: {
            args: Prisma.ScoutsGroupByArgs<ExtArgs>
            result: $Utils.Optional<ScoutsGroupByOutputType>[]
          }
          count: {
            args: Prisma.ScoutsCountArgs<ExtArgs>
            result: $Utils.Optional<ScoutsCountAggregateOutputType> | number
          }
        }
      }
      TalentRankings: {
        payload: Prisma.$TalentRankingsPayload<ExtArgs>
        fields: Prisma.TalentRankingsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TalentRankingsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TalentRankingsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TalentRankingsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TalentRankingsPayload>
          }
          findFirst: {
            args: Prisma.TalentRankingsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TalentRankingsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TalentRankingsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TalentRankingsPayload>
          }
          findMany: {
            args: Prisma.TalentRankingsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TalentRankingsPayload>[]
          }
          create: {
            args: Prisma.TalentRankingsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TalentRankingsPayload>
          }
          createMany: {
            args: Prisma.TalentRankingsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.TalentRankingsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TalentRankingsPayload>
          }
          update: {
            args: Prisma.TalentRankingsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TalentRankingsPayload>
          }
          deleteMany: {
            args: Prisma.TalentRankingsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TalentRankingsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.TalentRankingsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TalentRankingsPayload>
          }
          aggregate: {
            args: Prisma.TalentRankingsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTalentRankings>
          }
          groupBy: {
            args: Prisma.TalentRankingsGroupByArgs<ExtArgs>
            result: $Utils.Optional<TalentRankingsGroupByOutputType>[]
          }
          count: {
            args: Prisma.TalentRankingsCountArgs<ExtArgs>
            result: $Utils.Optional<TalentRankingsCountAggregateOutputType> | number
          }
        }
      }
      PoW: {
        payload: Prisma.$PoWPayload<ExtArgs>
        fields: Prisma.PoWFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PoWFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PoWPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PoWFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PoWPayload>
          }
          findFirst: {
            args: Prisma.PoWFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PoWPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PoWFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PoWPayload>
          }
          findMany: {
            args: Prisma.PoWFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PoWPayload>[]
          }
          create: {
            args: Prisma.PoWCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PoWPayload>
          }
          createMany: {
            args: Prisma.PoWCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.PoWDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PoWPayload>
          }
          update: {
            args: Prisma.PoWUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PoWPayload>
          }
          deleteMany: {
            args: Prisma.PoWDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PoWUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PoWUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PoWPayload>
          }
          aggregate: {
            args: Prisma.PoWAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePoW>
          }
          groupBy: {
            args: Prisma.PoWGroupByArgs<ExtArgs>
            result: $Utils.Optional<PoWGroupByOutputType>[]
          }
          count: {
            args: Prisma.PoWCountArgs<ExtArgs>
            result: $Utils.Optional<PoWCountAggregateOutputType> | number
          }
        }
      }
      EmailSettings: {
        payload: Prisma.$EmailSettingsPayload<ExtArgs>
        fields: Prisma.EmailSettingsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EmailSettingsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmailSettingsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EmailSettingsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmailSettingsPayload>
          }
          findFirst: {
            args: Prisma.EmailSettingsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmailSettingsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EmailSettingsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmailSettingsPayload>
          }
          findMany: {
            args: Prisma.EmailSettingsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmailSettingsPayload>[]
          }
          create: {
            args: Prisma.EmailSettingsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmailSettingsPayload>
          }
          createMany: {
            args: Prisma.EmailSettingsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.EmailSettingsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmailSettingsPayload>
          }
          update: {
            args: Prisma.EmailSettingsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmailSettingsPayload>
          }
          deleteMany: {
            args: Prisma.EmailSettingsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EmailSettingsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.EmailSettingsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmailSettingsPayload>
          }
          aggregate: {
            args: Prisma.EmailSettingsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEmailSettings>
          }
          groupBy: {
            args: Prisma.EmailSettingsGroupByArgs<ExtArgs>
            result: $Utils.Optional<EmailSettingsGroupByOutputType>[]
          }
          count: {
            args: Prisma.EmailSettingsCountArgs<ExtArgs>
            result: $Utils.Optional<EmailSettingsCountAggregateOutputType> | number
          }
        }
      }
      UserSponsors: {
        payload: Prisma.$UserSponsorsPayload<ExtArgs>
        fields: Prisma.UserSponsorsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserSponsorsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSponsorsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserSponsorsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSponsorsPayload>
          }
          findFirst: {
            args: Prisma.UserSponsorsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSponsorsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserSponsorsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSponsorsPayload>
          }
          findMany: {
            args: Prisma.UserSponsorsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSponsorsPayload>[]
          }
          create: {
            args: Prisma.UserSponsorsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSponsorsPayload>
          }
          createMany: {
            args: Prisma.UserSponsorsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.UserSponsorsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSponsorsPayload>
          }
          update: {
            args: Prisma.UserSponsorsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSponsorsPayload>
          }
          deleteMany: {
            args: Prisma.UserSponsorsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserSponsorsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserSponsorsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSponsorsPayload>
          }
          aggregate: {
            args: Prisma.UserSponsorsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUserSponsors>
          }
          groupBy: {
            args: Prisma.UserSponsorsGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserSponsorsGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserSponsorsCountArgs<ExtArgs>
            result: $Utils.Optional<UserSponsorsCountAggregateOutputType> | number
          }
        }
      }
      UserInvites: {
        payload: Prisma.$UserInvitesPayload<ExtArgs>
        fields: Prisma.UserInvitesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserInvitesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserInvitesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserInvitesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserInvitesPayload>
          }
          findFirst: {
            args: Prisma.UserInvitesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserInvitesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserInvitesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserInvitesPayload>
          }
          findMany: {
            args: Prisma.UserInvitesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserInvitesPayload>[]
          }
          create: {
            args: Prisma.UserInvitesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserInvitesPayload>
          }
          createMany: {
            args: Prisma.UserInvitesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.UserInvitesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserInvitesPayload>
          }
          update: {
            args: Prisma.UserInvitesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserInvitesPayload>
          }
          deleteMany: {
            args: Prisma.UserInvitesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserInvitesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserInvitesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserInvitesPayload>
          }
          aggregate: {
            args: Prisma.UserInvitesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUserInvites>
          }
          groupBy: {
            args: Prisma.UserInvitesGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserInvitesGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserInvitesCountArgs<ExtArgs>
            result: $Utils.Optional<UserInvitesCountAggregateOutputType> | number
          }
        }
      }
      emailLogs: {
        payload: Prisma.$emailLogsPayload<ExtArgs>
        fields: Prisma.emailLogsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.emailLogsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$emailLogsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.emailLogsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$emailLogsPayload>
          }
          findFirst: {
            args: Prisma.emailLogsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$emailLogsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.emailLogsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$emailLogsPayload>
          }
          findMany: {
            args: Prisma.emailLogsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$emailLogsPayload>[]
          }
          create: {
            args: Prisma.emailLogsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$emailLogsPayload>
          }
          createMany: {
            args: Prisma.emailLogsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.emailLogsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$emailLogsPayload>
          }
          update: {
            args: Prisma.emailLogsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$emailLogsPayload>
          }
          deleteMany: {
            args: Prisma.emailLogsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.emailLogsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.emailLogsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$emailLogsPayload>
          }
          aggregate: {
            args: Prisma.EmailLogsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEmailLogs>
          }
          groupBy: {
            args: Prisma.emailLogsGroupByArgs<ExtArgs>
            result: $Utils.Optional<EmailLogsGroupByOutputType>[]
          }
          count: {
            args: Prisma.emailLogsCountArgs<ExtArgs>
            result: $Utils.Optional<EmailLogsCountAggregateOutputType> | number
          }
        }
      }
      ResendLogs: {
        payload: Prisma.$ResendLogsPayload<ExtArgs>
        fields: Prisma.ResendLogsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ResendLogsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ResendLogsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ResendLogsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ResendLogsPayload>
          }
          findFirst: {
            args: Prisma.ResendLogsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ResendLogsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ResendLogsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ResendLogsPayload>
          }
          findMany: {
            args: Prisma.ResendLogsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ResendLogsPayload>[]
          }
          create: {
            args: Prisma.ResendLogsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ResendLogsPayload>
          }
          createMany: {
            args: Prisma.ResendLogsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ResendLogsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ResendLogsPayload>
          }
          update: {
            args: Prisma.ResendLogsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ResendLogsPayload>
          }
          deleteMany: {
            args: Prisma.ResendLogsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ResendLogsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ResendLogsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ResendLogsPayload>
          }
          aggregate: {
            args: Prisma.ResendLogsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateResendLogs>
          }
          groupBy: {
            args: Prisma.ResendLogsGroupByArgs<ExtArgs>
            result: $Utils.Optional<ResendLogsGroupByOutputType>[]
          }
          count: {
            args: Prisma.ResendLogsCountArgs<ExtArgs>
            result: $Utils.Optional<ResendLogsCountAggregateOutputType> | number
          }
        }
      }
      SubscribeBounty: {
        payload: Prisma.$SubscribeBountyPayload<ExtArgs>
        fields: Prisma.SubscribeBountyFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SubscribeBountyFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscribeBountyPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SubscribeBountyFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscribeBountyPayload>
          }
          findFirst: {
            args: Prisma.SubscribeBountyFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscribeBountyPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SubscribeBountyFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscribeBountyPayload>
          }
          findMany: {
            args: Prisma.SubscribeBountyFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscribeBountyPayload>[]
          }
          create: {
            args: Prisma.SubscribeBountyCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscribeBountyPayload>
          }
          createMany: {
            args: Prisma.SubscribeBountyCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.SubscribeBountyDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscribeBountyPayload>
          }
          update: {
            args: Prisma.SubscribeBountyUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscribeBountyPayload>
          }
          deleteMany: {
            args: Prisma.SubscribeBountyDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SubscribeBountyUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SubscribeBountyUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscribeBountyPayload>
          }
          aggregate: {
            args: Prisma.SubscribeBountyAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSubscribeBounty>
          }
          groupBy: {
            args: Prisma.SubscribeBountyGroupByArgs<ExtArgs>
            result: $Utils.Optional<SubscribeBountyGroupByOutputType>[]
          }
          count: {
            args: Prisma.SubscribeBountyCountArgs<ExtArgs>
            result: $Utils.Optional<SubscribeBountyCountAggregateOutputType> | number
          }
        }
      }
      SubscribeHackathon: {
        payload: Prisma.$SubscribeHackathonPayload<ExtArgs>
        fields: Prisma.SubscribeHackathonFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SubscribeHackathonFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscribeHackathonPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SubscribeHackathonFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscribeHackathonPayload>
          }
          findFirst: {
            args: Prisma.SubscribeHackathonFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscribeHackathonPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SubscribeHackathonFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscribeHackathonPayload>
          }
          findMany: {
            args: Prisma.SubscribeHackathonFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscribeHackathonPayload>[]
          }
          create: {
            args: Prisma.SubscribeHackathonCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscribeHackathonPayload>
          }
          createMany: {
            args: Prisma.SubscribeHackathonCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.SubscribeHackathonDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscribeHackathonPayload>
          }
          update: {
            args: Prisma.SubscribeHackathonUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscribeHackathonPayload>
          }
          deleteMany: {
            args: Prisma.SubscribeHackathonDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SubscribeHackathonUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SubscribeHackathonUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscribeHackathonPayload>
          }
          aggregate: {
            args: Prisma.SubscribeHackathonAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSubscribeHackathon>
          }
          groupBy: {
            args: Prisma.SubscribeHackathonGroupByArgs<ExtArgs>
            result: $Utils.Optional<SubscribeHackathonGroupByOutputType>[]
          }
          count: {
            args: Prisma.SubscribeHackathonCountArgs<ExtArgs>
            result: $Utils.Optional<SubscribeHackathonCountAggregateOutputType> | number
          }
        }
      }
      VerificationToken: {
        payload: Prisma.$VerificationTokenPayload<ExtArgs>
        fields: Prisma.VerificationTokenFieldRefs
        operations: {
          findUnique: {
            args: Prisma.VerificationTokenFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.VerificationTokenFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload>
          }
          findFirst: {
            args: Prisma.VerificationTokenFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.VerificationTokenFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload>
          }
          findMany: {
            args: Prisma.VerificationTokenFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload>[]
          }
          create: {
            args: Prisma.VerificationTokenCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload>
          }
          createMany: {
            args: Prisma.VerificationTokenCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.VerificationTokenDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload>
          }
          update: {
            args: Prisma.VerificationTokenUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload>
          }
          deleteMany: {
            args: Prisma.VerificationTokenDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.VerificationTokenUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.VerificationTokenUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload>
          }
          aggregate: {
            args: Prisma.VerificationTokenAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVerificationToken>
          }
          groupBy: {
            args: Prisma.VerificationTokenGroupByArgs<ExtArgs>
            result: $Utils.Optional<VerificationTokenGroupByOutputType>[]
          }
          count: {
            args: Prisma.VerificationTokenCountArgs<ExtArgs>
            result: $Utils.Optional<VerificationTokenCountAggregateOutputType> | number
          }
        }
      }
      Hackathon: {
        payload: Prisma.$HackathonPayload<ExtArgs>
        fields: Prisma.HackathonFieldRefs
        operations: {
          findUnique: {
            args: Prisma.HackathonFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HackathonPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.HackathonFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HackathonPayload>
          }
          findFirst: {
            args: Prisma.HackathonFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HackathonPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.HackathonFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HackathonPayload>
          }
          findMany: {
            args: Prisma.HackathonFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HackathonPayload>[]
          }
          create: {
            args: Prisma.HackathonCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HackathonPayload>
          }
          createMany: {
            args: Prisma.HackathonCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.HackathonDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HackathonPayload>
          }
          update: {
            args: Prisma.HackathonUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HackathonPayload>
          }
          deleteMany: {
            args: Prisma.HackathonDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.HackathonUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.HackathonUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HackathonPayload>
          }
          aggregate: {
            args: Prisma.HackathonAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateHackathon>
          }
          groupBy: {
            args: Prisma.HackathonGroupByArgs<ExtArgs>
            result: $Utils.Optional<HackathonGroupByOutputType>[]
          }
          count: {
            args: Prisma.HackathonCountArgs<ExtArgs>
            result: $Utils.Optional<HackathonCountAggregateOutputType> | number
          }
        }
      }
      UnsubscribedEmail: {
        payload: Prisma.$UnsubscribedEmailPayload<ExtArgs>
        fields: Prisma.UnsubscribedEmailFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UnsubscribedEmailFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UnsubscribedEmailPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UnsubscribedEmailFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UnsubscribedEmailPayload>
          }
          findFirst: {
            args: Prisma.UnsubscribedEmailFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UnsubscribedEmailPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UnsubscribedEmailFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UnsubscribedEmailPayload>
          }
          findMany: {
            args: Prisma.UnsubscribedEmailFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UnsubscribedEmailPayload>[]
          }
          create: {
            args: Prisma.UnsubscribedEmailCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UnsubscribedEmailPayload>
          }
          createMany: {
            args: Prisma.UnsubscribedEmailCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.UnsubscribedEmailDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UnsubscribedEmailPayload>
          }
          update: {
            args: Prisma.UnsubscribedEmailUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UnsubscribedEmailPayload>
          }
          deleteMany: {
            args: Prisma.UnsubscribedEmailDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UnsubscribedEmailUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UnsubscribedEmailUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UnsubscribedEmailPayload>
          }
          aggregate: {
            args: Prisma.UnsubscribedEmailAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUnsubscribedEmail>
          }
          groupBy: {
            args: Prisma.UnsubscribedEmailGroupByArgs<ExtArgs>
            result: $Utils.Optional<UnsubscribedEmailGroupByOutputType>[]
          }
          count: {
            args: Prisma.UnsubscribedEmailCountArgs<ExtArgs>
            result: $Utils.Optional<UnsubscribedEmailCountAggregateOutputType> | number
          }
        }
      }
      BlockedEmail: {
        payload: Prisma.$BlockedEmailPayload<ExtArgs>
        fields: Prisma.BlockedEmailFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BlockedEmailFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlockedEmailPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BlockedEmailFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlockedEmailPayload>
          }
          findFirst: {
            args: Prisma.BlockedEmailFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlockedEmailPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BlockedEmailFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlockedEmailPayload>
          }
          findMany: {
            args: Prisma.BlockedEmailFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlockedEmailPayload>[]
          }
          create: {
            args: Prisma.BlockedEmailCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlockedEmailPayload>
          }
          createMany: {
            args: Prisma.BlockedEmailCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.BlockedEmailDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlockedEmailPayload>
          }
          update: {
            args: Prisma.BlockedEmailUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlockedEmailPayload>
          }
          deleteMany: {
            args: Prisma.BlockedEmailDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BlockedEmailUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.BlockedEmailUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlockedEmailPayload>
          }
          aggregate: {
            args: Prisma.BlockedEmailAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBlockedEmail>
          }
          groupBy: {
            args: Prisma.BlockedEmailGroupByArgs<ExtArgs>
            result: $Utils.Optional<BlockedEmailGroupByOutputType>[]
          }
          count: {
            args: Prisma.BlockedEmailCountArgs<ExtArgs>
            result: $Utils.Optional<BlockedEmailCountAggregateOutputType> | number
          }
        }
      }
      CreditLedger: {
        payload: Prisma.$CreditLedgerPayload<ExtArgs>
        fields: Prisma.CreditLedgerFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CreditLedgerFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CreditLedgerPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CreditLedgerFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CreditLedgerPayload>
          }
          findFirst: {
            args: Prisma.CreditLedgerFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CreditLedgerPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CreditLedgerFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CreditLedgerPayload>
          }
          findMany: {
            args: Prisma.CreditLedgerFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CreditLedgerPayload>[]
          }
          create: {
            args: Prisma.CreditLedgerCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CreditLedgerPayload>
          }
          createMany: {
            args: Prisma.CreditLedgerCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.CreditLedgerDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CreditLedgerPayload>
          }
          update: {
            args: Prisma.CreditLedgerUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CreditLedgerPayload>
          }
          deleteMany: {
            args: Prisma.CreditLedgerDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CreditLedgerUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CreditLedgerUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CreditLedgerPayload>
          }
          aggregate: {
            args: Prisma.CreditLedgerAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCreditLedger>
          }
          groupBy: {
            args: Prisma.CreditLedgerGroupByArgs<ExtArgs>
            result: $Utils.Optional<CreditLedgerGroupByOutputType>[]
          }
          count: {
            args: Prisma.CreditLedgerCountArgs<ExtArgs>
            result: $Utils.Optional<CreditLedgerCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Instance of a Driver Adapter, e.g., like one provided by `@prisma/adapter-planetscale`
     */
    adapter?: runtime.SqlDriverAdapterFactory | null
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    bounties?: BountiesOmit
    bountiesTemplates?: BountiesTemplatesOmit
    comment?: CommentOmit
    grants?: GrantsOmit
    grantApplication?: GrantApplicationOmit
    grantTranche?: GrantTrancheOmit
    submission?: SubmissionOmit
    sponsors?: SponsorsOmit
    account?: AccountOmit
    session?: SessionOmit
    user?: UserOmit
    scouts?: ScoutsOmit
    talentRankings?: TalentRankingsOmit
    poW?: PoWOmit
    emailSettings?: EmailSettingsOmit
    userSponsors?: UserSponsorsOmit
    userInvites?: UserInvitesOmit
    emailLogs?: emailLogsOmit
    resendLogs?: ResendLogsOmit
    subscribeBounty?: SubscribeBountyOmit
    subscribeHackathon?: SubscribeHackathonOmit
    verificationToken?: VerificationTokenOmit
    hackathon?: HackathonOmit
    unsubscribedEmail?: UnsubscribedEmailOmit
    blockedEmail?: BlockedEmailOmit
    creditLedger?: CreditLedgerOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type BountiesCountOutputType
   */

  export type BountiesCountOutputType = {
    Submission: number
    SubscribeBounty: number
    Scouts: number
    Comments: number
  }

  export type BountiesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Submission?: boolean | BountiesCountOutputTypeCountSubmissionArgs
    SubscribeBounty?: boolean | BountiesCountOutputTypeCountSubscribeBountyArgs
    Scouts?: boolean | BountiesCountOutputTypeCountScoutsArgs
    Comments?: boolean | BountiesCountOutputTypeCountCommentsArgs
  }

  // Custom InputTypes
  /**
   * BountiesCountOutputType without action
   */
  export type BountiesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BountiesCountOutputType
     */
    select?: BountiesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * BountiesCountOutputType without action
   */
  export type BountiesCountOutputTypeCountSubmissionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SubmissionWhereInput
  }

  /**
   * BountiesCountOutputType without action
   */
  export type BountiesCountOutputTypeCountSubscribeBountyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SubscribeBountyWhereInput
  }

  /**
   * BountiesCountOutputType without action
   */
  export type BountiesCountOutputTypeCountScoutsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ScoutsWhereInput
  }

  /**
   * BountiesCountOutputType without action
   */
  export type BountiesCountOutputTypeCountCommentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CommentWhereInput
  }


  /**
   * Count Type BountiesTemplatesCountOutputType
   */

  export type BountiesTemplatesCountOutputType = {
    Bounties: number
  }

  export type BountiesTemplatesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Bounties?: boolean | BountiesTemplatesCountOutputTypeCountBountiesArgs
  }

  // Custom InputTypes
  /**
   * BountiesTemplatesCountOutputType without action
   */
  export type BountiesTemplatesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BountiesTemplatesCountOutputType
     */
    select?: BountiesTemplatesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * BountiesTemplatesCountOutputType without action
   */
  export type BountiesTemplatesCountOutputTypeCountBountiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BountiesWhereInput
  }


  /**
   * Count Type CommentCountOutputType
   */

  export type CommentCountOutputType = {
    replies: number
  }

  export type CommentCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    replies?: boolean | CommentCountOutputTypeCountRepliesArgs
  }

  // Custom InputTypes
  /**
   * CommentCountOutputType without action
   */
  export type CommentCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommentCountOutputType
     */
    select?: CommentCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CommentCountOutputType without action
   */
  export type CommentCountOutputTypeCountRepliesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CommentWhereInput
  }


  /**
   * Count Type GrantsCountOutputType
   */

  export type GrantsCountOutputType = {
    GrantApplication: number
    GrantTranche: number
  }

  export type GrantsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    GrantApplication?: boolean | GrantsCountOutputTypeCountGrantApplicationArgs
    GrantTranche?: boolean | GrantsCountOutputTypeCountGrantTrancheArgs
  }

  // Custom InputTypes
  /**
   * GrantsCountOutputType without action
   */
  export type GrantsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GrantsCountOutputType
     */
    select?: GrantsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * GrantsCountOutputType without action
   */
  export type GrantsCountOutputTypeCountGrantApplicationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: GrantApplicationWhereInput
  }

  /**
   * GrantsCountOutputType without action
   */
  export type GrantsCountOutputTypeCountGrantTrancheArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: GrantTrancheWhereInput
  }


  /**
   * Count Type GrantApplicationCountOutputType
   */

  export type GrantApplicationCountOutputType = {
    Comments: number
    GrantTranche: number
    CreditLedger: number
  }

  export type GrantApplicationCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Comments?: boolean | GrantApplicationCountOutputTypeCountCommentsArgs
    GrantTranche?: boolean | GrantApplicationCountOutputTypeCountGrantTrancheArgs
    CreditLedger?: boolean | GrantApplicationCountOutputTypeCountCreditLedgerArgs
  }

  // Custom InputTypes
  /**
   * GrantApplicationCountOutputType without action
   */
  export type GrantApplicationCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GrantApplicationCountOutputType
     */
    select?: GrantApplicationCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * GrantApplicationCountOutputType without action
   */
  export type GrantApplicationCountOutputTypeCountCommentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CommentWhereInput
  }

  /**
   * GrantApplicationCountOutputType without action
   */
  export type GrantApplicationCountOutputTypeCountGrantTrancheArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: GrantTrancheWhereInput
  }

  /**
   * GrantApplicationCountOutputType without action
   */
  export type GrantApplicationCountOutputTypeCountCreditLedgerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CreditLedgerWhereInput
  }


  /**
   * Count Type SubmissionCountOutputType
   */

  export type SubmissionCountOutputType = {
    Comments: number
    CreditLedger: number
  }

  export type SubmissionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Comments?: boolean | SubmissionCountOutputTypeCountCommentsArgs
    CreditLedger?: boolean | SubmissionCountOutputTypeCountCreditLedgerArgs
  }

  // Custom InputTypes
  /**
   * SubmissionCountOutputType without action
   */
  export type SubmissionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubmissionCountOutputType
     */
    select?: SubmissionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SubmissionCountOutputType without action
   */
  export type SubmissionCountOutputTypeCountCommentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CommentWhereInput
  }

  /**
   * SubmissionCountOutputType without action
   */
  export type SubmissionCountOutputTypeCountCreditLedgerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CreditLedgerWhereInput
  }


  /**
   * Count Type SponsorsCountOutputType
   */

  export type SponsorsCountOutputType = {
    UserSponsors: number
    Bounties: number
    Templates: number
    Grants: number
    User: number
    UserInvites: number
  }

  export type SponsorsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    UserSponsors?: boolean | SponsorsCountOutputTypeCountUserSponsorsArgs
    Bounties?: boolean | SponsorsCountOutputTypeCountBountiesArgs
    Templates?: boolean | SponsorsCountOutputTypeCountTemplatesArgs
    Grants?: boolean | SponsorsCountOutputTypeCountGrantsArgs
    User?: boolean | SponsorsCountOutputTypeCountUserArgs
    UserInvites?: boolean | SponsorsCountOutputTypeCountUserInvitesArgs
  }

  // Custom InputTypes
  /**
   * SponsorsCountOutputType without action
   */
  export type SponsorsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SponsorsCountOutputType
     */
    select?: SponsorsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SponsorsCountOutputType without action
   */
  export type SponsorsCountOutputTypeCountUserSponsorsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserSponsorsWhereInput
  }

  /**
   * SponsorsCountOutputType without action
   */
  export type SponsorsCountOutputTypeCountBountiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BountiesWhereInput
  }

  /**
   * SponsorsCountOutputType without action
   */
  export type SponsorsCountOutputTypeCountTemplatesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BountiesTemplatesWhereInput
  }

  /**
   * SponsorsCountOutputType without action
   */
  export type SponsorsCountOutputTypeCountGrantsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: GrantsWhereInput
  }

  /**
   * SponsorsCountOutputType without action
   */
  export type SponsorsCountOutputTypeCountUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }

  /**
   * SponsorsCountOutputType without action
   */
  export type SponsorsCountOutputTypeCountUserInvitesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserInvitesWhereInput
  }


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    UserSponsors: number
    poc: number
    templates: number
    Comment: number
    Submission: number
    Grants: number
    UserInvites: number
    SubscribeBounty: number
    PoW: number
    accounts: number
    sessions: number
    emailSettings: number
    TalentRankings: number
    Scouts: number
    GrantApplication: number
    SubscribeHackathon: number
    CreditLedger: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    UserSponsors?: boolean | UserCountOutputTypeCountUserSponsorsArgs
    poc?: boolean | UserCountOutputTypeCountPocArgs
    templates?: boolean | UserCountOutputTypeCountTemplatesArgs
    Comment?: boolean | UserCountOutputTypeCountCommentArgs
    Submission?: boolean | UserCountOutputTypeCountSubmissionArgs
    Grants?: boolean | UserCountOutputTypeCountGrantsArgs
    UserInvites?: boolean | UserCountOutputTypeCountUserInvitesArgs
    SubscribeBounty?: boolean | UserCountOutputTypeCountSubscribeBountyArgs
    PoW?: boolean | UserCountOutputTypeCountPoWArgs
    accounts?: boolean | UserCountOutputTypeCountAccountsArgs
    sessions?: boolean | UserCountOutputTypeCountSessionsArgs
    emailSettings?: boolean | UserCountOutputTypeCountEmailSettingsArgs
    TalentRankings?: boolean | UserCountOutputTypeCountTalentRankingsArgs
    Scouts?: boolean | UserCountOutputTypeCountScoutsArgs
    GrantApplication?: boolean | UserCountOutputTypeCountGrantApplicationArgs
    SubscribeHackathon?: boolean | UserCountOutputTypeCountSubscribeHackathonArgs
    CreditLedger?: boolean | UserCountOutputTypeCountCreditLedgerArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUserSponsorsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserSponsorsWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountPocArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BountiesWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountTemplatesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BountiesTemplatesWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCommentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CommentWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSubmissionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SubmissionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountGrantsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: GrantsWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUserInvitesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserInvitesWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSubscribeBountyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SubscribeBountyWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountPoWArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PoWWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountAccountsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AccountWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SessionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountEmailSettingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EmailSettingsWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountTalentRankingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TalentRankingsWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountScoutsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ScoutsWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountGrantApplicationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: GrantApplicationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSubscribeHackathonArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SubscribeHackathonWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreditLedgerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CreditLedgerWhereInput
  }


  /**
   * Count Type PoWCountOutputType
   */

  export type PoWCountOutputType = {
    Comments: number
  }

  export type PoWCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Comments?: boolean | PoWCountOutputTypeCountCommentsArgs
  }

  // Custom InputTypes
  /**
   * PoWCountOutputType without action
   */
  export type PoWCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PoWCountOutputType
     */
    select?: PoWCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PoWCountOutputType without action
   */
  export type PoWCountOutputTypeCountCommentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CommentWhereInput
  }


  /**
   * Count Type HackathonCountOutputType
   */

  export type HackathonCountOutputType = {
    listings: number
    User: number
    SubscribeHackathon: number
  }

  export type HackathonCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    listings?: boolean | HackathonCountOutputTypeCountListingsArgs
    User?: boolean | HackathonCountOutputTypeCountUserArgs
    SubscribeHackathon?: boolean | HackathonCountOutputTypeCountSubscribeHackathonArgs
  }

  // Custom InputTypes
  /**
   * HackathonCountOutputType without action
   */
  export type HackathonCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HackathonCountOutputType
     */
    select?: HackathonCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * HackathonCountOutputType without action
   */
  export type HackathonCountOutputTypeCountListingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BountiesWhereInput
  }

  /**
   * HackathonCountOutputType without action
   */
  export type HackathonCountOutputTypeCountUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }

  /**
   * HackathonCountOutputType without action
   */
  export type HackathonCountOutputTypeCountSubscribeHackathonArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SubscribeHackathonWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Bounties
   */

  export type AggregateBounties = {
    _count: BountiesCountAggregateOutputType | null
    _avg: BountiesAvgAggregateOutputType | null
    _sum: BountiesSumAggregateOutputType | null
    _min: BountiesMinAggregateOutputType | null
    _max: BountiesMaxAggregateOutputType | null
  }

  export type BountiesAvgAggregateOutputType = {
    rewardAmount: number | null
    maxBonusSpots: number | null
    usdValue: number | null
    maxRewardAsk: number | null
    minRewardAsk: number | null
  }

  export type BountiesSumAggregateOutputType = {
    rewardAmount: number | null
    maxBonusSpots: number | null
    usdValue: number | null
    maxRewardAsk: number | null
    minRewardAsk: number | null
  }

  export type BountiesMinAggregateOutputType = {
    id: string | null
    title: string | null
    slug: string | null
    description: string | null
    deadline: Date | null
    commitmentDate: Date | null
    status: $Enums.status | null
    token: string | null
    rewardAmount: number | null
    maxBonusSpots: number | null
    usdValue: number | null
    sponsorId: string | null
    pocId: string | null
    source: $Enums.Source | null
    isPublished: boolean | null
    isFeatured: boolean | null
    isActive: boolean | null
    isArchived: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    applicationLink: string | null
    type: $Enums.BountyType | null
    requirements: string | null
    isWinnersAnnounced: boolean | null
    templateId: string | null
    region: string | null
    pocSocials: string | null
    hackathonprize: boolean | null
    applicationType: $Enums.ApplicationType | null
    timeToComplete: string | null
    referredBy: string | null
    publishedAt: Date | null
    isPrivate: boolean | null
    hackathonId: string | null
    compensationType: $Enums.CompensationType | null
    maxRewardAsk: number | null
    minRewardAsk: number | null
    language: string | null
    shouldSendEmail: boolean | null
    isFndnPaying: boolean | null
    winnersAnnouncedAt: Date | null
  }

  export type BountiesMaxAggregateOutputType = {
    id: string | null
    title: string | null
    slug: string | null
    description: string | null
    deadline: Date | null
    commitmentDate: Date | null
    status: $Enums.status | null
    token: string | null
    rewardAmount: number | null
    maxBonusSpots: number | null
    usdValue: number | null
    sponsorId: string | null
    pocId: string | null
    source: $Enums.Source | null
    isPublished: boolean | null
    isFeatured: boolean | null
    isActive: boolean | null
    isArchived: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    applicationLink: string | null
    type: $Enums.BountyType | null
    requirements: string | null
    isWinnersAnnounced: boolean | null
    templateId: string | null
    region: string | null
    pocSocials: string | null
    hackathonprize: boolean | null
    applicationType: $Enums.ApplicationType | null
    timeToComplete: string | null
    referredBy: string | null
    publishedAt: Date | null
    isPrivate: boolean | null
    hackathonId: string | null
    compensationType: $Enums.CompensationType | null
    maxRewardAsk: number | null
    minRewardAsk: number | null
    language: string | null
    shouldSendEmail: boolean | null
    isFndnPaying: boolean | null
    winnersAnnouncedAt: Date | null
  }

  export type BountiesCountAggregateOutputType = {
    id: number
    title: number
    slug: number
    description: number
    deadline: number
    commitmentDate: number
    eligibility: number
    status: number
    token: number
    rewardAmount: number
    rewards: number
    maxBonusSpots: number
    usdValue: number
    sponsorId: number
    pocId: number
    source: number
    isPublished: number
    isFeatured: number
    isActive: number
    isArchived: number
    createdAt: number
    updatedAt: number
    applicationLink: number
    skills: number
    type: number
    requirements: number
    isWinnersAnnounced: number
    templateId: number
    region: number
    pocSocials: number
    hackathonprize: number
    applicationType: number
    timeToComplete: number
    references: number
    referredBy: number
    publishedAt: number
    isPrivate: number
    hackathonId: number
    compensationType: number
    maxRewardAsk: number
    minRewardAsk: number
    language: number
    shouldSendEmail: number
    isFndnPaying: number
    winnersAnnouncedAt: number
    discordMessageIds: number
    _all: number
  }


  export type BountiesAvgAggregateInputType = {
    rewardAmount?: true
    maxBonusSpots?: true
    usdValue?: true
    maxRewardAsk?: true
    minRewardAsk?: true
  }

  export type BountiesSumAggregateInputType = {
    rewardAmount?: true
    maxBonusSpots?: true
    usdValue?: true
    maxRewardAsk?: true
    minRewardAsk?: true
  }

  export type BountiesMinAggregateInputType = {
    id?: true
    title?: true
    slug?: true
    description?: true
    deadline?: true
    commitmentDate?: true
    status?: true
    token?: true
    rewardAmount?: true
    maxBonusSpots?: true
    usdValue?: true
    sponsorId?: true
    pocId?: true
    source?: true
    isPublished?: true
    isFeatured?: true
    isActive?: true
    isArchived?: true
    createdAt?: true
    updatedAt?: true
    applicationLink?: true
    type?: true
    requirements?: true
    isWinnersAnnounced?: true
    templateId?: true
    region?: true
    pocSocials?: true
    hackathonprize?: true
    applicationType?: true
    timeToComplete?: true
    referredBy?: true
    publishedAt?: true
    isPrivate?: true
    hackathonId?: true
    compensationType?: true
    maxRewardAsk?: true
    minRewardAsk?: true
    language?: true
    shouldSendEmail?: true
    isFndnPaying?: true
    winnersAnnouncedAt?: true
  }

  export type BountiesMaxAggregateInputType = {
    id?: true
    title?: true
    slug?: true
    description?: true
    deadline?: true
    commitmentDate?: true
    status?: true
    token?: true
    rewardAmount?: true
    maxBonusSpots?: true
    usdValue?: true
    sponsorId?: true
    pocId?: true
    source?: true
    isPublished?: true
    isFeatured?: true
    isActive?: true
    isArchived?: true
    createdAt?: true
    updatedAt?: true
    applicationLink?: true
    type?: true
    requirements?: true
    isWinnersAnnounced?: true
    templateId?: true
    region?: true
    pocSocials?: true
    hackathonprize?: true
    applicationType?: true
    timeToComplete?: true
    referredBy?: true
    publishedAt?: true
    isPrivate?: true
    hackathonId?: true
    compensationType?: true
    maxRewardAsk?: true
    minRewardAsk?: true
    language?: true
    shouldSendEmail?: true
    isFndnPaying?: true
    winnersAnnouncedAt?: true
  }

  export type BountiesCountAggregateInputType = {
    id?: true
    title?: true
    slug?: true
    description?: true
    deadline?: true
    commitmentDate?: true
    eligibility?: true
    status?: true
    token?: true
    rewardAmount?: true
    rewards?: true
    maxBonusSpots?: true
    usdValue?: true
    sponsorId?: true
    pocId?: true
    source?: true
    isPublished?: true
    isFeatured?: true
    isActive?: true
    isArchived?: true
    createdAt?: true
    updatedAt?: true
    applicationLink?: true
    skills?: true
    type?: true
    requirements?: true
    isWinnersAnnounced?: true
    templateId?: true
    region?: true
    pocSocials?: true
    hackathonprize?: true
    applicationType?: true
    timeToComplete?: true
    references?: true
    referredBy?: true
    publishedAt?: true
    isPrivate?: true
    hackathonId?: true
    compensationType?: true
    maxRewardAsk?: true
    minRewardAsk?: true
    language?: true
    shouldSendEmail?: true
    isFndnPaying?: true
    winnersAnnouncedAt?: true
    discordMessageIds?: true
    _all?: true
  }

  export type BountiesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Bounties to aggregate.
     */
    where?: BountiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Bounties to fetch.
     */
    orderBy?: BountiesOrderByWithRelationInput | BountiesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BountiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Bounties from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Bounties.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Bounties
    **/
    _count?: true | BountiesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: BountiesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: BountiesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BountiesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BountiesMaxAggregateInputType
  }

  export type GetBountiesAggregateType<T extends BountiesAggregateArgs> = {
        [P in keyof T & keyof AggregateBounties]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBounties[P]>
      : GetScalarType<T[P], AggregateBounties[P]>
  }




  export type BountiesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BountiesWhereInput
    orderBy?: BountiesOrderByWithAggregationInput | BountiesOrderByWithAggregationInput[]
    by: BountiesScalarFieldEnum[] | BountiesScalarFieldEnum
    having?: BountiesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BountiesCountAggregateInputType | true
    _avg?: BountiesAvgAggregateInputType
    _sum?: BountiesSumAggregateInputType
    _min?: BountiesMinAggregateInputType
    _max?: BountiesMaxAggregateInputType
  }

  export type BountiesGroupByOutputType = {
    id: string
    title: string
    slug: string
    description: string | null
    deadline: Date | null
    commitmentDate: Date | null
    eligibility: JsonValue | null
    status: $Enums.status
    token: string | null
    rewardAmount: number | null
    rewards: JsonValue | null
    maxBonusSpots: number
    usdValue: number | null
    sponsorId: string
    pocId: string
    source: $Enums.Source
    isPublished: boolean
    isFeatured: boolean
    isActive: boolean
    isArchived: boolean
    createdAt: Date
    updatedAt: Date
    applicationLink: string | null
    skills: JsonValue | null
    type: $Enums.BountyType
    requirements: string | null
    isWinnersAnnounced: boolean
    templateId: string | null
    region: string
    pocSocials: string | null
    hackathonprize: boolean
    applicationType: $Enums.ApplicationType
    timeToComplete: string | null
    references: JsonValue | null
    referredBy: string | null
    publishedAt: Date | null
    isPrivate: boolean
    hackathonId: string | null
    compensationType: $Enums.CompensationType
    maxRewardAsk: number | null
    minRewardAsk: number | null
    language: string | null
    shouldSendEmail: boolean
    isFndnPaying: boolean
    winnersAnnouncedAt: Date | null
    discordMessageIds: JsonValue | null
    _count: BountiesCountAggregateOutputType | null
    _avg: BountiesAvgAggregateOutputType | null
    _sum: BountiesSumAggregateOutputType | null
    _min: BountiesMinAggregateOutputType | null
    _max: BountiesMaxAggregateOutputType | null
  }

  type GetBountiesGroupByPayload<T extends BountiesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BountiesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BountiesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BountiesGroupByOutputType[P]>
            : GetScalarType<T[P], BountiesGroupByOutputType[P]>
        }
      >
    >


  export type BountiesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    slug?: boolean
    description?: boolean
    deadline?: boolean
    commitmentDate?: boolean
    eligibility?: boolean
    status?: boolean
    token?: boolean
    rewardAmount?: boolean
    rewards?: boolean
    maxBonusSpots?: boolean
    usdValue?: boolean
    sponsorId?: boolean
    pocId?: boolean
    source?: boolean
    isPublished?: boolean
    isFeatured?: boolean
    isActive?: boolean
    isArchived?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    applicationLink?: boolean
    skills?: boolean
    type?: boolean
    requirements?: boolean
    isWinnersAnnounced?: boolean
    templateId?: boolean
    region?: boolean
    pocSocials?: boolean
    hackathonprize?: boolean
    applicationType?: boolean
    timeToComplete?: boolean
    references?: boolean
    referredBy?: boolean
    publishedAt?: boolean
    isPrivate?: boolean
    hackathonId?: boolean
    compensationType?: boolean
    maxRewardAsk?: boolean
    minRewardAsk?: boolean
    language?: boolean
    shouldSendEmail?: boolean
    isFndnPaying?: boolean
    winnersAnnouncedAt?: boolean
    discordMessageIds?: boolean
    template?: boolean | Bounties$templateArgs<ExtArgs>
    sponsor?: boolean | SponsorsDefaultArgs<ExtArgs>
    poc?: boolean | UserDefaultArgs<ExtArgs>
    Submission?: boolean | Bounties$SubmissionArgs<ExtArgs>
    SubscribeBounty?: boolean | Bounties$SubscribeBountyArgs<ExtArgs>
    Hackathon?: boolean | Bounties$HackathonArgs<ExtArgs>
    Scouts?: boolean | Bounties$ScoutsArgs<ExtArgs>
    Comments?: boolean | Bounties$CommentsArgs<ExtArgs>
    _count?: boolean | BountiesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["bounties"]>



  export type BountiesSelectScalar = {
    id?: boolean
    title?: boolean
    slug?: boolean
    description?: boolean
    deadline?: boolean
    commitmentDate?: boolean
    eligibility?: boolean
    status?: boolean
    token?: boolean
    rewardAmount?: boolean
    rewards?: boolean
    maxBonusSpots?: boolean
    usdValue?: boolean
    sponsorId?: boolean
    pocId?: boolean
    source?: boolean
    isPublished?: boolean
    isFeatured?: boolean
    isActive?: boolean
    isArchived?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    applicationLink?: boolean
    skills?: boolean
    type?: boolean
    requirements?: boolean
    isWinnersAnnounced?: boolean
    templateId?: boolean
    region?: boolean
    pocSocials?: boolean
    hackathonprize?: boolean
    applicationType?: boolean
    timeToComplete?: boolean
    references?: boolean
    referredBy?: boolean
    publishedAt?: boolean
    isPrivate?: boolean
    hackathonId?: boolean
    compensationType?: boolean
    maxRewardAsk?: boolean
    minRewardAsk?: boolean
    language?: boolean
    shouldSendEmail?: boolean
    isFndnPaying?: boolean
    winnersAnnouncedAt?: boolean
    discordMessageIds?: boolean
  }

  export type BountiesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "title" | "slug" | "description" | "deadline" | "commitmentDate" | "eligibility" | "status" | "token" | "rewardAmount" | "rewards" | "maxBonusSpots" | "usdValue" | "sponsorId" | "pocId" | "source" | "isPublished" | "isFeatured" | "isActive" | "isArchived" | "createdAt" | "updatedAt" | "applicationLink" | "skills" | "type" | "requirements" | "isWinnersAnnounced" | "templateId" | "region" | "pocSocials" | "hackathonprize" | "applicationType" | "timeToComplete" | "references" | "referredBy" | "publishedAt" | "isPrivate" | "hackathonId" | "compensationType" | "maxRewardAsk" | "minRewardAsk" | "language" | "shouldSendEmail" | "isFndnPaying" | "winnersAnnouncedAt" | "discordMessageIds", ExtArgs["result"]["bounties"]>
  export type BountiesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    template?: boolean | Bounties$templateArgs<ExtArgs>
    sponsor?: boolean | SponsorsDefaultArgs<ExtArgs>
    poc?: boolean | UserDefaultArgs<ExtArgs>
    Submission?: boolean | Bounties$SubmissionArgs<ExtArgs>
    SubscribeBounty?: boolean | Bounties$SubscribeBountyArgs<ExtArgs>
    Hackathon?: boolean | Bounties$HackathonArgs<ExtArgs>
    Scouts?: boolean | Bounties$ScoutsArgs<ExtArgs>
    Comments?: boolean | Bounties$CommentsArgs<ExtArgs>
    _count?: boolean | BountiesCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $BountiesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Bounties"
    objects: {
      template: Prisma.$BountiesTemplatesPayload<ExtArgs> | null
      sponsor: Prisma.$SponsorsPayload<ExtArgs>
      poc: Prisma.$UserPayload<ExtArgs>
      Submission: Prisma.$SubmissionPayload<ExtArgs>[]
      SubscribeBounty: Prisma.$SubscribeBountyPayload<ExtArgs>[]
      Hackathon: Prisma.$HackathonPayload<ExtArgs> | null
      Scouts: Prisma.$ScoutsPayload<ExtArgs>[]
      Comments: Prisma.$CommentPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      title: string
      slug: string
      description: string | null
      deadline: Date | null
      commitmentDate: Date | null
      eligibility: Prisma.JsonValue | null
      status: $Enums.status
      token: string | null
      rewardAmount: number | null
      rewards: Prisma.JsonValue | null
      maxBonusSpots: number
      usdValue: number | null
      sponsorId: string
      pocId: string
      source: $Enums.Source
      isPublished: boolean
      isFeatured: boolean
      isActive: boolean
      isArchived: boolean
      createdAt: Date
      updatedAt: Date
      applicationLink: string | null
      skills: Prisma.JsonValue | null
      type: $Enums.BountyType
      requirements: string | null
      isWinnersAnnounced: boolean
      templateId: string | null
      region: string
      pocSocials: string | null
      hackathonprize: boolean
      applicationType: $Enums.ApplicationType
      timeToComplete: string | null
      references: Prisma.JsonValue | null
      referredBy: string | null
      publishedAt: Date | null
      isPrivate: boolean
      hackathonId: string | null
      compensationType: $Enums.CompensationType
      maxRewardAsk: number | null
      minRewardAsk: number | null
      language: string | null
      shouldSendEmail: boolean
      isFndnPaying: boolean
      winnersAnnouncedAt: Date | null
      discordMessageIds: Prisma.JsonValue | null
    }, ExtArgs["result"]["bounties"]>
    composites: {}
  }

  type BountiesGetPayload<S extends boolean | null | undefined | BountiesDefaultArgs> = $Result.GetResult<Prisma.$BountiesPayload, S>

  type BountiesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<BountiesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: BountiesCountAggregateInputType | true
    }

  export interface BountiesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Bounties'], meta: { name: 'Bounties' } }
    /**
     * Find zero or one Bounties that matches the filter.
     * @param {BountiesFindUniqueArgs} args - Arguments to find a Bounties
     * @example
     * // Get one Bounties
     * const bounties = await prisma.bounties.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BountiesFindUniqueArgs>(args: SelectSubset<T, BountiesFindUniqueArgs<ExtArgs>>): Prisma__BountiesClient<$Result.GetResult<Prisma.$BountiesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Bounties that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {BountiesFindUniqueOrThrowArgs} args - Arguments to find a Bounties
     * @example
     * // Get one Bounties
     * const bounties = await prisma.bounties.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BountiesFindUniqueOrThrowArgs>(args: SelectSubset<T, BountiesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BountiesClient<$Result.GetResult<Prisma.$BountiesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Bounties that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BountiesFindFirstArgs} args - Arguments to find a Bounties
     * @example
     * // Get one Bounties
     * const bounties = await prisma.bounties.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BountiesFindFirstArgs>(args?: SelectSubset<T, BountiesFindFirstArgs<ExtArgs>>): Prisma__BountiesClient<$Result.GetResult<Prisma.$BountiesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Bounties that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BountiesFindFirstOrThrowArgs} args - Arguments to find a Bounties
     * @example
     * // Get one Bounties
     * const bounties = await prisma.bounties.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BountiesFindFirstOrThrowArgs>(args?: SelectSubset<T, BountiesFindFirstOrThrowArgs<ExtArgs>>): Prisma__BountiesClient<$Result.GetResult<Prisma.$BountiesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Bounties that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BountiesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Bounties
     * const bounties = await prisma.bounties.findMany()
     * 
     * // Get first 10 Bounties
     * const bounties = await prisma.bounties.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const bountiesWithIdOnly = await prisma.bounties.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends BountiesFindManyArgs>(args?: SelectSubset<T, BountiesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BountiesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Bounties.
     * @param {BountiesCreateArgs} args - Arguments to create a Bounties.
     * @example
     * // Create one Bounties
     * const Bounties = await prisma.bounties.create({
     *   data: {
     *     // ... data to create a Bounties
     *   }
     * })
     * 
     */
    create<T extends BountiesCreateArgs>(args: SelectSubset<T, BountiesCreateArgs<ExtArgs>>): Prisma__BountiesClient<$Result.GetResult<Prisma.$BountiesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Bounties.
     * @param {BountiesCreateManyArgs} args - Arguments to create many Bounties.
     * @example
     * // Create many Bounties
     * const bounties = await prisma.bounties.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BountiesCreateManyArgs>(args?: SelectSubset<T, BountiesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Bounties.
     * @param {BountiesDeleteArgs} args - Arguments to delete one Bounties.
     * @example
     * // Delete one Bounties
     * const Bounties = await prisma.bounties.delete({
     *   where: {
     *     // ... filter to delete one Bounties
     *   }
     * })
     * 
     */
    delete<T extends BountiesDeleteArgs>(args: SelectSubset<T, BountiesDeleteArgs<ExtArgs>>): Prisma__BountiesClient<$Result.GetResult<Prisma.$BountiesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Bounties.
     * @param {BountiesUpdateArgs} args - Arguments to update one Bounties.
     * @example
     * // Update one Bounties
     * const bounties = await prisma.bounties.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BountiesUpdateArgs>(args: SelectSubset<T, BountiesUpdateArgs<ExtArgs>>): Prisma__BountiesClient<$Result.GetResult<Prisma.$BountiesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Bounties.
     * @param {BountiesDeleteManyArgs} args - Arguments to filter Bounties to delete.
     * @example
     * // Delete a few Bounties
     * const { count } = await prisma.bounties.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BountiesDeleteManyArgs>(args?: SelectSubset<T, BountiesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Bounties.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BountiesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Bounties
     * const bounties = await prisma.bounties.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BountiesUpdateManyArgs>(args: SelectSubset<T, BountiesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Bounties.
     * @param {BountiesUpsertArgs} args - Arguments to update or create a Bounties.
     * @example
     * // Update or create a Bounties
     * const bounties = await prisma.bounties.upsert({
     *   create: {
     *     // ... data to create a Bounties
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Bounties we want to update
     *   }
     * })
     */
    upsert<T extends BountiesUpsertArgs>(args: SelectSubset<T, BountiesUpsertArgs<ExtArgs>>): Prisma__BountiesClient<$Result.GetResult<Prisma.$BountiesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Bounties.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BountiesCountArgs} args - Arguments to filter Bounties to count.
     * @example
     * // Count the number of Bounties
     * const count = await prisma.bounties.count({
     *   where: {
     *     // ... the filter for the Bounties we want to count
     *   }
     * })
    **/
    count<T extends BountiesCountArgs>(
      args?: Subset<T, BountiesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BountiesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Bounties.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BountiesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BountiesAggregateArgs>(args: Subset<T, BountiesAggregateArgs>): Prisma.PrismaPromise<GetBountiesAggregateType<T>>

    /**
     * Group by Bounties.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BountiesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BountiesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BountiesGroupByArgs['orderBy'] }
        : { orderBy?: BountiesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BountiesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBountiesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Bounties model
   */
  readonly fields: BountiesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Bounties.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BountiesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    template<T extends Bounties$templateArgs<ExtArgs> = {}>(args?: Subset<T, Bounties$templateArgs<ExtArgs>>): Prisma__BountiesTemplatesClient<$Result.GetResult<Prisma.$BountiesTemplatesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    sponsor<T extends SponsorsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SponsorsDefaultArgs<ExtArgs>>): Prisma__SponsorsClient<$Result.GetResult<Prisma.$SponsorsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    poc<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Submission<T extends Bounties$SubmissionArgs<ExtArgs> = {}>(args?: Subset<T, Bounties$SubmissionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SubmissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    SubscribeBounty<T extends Bounties$SubscribeBountyArgs<ExtArgs> = {}>(args?: Subset<T, Bounties$SubscribeBountyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SubscribeBountyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Hackathon<T extends Bounties$HackathonArgs<ExtArgs> = {}>(args?: Subset<T, Bounties$HackathonArgs<ExtArgs>>): Prisma__HackathonClient<$Result.GetResult<Prisma.$HackathonPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    Scouts<T extends Bounties$ScoutsArgs<ExtArgs> = {}>(args?: Subset<T, Bounties$ScoutsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ScoutsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Comments<T extends Bounties$CommentsArgs<ExtArgs> = {}>(args?: Subset<T, Bounties$CommentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Bounties model
   */
  interface BountiesFieldRefs {
    readonly id: FieldRef<"Bounties", 'String'>
    readonly title: FieldRef<"Bounties", 'String'>
    readonly slug: FieldRef<"Bounties", 'String'>
    readonly description: FieldRef<"Bounties", 'String'>
    readonly deadline: FieldRef<"Bounties", 'DateTime'>
    readonly commitmentDate: FieldRef<"Bounties", 'DateTime'>
    readonly eligibility: FieldRef<"Bounties", 'Json'>
    readonly status: FieldRef<"Bounties", 'status'>
    readonly token: FieldRef<"Bounties", 'String'>
    readonly rewardAmount: FieldRef<"Bounties", 'Float'>
    readonly rewards: FieldRef<"Bounties", 'Json'>
    readonly maxBonusSpots: FieldRef<"Bounties", 'Int'>
    readonly usdValue: FieldRef<"Bounties", 'Float'>
    readonly sponsorId: FieldRef<"Bounties", 'String'>
    readonly pocId: FieldRef<"Bounties", 'String'>
    readonly source: FieldRef<"Bounties", 'Source'>
    readonly isPublished: FieldRef<"Bounties", 'Boolean'>
    readonly isFeatured: FieldRef<"Bounties", 'Boolean'>
    readonly isActive: FieldRef<"Bounties", 'Boolean'>
    readonly isArchived: FieldRef<"Bounties", 'Boolean'>
    readonly createdAt: FieldRef<"Bounties", 'DateTime'>
    readonly updatedAt: FieldRef<"Bounties", 'DateTime'>
    readonly applicationLink: FieldRef<"Bounties", 'String'>
    readonly skills: FieldRef<"Bounties", 'Json'>
    readonly type: FieldRef<"Bounties", 'BountyType'>
    readonly requirements: FieldRef<"Bounties", 'String'>
    readonly isWinnersAnnounced: FieldRef<"Bounties", 'Boolean'>
    readonly templateId: FieldRef<"Bounties", 'String'>
    readonly region: FieldRef<"Bounties", 'String'>
    readonly pocSocials: FieldRef<"Bounties", 'String'>
    readonly hackathonprize: FieldRef<"Bounties", 'Boolean'>
    readonly applicationType: FieldRef<"Bounties", 'ApplicationType'>
    readonly timeToComplete: FieldRef<"Bounties", 'String'>
    readonly references: FieldRef<"Bounties", 'Json'>
    readonly referredBy: FieldRef<"Bounties", 'String'>
    readonly publishedAt: FieldRef<"Bounties", 'DateTime'>
    readonly isPrivate: FieldRef<"Bounties", 'Boolean'>
    readonly hackathonId: FieldRef<"Bounties", 'String'>
    readonly compensationType: FieldRef<"Bounties", 'CompensationType'>
    readonly maxRewardAsk: FieldRef<"Bounties", 'Int'>
    readonly minRewardAsk: FieldRef<"Bounties", 'Int'>
    readonly language: FieldRef<"Bounties", 'String'>
    readonly shouldSendEmail: FieldRef<"Bounties", 'Boolean'>
    readonly isFndnPaying: FieldRef<"Bounties", 'Boolean'>
    readonly winnersAnnouncedAt: FieldRef<"Bounties", 'DateTime'>
    readonly discordMessageIds: FieldRef<"Bounties", 'Json'>
  }
    

  // Custom InputTypes
  /**
   * Bounties findUnique
   */
  export type BountiesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bounties
     */
    select?: BountiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Bounties
     */
    omit?: BountiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BountiesInclude<ExtArgs> | null
    /**
     * Filter, which Bounties to fetch.
     */
    where: BountiesWhereUniqueInput
  }

  /**
   * Bounties findUniqueOrThrow
   */
  export type BountiesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bounties
     */
    select?: BountiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Bounties
     */
    omit?: BountiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BountiesInclude<ExtArgs> | null
    /**
     * Filter, which Bounties to fetch.
     */
    where: BountiesWhereUniqueInput
  }

  /**
   * Bounties findFirst
   */
  export type BountiesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bounties
     */
    select?: BountiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Bounties
     */
    omit?: BountiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BountiesInclude<ExtArgs> | null
    /**
     * Filter, which Bounties to fetch.
     */
    where?: BountiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Bounties to fetch.
     */
    orderBy?: BountiesOrderByWithRelationInput | BountiesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Bounties.
     */
    cursor?: BountiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Bounties from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Bounties.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Bounties.
     */
    distinct?: BountiesScalarFieldEnum | BountiesScalarFieldEnum[]
  }

  /**
   * Bounties findFirstOrThrow
   */
  export type BountiesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bounties
     */
    select?: BountiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Bounties
     */
    omit?: BountiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BountiesInclude<ExtArgs> | null
    /**
     * Filter, which Bounties to fetch.
     */
    where?: BountiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Bounties to fetch.
     */
    orderBy?: BountiesOrderByWithRelationInput | BountiesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Bounties.
     */
    cursor?: BountiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Bounties from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Bounties.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Bounties.
     */
    distinct?: BountiesScalarFieldEnum | BountiesScalarFieldEnum[]
  }

  /**
   * Bounties findMany
   */
  export type BountiesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bounties
     */
    select?: BountiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Bounties
     */
    omit?: BountiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BountiesInclude<ExtArgs> | null
    /**
     * Filter, which Bounties to fetch.
     */
    where?: BountiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Bounties to fetch.
     */
    orderBy?: BountiesOrderByWithRelationInput | BountiesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Bounties.
     */
    cursor?: BountiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Bounties from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Bounties.
     */
    skip?: number
    distinct?: BountiesScalarFieldEnum | BountiesScalarFieldEnum[]
  }

  /**
   * Bounties create
   */
  export type BountiesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bounties
     */
    select?: BountiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Bounties
     */
    omit?: BountiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BountiesInclude<ExtArgs> | null
    /**
     * The data needed to create a Bounties.
     */
    data: XOR<BountiesCreateInput, BountiesUncheckedCreateInput>
  }

  /**
   * Bounties createMany
   */
  export type BountiesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Bounties.
     */
    data: BountiesCreateManyInput | BountiesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Bounties update
   */
  export type BountiesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bounties
     */
    select?: BountiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Bounties
     */
    omit?: BountiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BountiesInclude<ExtArgs> | null
    /**
     * The data needed to update a Bounties.
     */
    data: XOR<BountiesUpdateInput, BountiesUncheckedUpdateInput>
    /**
     * Choose, which Bounties to update.
     */
    where: BountiesWhereUniqueInput
  }

  /**
   * Bounties updateMany
   */
  export type BountiesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Bounties.
     */
    data: XOR<BountiesUpdateManyMutationInput, BountiesUncheckedUpdateManyInput>
    /**
     * Filter which Bounties to update
     */
    where?: BountiesWhereInput
    /**
     * Limit how many Bounties to update.
     */
    limit?: number
  }

  /**
   * Bounties upsert
   */
  export type BountiesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bounties
     */
    select?: BountiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Bounties
     */
    omit?: BountiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BountiesInclude<ExtArgs> | null
    /**
     * The filter to search for the Bounties to update in case it exists.
     */
    where: BountiesWhereUniqueInput
    /**
     * In case the Bounties found by the `where` argument doesn't exist, create a new Bounties with this data.
     */
    create: XOR<BountiesCreateInput, BountiesUncheckedCreateInput>
    /**
     * In case the Bounties was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BountiesUpdateInput, BountiesUncheckedUpdateInput>
  }

  /**
   * Bounties delete
   */
  export type BountiesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bounties
     */
    select?: BountiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Bounties
     */
    omit?: BountiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BountiesInclude<ExtArgs> | null
    /**
     * Filter which Bounties to delete.
     */
    where: BountiesWhereUniqueInput
  }

  /**
   * Bounties deleteMany
   */
  export type BountiesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Bounties to delete
     */
    where?: BountiesWhereInput
    /**
     * Limit how many Bounties to delete.
     */
    limit?: number
  }

  /**
   * Bounties.template
   */
  export type Bounties$templateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BountiesTemplates
     */
    select?: BountiesTemplatesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BountiesTemplates
     */
    omit?: BountiesTemplatesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BountiesTemplatesInclude<ExtArgs> | null
    where?: BountiesTemplatesWhereInput
  }

  /**
   * Bounties.Submission
   */
  export type Bounties$SubmissionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Submission
     */
    select?: SubmissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Submission
     */
    omit?: SubmissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubmissionInclude<ExtArgs> | null
    where?: SubmissionWhereInput
    orderBy?: SubmissionOrderByWithRelationInput | SubmissionOrderByWithRelationInput[]
    cursor?: SubmissionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SubmissionScalarFieldEnum | SubmissionScalarFieldEnum[]
  }

  /**
   * Bounties.SubscribeBounty
   */
  export type Bounties$SubscribeBountyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscribeBounty
     */
    select?: SubscribeBountySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SubscribeBounty
     */
    omit?: SubscribeBountyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscribeBountyInclude<ExtArgs> | null
    where?: SubscribeBountyWhereInput
    orderBy?: SubscribeBountyOrderByWithRelationInput | SubscribeBountyOrderByWithRelationInput[]
    cursor?: SubscribeBountyWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SubscribeBountyScalarFieldEnum | SubscribeBountyScalarFieldEnum[]
  }

  /**
   * Bounties.Hackathon
   */
  export type Bounties$HackathonArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Hackathon
     */
    select?: HackathonSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Hackathon
     */
    omit?: HackathonOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HackathonInclude<ExtArgs> | null
    where?: HackathonWhereInput
  }

  /**
   * Bounties.Scouts
   */
  export type Bounties$ScoutsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Scouts
     */
    select?: ScoutsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Scouts
     */
    omit?: ScoutsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScoutsInclude<ExtArgs> | null
    where?: ScoutsWhereInput
    orderBy?: ScoutsOrderByWithRelationInput | ScoutsOrderByWithRelationInput[]
    cursor?: ScoutsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ScoutsScalarFieldEnum | ScoutsScalarFieldEnum[]
  }

  /**
   * Bounties.Comments
   */
  export type Bounties$CommentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    where?: CommentWhereInput
    orderBy?: CommentOrderByWithRelationInput | CommentOrderByWithRelationInput[]
    cursor?: CommentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CommentScalarFieldEnum | CommentScalarFieldEnum[]
  }

  /**
   * Bounties without action
   */
  export type BountiesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bounties
     */
    select?: BountiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Bounties
     */
    omit?: BountiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BountiesInclude<ExtArgs> | null
  }


  /**
   * Model BountiesTemplates
   */

  export type AggregateBountiesTemplates = {
    _count: BountiesTemplatesCountAggregateOutputType | null
    _avg: BountiesTemplatesAvgAggregateOutputType | null
    _sum: BountiesTemplatesSumAggregateOutputType | null
    _min: BountiesTemplatesMinAggregateOutputType | null
    _max: BountiesTemplatesMaxAggregateOutputType | null
  }

  export type BountiesTemplatesAvgAggregateOutputType = {
    maxRewardAsk: number | null
    minRewardAsk: number | null
    rewardAmount: number | null
    maxBonusSpots: number | null
    usdValue: number | null
  }

  export type BountiesTemplatesSumAggregateOutputType = {
    maxRewardAsk: number | null
    minRewardAsk: number | null
    rewardAmount: number | null
    maxBonusSpots: number | null
    usdValue: number | null
  }

  export type BountiesTemplatesMinAggregateOutputType = {
    id: string | null
    title: string | null
    deadline: Date | null
    slug: string | null
    description: string | null
    color: string | null
    emoji: string | null
    isFeatured: boolean | null
    isActive: boolean | null
    isArchived: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    type: $Enums.BountyType | null
    requirements: string | null
    region: string | null
    applicationType: $Enums.ApplicationType | null
    status: $Enums.status | null
    timeToComplete: string | null
    token: string | null
    referredBy: string | null
    publishedAt: Date | null
    compensationType: $Enums.CompensationType | null
    maxRewardAsk: number | null
    minRewardAsk: number | null
    language: string | null
    rewardAmount: number | null
    maxBonusSpots: number | null
    usdValue: number | null
    sponsorId: string | null
    pocId: string | null
    pocSocials: string | null
    source: $Enums.Source | null
    isPublished: boolean | null
  }

  export type BountiesTemplatesMaxAggregateOutputType = {
    id: string | null
    title: string | null
    deadline: Date | null
    slug: string | null
    description: string | null
    color: string | null
    emoji: string | null
    isFeatured: boolean | null
    isActive: boolean | null
    isArchived: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    type: $Enums.BountyType | null
    requirements: string | null
    region: string | null
    applicationType: $Enums.ApplicationType | null
    status: $Enums.status | null
    timeToComplete: string | null
    token: string | null
    referredBy: string | null
    publishedAt: Date | null
    compensationType: $Enums.CompensationType | null
    maxRewardAsk: number | null
    minRewardAsk: number | null
    language: string | null
    rewardAmount: number | null
    maxBonusSpots: number | null
    usdValue: number | null
    sponsorId: string | null
    pocId: string | null
    pocSocials: string | null
    source: $Enums.Source | null
    isPublished: boolean | null
  }

  export type BountiesTemplatesCountAggregateOutputType = {
    id: number
    title: number
    deadline: number
    slug: number
    description: number
    color: number
    emoji: number
    isFeatured: number
    isActive: number
    isArchived: number
    createdAt: number
    updatedAt: number
    skills: number
    type: number
    requirements: number
    region: number
    applicationType: number
    status: number
    timeToComplete: number
    token: number
    references: number
    referredBy: number
    publishedAt: number
    compensationType: number
    maxRewardAsk: number
    minRewardAsk: number
    language: number
    rewardAmount: number
    rewards: number
    maxBonusSpots: number
    usdValue: number
    sponsorId: number
    pocId: number
    pocSocials: number
    source: number
    isPublished: number
    _all: number
  }


  export type BountiesTemplatesAvgAggregateInputType = {
    maxRewardAsk?: true
    minRewardAsk?: true
    rewardAmount?: true
    maxBonusSpots?: true
    usdValue?: true
  }

  export type BountiesTemplatesSumAggregateInputType = {
    maxRewardAsk?: true
    minRewardAsk?: true
    rewardAmount?: true
    maxBonusSpots?: true
    usdValue?: true
  }

  export type BountiesTemplatesMinAggregateInputType = {
    id?: true
    title?: true
    deadline?: true
    slug?: true
    description?: true
    color?: true
    emoji?: true
    isFeatured?: true
    isActive?: true
    isArchived?: true
    createdAt?: true
    updatedAt?: true
    type?: true
    requirements?: true
    region?: true
    applicationType?: true
    status?: true
    timeToComplete?: true
    token?: true
    referredBy?: true
    publishedAt?: true
    compensationType?: true
    maxRewardAsk?: true
    minRewardAsk?: true
    language?: true
    rewardAmount?: true
    maxBonusSpots?: true
    usdValue?: true
    sponsorId?: true
    pocId?: true
    pocSocials?: true
    source?: true
    isPublished?: true
  }

  export type BountiesTemplatesMaxAggregateInputType = {
    id?: true
    title?: true
    deadline?: true
    slug?: true
    description?: true
    color?: true
    emoji?: true
    isFeatured?: true
    isActive?: true
    isArchived?: true
    createdAt?: true
    updatedAt?: true
    type?: true
    requirements?: true
    region?: true
    applicationType?: true
    status?: true
    timeToComplete?: true
    token?: true
    referredBy?: true
    publishedAt?: true
    compensationType?: true
    maxRewardAsk?: true
    minRewardAsk?: true
    language?: true
    rewardAmount?: true
    maxBonusSpots?: true
    usdValue?: true
    sponsorId?: true
    pocId?: true
    pocSocials?: true
    source?: true
    isPublished?: true
  }

  export type BountiesTemplatesCountAggregateInputType = {
    id?: true
    title?: true
    deadline?: true
    slug?: true
    description?: true
    color?: true
    emoji?: true
    isFeatured?: true
    isActive?: true
    isArchived?: true
    createdAt?: true
    updatedAt?: true
    skills?: true
    type?: true
    requirements?: true
    region?: true
    applicationType?: true
    status?: true
    timeToComplete?: true
    token?: true
    references?: true
    referredBy?: true
    publishedAt?: true
    compensationType?: true
    maxRewardAsk?: true
    minRewardAsk?: true
    language?: true
    rewardAmount?: true
    rewards?: true
    maxBonusSpots?: true
    usdValue?: true
    sponsorId?: true
    pocId?: true
    pocSocials?: true
    source?: true
    isPublished?: true
    _all?: true
  }

  export type BountiesTemplatesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BountiesTemplates to aggregate.
     */
    where?: BountiesTemplatesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BountiesTemplates to fetch.
     */
    orderBy?: BountiesTemplatesOrderByWithRelationInput | BountiesTemplatesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BountiesTemplatesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BountiesTemplates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BountiesTemplates.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned BountiesTemplates
    **/
    _count?: true | BountiesTemplatesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: BountiesTemplatesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: BountiesTemplatesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BountiesTemplatesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BountiesTemplatesMaxAggregateInputType
  }

  export type GetBountiesTemplatesAggregateType<T extends BountiesTemplatesAggregateArgs> = {
        [P in keyof T & keyof AggregateBountiesTemplates]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBountiesTemplates[P]>
      : GetScalarType<T[P], AggregateBountiesTemplates[P]>
  }




  export type BountiesTemplatesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BountiesTemplatesWhereInput
    orderBy?: BountiesTemplatesOrderByWithAggregationInput | BountiesTemplatesOrderByWithAggregationInput[]
    by: BountiesTemplatesScalarFieldEnum[] | BountiesTemplatesScalarFieldEnum
    having?: BountiesTemplatesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BountiesTemplatesCountAggregateInputType | true
    _avg?: BountiesTemplatesAvgAggregateInputType
    _sum?: BountiesTemplatesSumAggregateInputType
    _min?: BountiesTemplatesMinAggregateInputType
    _max?: BountiesTemplatesMaxAggregateInputType
  }

  export type BountiesTemplatesGroupByOutputType = {
    id: string
    title: string | null
    deadline: Date | null
    slug: string | null
    description: string | null
    color: string | null
    emoji: string | null
    isFeatured: boolean
    isActive: boolean
    isArchived: boolean
    createdAt: Date
    updatedAt: Date
    skills: JsonValue | null
    type: $Enums.BountyType
    requirements: string | null
    region: string
    applicationType: $Enums.ApplicationType
    status: $Enums.status
    timeToComplete: string | null
    token: string | null
    references: JsonValue | null
    referredBy: string | null
    publishedAt: Date | null
    compensationType: $Enums.CompensationType
    maxRewardAsk: number | null
    minRewardAsk: number | null
    language: string | null
    rewardAmount: number | null
    rewards: JsonValue | null
    maxBonusSpots: number
    usdValue: number | null
    sponsorId: string
    pocId: string
    pocSocials: string | null
    source: $Enums.Source
    isPublished: boolean
    _count: BountiesTemplatesCountAggregateOutputType | null
    _avg: BountiesTemplatesAvgAggregateOutputType | null
    _sum: BountiesTemplatesSumAggregateOutputType | null
    _min: BountiesTemplatesMinAggregateOutputType | null
    _max: BountiesTemplatesMaxAggregateOutputType | null
  }

  type GetBountiesTemplatesGroupByPayload<T extends BountiesTemplatesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BountiesTemplatesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BountiesTemplatesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BountiesTemplatesGroupByOutputType[P]>
            : GetScalarType<T[P], BountiesTemplatesGroupByOutputType[P]>
        }
      >
    >


  export type BountiesTemplatesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    deadline?: boolean
    slug?: boolean
    description?: boolean
    color?: boolean
    emoji?: boolean
    isFeatured?: boolean
    isActive?: boolean
    isArchived?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    skills?: boolean
    type?: boolean
    requirements?: boolean
    region?: boolean
    applicationType?: boolean
    status?: boolean
    timeToComplete?: boolean
    token?: boolean
    references?: boolean
    referredBy?: boolean
    publishedAt?: boolean
    compensationType?: boolean
    maxRewardAsk?: boolean
    minRewardAsk?: boolean
    language?: boolean
    rewardAmount?: boolean
    rewards?: boolean
    maxBonusSpots?: boolean
    usdValue?: boolean
    sponsorId?: boolean
    pocId?: boolean
    pocSocials?: boolean
    source?: boolean
    isPublished?: boolean
    Bounties?: boolean | BountiesTemplates$BountiesArgs<ExtArgs>
    sponsor?: boolean | SponsorsDefaultArgs<ExtArgs>
    poc?: boolean | UserDefaultArgs<ExtArgs>
    _count?: boolean | BountiesTemplatesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["bountiesTemplates"]>



  export type BountiesTemplatesSelectScalar = {
    id?: boolean
    title?: boolean
    deadline?: boolean
    slug?: boolean
    description?: boolean
    color?: boolean
    emoji?: boolean
    isFeatured?: boolean
    isActive?: boolean
    isArchived?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    skills?: boolean
    type?: boolean
    requirements?: boolean
    region?: boolean
    applicationType?: boolean
    status?: boolean
    timeToComplete?: boolean
    token?: boolean
    references?: boolean
    referredBy?: boolean
    publishedAt?: boolean
    compensationType?: boolean
    maxRewardAsk?: boolean
    minRewardAsk?: boolean
    language?: boolean
    rewardAmount?: boolean
    rewards?: boolean
    maxBonusSpots?: boolean
    usdValue?: boolean
    sponsorId?: boolean
    pocId?: boolean
    pocSocials?: boolean
    source?: boolean
    isPublished?: boolean
  }

  export type BountiesTemplatesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "title" | "deadline" | "slug" | "description" | "color" | "emoji" | "isFeatured" | "isActive" | "isArchived" | "createdAt" | "updatedAt" | "skills" | "type" | "requirements" | "region" | "applicationType" | "status" | "timeToComplete" | "token" | "references" | "referredBy" | "publishedAt" | "compensationType" | "maxRewardAsk" | "minRewardAsk" | "language" | "rewardAmount" | "rewards" | "maxBonusSpots" | "usdValue" | "sponsorId" | "pocId" | "pocSocials" | "source" | "isPublished", ExtArgs["result"]["bountiesTemplates"]>
  export type BountiesTemplatesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Bounties?: boolean | BountiesTemplates$BountiesArgs<ExtArgs>
    sponsor?: boolean | SponsorsDefaultArgs<ExtArgs>
    poc?: boolean | UserDefaultArgs<ExtArgs>
    _count?: boolean | BountiesTemplatesCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $BountiesTemplatesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "BountiesTemplates"
    objects: {
      Bounties: Prisma.$BountiesPayload<ExtArgs>[]
      sponsor: Prisma.$SponsorsPayload<ExtArgs>
      poc: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      title: string | null
      deadline: Date | null
      slug: string | null
      description: string | null
      color: string | null
      emoji: string | null
      isFeatured: boolean
      isActive: boolean
      isArchived: boolean
      createdAt: Date
      updatedAt: Date
      skills: Prisma.JsonValue | null
      type: $Enums.BountyType
      requirements: string | null
      region: string
      applicationType: $Enums.ApplicationType
      status: $Enums.status
      timeToComplete: string | null
      token: string | null
      references: Prisma.JsonValue | null
      referredBy: string | null
      publishedAt: Date | null
      compensationType: $Enums.CompensationType
      maxRewardAsk: number | null
      minRewardAsk: number | null
      language: string | null
      rewardAmount: number | null
      rewards: Prisma.JsonValue | null
      maxBonusSpots: number
      usdValue: number | null
      sponsorId: string
      pocId: string
      pocSocials: string | null
      source: $Enums.Source
      isPublished: boolean
    }, ExtArgs["result"]["bountiesTemplates"]>
    composites: {}
  }

  type BountiesTemplatesGetPayload<S extends boolean | null | undefined | BountiesTemplatesDefaultArgs> = $Result.GetResult<Prisma.$BountiesTemplatesPayload, S>

  type BountiesTemplatesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<BountiesTemplatesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: BountiesTemplatesCountAggregateInputType | true
    }

  export interface BountiesTemplatesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['BountiesTemplates'], meta: { name: 'BountiesTemplates' } }
    /**
     * Find zero or one BountiesTemplates that matches the filter.
     * @param {BountiesTemplatesFindUniqueArgs} args - Arguments to find a BountiesTemplates
     * @example
     * // Get one BountiesTemplates
     * const bountiesTemplates = await prisma.bountiesTemplates.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BountiesTemplatesFindUniqueArgs>(args: SelectSubset<T, BountiesTemplatesFindUniqueArgs<ExtArgs>>): Prisma__BountiesTemplatesClient<$Result.GetResult<Prisma.$BountiesTemplatesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one BountiesTemplates that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {BountiesTemplatesFindUniqueOrThrowArgs} args - Arguments to find a BountiesTemplates
     * @example
     * // Get one BountiesTemplates
     * const bountiesTemplates = await prisma.bountiesTemplates.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BountiesTemplatesFindUniqueOrThrowArgs>(args: SelectSubset<T, BountiesTemplatesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BountiesTemplatesClient<$Result.GetResult<Prisma.$BountiesTemplatesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first BountiesTemplates that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BountiesTemplatesFindFirstArgs} args - Arguments to find a BountiesTemplates
     * @example
     * // Get one BountiesTemplates
     * const bountiesTemplates = await prisma.bountiesTemplates.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BountiesTemplatesFindFirstArgs>(args?: SelectSubset<T, BountiesTemplatesFindFirstArgs<ExtArgs>>): Prisma__BountiesTemplatesClient<$Result.GetResult<Prisma.$BountiesTemplatesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first BountiesTemplates that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BountiesTemplatesFindFirstOrThrowArgs} args - Arguments to find a BountiesTemplates
     * @example
     * // Get one BountiesTemplates
     * const bountiesTemplates = await prisma.bountiesTemplates.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BountiesTemplatesFindFirstOrThrowArgs>(args?: SelectSubset<T, BountiesTemplatesFindFirstOrThrowArgs<ExtArgs>>): Prisma__BountiesTemplatesClient<$Result.GetResult<Prisma.$BountiesTemplatesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more BountiesTemplates that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BountiesTemplatesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all BountiesTemplates
     * const bountiesTemplates = await prisma.bountiesTemplates.findMany()
     * 
     * // Get first 10 BountiesTemplates
     * const bountiesTemplates = await prisma.bountiesTemplates.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const bountiesTemplatesWithIdOnly = await prisma.bountiesTemplates.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends BountiesTemplatesFindManyArgs>(args?: SelectSubset<T, BountiesTemplatesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BountiesTemplatesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a BountiesTemplates.
     * @param {BountiesTemplatesCreateArgs} args - Arguments to create a BountiesTemplates.
     * @example
     * // Create one BountiesTemplates
     * const BountiesTemplates = await prisma.bountiesTemplates.create({
     *   data: {
     *     // ... data to create a BountiesTemplates
     *   }
     * })
     * 
     */
    create<T extends BountiesTemplatesCreateArgs>(args: SelectSubset<T, BountiesTemplatesCreateArgs<ExtArgs>>): Prisma__BountiesTemplatesClient<$Result.GetResult<Prisma.$BountiesTemplatesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many BountiesTemplates.
     * @param {BountiesTemplatesCreateManyArgs} args - Arguments to create many BountiesTemplates.
     * @example
     * // Create many BountiesTemplates
     * const bountiesTemplates = await prisma.bountiesTemplates.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BountiesTemplatesCreateManyArgs>(args?: SelectSubset<T, BountiesTemplatesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a BountiesTemplates.
     * @param {BountiesTemplatesDeleteArgs} args - Arguments to delete one BountiesTemplates.
     * @example
     * // Delete one BountiesTemplates
     * const BountiesTemplates = await prisma.bountiesTemplates.delete({
     *   where: {
     *     // ... filter to delete one BountiesTemplates
     *   }
     * })
     * 
     */
    delete<T extends BountiesTemplatesDeleteArgs>(args: SelectSubset<T, BountiesTemplatesDeleteArgs<ExtArgs>>): Prisma__BountiesTemplatesClient<$Result.GetResult<Prisma.$BountiesTemplatesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one BountiesTemplates.
     * @param {BountiesTemplatesUpdateArgs} args - Arguments to update one BountiesTemplates.
     * @example
     * // Update one BountiesTemplates
     * const bountiesTemplates = await prisma.bountiesTemplates.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BountiesTemplatesUpdateArgs>(args: SelectSubset<T, BountiesTemplatesUpdateArgs<ExtArgs>>): Prisma__BountiesTemplatesClient<$Result.GetResult<Prisma.$BountiesTemplatesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more BountiesTemplates.
     * @param {BountiesTemplatesDeleteManyArgs} args - Arguments to filter BountiesTemplates to delete.
     * @example
     * // Delete a few BountiesTemplates
     * const { count } = await prisma.bountiesTemplates.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BountiesTemplatesDeleteManyArgs>(args?: SelectSubset<T, BountiesTemplatesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BountiesTemplates.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BountiesTemplatesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many BountiesTemplates
     * const bountiesTemplates = await prisma.bountiesTemplates.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BountiesTemplatesUpdateManyArgs>(args: SelectSubset<T, BountiesTemplatesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one BountiesTemplates.
     * @param {BountiesTemplatesUpsertArgs} args - Arguments to update or create a BountiesTemplates.
     * @example
     * // Update or create a BountiesTemplates
     * const bountiesTemplates = await prisma.bountiesTemplates.upsert({
     *   create: {
     *     // ... data to create a BountiesTemplates
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the BountiesTemplates we want to update
     *   }
     * })
     */
    upsert<T extends BountiesTemplatesUpsertArgs>(args: SelectSubset<T, BountiesTemplatesUpsertArgs<ExtArgs>>): Prisma__BountiesTemplatesClient<$Result.GetResult<Prisma.$BountiesTemplatesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of BountiesTemplates.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BountiesTemplatesCountArgs} args - Arguments to filter BountiesTemplates to count.
     * @example
     * // Count the number of BountiesTemplates
     * const count = await prisma.bountiesTemplates.count({
     *   where: {
     *     // ... the filter for the BountiesTemplates we want to count
     *   }
     * })
    **/
    count<T extends BountiesTemplatesCountArgs>(
      args?: Subset<T, BountiesTemplatesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BountiesTemplatesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a BountiesTemplates.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BountiesTemplatesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BountiesTemplatesAggregateArgs>(args: Subset<T, BountiesTemplatesAggregateArgs>): Prisma.PrismaPromise<GetBountiesTemplatesAggregateType<T>>

    /**
     * Group by BountiesTemplates.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BountiesTemplatesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BountiesTemplatesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BountiesTemplatesGroupByArgs['orderBy'] }
        : { orderBy?: BountiesTemplatesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BountiesTemplatesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBountiesTemplatesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the BountiesTemplates model
   */
  readonly fields: BountiesTemplatesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for BountiesTemplates.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BountiesTemplatesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Bounties<T extends BountiesTemplates$BountiesArgs<ExtArgs> = {}>(args?: Subset<T, BountiesTemplates$BountiesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BountiesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    sponsor<T extends SponsorsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SponsorsDefaultArgs<ExtArgs>>): Prisma__SponsorsClient<$Result.GetResult<Prisma.$SponsorsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    poc<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the BountiesTemplates model
   */
  interface BountiesTemplatesFieldRefs {
    readonly id: FieldRef<"BountiesTemplates", 'String'>
    readonly title: FieldRef<"BountiesTemplates", 'String'>
    readonly deadline: FieldRef<"BountiesTemplates", 'DateTime'>
    readonly slug: FieldRef<"BountiesTemplates", 'String'>
    readonly description: FieldRef<"BountiesTemplates", 'String'>
    readonly color: FieldRef<"BountiesTemplates", 'String'>
    readonly emoji: FieldRef<"BountiesTemplates", 'String'>
    readonly isFeatured: FieldRef<"BountiesTemplates", 'Boolean'>
    readonly isActive: FieldRef<"BountiesTemplates", 'Boolean'>
    readonly isArchived: FieldRef<"BountiesTemplates", 'Boolean'>
    readonly createdAt: FieldRef<"BountiesTemplates", 'DateTime'>
    readonly updatedAt: FieldRef<"BountiesTemplates", 'DateTime'>
    readonly skills: FieldRef<"BountiesTemplates", 'Json'>
    readonly type: FieldRef<"BountiesTemplates", 'BountyType'>
    readonly requirements: FieldRef<"BountiesTemplates", 'String'>
    readonly region: FieldRef<"BountiesTemplates", 'String'>
    readonly applicationType: FieldRef<"BountiesTemplates", 'ApplicationType'>
    readonly status: FieldRef<"BountiesTemplates", 'status'>
    readonly timeToComplete: FieldRef<"BountiesTemplates", 'String'>
    readonly token: FieldRef<"BountiesTemplates", 'String'>
    readonly references: FieldRef<"BountiesTemplates", 'Json'>
    readonly referredBy: FieldRef<"BountiesTemplates", 'String'>
    readonly publishedAt: FieldRef<"BountiesTemplates", 'DateTime'>
    readonly compensationType: FieldRef<"BountiesTemplates", 'CompensationType'>
    readonly maxRewardAsk: FieldRef<"BountiesTemplates", 'Int'>
    readonly minRewardAsk: FieldRef<"BountiesTemplates", 'Int'>
    readonly language: FieldRef<"BountiesTemplates", 'String'>
    readonly rewardAmount: FieldRef<"BountiesTemplates", 'Float'>
    readonly rewards: FieldRef<"BountiesTemplates", 'Json'>
    readonly maxBonusSpots: FieldRef<"BountiesTemplates", 'Int'>
    readonly usdValue: FieldRef<"BountiesTemplates", 'Float'>
    readonly sponsorId: FieldRef<"BountiesTemplates", 'String'>
    readonly pocId: FieldRef<"BountiesTemplates", 'String'>
    readonly pocSocials: FieldRef<"BountiesTemplates", 'String'>
    readonly source: FieldRef<"BountiesTemplates", 'Source'>
    readonly isPublished: FieldRef<"BountiesTemplates", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * BountiesTemplates findUnique
   */
  export type BountiesTemplatesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BountiesTemplates
     */
    select?: BountiesTemplatesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BountiesTemplates
     */
    omit?: BountiesTemplatesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BountiesTemplatesInclude<ExtArgs> | null
    /**
     * Filter, which BountiesTemplates to fetch.
     */
    where: BountiesTemplatesWhereUniqueInput
  }

  /**
   * BountiesTemplates findUniqueOrThrow
   */
  export type BountiesTemplatesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BountiesTemplates
     */
    select?: BountiesTemplatesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BountiesTemplates
     */
    omit?: BountiesTemplatesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BountiesTemplatesInclude<ExtArgs> | null
    /**
     * Filter, which BountiesTemplates to fetch.
     */
    where: BountiesTemplatesWhereUniqueInput
  }

  /**
   * BountiesTemplates findFirst
   */
  export type BountiesTemplatesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BountiesTemplates
     */
    select?: BountiesTemplatesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BountiesTemplates
     */
    omit?: BountiesTemplatesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BountiesTemplatesInclude<ExtArgs> | null
    /**
     * Filter, which BountiesTemplates to fetch.
     */
    where?: BountiesTemplatesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BountiesTemplates to fetch.
     */
    orderBy?: BountiesTemplatesOrderByWithRelationInput | BountiesTemplatesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BountiesTemplates.
     */
    cursor?: BountiesTemplatesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BountiesTemplates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BountiesTemplates.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BountiesTemplates.
     */
    distinct?: BountiesTemplatesScalarFieldEnum | BountiesTemplatesScalarFieldEnum[]
  }

  /**
   * BountiesTemplates findFirstOrThrow
   */
  export type BountiesTemplatesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BountiesTemplates
     */
    select?: BountiesTemplatesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BountiesTemplates
     */
    omit?: BountiesTemplatesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BountiesTemplatesInclude<ExtArgs> | null
    /**
     * Filter, which BountiesTemplates to fetch.
     */
    where?: BountiesTemplatesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BountiesTemplates to fetch.
     */
    orderBy?: BountiesTemplatesOrderByWithRelationInput | BountiesTemplatesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BountiesTemplates.
     */
    cursor?: BountiesTemplatesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BountiesTemplates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BountiesTemplates.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BountiesTemplates.
     */
    distinct?: BountiesTemplatesScalarFieldEnum | BountiesTemplatesScalarFieldEnum[]
  }

  /**
   * BountiesTemplates findMany
   */
  export type BountiesTemplatesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BountiesTemplates
     */
    select?: BountiesTemplatesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BountiesTemplates
     */
    omit?: BountiesTemplatesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BountiesTemplatesInclude<ExtArgs> | null
    /**
     * Filter, which BountiesTemplates to fetch.
     */
    where?: BountiesTemplatesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BountiesTemplates to fetch.
     */
    orderBy?: BountiesTemplatesOrderByWithRelationInput | BountiesTemplatesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing BountiesTemplates.
     */
    cursor?: BountiesTemplatesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BountiesTemplates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BountiesTemplates.
     */
    skip?: number
    distinct?: BountiesTemplatesScalarFieldEnum | BountiesTemplatesScalarFieldEnum[]
  }

  /**
   * BountiesTemplates create
   */
  export type BountiesTemplatesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BountiesTemplates
     */
    select?: BountiesTemplatesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BountiesTemplates
     */
    omit?: BountiesTemplatesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BountiesTemplatesInclude<ExtArgs> | null
    /**
     * The data needed to create a BountiesTemplates.
     */
    data: XOR<BountiesTemplatesCreateInput, BountiesTemplatesUncheckedCreateInput>
  }

  /**
   * BountiesTemplates createMany
   */
  export type BountiesTemplatesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many BountiesTemplates.
     */
    data: BountiesTemplatesCreateManyInput | BountiesTemplatesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * BountiesTemplates update
   */
  export type BountiesTemplatesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BountiesTemplates
     */
    select?: BountiesTemplatesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BountiesTemplates
     */
    omit?: BountiesTemplatesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BountiesTemplatesInclude<ExtArgs> | null
    /**
     * The data needed to update a BountiesTemplates.
     */
    data: XOR<BountiesTemplatesUpdateInput, BountiesTemplatesUncheckedUpdateInput>
    /**
     * Choose, which BountiesTemplates to update.
     */
    where: BountiesTemplatesWhereUniqueInput
  }

  /**
   * BountiesTemplates updateMany
   */
  export type BountiesTemplatesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update BountiesTemplates.
     */
    data: XOR<BountiesTemplatesUpdateManyMutationInput, BountiesTemplatesUncheckedUpdateManyInput>
    /**
     * Filter which BountiesTemplates to update
     */
    where?: BountiesTemplatesWhereInput
    /**
     * Limit how many BountiesTemplates to update.
     */
    limit?: number
  }

  /**
   * BountiesTemplates upsert
   */
  export type BountiesTemplatesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BountiesTemplates
     */
    select?: BountiesTemplatesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BountiesTemplates
     */
    omit?: BountiesTemplatesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BountiesTemplatesInclude<ExtArgs> | null
    /**
     * The filter to search for the BountiesTemplates to update in case it exists.
     */
    where: BountiesTemplatesWhereUniqueInput
    /**
     * In case the BountiesTemplates found by the `where` argument doesn't exist, create a new BountiesTemplates with this data.
     */
    create: XOR<BountiesTemplatesCreateInput, BountiesTemplatesUncheckedCreateInput>
    /**
     * In case the BountiesTemplates was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BountiesTemplatesUpdateInput, BountiesTemplatesUncheckedUpdateInput>
  }

  /**
   * BountiesTemplates delete
   */
  export type BountiesTemplatesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BountiesTemplates
     */
    select?: BountiesTemplatesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BountiesTemplates
     */
    omit?: BountiesTemplatesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BountiesTemplatesInclude<ExtArgs> | null
    /**
     * Filter which BountiesTemplates to delete.
     */
    where: BountiesTemplatesWhereUniqueInput
  }

  /**
   * BountiesTemplates deleteMany
   */
  export type BountiesTemplatesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BountiesTemplates to delete
     */
    where?: BountiesTemplatesWhereInput
    /**
     * Limit how many BountiesTemplates to delete.
     */
    limit?: number
  }

  /**
   * BountiesTemplates.Bounties
   */
  export type BountiesTemplates$BountiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bounties
     */
    select?: BountiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Bounties
     */
    omit?: BountiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BountiesInclude<ExtArgs> | null
    where?: BountiesWhereInput
    orderBy?: BountiesOrderByWithRelationInput | BountiesOrderByWithRelationInput[]
    cursor?: BountiesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BountiesScalarFieldEnum | BountiesScalarFieldEnum[]
  }

  /**
   * BountiesTemplates without action
   */
  export type BountiesTemplatesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BountiesTemplates
     */
    select?: BountiesTemplatesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BountiesTemplates
     */
    omit?: BountiesTemplatesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BountiesTemplatesInclude<ExtArgs> | null
  }


  /**
   * Model Comment
   */

  export type AggregateComment = {
    _count: CommentCountAggregateOutputType | null
    _min: CommentMinAggregateOutputType | null
    _max: CommentMaxAggregateOutputType | null
  }

  export type CommentMinAggregateOutputType = {
    id: string | null
    message: string | null
    authorId: string | null
    refType: $Enums.CommentRefType | null
    refId: string | null
    isActive: boolean | null
    isArchived: boolean | null
    isPinned: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    replyToId: string | null
    submissionId: string | null
    type: $Enums.CommentType | null
  }

  export type CommentMaxAggregateOutputType = {
    id: string | null
    message: string | null
    authorId: string | null
    refType: $Enums.CommentRefType | null
    refId: string | null
    isActive: boolean | null
    isArchived: boolean | null
    isPinned: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    replyToId: string | null
    submissionId: string | null
    type: $Enums.CommentType | null
  }

  export type CommentCountAggregateOutputType = {
    id: number
    message: number
    authorId: number
    refType: number
    refId: number
    isActive: number
    isArchived: number
    isPinned: number
    createdAt: number
    updatedAt: number
    replyToId: number
    submissionId: number
    type: number
    _all: number
  }


  export type CommentMinAggregateInputType = {
    id?: true
    message?: true
    authorId?: true
    refType?: true
    refId?: true
    isActive?: true
    isArchived?: true
    isPinned?: true
    createdAt?: true
    updatedAt?: true
    replyToId?: true
    submissionId?: true
    type?: true
  }

  export type CommentMaxAggregateInputType = {
    id?: true
    message?: true
    authorId?: true
    refType?: true
    refId?: true
    isActive?: true
    isArchived?: true
    isPinned?: true
    createdAt?: true
    updatedAt?: true
    replyToId?: true
    submissionId?: true
    type?: true
  }

  export type CommentCountAggregateInputType = {
    id?: true
    message?: true
    authorId?: true
    refType?: true
    refId?: true
    isActive?: true
    isArchived?: true
    isPinned?: true
    createdAt?: true
    updatedAt?: true
    replyToId?: true
    submissionId?: true
    type?: true
    _all?: true
  }

  export type CommentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Comment to aggregate.
     */
    where?: CommentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Comments to fetch.
     */
    orderBy?: CommentOrderByWithRelationInput | CommentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CommentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Comments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Comments
    **/
    _count?: true | CommentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CommentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CommentMaxAggregateInputType
  }

  export type GetCommentAggregateType<T extends CommentAggregateArgs> = {
        [P in keyof T & keyof AggregateComment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateComment[P]>
      : GetScalarType<T[P], AggregateComment[P]>
  }




  export type CommentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CommentWhereInput
    orderBy?: CommentOrderByWithAggregationInput | CommentOrderByWithAggregationInput[]
    by: CommentScalarFieldEnum[] | CommentScalarFieldEnum
    having?: CommentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CommentCountAggregateInputType | true
    _min?: CommentMinAggregateInputType
    _max?: CommentMaxAggregateInputType
  }

  export type CommentGroupByOutputType = {
    id: string
    message: string
    authorId: string
    refType: $Enums.CommentRefType
    refId: string
    isActive: boolean
    isArchived: boolean
    isPinned: boolean
    createdAt: Date
    updatedAt: Date
    replyToId: string | null
    submissionId: string | null
    type: $Enums.CommentType
    _count: CommentCountAggregateOutputType | null
    _min: CommentMinAggregateOutputType | null
    _max: CommentMaxAggregateOutputType | null
  }

  type GetCommentGroupByPayload<T extends CommentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CommentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CommentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CommentGroupByOutputType[P]>
            : GetScalarType<T[P], CommentGroupByOutputType[P]>
        }
      >
    >


  export type CommentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    message?: boolean
    authorId?: boolean
    refType?: boolean
    refId?: boolean
    isActive?: boolean
    isArchived?: boolean
    isPinned?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    replyToId?: boolean
    submissionId?: boolean
    type?: boolean
    author?: boolean | UserDefaultArgs<ExtArgs>
    repliedTo?: boolean | Comment$repliedToArgs<ExtArgs>
    replies?: boolean | Comment$repliesArgs<ExtArgs>
    listing?: boolean | Comment$listingArgs<ExtArgs>
    submission?: boolean | Comment$submissionArgs<ExtArgs>
    pow?: boolean | Comment$powArgs<ExtArgs>
    GrantApplication?: boolean | Comment$GrantApplicationArgs<ExtArgs>
    _count?: boolean | CommentCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["comment"]>



  export type CommentSelectScalar = {
    id?: boolean
    message?: boolean
    authorId?: boolean
    refType?: boolean
    refId?: boolean
    isActive?: boolean
    isArchived?: boolean
    isPinned?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    replyToId?: boolean
    submissionId?: boolean
    type?: boolean
  }

  export type CommentOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "message" | "authorId" | "refType" | "refId" | "isActive" | "isArchived" | "isPinned" | "createdAt" | "updatedAt" | "replyToId" | "submissionId" | "type", ExtArgs["result"]["comment"]>
  export type CommentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    author?: boolean | UserDefaultArgs<ExtArgs>
    repliedTo?: boolean | Comment$repliedToArgs<ExtArgs>
    replies?: boolean | Comment$repliesArgs<ExtArgs>
    listing?: boolean | Comment$listingArgs<ExtArgs>
    submission?: boolean | Comment$submissionArgs<ExtArgs>
    pow?: boolean | Comment$powArgs<ExtArgs>
    GrantApplication?: boolean | Comment$GrantApplicationArgs<ExtArgs>
    _count?: boolean | CommentCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $CommentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Comment"
    objects: {
      author: Prisma.$UserPayload<ExtArgs>
      repliedTo: Prisma.$CommentPayload<ExtArgs> | null
      replies: Prisma.$CommentPayload<ExtArgs>[]
      listing: Prisma.$BountiesPayload<ExtArgs> | null
      submission: Prisma.$SubmissionPayload<ExtArgs> | null
      pow: Prisma.$PoWPayload<ExtArgs> | null
      GrantApplication: Prisma.$GrantApplicationPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      message: string
      authorId: string
      refType: $Enums.CommentRefType
      refId: string
      isActive: boolean
      isArchived: boolean
      isPinned: boolean
      createdAt: Date
      updatedAt: Date
      replyToId: string | null
      submissionId: string | null
      type: $Enums.CommentType
    }, ExtArgs["result"]["comment"]>
    composites: {}
  }

  type CommentGetPayload<S extends boolean | null | undefined | CommentDefaultArgs> = $Result.GetResult<Prisma.$CommentPayload, S>

  type CommentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CommentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CommentCountAggregateInputType | true
    }

  export interface CommentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Comment'], meta: { name: 'Comment' } }
    /**
     * Find zero or one Comment that matches the filter.
     * @param {CommentFindUniqueArgs} args - Arguments to find a Comment
     * @example
     * // Get one Comment
     * const comment = await prisma.comment.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CommentFindUniqueArgs>(args: SelectSubset<T, CommentFindUniqueArgs<ExtArgs>>): Prisma__CommentClient<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Comment that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CommentFindUniqueOrThrowArgs} args - Arguments to find a Comment
     * @example
     * // Get one Comment
     * const comment = await prisma.comment.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CommentFindUniqueOrThrowArgs>(args: SelectSubset<T, CommentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CommentClient<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Comment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentFindFirstArgs} args - Arguments to find a Comment
     * @example
     * // Get one Comment
     * const comment = await prisma.comment.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CommentFindFirstArgs>(args?: SelectSubset<T, CommentFindFirstArgs<ExtArgs>>): Prisma__CommentClient<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Comment that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentFindFirstOrThrowArgs} args - Arguments to find a Comment
     * @example
     * // Get one Comment
     * const comment = await prisma.comment.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CommentFindFirstOrThrowArgs>(args?: SelectSubset<T, CommentFindFirstOrThrowArgs<ExtArgs>>): Prisma__CommentClient<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Comments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Comments
     * const comments = await prisma.comment.findMany()
     * 
     * // Get first 10 Comments
     * const comments = await prisma.comment.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const commentWithIdOnly = await prisma.comment.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CommentFindManyArgs>(args?: SelectSubset<T, CommentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Comment.
     * @param {CommentCreateArgs} args - Arguments to create a Comment.
     * @example
     * // Create one Comment
     * const Comment = await prisma.comment.create({
     *   data: {
     *     // ... data to create a Comment
     *   }
     * })
     * 
     */
    create<T extends CommentCreateArgs>(args: SelectSubset<T, CommentCreateArgs<ExtArgs>>): Prisma__CommentClient<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Comments.
     * @param {CommentCreateManyArgs} args - Arguments to create many Comments.
     * @example
     * // Create many Comments
     * const comment = await prisma.comment.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CommentCreateManyArgs>(args?: SelectSubset<T, CommentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Comment.
     * @param {CommentDeleteArgs} args - Arguments to delete one Comment.
     * @example
     * // Delete one Comment
     * const Comment = await prisma.comment.delete({
     *   where: {
     *     // ... filter to delete one Comment
     *   }
     * })
     * 
     */
    delete<T extends CommentDeleteArgs>(args: SelectSubset<T, CommentDeleteArgs<ExtArgs>>): Prisma__CommentClient<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Comment.
     * @param {CommentUpdateArgs} args - Arguments to update one Comment.
     * @example
     * // Update one Comment
     * const comment = await prisma.comment.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CommentUpdateArgs>(args: SelectSubset<T, CommentUpdateArgs<ExtArgs>>): Prisma__CommentClient<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Comments.
     * @param {CommentDeleteManyArgs} args - Arguments to filter Comments to delete.
     * @example
     * // Delete a few Comments
     * const { count } = await prisma.comment.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CommentDeleteManyArgs>(args?: SelectSubset<T, CommentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Comments
     * const comment = await prisma.comment.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CommentUpdateManyArgs>(args: SelectSubset<T, CommentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Comment.
     * @param {CommentUpsertArgs} args - Arguments to update or create a Comment.
     * @example
     * // Update or create a Comment
     * const comment = await prisma.comment.upsert({
     *   create: {
     *     // ... data to create a Comment
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Comment we want to update
     *   }
     * })
     */
    upsert<T extends CommentUpsertArgs>(args: SelectSubset<T, CommentUpsertArgs<ExtArgs>>): Prisma__CommentClient<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentCountArgs} args - Arguments to filter Comments to count.
     * @example
     * // Count the number of Comments
     * const count = await prisma.comment.count({
     *   where: {
     *     // ... the filter for the Comments we want to count
     *   }
     * })
    **/
    count<T extends CommentCountArgs>(
      args?: Subset<T, CommentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CommentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Comment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CommentAggregateArgs>(args: Subset<T, CommentAggregateArgs>): Prisma.PrismaPromise<GetCommentAggregateType<T>>

    /**
     * Group by Comment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CommentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CommentGroupByArgs['orderBy'] }
        : { orderBy?: CommentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CommentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCommentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Comment model
   */
  readonly fields: CommentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Comment.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CommentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    author<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    repliedTo<T extends Comment$repliedToArgs<ExtArgs> = {}>(args?: Subset<T, Comment$repliedToArgs<ExtArgs>>): Prisma__CommentClient<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    replies<T extends Comment$repliesArgs<ExtArgs> = {}>(args?: Subset<T, Comment$repliesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    listing<T extends Comment$listingArgs<ExtArgs> = {}>(args?: Subset<T, Comment$listingArgs<ExtArgs>>): Prisma__BountiesClient<$Result.GetResult<Prisma.$BountiesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    submission<T extends Comment$submissionArgs<ExtArgs> = {}>(args?: Subset<T, Comment$submissionArgs<ExtArgs>>): Prisma__SubmissionClient<$Result.GetResult<Prisma.$SubmissionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    pow<T extends Comment$powArgs<ExtArgs> = {}>(args?: Subset<T, Comment$powArgs<ExtArgs>>): Prisma__PoWClient<$Result.GetResult<Prisma.$PoWPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    GrantApplication<T extends Comment$GrantApplicationArgs<ExtArgs> = {}>(args?: Subset<T, Comment$GrantApplicationArgs<ExtArgs>>): Prisma__GrantApplicationClient<$Result.GetResult<Prisma.$GrantApplicationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Comment model
   */
  interface CommentFieldRefs {
    readonly id: FieldRef<"Comment", 'String'>
    readonly message: FieldRef<"Comment", 'String'>
    readonly authorId: FieldRef<"Comment", 'String'>
    readonly refType: FieldRef<"Comment", 'CommentRefType'>
    readonly refId: FieldRef<"Comment", 'String'>
    readonly isActive: FieldRef<"Comment", 'Boolean'>
    readonly isArchived: FieldRef<"Comment", 'Boolean'>
    readonly isPinned: FieldRef<"Comment", 'Boolean'>
    readonly createdAt: FieldRef<"Comment", 'DateTime'>
    readonly updatedAt: FieldRef<"Comment", 'DateTime'>
    readonly replyToId: FieldRef<"Comment", 'String'>
    readonly submissionId: FieldRef<"Comment", 'String'>
    readonly type: FieldRef<"Comment", 'CommentType'>
  }
    

  // Custom InputTypes
  /**
   * Comment findUnique
   */
  export type CommentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    /**
     * Filter, which Comment to fetch.
     */
    where: CommentWhereUniqueInput
  }

  /**
   * Comment findUniqueOrThrow
   */
  export type CommentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    /**
     * Filter, which Comment to fetch.
     */
    where: CommentWhereUniqueInput
  }

  /**
   * Comment findFirst
   */
  export type CommentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    /**
     * Filter, which Comment to fetch.
     */
    where?: CommentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Comments to fetch.
     */
    orderBy?: CommentOrderByWithRelationInput | CommentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Comments.
     */
    cursor?: CommentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Comments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Comments.
     */
    distinct?: CommentScalarFieldEnum | CommentScalarFieldEnum[]
  }

  /**
   * Comment findFirstOrThrow
   */
  export type CommentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    /**
     * Filter, which Comment to fetch.
     */
    where?: CommentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Comments to fetch.
     */
    orderBy?: CommentOrderByWithRelationInput | CommentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Comments.
     */
    cursor?: CommentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Comments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Comments.
     */
    distinct?: CommentScalarFieldEnum | CommentScalarFieldEnum[]
  }

  /**
   * Comment findMany
   */
  export type CommentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    /**
     * Filter, which Comments to fetch.
     */
    where?: CommentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Comments to fetch.
     */
    orderBy?: CommentOrderByWithRelationInput | CommentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Comments.
     */
    cursor?: CommentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Comments.
     */
    skip?: number
    distinct?: CommentScalarFieldEnum | CommentScalarFieldEnum[]
  }

  /**
   * Comment create
   */
  export type CommentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    /**
     * The data needed to create a Comment.
     */
    data: XOR<CommentCreateInput, CommentUncheckedCreateInput>
  }

  /**
   * Comment createMany
   */
  export type CommentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Comments.
     */
    data: CommentCreateManyInput | CommentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Comment update
   */
  export type CommentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    /**
     * The data needed to update a Comment.
     */
    data: XOR<CommentUpdateInput, CommentUncheckedUpdateInput>
    /**
     * Choose, which Comment to update.
     */
    where: CommentWhereUniqueInput
  }

  /**
   * Comment updateMany
   */
  export type CommentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Comments.
     */
    data: XOR<CommentUpdateManyMutationInput, CommentUncheckedUpdateManyInput>
    /**
     * Filter which Comments to update
     */
    where?: CommentWhereInput
    /**
     * Limit how many Comments to update.
     */
    limit?: number
  }

  /**
   * Comment upsert
   */
  export type CommentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    /**
     * The filter to search for the Comment to update in case it exists.
     */
    where: CommentWhereUniqueInput
    /**
     * In case the Comment found by the `where` argument doesn't exist, create a new Comment with this data.
     */
    create: XOR<CommentCreateInput, CommentUncheckedCreateInput>
    /**
     * In case the Comment was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CommentUpdateInput, CommentUncheckedUpdateInput>
  }

  /**
   * Comment delete
   */
  export type CommentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    /**
     * Filter which Comment to delete.
     */
    where: CommentWhereUniqueInput
  }

  /**
   * Comment deleteMany
   */
  export type CommentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Comments to delete
     */
    where?: CommentWhereInput
    /**
     * Limit how many Comments to delete.
     */
    limit?: number
  }

  /**
   * Comment.repliedTo
   */
  export type Comment$repliedToArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    where?: CommentWhereInput
  }

  /**
   * Comment.replies
   */
  export type Comment$repliesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    where?: CommentWhereInput
    orderBy?: CommentOrderByWithRelationInput | CommentOrderByWithRelationInput[]
    cursor?: CommentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CommentScalarFieldEnum | CommentScalarFieldEnum[]
  }

  /**
   * Comment.listing
   */
  export type Comment$listingArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bounties
     */
    select?: BountiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Bounties
     */
    omit?: BountiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BountiesInclude<ExtArgs> | null
    where?: BountiesWhereInput
  }

  /**
   * Comment.submission
   */
  export type Comment$submissionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Submission
     */
    select?: SubmissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Submission
     */
    omit?: SubmissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubmissionInclude<ExtArgs> | null
    where?: SubmissionWhereInput
  }

  /**
   * Comment.pow
   */
  export type Comment$powArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PoW
     */
    select?: PoWSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PoW
     */
    omit?: PoWOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PoWInclude<ExtArgs> | null
    where?: PoWWhereInput
  }

  /**
   * Comment.GrantApplication
   */
  export type Comment$GrantApplicationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GrantApplication
     */
    select?: GrantApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GrantApplication
     */
    omit?: GrantApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GrantApplicationInclude<ExtArgs> | null
    where?: GrantApplicationWhereInput
  }

  /**
   * Comment without action
   */
  export type CommentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
  }


  /**
   * Model Grants
   */

  export type AggregateGrants = {
    _count: GrantsCountAggregateOutputType | null
    _avg: GrantsAvgAggregateOutputType | null
    _sum: GrantsSumAggregateOutputType | null
    _min: GrantsMinAggregateOutputType | null
    _max: GrantsMaxAggregateOutputType | null
  }

  export type GrantsAvgAggregateOutputType = {
    minReward: number | null
    maxReward: number | null
    totalPaid: number | null
    totalApproved: number | null
    historicalApplications: number | null
    historicalPaid: number | null
  }

  export type GrantsSumAggregateOutputType = {
    minReward: number | null
    maxReward: number | null
    totalPaid: number | null
    totalApproved: number | null
    historicalApplications: number | null
    historicalPaid: number | null
  }

  export type GrantsMinAggregateOutputType = {
    id: string | null
    title: string | null
    slug: string | null
    description: string | null
    shortDescription: string | null
    token: string | null
    minReward: number | null
    maxReward: number | null
    totalPaid: number | null
    totalApproved: number | null
    historicalApplications: number | null
    historicalPaid: number | null
    link: string | null
    sponsorId: string | null
    pocId: string | null
    isPublished: boolean | null
    isFeatured: boolean | null
    isActive: boolean | null
    isArchived: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    logo: string | null
    region: string | null
    pocSocials: string | null
    status: $Enums.GrantStatus | null
    airtableId: string | null
    avgResponseTime: string | null
    isNative: boolean | null
    isPrivate: boolean | null
    approverRecordId: string | null
    emailSender: string | null
    replyToEmail: string | null
    emailSalutation: string | null
    communityLink: string | null
  }

  export type GrantsMaxAggregateOutputType = {
    id: string | null
    title: string | null
    slug: string | null
    description: string | null
    shortDescription: string | null
    token: string | null
    minReward: number | null
    maxReward: number | null
    totalPaid: number | null
    totalApproved: number | null
    historicalApplications: number | null
    historicalPaid: number | null
    link: string | null
    sponsorId: string | null
    pocId: string | null
    isPublished: boolean | null
    isFeatured: boolean | null
    isActive: boolean | null
    isArchived: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    logo: string | null
    region: string | null
    pocSocials: string | null
    status: $Enums.GrantStatus | null
    airtableId: string | null
    avgResponseTime: string | null
    isNative: boolean | null
    isPrivate: boolean | null
    approverRecordId: string | null
    emailSender: string | null
    replyToEmail: string | null
    emailSalutation: string | null
    communityLink: string | null
  }

  export type GrantsCountAggregateOutputType = {
    id: number
    title: number
    slug: number
    description: number
    shortDescription: number
    token: number
    minReward: number
    maxReward: number
    totalPaid: number
    totalApproved: number
    historicalApplications: number
    historicalPaid: number
    link: number
    sponsorId: number
    pocId: number
    isPublished: number
    isFeatured: number
    isActive: number
    isArchived: number
    createdAt: number
    updatedAt: number
    skills: number
    logo: number
    region: number
    questions: number
    pocSocials: number
    status: number
    airtableId: number
    avgResponseTime: number
    isNative: number
    isPrivate: number
    references: number
    ai: number
    approverRecordId: number
    emailSender: number
    replyToEmail: number
    emailSalutation: number
    communityLink: number
    _all: number
  }


  export type GrantsAvgAggregateInputType = {
    minReward?: true
    maxReward?: true
    totalPaid?: true
    totalApproved?: true
    historicalApplications?: true
    historicalPaid?: true
  }

  export type GrantsSumAggregateInputType = {
    minReward?: true
    maxReward?: true
    totalPaid?: true
    totalApproved?: true
    historicalApplications?: true
    historicalPaid?: true
  }

  export type GrantsMinAggregateInputType = {
    id?: true
    title?: true
    slug?: true
    description?: true
    shortDescription?: true
    token?: true
    minReward?: true
    maxReward?: true
    totalPaid?: true
    totalApproved?: true
    historicalApplications?: true
    historicalPaid?: true
    link?: true
    sponsorId?: true
    pocId?: true
    isPublished?: true
    isFeatured?: true
    isActive?: true
    isArchived?: true
    createdAt?: true
    updatedAt?: true
    logo?: true
    region?: true
    pocSocials?: true
    status?: true
    airtableId?: true
    avgResponseTime?: true
    isNative?: true
    isPrivate?: true
    approverRecordId?: true
    emailSender?: true
    replyToEmail?: true
    emailSalutation?: true
    communityLink?: true
  }

  export type GrantsMaxAggregateInputType = {
    id?: true
    title?: true
    slug?: true
    description?: true
    shortDescription?: true
    token?: true
    minReward?: true
    maxReward?: true
    totalPaid?: true
    totalApproved?: true
    historicalApplications?: true
    historicalPaid?: true
    link?: true
    sponsorId?: true
    pocId?: true
    isPublished?: true
    isFeatured?: true
    isActive?: true
    isArchived?: true
    createdAt?: true
    updatedAt?: true
    logo?: true
    region?: true
    pocSocials?: true
    status?: true
    airtableId?: true
    avgResponseTime?: true
    isNative?: true
    isPrivate?: true
    approverRecordId?: true
    emailSender?: true
    replyToEmail?: true
    emailSalutation?: true
    communityLink?: true
  }

  export type GrantsCountAggregateInputType = {
    id?: true
    title?: true
    slug?: true
    description?: true
    shortDescription?: true
    token?: true
    minReward?: true
    maxReward?: true
    totalPaid?: true
    totalApproved?: true
    historicalApplications?: true
    historicalPaid?: true
    link?: true
    sponsorId?: true
    pocId?: true
    isPublished?: true
    isFeatured?: true
    isActive?: true
    isArchived?: true
    createdAt?: true
    updatedAt?: true
    skills?: true
    logo?: true
    region?: true
    questions?: true
    pocSocials?: true
    status?: true
    airtableId?: true
    avgResponseTime?: true
    isNative?: true
    isPrivate?: true
    references?: true
    ai?: true
    approverRecordId?: true
    emailSender?: true
    replyToEmail?: true
    emailSalutation?: true
    communityLink?: true
    _all?: true
  }

  export type GrantsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Grants to aggregate.
     */
    where?: GrantsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Grants to fetch.
     */
    orderBy?: GrantsOrderByWithRelationInput | GrantsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: GrantsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Grants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Grants.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Grants
    **/
    _count?: true | GrantsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: GrantsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: GrantsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: GrantsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: GrantsMaxAggregateInputType
  }

  export type GetGrantsAggregateType<T extends GrantsAggregateArgs> = {
        [P in keyof T & keyof AggregateGrants]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGrants[P]>
      : GetScalarType<T[P], AggregateGrants[P]>
  }




  export type GrantsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: GrantsWhereInput
    orderBy?: GrantsOrderByWithAggregationInput | GrantsOrderByWithAggregationInput[]
    by: GrantsScalarFieldEnum[] | GrantsScalarFieldEnum
    having?: GrantsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: GrantsCountAggregateInputType | true
    _avg?: GrantsAvgAggregateInputType
    _sum?: GrantsSumAggregateInputType
    _min?: GrantsMinAggregateInputType
    _max?: GrantsMaxAggregateInputType
  }

  export type GrantsGroupByOutputType = {
    id: string
    title: string
    slug: string
    description: string | null
    shortDescription: string | null
    token: string | null
    minReward: number | null
    maxReward: number | null
    totalPaid: number
    totalApproved: number
    historicalApplications: number
    historicalPaid: number
    link: string | null
    sponsorId: string
    pocId: string
    isPublished: boolean
    isFeatured: boolean
    isActive: boolean
    isArchived: boolean
    createdAt: Date
    updatedAt: Date
    skills: JsonValue | null
    logo: string | null
    region: string
    questions: JsonValue | null
    pocSocials: string | null
    status: $Enums.GrantStatus
    airtableId: string | null
    avgResponseTime: string | null
    isNative: boolean
    isPrivate: boolean
    references: JsonValue | null
    ai: JsonValue | null
    approverRecordId: string | null
    emailSender: string | null
    replyToEmail: string | null
    emailSalutation: string | null
    communityLink: string | null
    _count: GrantsCountAggregateOutputType | null
    _avg: GrantsAvgAggregateOutputType | null
    _sum: GrantsSumAggregateOutputType | null
    _min: GrantsMinAggregateOutputType | null
    _max: GrantsMaxAggregateOutputType | null
  }

  type GetGrantsGroupByPayload<T extends GrantsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<GrantsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof GrantsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], GrantsGroupByOutputType[P]>
            : GetScalarType<T[P], GrantsGroupByOutputType[P]>
        }
      >
    >


  export type GrantsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    slug?: boolean
    description?: boolean
    shortDescription?: boolean
    token?: boolean
    minReward?: boolean
    maxReward?: boolean
    totalPaid?: boolean
    totalApproved?: boolean
    historicalApplications?: boolean
    historicalPaid?: boolean
    link?: boolean
    sponsorId?: boolean
    pocId?: boolean
    isPublished?: boolean
    isFeatured?: boolean
    isActive?: boolean
    isArchived?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    skills?: boolean
    logo?: boolean
    region?: boolean
    questions?: boolean
    pocSocials?: boolean
    status?: boolean
    airtableId?: boolean
    avgResponseTime?: boolean
    isNative?: boolean
    isPrivate?: boolean
    references?: boolean
    ai?: boolean
    approverRecordId?: boolean
    emailSender?: boolean
    replyToEmail?: boolean
    emailSalutation?: boolean
    communityLink?: boolean
    sponsor?: boolean | SponsorsDefaultArgs<ExtArgs>
    poc?: boolean | UserDefaultArgs<ExtArgs>
    GrantApplication?: boolean | Grants$GrantApplicationArgs<ExtArgs>
    GrantTranche?: boolean | Grants$GrantTrancheArgs<ExtArgs>
    _count?: boolean | GrantsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["grants"]>



  export type GrantsSelectScalar = {
    id?: boolean
    title?: boolean
    slug?: boolean
    description?: boolean
    shortDescription?: boolean
    token?: boolean
    minReward?: boolean
    maxReward?: boolean
    totalPaid?: boolean
    totalApproved?: boolean
    historicalApplications?: boolean
    historicalPaid?: boolean
    link?: boolean
    sponsorId?: boolean
    pocId?: boolean
    isPublished?: boolean
    isFeatured?: boolean
    isActive?: boolean
    isArchived?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    skills?: boolean
    logo?: boolean
    region?: boolean
    questions?: boolean
    pocSocials?: boolean
    status?: boolean
    airtableId?: boolean
    avgResponseTime?: boolean
    isNative?: boolean
    isPrivate?: boolean
    references?: boolean
    ai?: boolean
    approverRecordId?: boolean
    emailSender?: boolean
    replyToEmail?: boolean
    emailSalutation?: boolean
    communityLink?: boolean
  }

  export type GrantsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "title" | "slug" | "description" | "shortDescription" | "token" | "minReward" | "maxReward" | "totalPaid" | "totalApproved" | "historicalApplications" | "historicalPaid" | "link" | "sponsorId" | "pocId" | "isPublished" | "isFeatured" | "isActive" | "isArchived" | "createdAt" | "updatedAt" | "skills" | "logo" | "region" | "questions" | "pocSocials" | "status" | "airtableId" | "avgResponseTime" | "isNative" | "isPrivate" | "references" | "ai" | "approverRecordId" | "emailSender" | "replyToEmail" | "emailSalutation" | "communityLink", ExtArgs["result"]["grants"]>
  export type GrantsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sponsor?: boolean | SponsorsDefaultArgs<ExtArgs>
    poc?: boolean | UserDefaultArgs<ExtArgs>
    GrantApplication?: boolean | Grants$GrantApplicationArgs<ExtArgs>
    GrantTranche?: boolean | Grants$GrantTrancheArgs<ExtArgs>
    _count?: boolean | GrantsCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $GrantsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Grants"
    objects: {
      sponsor: Prisma.$SponsorsPayload<ExtArgs>
      poc: Prisma.$UserPayload<ExtArgs>
      GrantApplication: Prisma.$GrantApplicationPayload<ExtArgs>[]
      GrantTranche: Prisma.$GrantTranchePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      title: string
      slug: string
      description: string | null
      shortDescription: string | null
      token: string | null
      minReward: number | null
      maxReward: number | null
      totalPaid: number
      totalApproved: number
      historicalApplications: number
      historicalPaid: number
      link: string | null
      sponsorId: string
      pocId: string
      isPublished: boolean
      isFeatured: boolean
      isActive: boolean
      isArchived: boolean
      createdAt: Date
      updatedAt: Date
      skills: Prisma.JsonValue | null
      logo: string | null
      region: string
      questions: Prisma.JsonValue | null
      pocSocials: string | null
      status: $Enums.GrantStatus
      airtableId: string | null
      avgResponseTime: string | null
      isNative: boolean
      isPrivate: boolean
      references: Prisma.JsonValue | null
      ai: Prisma.JsonValue | null
      approverRecordId: string | null
      emailSender: string | null
      replyToEmail: string | null
      emailSalutation: string | null
      communityLink: string | null
    }, ExtArgs["result"]["grants"]>
    composites: {}
  }

  type GrantsGetPayload<S extends boolean | null | undefined | GrantsDefaultArgs> = $Result.GetResult<Prisma.$GrantsPayload, S>

  type GrantsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<GrantsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: GrantsCountAggregateInputType | true
    }

  export interface GrantsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Grants'], meta: { name: 'Grants' } }
    /**
     * Find zero or one Grants that matches the filter.
     * @param {GrantsFindUniqueArgs} args - Arguments to find a Grants
     * @example
     * // Get one Grants
     * const grants = await prisma.grants.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends GrantsFindUniqueArgs>(args: SelectSubset<T, GrantsFindUniqueArgs<ExtArgs>>): Prisma__GrantsClient<$Result.GetResult<Prisma.$GrantsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Grants that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {GrantsFindUniqueOrThrowArgs} args - Arguments to find a Grants
     * @example
     * // Get one Grants
     * const grants = await prisma.grants.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends GrantsFindUniqueOrThrowArgs>(args: SelectSubset<T, GrantsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__GrantsClient<$Result.GetResult<Prisma.$GrantsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Grants that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GrantsFindFirstArgs} args - Arguments to find a Grants
     * @example
     * // Get one Grants
     * const grants = await prisma.grants.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends GrantsFindFirstArgs>(args?: SelectSubset<T, GrantsFindFirstArgs<ExtArgs>>): Prisma__GrantsClient<$Result.GetResult<Prisma.$GrantsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Grants that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GrantsFindFirstOrThrowArgs} args - Arguments to find a Grants
     * @example
     * // Get one Grants
     * const grants = await prisma.grants.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends GrantsFindFirstOrThrowArgs>(args?: SelectSubset<T, GrantsFindFirstOrThrowArgs<ExtArgs>>): Prisma__GrantsClient<$Result.GetResult<Prisma.$GrantsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Grants that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GrantsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Grants
     * const grants = await prisma.grants.findMany()
     * 
     * // Get first 10 Grants
     * const grants = await prisma.grants.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const grantsWithIdOnly = await prisma.grants.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends GrantsFindManyArgs>(args?: SelectSubset<T, GrantsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GrantsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Grants.
     * @param {GrantsCreateArgs} args - Arguments to create a Grants.
     * @example
     * // Create one Grants
     * const Grants = await prisma.grants.create({
     *   data: {
     *     // ... data to create a Grants
     *   }
     * })
     * 
     */
    create<T extends GrantsCreateArgs>(args: SelectSubset<T, GrantsCreateArgs<ExtArgs>>): Prisma__GrantsClient<$Result.GetResult<Prisma.$GrantsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Grants.
     * @param {GrantsCreateManyArgs} args - Arguments to create many Grants.
     * @example
     * // Create many Grants
     * const grants = await prisma.grants.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends GrantsCreateManyArgs>(args?: SelectSubset<T, GrantsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Grants.
     * @param {GrantsDeleteArgs} args - Arguments to delete one Grants.
     * @example
     * // Delete one Grants
     * const Grants = await prisma.grants.delete({
     *   where: {
     *     // ... filter to delete one Grants
     *   }
     * })
     * 
     */
    delete<T extends GrantsDeleteArgs>(args: SelectSubset<T, GrantsDeleteArgs<ExtArgs>>): Prisma__GrantsClient<$Result.GetResult<Prisma.$GrantsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Grants.
     * @param {GrantsUpdateArgs} args - Arguments to update one Grants.
     * @example
     * // Update one Grants
     * const grants = await prisma.grants.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends GrantsUpdateArgs>(args: SelectSubset<T, GrantsUpdateArgs<ExtArgs>>): Prisma__GrantsClient<$Result.GetResult<Prisma.$GrantsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Grants.
     * @param {GrantsDeleteManyArgs} args - Arguments to filter Grants to delete.
     * @example
     * // Delete a few Grants
     * const { count } = await prisma.grants.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends GrantsDeleteManyArgs>(args?: SelectSubset<T, GrantsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Grants.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GrantsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Grants
     * const grants = await prisma.grants.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends GrantsUpdateManyArgs>(args: SelectSubset<T, GrantsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Grants.
     * @param {GrantsUpsertArgs} args - Arguments to update or create a Grants.
     * @example
     * // Update or create a Grants
     * const grants = await prisma.grants.upsert({
     *   create: {
     *     // ... data to create a Grants
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Grants we want to update
     *   }
     * })
     */
    upsert<T extends GrantsUpsertArgs>(args: SelectSubset<T, GrantsUpsertArgs<ExtArgs>>): Prisma__GrantsClient<$Result.GetResult<Prisma.$GrantsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Grants.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GrantsCountArgs} args - Arguments to filter Grants to count.
     * @example
     * // Count the number of Grants
     * const count = await prisma.grants.count({
     *   where: {
     *     // ... the filter for the Grants we want to count
     *   }
     * })
    **/
    count<T extends GrantsCountArgs>(
      args?: Subset<T, GrantsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], GrantsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Grants.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GrantsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends GrantsAggregateArgs>(args: Subset<T, GrantsAggregateArgs>): Prisma.PrismaPromise<GetGrantsAggregateType<T>>

    /**
     * Group by Grants.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GrantsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends GrantsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: GrantsGroupByArgs['orderBy'] }
        : { orderBy?: GrantsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, GrantsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGrantsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Grants model
   */
  readonly fields: GrantsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Grants.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__GrantsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    sponsor<T extends SponsorsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SponsorsDefaultArgs<ExtArgs>>): Prisma__SponsorsClient<$Result.GetResult<Prisma.$SponsorsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    poc<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    GrantApplication<T extends Grants$GrantApplicationArgs<ExtArgs> = {}>(args?: Subset<T, Grants$GrantApplicationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GrantApplicationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    GrantTranche<T extends Grants$GrantTrancheArgs<ExtArgs> = {}>(args?: Subset<T, Grants$GrantTrancheArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GrantTranchePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Grants model
   */
  interface GrantsFieldRefs {
    readonly id: FieldRef<"Grants", 'String'>
    readonly title: FieldRef<"Grants", 'String'>
    readonly slug: FieldRef<"Grants", 'String'>
    readonly description: FieldRef<"Grants", 'String'>
    readonly shortDescription: FieldRef<"Grants", 'String'>
    readonly token: FieldRef<"Grants", 'String'>
    readonly minReward: FieldRef<"Grants", 'Float'>
    readonly maxReward: FieldRef<"Grants", 'Float'>
    readonly totalPaid: FieldRef<"Grants", 'Float'>
    readonly totalApproved: FieldRef<"Grants", 'Float'>
    readonly historicalApplications: FieldRef<"Grants", 'Int'>
    readonly historicalPaid: FieldRef<"Grants", 'Float'>
    readonly link: FieldRef<"Grants", 'String'>
    readonly sponsorId: FieldRef<"Grants", 'String'>
    readonly pocId: FieldRef<"Grants", 'String'>
    readonly isPublished: FieldRef<"Grants", 'Boolean'>
    readonly isFeatured: FieldRef<"Grants", 'Boolean'>
    readonly isActive: FieldRef<"Grants", 'Boolean'>
    readonly isArchived: FieldRef<"Grants", 'Boolean'>
    readonly createdAt: FieldRef<"Grants", 'DateTime'>
    readonly updatedAt: FieldRef<"Grants", 'DateTime'>
    readonly skills: FieldRef<"Grants", 'Json'>
    readonly logo: FieldRef<"Grants", 'String'>
    readonly region: FieldRef<"Grants", 'String'>
    readonly questions: FieldRef<"Grants", 'Json'>
    readonly pocSocials: FieldRef<"Grants", 'String'>
    readonly status: FieldRef<"Grants", 'GrantStatus'>
    readonly airtableId: FieldRef<"Grants", 'String'>
    readonly avgResponseTime: FieldRef<"Grants", 'String'>
    readonly isNative: FieldRef<"Grants", 'Boolean'>
    readonly isPrivate: FieldRef<"Grants", 'Boolean'>
    readonly references: FieldRef<"Grants", 'Json'>
    readonly ai: FieldRef<"Grants", 'Json'>
    readonly approverRecordId: FieldRef<"Grants", 'String'>
    readonly emailSender: FieldRef<"Grants", 'String'>
    readonly replyToEmail: FieldRef<"Grants", 'String'>
    readonly emailSalutation: FieldRef<"Grants", 'String'>
    readonly communityLink: FieldRef<"Grants", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Grants findUnique
   */
  export type GrantsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Grants
     */
    select?: GrantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Grants
     */
    omit?: GrantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GrantsInclude<ExtArgs> | null
    /**
     * Filter, which Grants to fetch.
     */
    where: GrantsWhereUniqueInput
  }

  /**
   * Grants findUniqueOrThrow
   */
  export type GrantsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Grants
     */
    select?: GrantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Grants
     */
    omit?: GrantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GrantsInclude<ExtArgs> | null
    /**
     * Filter, which Grants to fetch.
     */
    where: GrantsWhereUniqueInput
  }

  /**
   * Grants findFirst
   */
  export type GrantsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Grants
     */
    select?: GrantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Grants
     */
    omit?: GrantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GrantsInclude<ExtArgs> | null
    /**
     * Filter, which Grants to fetch.
     */
    where?: GrantsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Grants to fetch.
     */
    orderBy?: GrantsOrderByWithRelationInput | GrantsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Grants.
     */
    cursor?: GrantsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Grants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Grants.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Grants.
     */
    distinct?: GrantsScalarFieldEnum | GrantsScalarFieldEnum[]
  }

  /**
   * Grants findFirstOrThrow
   */
  export type GrantsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Grants
     */
    select?: GrantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Grants
     */
    omit?: GrantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GrantsInclude<ExtArgs> | null
    /**
     * Filter, which Grants to fetch.
     */
    where?: GrantsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Grants to fetch.
     */
    orderBy?: GrantsOrderByWithRelationInput | GrantsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Grants.
     */
    cursor?: GrantsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Grants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Grants.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Grants.
     */
    distinct?: GrantsScalarFieldEnum | GrantsScalarFieldEnum[]
  }

  /**
   * Grants findMany
   */
  export type GrantsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Grants
     */
    select?: GrantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Grants
     */
    omit?: GrantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GrantsInclude<ExtArgs> | null
    /**
     * Filter, which Grants to fetch.
     */
    where?: GrantsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Grants to fetch.
     */
    orderBy?: GrantsOrderByWithRelationInput | GrantsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Grants.
     */
    cursor?: GrantsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Grants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Grants.
     */
    skip?: number
    distinct?: GrantsScalarFieldEnum | GrantsScalarFieldEnum[]
  }

  /**
   * Grants create
   */
  export type GrantsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Grants
     */
    select?: GrantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Grants
     */
    omit?: GrantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GrantsInclude<ExtArgs> | null
    /**
     * The data needed to create a Grants.
     */
    data: XOR<GrantsCreateInput, GrantsUncheckedCreateInput>
  }

  /**
   * Grants createMany
   */
  export type GrantsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Grants.
     */
    data: GrantsCreateManyInput | GrantsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Grants update
   */
  export type GrantsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Grants
     */
    select?: GrantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Grants
     */
    omit?: GrantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GrantsInclude<ExtArgs> | null
    /**
     * The data needed to update a Grants.
     */
    data: XOR<GrantsUpdateInput, GrantsUncheckedUpdateInput>
    /**
     * Choose, which Grants to update.
     */
    where: GrantsWhereUniqueInput
  }

  /**
   * Grants updateMany
   */
  export type GrantsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Grants.
     */
    data: XOR<GrantsUpdateManyMutationInput, GrantsUncheckedUpdateManyInput>
    /**
     * Filter which Grants to update
     */
    where?: GrantsWhereInput
    /**
     * Limit how many Grants to update.
     */
    limit?: number
  }

  /**
   * Grants upsert
   */
  export type GrantsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Grants
     */
    select?: GrantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Grants
     */
    omit?: GrantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GrantsInclude<ExtArgs> | null
    /**
     * The filter to search for the Grants to update in case it exists.
     */
    where: GrantsWhereUniqueInput
    /**
     * In case the Grants found by the `where` argument doesn't exist, create a new Grants with this data.
     */
    create: XOR<GrantsCreateInput, GrantsUncheckedCreateInput>
    /**
     * In case the Grants was found with the provided `where` argument, update it with this data.
     */
    update: XOR<GrantsUpdateInput, GrantsUncheckedUpdateInput>
  }

  /**
   * Grants delete
   */
  export type GrantsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Grants
     */
    select?: GrantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Grants
     */
    omit?: GrantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GrantsInclude<ExtArgs> | null
    /**
     * Filter which Grants to delete.
     */
    where: GrantsWhereUniqueInput
  }

  /**
   * Grants deleteMany
   */
  export type GrantsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Grants to delete
     */
    where?: GrantsWhereInput
    /**
     * Limit how many Grants to delete.
     */
    limit?: number
  }

  /**
   * Grants.GrantApplication
   */
  export type Grants$GrantApplicationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GrantApplication
     */
    select?: GrantApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GrantApplication
     */
    omit?: GrantApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GrantApplicationInclude<ExtArgs> | null
    where?: GrantApplicationWhereInput
    orderBy?: GrantApplicationOrderByWithRelationInput | GrantApplicationOrderByWithRelationInput[]
    cursor?: GrantApplicationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: GrantApplicationScalarFieldEnum | GrantApplicationScalarFieldEnum[]
  }

  /**
   * Grants.GrantTranche
   */
  export type Grants$GrantTrancheArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GrantTranche
     */
    select?: GrantTrancheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GrantTranche
     */
    omit?: GrantTrancheOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GrantTrancheInclude<ExtArgs> | null
    where?: GrantTrancheWhereInput
    orderBy?: GrantTrancheOrderByWithRelationInput | GrantTrancheOrderByWithRelationInput[]
    cursor?: GrantTrancheWhereUniqueInput
    take?: number
    skip?: number
    distinct?: GrantTrancheScalarFieldEnum | GrantTrancheScalarFieldEnum[]
  }

  /**
   * Grants without action
   */
  export type GrantsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Grants
     */
    select?: GrantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Grants
     */
    omit?: GrantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GrantsInclude<ExtArgs> | null
  }


  /**
   * Model GrantApplication
   */

  export type AggregateGrantApplication = {
    _count: GrantApplicationCountAggregateOutputType | null
    _avg: GrantApplicationAvgAggregateOutputType | null
    _sum: GrantApplicationSumAggregateOutputType | null
    _min: GrantApplicationMinAggregateOutputType | null
    _max: GrantApplicationMaxAggregateOutputType | null
  }

  export type GrantApplicationAvgAggregateOutputType = {
    ask: number | null
    approvedAmount: number | null
    approvedAmountInUSD: number | null
    totalPaid: number | null
    totalTranches: number | null
    likeCount: number | null
  }

  export type GrantApplicationSumAggregateOutputType = {
    ask: number | null
    approvedAmount: number | null
    approvedAmountInUSD: number | null
    totalPaid: number | null
    totalTranches: number | null
    likeCount: number | null
  }

  export type GrantApplicationMinAggregateOutputType = {
    id: string | null
    userId: string | null
    grantId: string | null
    applicationStatus: $Enums.GrantApplicationStatus | null
    projectTitle: string | null
    projectOneLiner: string | null
    projectDetails: string | null
    projectTimeline: string | null
    proofOfWork: string | null
    walletAddress: string | null
    twitter: string | null
    github: string | null
    milestones: string | null
    kpi: string | null
    createdAt: Date | null
    updatedAt: Date | null
    label: $Enums.SubmissionLabels | null
    ask: number | null
    approvedAmount: number | null
    approvedAmountInUSD: number | null
    decidedAt: Date | null
    totalPaid: number | null
    isShipped: boolean | null
    totalTranches: number | null
    likeCount: number | null
    decidedBy: string | null
    notes: string | null
  }

  export type GrantApplicationMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    grantId: string | null
    applicationStatus: $Enums.GrantApplicationStatus | null
    projectTitle: string | null
    projectOneLiner: string | null
    projectDetails: string | null
    projectTimeline: string | null
    proofOfWork: string | null
    walletAddress: string | null
    twitter: string | null
    github: string | null
    milestones: string | null
    kpi: string | null
    createdAt: Date | null
    updatedAt: Date | null
    label: $Enums.SubmissionLabels | null
    ask: number | null
    approvedAmount: number | null
    approvedAmountInUSD: number | null
    decidedAt: Date | null
    totalPaid: number | null
    isShipped: boolean | null
    totalTranches: number | null
    likeCount: number | null
    decidedBy: string | null
    notes: string | null
  }

  export type GrantApplicationCountAggregateOutputType = {
    id: number
    userId: number
    grantId: number
    applicationStatus: number
    projectTitle: number
    projectOneLiner: number
    projectDetails: number
    projectTimeline: number
    proofOfWork: number
    walletAddress: number
    twitter: number
    github: number
    milestones: number
    kpi: number
    answers: number
    createdAt: number
    updatedAt: number
    label: number
    ask: number
    approvedAmount: number
    approvedAmountInUSD: number
    decidedAt: number
    totalPaid: number
    isShipped: number
    paymentDetails: number
    totalTranches: number
    like: number
    likeCount: number
    decidedBy: number
    notes: number
    ai: number
    _all: number
  }


  export type GrantApplicationAvgAggregateInputType = {
    ask?: true
    approvedAmount?: true
    approvedAmountInUSD?: true
    totalPaid?: true
    totalTranches?: true
    likeCount?: true
  }

  export type GrantApplicationSumAggregateInputType = {
    ask?: true
    approvedAmount?: true
    approvedAmountInUSD?: true
    totalPaid?: true
    totalTranches?: true
    likeCount?: true
  }

  export type GrantApplicationMinAggregateInputType = {
    id?: true
    userId?: true
    grantId?: true
    applicationStatus?: true
    projectTitle?: true
    projectOneLiner?: true
    projectDetails?: true
    projectTimeline?: true
    proofOfWork?: true
    walletAddress?: true
    twitter?: true
    github?: true
    milestones?: true
    kpi?: true
    createdAt?: true
    updatedAt?: true
    label?: true
    ask?: true
    approvedAmount?: true
    approvedAmountInUSD?: true
    decidedAt?: true
    totalPaid?: true
    isShipped?: true
    totalTranches?: true
    likeCount?: true
    decidedBy?: true
    notes?: true
  }

  export type GrantApplicationMaxAggregateInputType = {
    id?: true
    userId?: true
    grantId?: true
    applicationStatus?: true
    projectTitle?: true
    projectOneLiner?: true
    projectDetails?: true
    projectTimeline?: true
    proofOfWork?: true
    walletAddress?: true
    twitter?: true
    github?: true
    milestones?: true
    kpi?: true
    createdAt?: true
    updatedAt?: true
    label?: true
    ask?: true
    approvedAmount?: true
    approvedAmountInUSD?: true
    decidedAt?: true
    totalPaid?: true
    isShipped?: true
    totalTranches?: true
    likeCount?: true
    decidedBy?: true
    notes?: true
  }

  export type GrantApplicationCountAggregateInputType = {
    id?: true
    userId?: true
    grantId?: true
    applicationStatus?: true
    projectTitle?: true
    projectOneLiner?: true
    projectDetails?: true
    projectTimeline?: true
    proofOfWork?: true
    walletAddress?: true
    twitter?: true
    github?: true
    milestones?: true
    kpi?: true
    answers?: true
    createdAt?: true
    updatedAt?: true
    label?: true
    ask?: true
    approvedAmount?: true
    approvedAmountInUSD?: true
    decidedAt?: true
    totalPaid?: true
    isShipped?: true
    paymentDetails?: true
    totalTranches?: true
    like?: true
    likeCount?: true
    decidedBy?: true
    notes?: true
    ai?: true
    _all?: true
  }

  export type GrantApplicationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which GrantApplication to aggregate.
     */
    where?: GrantApplicationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of GrantApplications to fetch.
     */
    orderBy?: GrantApplicationOrderByWithRelationInput | GrantApplicationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: GrantApplicationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` GrantApplications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` GrantApplications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned GrantApplications
    **/
    _count?: true | GrantApplicationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: GrantApplicationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: GrantApplicationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: GrantApplicationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: GrantApplicationMaxAggregateInputType
  }

  export type GetGrantApplicationAggregateType<T extends GrantApplicationAggregateArgs> = {
        [P in keyof T & keyof AggregateGrantApplication]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGrantApplication[P]>
      : GetScalarType<T[P], AggregateGrantApplication[P]>
  }




  export type GrantApplicationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: GrantApplicationWhereInput
    orderBy?: GrantApplicationOrderByWithAggregationInput | GrantApplicationOrderByWithAggregationInput[]
    by: GrantApplicationScalarFieldEnum[] | GrantApplicationScalarFieldEnum
    having?: GrantApplicationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: GrantApplicationCountAggregateInputType | true
    _avg?: GrantApplicationAvgAggregateInputType
    _sum?: GrantApplicationSumAggregateInputType
    _min?: GrantApplicationMinAggregateInputType
    _max?: GrantApplicationMaxAggregateInputType
  }

  export type GrantApplicationGroupByOutputType = {
    id: string
    userId: string
    grantId: string
    applicationStatus: $Enums.GrantApplicationStatus
    projectTitle: string
    projectOneLiner: string
    projectDetails: string
    projectTimeline: string
    proofOfWork: string
    walletAddress: string
    twitter: string | null
    github: string | null
    milestones: string | null
    kpi: string | null
    answers: JsonValue | null
    createdAt: Date
    updatedAt: Date
    label: $Enums.SubmissionLabels
    ask: number
    approvedAmount: number
    approvedAmountInUSD: number
    decidedAt: Date | null
    totalPaid: number
    isShipped: boolean
    paymentDetails: JsonValue | null
    totalTranches: number
    like: JsonValue | null
    likeCount: number
    decidedBy: string | null
    notes: string | null
    ai: JsonValue | null
    _count: GrantApplicationCountAggregateOutputType | null
    _avg: GrantApplicationAvgAggregateOutputType | null
    _sum: GrantApplicationSumAggregateOutputType | null
    _min: GrantApplicationMinAggregateOutputType | null
    _max: GrantApplicationMaxAggregateOutputType | null
  }

  type GetGrantApplicationGroupByPayload<T extends GrantApplicationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<GrantApplicationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof GrantApplicationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], GrantApplicationGroupByOutputType[P]>
            : GetScalarType<T[P], GrantApplicationGroupByOutputType[P]>
        }
      >
    >


  export type GrantApplicationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    grantId?: boolean
    applicationStatus?: boolean
    projectTitle?: boolean
    projectOneLiner?: boolean
    projectDetails?: boolean
    projectTimeline?: boolean
    proofOfWork?: boolean
    walletAddress?: boolean
    twitter?: boolean
    github?: boolean
    milestones?: boolean
    kpi?: boolean
    answers?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    label?: boolean
    ask?: boolean
    approvedAmount?: boolean
    approvedAmountInUSD?: boolean
    decidedAt?: boolean
    totalPaid?: boolean
    isShipped?: boolean
    paymentDetails?: boolean
    totalTranches?: boolean
    like?: boolean
    likeCount?: boolean
    decidedBy?: boolean
    notes?: boolean
    ai?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    grant?: boolean | GrantsDefaultArgs<ExtArgs>
    Comments?: boolean | GrantApplication$CommentsArgs<ExtArgs>
    GrantTranche?: boolean | GrantApplication$GrantTrancheArgs<ExtArgs>
    CreditLedger?: boolean | GrantApplication$CreditLedgerArgs<ExtArgs>
    _count?: boolean | GrantApplicationCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["grantApplication"]>



  export type GrantApplicationSelectScalar = {
    id?: boolean
    userId?: boolean
    grantId?: boolean
    applicationStatus?: boolean
    projectTitle?: boolean
    projectOneLiner?: boolean
    projectDetails?: boolean
    projectTimeline?: boolean
    proofOfWork?: boolean
    walletAddress?: boolean
    twitter?: boolean
    github?: boolean
    milestones?: boolean
    kpi?: boolean
    answers?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    label?: boolean
    ask?: boolean
    approvedAmount?: boolean
    approvedAmountInUSD?: boolean
    decidedAt?: boolean
    totalPaid?: boolean
    isShipped?: boolean
    paymentDetails?: boolean
    totalTranches?: boolean
    like?: boolean
    likeCount?: boolean
    decidedBy?: boolean
    notes?: boolean
    ai?: boolean
  }

  export type GrantApplicationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "grantId" | "applicationStatus" | "projectTitle" | "projectOneLiner" | "projectDetails" | "projectTimeline" | "proofOfWork" | "walletAddress" | "twitter" | "github" | "milestones" | "kpi" | "answers" | "createdAt" | "updatedAt" | "label" | "ask" | "approvedAmount" | "approvedAmountInUSD" | "decidedAt" | "totalPaid" | "isShipped" | "paymentDetails" | "totalTranches" | "like" | "likeCount" | "decidedBy" | "notes" | "ai", ExtArgs["result"]["grantApplication"]>
  export type GrantApplicationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    grant?: boolean | GrantsDefaultArgs<ExtArgs>
    Comments?: boolean | GrantApplication$CommentsArgs<ExtArgs>
    GrantTranche?: boolean | GrantApplication$GrantTrancheArgs<ExtArgs>
    CreditLedger?: boolean | GrantApplication$CreditLedgerArgs<ExtArgs>
    _count?: boolean | GrantApplicationCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $GrantApplicationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "GrantApplication"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      grant: Prisma.$GrantsPayload<ExtArgs>
      Comments: Prisma.$CommentPayload<ExtArgs>[]
      GrantTranche: Prisma.$GrantTranchePayload<ExtArgs>[]
      CreditLedger: Prisma.$CreditLedgerPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      grantId: string
      applicationStatus: $Enums.GrantApplicationStatus
      projectTitle: string
      projectOneLiner: string
      projectDetails: string
      projectTimeline: string
      proofOfWork: string
      walletAddress: string
      twitter: string | null
      github: string | null
      milestones: string | null
      kpi: string | null
      answers: Prisma.JsonValue | null
      createdAt: Date
      updatedAt: Date
      label: $Enums.SubmissionLabels
      ask: number
      approvedAmount: number
      approvedAmountInUSD: number
      decidedAt: Date | null
      totalPaid: number
      isShipped: boolean
      paymentDetails: Prisma.JsonValue | null
      totalTranches: number
      like: Prisma.JsonValue | null
      likeCount: number
      decidedBy: string | null
      notes: string | null
      ai: Prisma.JsonValue | null
    }, ExtArgs["result"]["grantApplication"]>
    composites: {}
  }

  type GrantApplicationGetPayload<S extends boolean | null | undefined | GrantApplicationDefaultArgs> = $Result.GetResult<Prisma.$GrantApplicationPayload, S>

  type GrantApplicationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<GrantApplicationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: GrantApplicationCountAggregateInputType | true
    }

  export interface GrantApplicationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['GrantApplication'], meta: { name: 'GrantApplication' } }
    /**
     * Find zero or one GrantApplication that matches the filter.
     * @param {GrantApplicationFindUniqueArgs} args - Arguments to find a GrantApplication
     * @example
     * // Get one GrantApplication
     * const grantApplication = await prisma.grantApplication.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends GrantApplicationFindUniqueArgs>(args: SelectSubset<T, GrantApplicationFindUniqueArgs<ExtArgs>>): Prisma__GrantApplicationClient<$Result.GetResult<Prisma.$GrantApplicationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one GrantApplication that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {GrantApplicationFindUniqueOrThrowArgs} args - Arguments to find a GrantApplication
     * @example
     * // Get one GrantApplication
     * const grantApplication = await prisma.grantApplication.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends GrantApplicationFindUniqueOrThrowArgs>(args: SelectSubset<T, GrantApplicationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__GrantApplicationClient<$Result.GetResult<Prisma.$GrantApplicationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first GrantApplication that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GrantApplicationFindFirstArgs} args - Arguments to find a GrantApplication
     * @example
     * // Get one GrantApplication
     * const grantApplication = await prisma.grantApplication.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends GrantApplicationFindFirstArgs>(args?: SelectSubset<T, GrantApplicationFindFirstArgs<ExtArgs>>): Prisma__GrantApplicationClient<$Result.GetResult<Prisma.$GrantApplicationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first GrantApplication that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GrantApplicationFindFirstOrThrowArgs} args - Arguments to find a GrantApplication
     * @example
     * // Get one GrantApplication
     * const grantApplication = await prisma.grantApplication.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends GrantApplicationFindFirstOrThrowArgs>(args?: SelectSubset<T, GrantApplicationFindFirstOrThrowArgs<ExtArgs>>): Prisma__GrantApplicationClient<$Result.GetResult<Prisma.$GrantApplicationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more GrantApplications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GrantApplicationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all GrantApplications
     * const grantApplications = await prisma.grantApplication.findMany()
     * 
     * // Get first 10 GrantApplications
     * const grantApplications = await prisma.grantApplication.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const grantApplicationWithIdOnly = await prisma.grantApplication.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends GrantApplicationFindManyArgs>(args?: SelectSubset<T, GrantApplicationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GrantApplicationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a GrantApplication.
     * @param {GrantApplicationCreateArgs} args - Arguments to create a GrantApplication.
     * @example
     * // Create one GrantApplication
     * const GrantApplication = await prisma.grantApplication.create({
     *   data: {
     *     // ... data to create a GrantApplication
     *   }
     * })
     * 
     */
    create<T extends GrantApplicationCreateArgs>(args: SelectSubset<T, GrantApplicationCreateArgs<ExtArgs>>): Prisma__GrantApplicationClient<$Result.GetResult<Prisma.$GrantApplicationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many GrantApplications.
     * @param {GrantApplicationCreateManyArgs} args - Arguments to create many GrantApplications.
     * @example
     * // Create many GrantApplications
     * const grantApplication = await prisma.grantApplication.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends GrantApplicationCreateManyArgs>(args?: SelectSubset<T, GrantApplicationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a GrantApplication.
     * @param {GrantApplicationDeleteArgs} args - Arguments to delete one GrantApplication.
     * @example
     * // Delete one GrantApplication
     * const GrantApplication = await prisma.grantApplication.delete({
     *   where: {
     *     // ... filter to delete one GrantApplication
     *   }
     * })
     * 
     */
    delete<T extends GrantApplicationDeleteArgs>(args: SelectSubset<T, GrantApplicationDeleteArgs<ExtArgs>>): Prisma__GrantApplicationClient<$Result.GetResult<Prisma.$GrantApplicationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one GrantApplication.
     * @param {GrantApplicationUpdateArgs} args - Arguments to update one GrantApplication.
     * @example
     * // Update one GrantApplication
     * const grantApplication = await prisma.grantApplication.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends GrantApplicationUpdateArgs>(args: SelectSubset<T, GrantApplicationUpdateArgs<ExtArgs>>): Prisma__GrantApplicationClient<$Result.GetResult<Prisma.$GrantApplicationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more GrantApplications.
     * @param {GrantApplicationDeleteManyArgs} args - Arguments to filter GrantApplications to delete.
     * @example
     * // Delete a few GrantApplications
     * const { count } = await prisma.grantApplication.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends GrantApplicationDeleteManyArgs>(args?: SelectSubset<T, GrantApplicationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more GrantApplications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GrantApplicationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many GrantApplications
     * const grantApplication = await prisma.grantApplication.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends GrantApplicationUpdateManyArgs>(args: SelectSubset<T, GrantApplicationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one GrantApplication.
     * @param {GrantApplicationUpsertArgs} args - Arguments to update or create a GrantApplication.
     * @example
     * // Update or create a GrantApplication
     * const grantApplication = await prisma.grantApplication.upsert({
     *   create: {
     *     // ... data to create a GrantApplication
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the GrantApplication we want to update
     *   }
     * })
     */
    upsert<T extends GrantApplicationUpsertArgs>(args: SelectSubset<T, GrantApplicationUpsertArgs<ExtArgs>>): Prisma__GrantApplicationClient<$Result.GetResult<Prisma.$GrantApplicationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of GrantApplications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GrantApplicationCountArgs} args - Arguments to filter GrantApplications to count.
     * @example
     * // Count the number of GrantApplications
     * const count = await prisma.grantApplication.count({
     *   where: {
     *     // ... the filter for the GrantApplications we want to count
     *   }
     * })
    **/
    count<T extends GrantApplicationCountArgs>(
      args?: Subset<T, GrantApplicationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], GrantApplicationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a GrantApplication.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GrantApplicationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends GrantApplicationAggregateArgs>(args: Subset<T, GrantApplicationAggregateArgs>): Prisma.PrismaPromise<GetGrantApplicationAggregateType<T>>

    /**
     * Group by GrantApplication.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GrantApplicationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends GrantApplicationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: GrantApplicationGroupByArgs['orderBy'] }
        : { orderBy?: GrantApplicationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, GrantApplicationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGrantApplicationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the GrantApplication model
   */
  readonly fields: GrantApplicationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for GrantApplication.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__GrantApplicationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    grant<T extends GrantsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, GrantsDefaultArgs<ExtArgs>>): Prisma__GrantsClient<$Result.GetResult<Prisma.$GrantsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Comments<T extends GrantApplication$CommentsArgs<ExtArgs> = {}>(args?: Subset<T, GrantApplication$CommentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    GrantTranche<T extends GrantApplication$GrantTrancheArgs<ExtArgs> = {}>(args?: Subset<T, GrantApplication$GrantTrancheArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GrantTranchePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    CreditLedger<T extends GrantApplication$CreditLedgerArgs<ExtArgs> = {}>(args?: Subset<T, GrantApplication$CreditLedgerArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CreditLedgerPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the GrantApplication model
   */
  interface GrantApplicationFieldRefs {
    readonly id: FieldRef<"GrantApplication", 'String'>
    readonly userId: FieldRef<"GrantApplication", 'String'>
    readonly grantId: FieldRef<"GrantApplication", 'String'>
    readonly applicationStatus: FieldRef<"GrantApplication", 'GrantApplicationStatus'>
    readonly projectTitle: FieldRef<"GrantApplication", 'String'>
    readonly projectOneLiner: FieldRef<"GrantApplication", 'String'>
    readonly projectDetails: FieldRef<"GrantApplication", 'String'>
    readonly projectTimeline: FieldRef<"GrantApplication", 'String'>
    readonly proofOfWork: FieldRef<"GrantApplication", 'String'>
    readonly walletAddress: FieldRef<"GrantApplication", 'String'>
    readonly twitter: FieldRef<"GrantApplication", 'String'>
    readonly github: FieldRef<"GrantApplication", 'String'>
    readonly milestones: FieldRef<"GrantApplication", 'String'>
    readonly kpi: FieldRef<"GrantApplication", 'String'>
    readonly answers: FieldRef<"GrantApplication", 'Json'>
    readonly createdAt: FieldRef<"GrantApplication", 'DateTime'>
    readonly updatedAt: FieldRef<"GrantApplication", 'DateTime'>
    readonly label: FieldRef<"GrantApplication", 'SubmissionLabels'>
    readonly ask: FieldRef<"GrantApplication", 'Float'>
    readonly approvedAmount: FieldRef<"GrantApplication", 'Float'>
    readonly approvedAmountInUSD: FieldRef<"GrantApplication", 'Float'>
    readonly decidedAt: FieldRef<"GrantApplication", 'DateTime'>
    readonly totalPaid: FieldRef<"GrantApplication", 'Float'>
    readonly isShipped: FieldRef<"GrantApplication", 'Boolean'>
    readonly paymentDetails: FieldRef<"GrantApplication", 'Json'>
    readonly totalTranches: FieldRef<"GrantApplication", 'Int'>
    readonly like: FieldRef<"GrantApplication", 'Json'>
    readonly likeCount: FieldRef<"GrantApplication", 'Int'>
    readonly decidedBy: FieldRef<"GrantApplication", 'String'>
    readonly notes: FieldRef<"GrantApplication", 'String'>
    readonly ai: FieldRef<"GrantApplication", 'Json'>
  }
    

  // Custom InputTypes
  /**
   * GrantApplication findUnique
   */
  export type GrantApplicationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GrantApplication
     */
    select?: GrantApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GrantApplication
     */
    omit?: GrantApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GrantApplicationInclude<ExtArgs> | null
    /**
     * Filter, which GrantApplication to fetch.
     */
    where: GrantApplicationWhereUniqueInput
  }

  /**
   * GrantApplication findUniqueOrThrow
   */
  export type GrantApplicationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GrantApplication
     */
    select?: GrantApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GrantApplication
     */
    omit?: GrantApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GrantApplicationInclude<ExtArgs> | null
    /**
     * Filter, which GrantApplication to fetch.
     */
    where: GrantApplicationWhereUniqueInput
  }

  /**
   * GrantApplication findFirst
   */
  export type GrantApplicationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GrantApplication
     */
    select?: GrantApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GrantApplication
     */
    omit?: GrantApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GrantApplicationInclude<ExtArgs> | null
    /**
     * Filter, which GrantApplication to fetch.
     */
    where?: GrantApplicationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of GrantApplications to fetch.
     */
    orderBy?: GrantApplicationOrderByWithRelationInput | GrantApplicationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for GrantApplications.
     */
    cursor?: GrantApplicationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` GrantApplications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` GrantApplications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of GrantApplications.
     */
    distinct?: GrantApplicationScalarFieldEnum | GrantApplicationScalarFieldEnum[]
  }

  /**
   * GrantApplication findFirstOrThrow
   */
  export type GrantApplicationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GrantApplication
     */
    select?: GrantApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GrantApplication
     */
    omit?: GrantApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GrantApplicationInclude<ExtArgs> | null
    /**
     * Filter, which GrantApplication to fetch.
     */
    where?: GrantApplicationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of GrantApplications to fetch.
     */
    orderBy?: GrantApplicationOrderByWithRelationInput | GrantApplicationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for GrantApplications.
     */
    cursor?: GrantApplicationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` GrantApplications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` GrantApplications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of GrantApplications.
     */
    distinct?: GrantApplicationScalarFieldEnum | GrantApplicationScalarFieldEnum[]
  }

  /**
   * GrantApplication findMany
   */
  export type GrantApplicationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GrantApplication
     */
    select?: GrantApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GrantApplication
     */
    omit?: GrantApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GrantApplicationInclude<ExtArgs> | null
    /**
     * Filter, which GrantApplications to fetch.
     */
    where?: GrantApplicationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of GrantApplications to fetch.
     */
    orderBy?: GrantApplicationOrderByWithRelationInput | GrantApplicationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing GrantApplications.
     */
    cursor?: GrantApplicationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` GrantApplications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` GrantApplications.
     */
    skip?: number
    distinct?: GrantApplicationScalarFieldEnum | GrantApplicationScalarFieldEnum[]
  }

  /**
   * GrantApplication create
   */
  export type GrantApplicationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GrantApplication
     */
    select?: GrantApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GrantApplication
     */
    omit?: GrantApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GrantApplicationInclude<ExtArgs> | null
    /**
     * The data needed to create a GrantApplication.
     */
    data: XOR<GrantApplicationCreateInput, GrantApplicationUncheckedCreateInput>
  }

  /**
   * GrantApplication createMany
   */
  export type GrantApplicationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many GrantApplications.
     */
    data: GrantApplicationCreateManyInput | GrantApplicationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * GrantApplication update
   */
  export type GrantApplicationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GrantApplication
     */
    select?: GrantApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GrantApplication
     */
    omit?: GrantApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GrantApplicationInclude<ExtArgs> | null
    /**
     * The data needed to update a GrantApplication.
     */
    data: XOR<GrantApplicationUpdateInput, GrantApplicationUncheckedUpdateInput>
    /**
     * Choose, which GrantApplication to update.
     */
    where: GrantApplicationWhereUniqueInput
  }

  /**
   * GrantApplication updateMany
   */
  export type GrantApplicationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update GrantApplications.
     */
    data: XOR<GrantApplicationUpdateManyMutationInput, GrantApplicationUncheckedUpdateManyInput>
    /**
     * Filter which GrantApplications to update
     */
    where?: GrantApplicationWhereInput
    /**
     * Limit how many GrantApplications to update.
     */
    limit?: number
  }

  /**
   * GrantApplication upsert
   */
  export type GrantApplicationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GrantApplication
     */
    select?: GrantApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GrantApplication
     */
    omit?: GrantApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GrantApplicationInclude<ExtArgs> | null
    /**
     * The filter to search for the GrantApplication to update in case it exists.
     */
    where: GrantApplicationWhereUniqueInput
    /**
     * In case the GrantApplication found by the `where` argument doesn't exist, create a new GrantApplication with this data.
     */
    create: XOR<GrantApplicationCreateInput, GrantApplicationUncheckedCreateInput>
    /**
     * In case the GrantApplication was found with the provided `where` argument, update it with this data.
     */
    update: XOR<GrantApplicationUpdateInput, GrantApplicationUncheckedUpdateInput>
  }

  /**
   * GrantApplication delete
   */
  export type GrantApplicationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GrantApplication
     */
    select?: GrantApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GrantApplication
     */
    omit?: GrantApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GrantApplicationInclude<ExtArgs> | null
    /**
     * Filter which GrantApplication to delete.
     */
    where: GrantApplicationWhereUniqueInput
  }

  /**
   * GrantApplication deleteMany
   */
  export type GrantApplicationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which GrantApplications to delete
     */
    where?: GrantApplicationWhereInput
    /**
     * Limit how many GrantApplications to delete.
     */
    limit?: number
  }

  /**
   * GrantApplication.Comments
   */
  export type GrantApplication$CommentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    where?: CommentWhereInput
    orderBy?: CommentOrderByWithRelationInput | CommentOrderByWithRelationInput[]
    cursor?: CommentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CommentScalarFieldEnum | CommentScalarFieldEnum[]
  }

  /**
   * GrantApplication.GrantTranche
   */
  export type GrantApplication$GrantTrancheArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GrantTranche
     */
    select?: GrantTrancheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GrantTranche
     */
    omit?: GrantTrancheOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GrantTrancheInclude<ExtArgs> | null
    where?: GrantTrancheWhereInput
    orderBy?: GrantTrancheOrderByWithRelationInput | GrantTrancheOrderByWithRelationInput[]
    cursor?: GrantTrancheWhereUniqueInput
    take?: number
    skip?: number
    distinct?: GrantTrancheScalarFieldEnum | GrantTrancheScalarFieldEnum[]
  }

  /**
   * GrantApplication.CreditLedger
   */
  export type GrantApplication$CreditLedgerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CreditLedger
     */
    select?: CreditLedgerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CreditLedger
     */
    omit?: CreditLedgerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CreditLedgerInclude<ExtArgs> | null
    where?: CreditLedgerWhereInput
    orderBy?: CreditLedgerOrderByWithRelationInput | CreditLedgerOrderByWithRelationInput[]
    cursor?: CreditLedgerWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CreditLedgerScalarFieldEnum | CreditLedgerScalarFieldEnum[]
  }

  /**
   * GrantApplication without action
   */
  export type GrantApplicationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GrantApplication
     */
    select?: GrantApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GrantApplication
     */
    omit?: GrantApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GrantApplicationInclude<ExtArgs> | null
  }


  /**
   * Model GrantTranche
   */

  export type AggregateGrantTranche = {
    _count: GrantTrancheCountAggregateOutputType | null
    _avg: GrantTrancheAvgAggregateOutputType | null
    _sum: GrantTrancheSumAggregateOutputType | null
    _min: GrantTrancheMinAggregateOutputType | null
    _max: GrantTrancheMaxAggregateOutputType | null
  }

  export type GrantTrancheAvgAggregateOutputType = {
    ask: number | null
    approvedAmount: number | null
    trancheNumber: number | null
  }

  export type GrantTrancheSumAggregateOutputType = {
    ask: number | null
    approvedAmount: number | null
    trancheNumber: number | null
  }

  export type GrantTrancheMinAggregateOutputType = {
    id: string | null
    applicationId: string | null
    grantId: string | null
    ask: number | null
    update: string | null
    helpWanted: string | null
    status: $Enums.GrantTrancheStatus | null
    createdAt: Date | null
    updatedAt: Date | null
    approvedAmount: number | null
    decidedAt: Date | null
    trancheNumber: number | null
  }

  export type GrantTrancheMaxAggregateOutputType = {
    id: string | null
    applicationId: string | null
    grantId: string | null
    ask: number | null
    update: string | null
    helpWanted: string | null
    status: $Enums.GrantTrancheStatus | null
    createdAt: Date | null
    updatedAt: Date | null
    approvedAmount: number | null
    decidedAt: Date | null
    trancheNumber: number | null
  }

  export type GrantTrancheCountAggregateOutputType = {
    id: number
    applicationId: number
    grantId: number
    ask: number
    update: number
    helpWanted: number
    status: number
    createdAt: number
    updatedAt: number
    approvedAmount: number
    decidedAt: number
    trancheNumber: number
    _all: number
  }


  export type GrantTrancheAvgAggregateInputType = {
    ask?: true
    approvedAmount?: true
    trancheNumber?: true
  }

  export type GrantTrancheSumAggregateInputType = {
    ask?: true
    approvedAmount?: true
    trancheNumber?: true
  }

  export type GrantTrancheMinAggregateInputType = {
    id?: true
    applicationId?: true
    grantId?: true
    ask?: true
    update?: true
    helpWanted?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    approvedAmount?: true
    decidedAt?: true
    trancheNumber?: true
  }

  export type GrantTrancheMaxAggregateInputType = {
    id?: true
    applicationId?: true
    grantId?: true
    ask?: true
    update?: true
    helpWanted?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    approvedAmount?: true
    decidedAt?: true
    trancheNumber?: true
  }

  export type GrantTrancheCountAggregateInputType = {
    id?: true
    applicationId?: true
    grantId?: true
    ask?: true
    update?: true
    helpWanted?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    approvedAmount?: true
    decidedAt?: true
    trancheNumber?: true
    _all?: true
  }

  export type GrantTrancheAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which GrantTranche to aggregate.
     */
    where?: GrantTrancheWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of GrantTranches to fetch.
     */
    orderBy?: GrantTrancheOrderByWithRelationInput | GrantTrancheOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: GrantTrancheWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` GrantTranches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` GrantTranches.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned GrantTranches
    **/
    _count?: true | GrantTrancheCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: GrantTrancheAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: GrantTrancheSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: GrantTrancheMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: GrantTrancheMaxAggregateInputType
  }

  export type GetGrantTrancheAggregateType<T extends GrantTrancheAggregateArgs> = {
        [P in keyof T & keyof AggregateGrantTranche]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGrantTranche[P]>
      : GetScalarType<T[P], AggregateGrantTranche[P]>
  }




  export type GrantTrancheGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: GrantTrancheWhereInput
    orderBy?: GrantTrancheOrderByWithAggregationInput | GrantTrancheOrderByWithAggregationInput[]
    by: GrantTrancheScalarFieldEnum[] | GrantTrancheScalarFieldEnum
    having?: GrantTrancheScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: GrantTrancheCountAggregateInputType | true
    _avg?: GrantTrancheAvgAggregateInputType
    _sum?: GrantTrancheSumAggregateInputType
    _min?: GrantTrancheMinAggregateInputType
    _max?: GrantTrancheMaxAggregateInputType
  }

  export type GrantTrancheGroupByOutputType = {
    id: string
    applicationId: string
    grantId: string
    ask: number
    update: string | null
    helpWanted: string | null
    status: $Enums.GrantTrancheStatus
    createdAt: Date
    updatedAt: Date
    approvedAmount: number | null
    decidedAt: Date | null
    trancheNumber: number
    _count: GrantTrancheCountAggregateOutputType | null
    _avg: GrantTrancheAvgAggregateOutputType | null
    _sum: GrantTrancheSumAggregateOutputType | null
    _min: GrantTrancheMinAggregateOutputType | null
    _max: GrantTrancheMaxAggregateOutputType | null
  }

  type GetGrantTrancheGroupByPayload<T extends GrantTrancheGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<GrantTrancheGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof GrantTrancheGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], GrantTrancheGroupByOutputType[P]>
            : GetScalarType<T[P], GrantTrancheGroupByOutputType[P]>
        }
      >
    >


  export type GrantTrancheSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    applicationId?: boolean
    grantId?: boolean
    ask?: boolean
    update?: boolean
    helpWanted?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    approvedAmount?: boolean
    decidedAt?: boolean
    trancheNumber?: boolean
    GrantApplication?: boolean | GrantApplicationDefaultArgs<ExtArgs>
    Grant?: boolean | GrantsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["grantTranche"]>



  export type GrantTrancheSelectScalar = {
    id?: boolean
    applicationId?: boolean
    grantId?: boolean
    ask?: boolean
    update?: boolean
    helpWanted?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    approvedAmount?: boolean
    decidedAt?: boolean
    trancheNumber?: boolean
  }

  export type GrantTrancheOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "applicationId" | "grantId" | "ask" | "update" | "helpWanted" | "status" | "createdAt" | "updatedAt" | "approvedAmount" | "decidedAt" | "trancheNumber", ExtArgs["result"]["grantTranche"]>
  export type GrantTrancheInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    GrantApplication?: boolean | GrantApplicationDefaultArgs<ExtArgs>
    Grant?: boolean | GrantsDefaultArgs<ExtArgs>
  }

  export type $GrantTranchePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "GrantTranche"
    objects: {
      GrantApplication: Prisma.$GrantApplicationPayload<ExtArgs>
      Grant: Prisma.$GrantsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      applicationId: string
      grantId: string
      ask: number
      update: string | null
      helpWanted: string | null
      status: $Enums.GrantTrancheStatus
      createdAt: Date
      updatedAt: Date
      approvedAmount: number | null
      decidedAt: Date | null
      trancheNumber: number
    }, ExtArgs["result"]["grantTranche"]>
    composites: {}
  }

  type GrantTrancheGetPayload<S extends boolean | null | undefined | GrantTrancheDefaultArgs> = $Result.GetResult<Prisma.$GrantTranchePayload, S>

  type GrantTrancheCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<GrantTrancheFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: GrantTrancheCountAggregateInputType | true
    }

  export interface GrantTrancheDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['GrantTranche'], meta: { name: 'GrantTranche' } }
    /**
     * Find zero or one GrantTranche that matches the filter.
     * @param {GrantTrancheFindUniqueArgs} args - Arguments to find a GrantTranche
     * @example
     * // Get one GrantTranche
     * const grantTranche = await prisma.grantTranche.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends GrantTrancheFindUniqueArgs>(args: SelectSubset<T, GrantTrancheFindUniqueArgs<ExtArgs>>): Prisma__GrantTrancheClient<$Result.GetResult<Prisma.$GrantTranchePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one GrantTranche that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {GrantTrancheFindUniqueOrThrowArgs} args - Arguments to find a GrantTranche
     * @example
     * // Get one GrantTranche
     * const grantTranche = await prisma.grantTranche.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends GrantTrancheFindUniqueOrThrowArgs>(args: SelectSubset<T, GrantTrancheFindUniqueOrThrowArgs<ExtArgs>>): Prisma__GrantTrancheClient<$Result.GetResult<Prisma.$GrantTranchePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first GrantTranche that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GrantTrancheFindFirstArgs} args - Arguments to find a GrantTranche
     * @example
     * // Get one GrantTranche
     * const grantTranche = await prisma.grantTranche.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends GrantTrancheFindFirstArgs>(args?: SelectSubset<T, GrantTrancheFindFirstArgs<ExtArgs>>): Prisma__GrantTrancheClient<$Result.GetResult<Prisma.$GrantTranchePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first GrantTranche that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GrantTrancheFindFirstOrThrowArgs} args - Arguments to find a GrantTranche
     * @example
     * // Get one GrantTranche
     * const grantTranche = await prisma.grantTranche.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends GrantTrancheFindFirstOrThrowArgs>(args?: SelectSubset<T, GrantTrancheFindFirstOrThrowArgs<ExtArgs>>): Prisma__GrantTrancheClient<$Result.GetResult<Prisma.$GrantTranchePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more GrantTranches that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GrantTrancheFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all GrantTranches
     * const grantTranches = await prisma.grantTranche.findMany()
     * 
     * // Get first 10 GrantTranches
     * const grantTranches = await prisma.grantTranche.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const grantTrancheWithIdOnly = await prisma.grantTranche.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends GrantTrancheFindManyArgs>(args?: SelectSubset<T, GrantTrancheFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GrantTranchePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a GrantTranche.
     * @param {GrantTrancheCreateArgs} args - Arguments to create a GrantTranche.
     * @example
     * // Create one GrantTranche
     * const GrantTranche = await prisma.grantTranche.create({
     *   data: {
     *     // ... data to create a GrantTranche
     *   }
     * })
     * 
     */
    create<T extends GrantTrancheCreateArgs>(args: SelectSubset<T, GrantTrancheCreateArgs<ExtArgs>>): Prisma__GrantTrancheClient<$Result.GetResult<Prisma.$GrantTranchePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many GrantTranches.
     * @param {GrantTrancheCreateManyArgs} args - Arguments to create many GrantTranches.
     * @example
     * // Create many GrantTranches
     * const grantTranche = await prisma.grantTranche.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends GrantTrancheCreateManyArgs>(args?: SelectSubset<T, GrantTrancheCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a GrantTranche.
     * @param {GrantTrancheDeleteArgs} args - Arguments to delete one GrantTranche.
     * @example
     * // Delete one GrantTranche
     * const GrantTranche = await prisma.grantTranche.delete({
     *   where: {
     *     // ... filter to delete one GrantTranche
     *   }
     * })
     * 
     */
    delete<T extends GrantTrancheDeleteArgs>(args: SelectSubset<T, GrantTrancheDeleteArgs<ExtArgs>>): Prisma__GrantTrancheClient<$Result.GetResult<Prisma.$GrantTranchePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one GrantTranche.
     * @param {GrantTrancheUpdateArgs} args - Arguments to update one GrantTranche.
     * @example
     * // Update one GrantTranche
     * const grantTranche = await prisma.grantTranche.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends GrantTrancheUpdateArgs>(args: SelectSubset<T, GrantTrancheUpdateArgs<ExtArgs>>): Prisma__GrantTrancheClient<$Result.GetResult<Prisma.$GrantTranchePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more GrantTranches.
     * @param {GrantTrancheDeleteManyArgs} args - Arguments to filter GrantTranches to delete.
     * @example
     * // Delete a few GrantTranches
     * const { count } = await prisma.grantTranche.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends GrantTrancheDeleteManyArgs>(args?: SelectSubset<T, GrantTrancheDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more GrantTranches.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GrantTrancheUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many GrantTranches
     * const grantTranche = await prisma.grantTranche.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends GrantTrancheUpdateManyArgs>(args: SelectSubset<T, GrantTrancheUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one GrantTranche.
     * @param {GrantTrancheUpsertArgs} args - Arguments to update or create a GrantTranche.
     * @example
     * // Update or create a GrantTranche
     * const grantTranche = await prisma.grantTranche.upsert({
     *   create: {
     *     // ... data to create a GrantTranche
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the GrantTranche we want to update
     *   }
     * })
     */
    upsert<T extends GrantTrancheUpsertArgs>(args: SelectSubset<T, GrantTrancheUpsertArgs<ExtArgs>>): Prisma__GrantTrancheClient<$Result.GetResult<Prisma.$GrantTranchePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of GrantTranches.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GrantTrancheCountArgs} args - Arguments to filter GrantTranches to count.
     * @example
     * // Count the number of GrantTranches
     * const count = await prisma.grantTranche.count({
     *   where: {
     *     // ... the filter for the GrantTranches we want to count
     *   }
     * })
    **/
    count<T extends GrantTrancheCountArgs>(
      args?: Subset<T, GrantTrancheCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], GrantTrancheCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a GrantTranche.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GrantTrancheAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends GrantTrancheAggregateArgs>(args: Subset<T, GrantTrancheAggregateArgs>): Prisma.PrismaPromise<GetGrantTrancheAggregateType<T>>

    /**
     * Group by GrantTranche.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GrantTrancheGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends GrantTrancheGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: GrantTrancheGroupByArgs['orderBy'] }
        : { orderBy?: GrantTrancheGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, GrantTrancheGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGrantTrancheGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the GrantTranche model
   */
  readonly fields: GrantTrancheFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for GrantTranche.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__GrantTrancheClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    GrantApplication<T extends GrantApplicationDefaultArgs<ExtArgs> = {}>(args?: Subset<T, GrantApplicationDefaultArgs<ExtArgs>>): Prisma__GrantApplicationClient<$Result.GetResult<Prisma.$GrantApplicationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Grant<T extends GrantsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, GrantsDefaultArgs<ExtArgs>>): Prisma__GrantsClient<$Result.GetResult<Prisma.$GrantsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the GrantTranche model
   */
  interface GrantTrancheFieldRefs {
    readonly id: FieldRef<"GrantTranche", 'String'>
    readonly applicationId: FieldRef<"GrantTranche", 'String'>
    readonly grantId: FieldRef<"GrantTranche", 'String'>
    readonly ask: FieldRef<"GrantTranche", 'Float'>
    readonly update: FieldRef<"GrantTranche", 'String'>
    readonly helpWanted: FieldRef<"GrantTranche", 'String'>
    readonly status: FieldRef<"GrantTranche", 'GrantTrancheStatus'>
    readonly createdAt: FieldRef<"GrantTranche", 'DateTime'>
    readonly updatedAt: FieldRef<"GrantTranche", 'DateTime'>
    readonly approvedAmount: FieldRef<"GrantTranche", 'Float'>
    readonly decidedAt: FieldRef<"GrantTranche", 'DateTime'>
    readonly trancheNumber: FieldRef<"GrantTranche", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * GrantTranche findUnique
   */
  export type GrantTrancheFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GrantTranche
     */
    select?: GrantTrancheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GrantTranche
     */
    omit?: GrantTrancheOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GrantTrancheInclude<ExtArgs> | null
    /**
     * Filter, which GrantTranche to fetch.
     */
    where: GrantTrancheWhereUniqueInput
  }

  /**
   * GrantTranche findUniqueOrThrow
   */
  export type GrantTrancheFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GrantTranche
     */
    select?: GrantTrancheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GrantTranche
     */
    omit?: GrantTrancheOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GrantTrancheInclude<ExtArgs> | null
    /**
     * Filter, which GrantTranche to fetch.
     */
    where: GrantTrancheWhereUniqueInput
  }

  /**
   * GrantTranche findFirst
   */
  export type GrantTrancheFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GrantTranche
     */
    select?: GrantTrancheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GrantTranche
     */
    omit?: GrantTrancheOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GrantTrancheInclude<ExtArgs> | null
    /**
     * Filter, which GrantTranche to fetch.
     */
    where?: GrantTrancheWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of GrantTranches to fetch.
     */
    orderBy?: GrantTrancheOrderByWithRelationInput | GrantTrancheOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for GrantTranches.
     */
    cursor?: GrantTrancheWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` GrantTranches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` GrantTranches.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of GrantTranches.
     */
    distinct?: GrantTrancheScalarFieldEnum | GrantTrancheScalarFieldEnum[]
  }

  /**
   * GrantTranche findFirstOrThrow
   */
  export type GrantTrancheFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GrantTranche
     */
    select?: GrantTrancheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GrantTranche
     */
    omit?: GrantTrancheOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GrantTrancheInclude<ExtArgs> | null
    /**
     * Filter, which GrantTranche to fetch.
     */
    where?: GrantTrancheWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of GrantTranches to fetch.
     */
    orderBy?: GrantTrancheOrderByWithRelationInput | GrantTrancheOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for GrantTranches.
     */
    cursor?: GrantTrancheWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` GrantTranches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` GrantTranches.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of GrantTranches.
     */
    distinct?: GrantTrancheScalarFieldEnum | GrantTrancheScalarFieldEnum[]
  }

  /**
   * GrantTranche findMany
   */
  export type GrantTrancheFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GrantTranche
     */
    select?: GrantTrancheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GrantTranche
     */
    omit?: GrantTrancheOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GrantTrancheInclude<ExtArgs> | null
    /**
     * Filter, which GrantTranches to fetch.
     */
    where?: GrantTrancheWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of GrantTranches to fetch.
     */
    orderBy?: GrantTrancheOrderByWithRelationInput | GrantTrancheOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing GrantTranches.
     */
    cursor?: GrantTrancheWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` GrantTranches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` GrantTranches.
     */
    skip?: number
    distinct?: GrantTrancheScalarFieldEnum | GrantTrancheScalarFieldEnum[]
  }

  /**
   * GrantTranche create
   */
  export type GrantTrancheCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GrantTranche
     */
    select?: GrantTrancheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GrantTranche
     */
    omit?: GrantTrancheOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GrantTrancheInclude<ExtArgs> | null
    /**
     * The data needed to create a GrantTranche.
     */
    data: XOR<GrantTrancheCreateInput, GrantTrancheUncheckedCreateInput>
  }

  /**
   * GrantTranche createMany
   */
  export type GrantTrancheCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many GrantTranches.
     */
    data: GrantTrancheCreateManyInput | GrantTrancheCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * GrantTranche update
   */
  export type GrantTrancheUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GrantTranche
     */
    select?: GrantTrancheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GrantTranche
     */
    omit?: GrantTrancheOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GrantTrancheInclude<ExtArgs> | null
    /**
     * The data needed to update a GrantTranche.
     */
    data: XOR<GrantTrancheUpdateInput, GrantTrancheUncheckedUpdateInput>
    /**
     * Choose, which GrantTranche to update.
     */
    where: GrantTrancheWhereUniqueInput
  }

  /**
   * GrantTranche updateMany
   */
  export type GrantTrancheUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update GrantTranches.
     */
    data: XOR<GrantTrancheUpdateManyMutationInput, GrantTrancheUncheckedUpdateManyInput>
    /**
     * Filter which GrantTranches to update
     */
    where?: GrantTrancheWhereInput
    /**
     * Limit how many GrantTranches to update.
     */
    limit?: number
  }

  /**
   * GrantTranche upsert
   */
  export type GrantTrancheUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GrantTranche
     */
    select?: GrantTrancheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GrantTranche
     */
    omit?: GrantTrancheOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GrantTrancheInclude<ExtArgs> | null
    /**
     * The filter to search for the GrantTranche to update in case it exists.
     */
    where: GrantTrancheWhereUniqueInput
    /**
     * In case the GrantTranche found by the `where` argument doesn't exist, create a new GrantTranche with this data.
     */
    create: XOR<GrantTrancheCreateInput, GrantTrancheUncheckedCreateInput>
    /**
     * In case the GrantTranche was found with the provided `where` argument, update it with this data.
     */
    update: XOR<GrantTrancheUpdateInput, GrantTrancheUncheckedUpdateInput>
  }

  /**
   * GrantTranche delete
   */
  export type GrantTrancheDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GrantTranche
     */
    select?: GrantTrancheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GrantTranche
     */
    omit?: GrantTrancheOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GrantTrancheInclude<ExtArgs> | null
    /**
     * Filter which GrantTranche to delete.
     */
    where: GrantTrancheWhereUniqueInput
  }

  /**
   * GrantTranche deleteMany
   */
  export type GrantTrancheDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which GrantTranches to delete
     */
    where?: GrantTrancheWhereInput
    /**
     * Limit how many GrantTranches to delete.
     */
    limit?: number
  }

  /**
   * GrantTranche without action
   */
  export type GrantTrancheDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GrantTranche
     */
    select?: GrantTrancheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GrantTranche
     */
    omit?: GrantTrancheOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GrantTrancheInclude<ExtArgs> | null
  }


  /**
   * Model Submission
   */

  export type AggregateSubmission = {
    _count: SubmissionCountAggregateOutputType | null
    _avg: SubmissionAvgAggregateOutputType | null
    _sum: SubmissionSumAggregateOutputType | null
    _min: SubmissionMinAggregateOutputType | null
    _max: SubmissionMaxAggregateOutputType | null
  }

  export type SubmissionAvgAggregateOutputType = {
    winnerPosition: number | null
    likeCount: number | null
    ask: number | null
    rewardInUSD: number | null
  }

  export type SubmissionSumAggregateOutputType = {
    winnerPosition: number | null
    likeCount: number | null
    ask: number | null
    rewardInUSD: number | null
  }

  export type SubmissionMinAggregateOutputType = {
    id: string | null
    link: string | null
    tweet: string | null
    status: $Enums.SubmissionStatus | null
    userId: string | null
    listingId: string | null
    isWinner: boolean | null
    winnerPosition: number | null
    isActive: boolean | null
    isArchived: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    likeCount: number | null
    isPaid: boolean | null
    otherInfo: string | null
    ask: number | null
    label: $Enums.SubmissionLabels | null
    rewardInUSD: number | null
    ogImage: string | null
    notes: string | null
  }

  export type SubmissionMaxAggregateOutputType = {
    id: string | null
    link: string | null
    tweet: string | null
    status: $Enums.SubmissionStatus | null
    userId: string | null
    listingId: string | null
    isWinner: boolean | null
    winnerPosition: number | null
    isActive: boolean | null
    isArchived: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    likeCount: number | null
    isPaid: boolean | null
    otherInfo: string | null
    ask: number | null
    label: $Enums.SubmissionLabels | null
    rewardInUSD: number | null
    ogImage: string | null
    notes: string | null
  }

  export type SubmissionCountAggregateOutputType = {
    id: number
    link: number
    tweet: number
    status: number
    eligibilityAnswers: number
    userId: number
    listingId: number
    isWinner: number
    winnerPosition: number
    isActive: number
    isArchived: number
    createdAt: number
    updatedAt: number
    like: number
    likeCount: number
    isPaid: number
    paymentDetails: number
    otherInfo: number
    ask: number
    label: number
    rewardInUSD: number
    ogImage: number
    notes: number
    _all: number
  }


  export type SubmissionAvgAggregateInputType = {
    winnerPosition?: true
    likeCount?: true
    ask?: true
    rewardInUSD?: true
  }

  export type SubmissionSumAggregateInputType = {
    winnerPosition?: true
    likeCount?: true
    ask?: true
    rewardInUSD?: true
  }

  export type SubmissionMinAggregateInputType = {
    id?: true
    link?: true
    tweet?: true
    status?: true
    userId?: true
    listingId?: true
    isWinner?: true
    winnerPosition?: true
    isActive?: true
    isArchived?: true
    createdAt?: true
    updatedAt?: true
    likeCount?: true
    isPaid?: true
    otherInfo?: true
    ask?: true
    label?: true
    rewardInUSD?: true
    ogImage?: true
    notes?: true
  }

  export type SubmissionMaxAggregateInputType = {
    id?: true
    link?: true
    tweet?: true
    status?: true
    userId?: true
    listingId?: true
    isWinner?: true
    winnerPosition?: true
    isActive?: true
    isArchived?: true
    createdAt?: true
    updatedAt?: true
    likeCount?: true
    isPaid?: true
    otherInfo?: true
    ask?: true
    label?: true
    rewardInUSD?: true
    ogImage?: true
    notes?: true
  }

  export type SubmissionCountAggregateInputType = {
    id?: true
    link?: true
    tweet?: true
    status?: true
    eligibilityAnswers?: true
    userId?: true
    listingId?: true
    isWinner?: true
    winnerPosition?: true
    isActive?: true
    isArchived?: true
    createdAt?: true
    updatedAt?: true
    like?: true
    likeCount?: true
    isPaid?: true
    paymentDetails?: true
    otherInfo?: true
    ask?: true
    label?: true
    rewardInUSD?: true
    ogImage?: true
    notes?: true
    _all?: true
  }

  export type SubmissionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Submission to aggregate.
     */
    where?: SubmissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Submissions to fetch.
     */
    orderBy?: SubmissionOrderByWithRelationInput | SubmissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SubmissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Submissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Submissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Submissions
    **/
    _count?: true | SubmissionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SubmissionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SubmissionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SubmissionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SubmissionMaxAggregateInputType
  }

  export type GetSubmissionAggregateType<T extends SubmissionAggregateArgs> = {
        [P in keyof T & keyof AggregateSubmission]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSubmission[P]>
      : GetScalarType<T[P], AggregateSubmission[P]>
  }




  export type SubmissionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SubmissionWhereInput
    orderBy?: SubmissionOrderByWithAggregationInput | SubmissionOrderByWithAggregationInput[]
    by: SubmissionScalarFieldEnum[] | SubmissionScalarFieldEnum
    having?: SubmissionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SubmissionCountAggregateInputType | true
    _avg?: SubmissionAvgAggregateInputType
    _sum?: SubmissionSumAggregateInputType
    _min?: SubmissionMinAggregateInputType
    _max?: SubmissionMaxAggregateInputType
  }

  export type SubmissionGroupByOutputType = {
    id: string
    link: string | null
    tweet: string | null
    status: $Enums.SubmissionStatus
    eligibilityAnswers: JsonValue | null
    userId: string
    listingId: string
    isWinner: boolean
    winnerPosition: number | null
    isActive: boolean
    isArchived: boolean
    createdAt: Date
    updatedAt: Date
    like: JsonValue | null
    likeCount: number
    isPaid: boolean
    paymentDetails: JsonValue | null
    otherInfo: string | null
    ask: number | null
    label: $Enums.SubmissionLabels
    rewardInUSD: number
    ogImage: string | null
    notes: string | null
    _count: SubmissionCountAggregateOutputType | null
    _avg: SubmissionAvgAggregateOutputType | null
    _sum: SubmissionSumAggregateOutputType | null
    _min: SubmissionMinAggregateOutputType | null
    _max: SubmissionMaxAggregateOutputType | null
  }

  type GetSubmissionGroupByPayload<T extends SubmissionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SubmissionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SubmissionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SubmissionGroupByOutputType[P]>
            : GetScalarType<T[P], SubmissionGroupByOutputType[P]>
        }
      >
    >


  export type SubmissionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    link?: boolean
    tweet?: boolean
    status?: boolean
    eligibilityAnswers?: boolean
    userId?: boolean
    listingId?: boolean
    isWinner?: boolean
    winnerPosition?: boolean
    isActive?: boolean
    isArchived?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    like?: boolean
    likeCount?: boolean
    isPaid?: boolean
    paymentDetails?: boolean
    otherInfo?: boolean
    ask?: boolean
    label?: boolean
    rewardInUSD?: boolean
    ogImage?: boolean
    notes?: boolean
    listing?: boolean | BountiesDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    Comments?: boolean | Submission$CommentsArgs<ExtArgs>
    CreditLedger?: boolean | Submission$CreditLedgerArgs<ExtArgs>
    _count?: boolean | SubmissionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["submission"]>



  export type SubmissionSelectScalar = {
    id?: boolean
    link?: boolean
    tweet?: boolean
    status?: boolean
    eligibilityAnswers?: boolean
    userId?: boolean
    listingId?: boolean
    isWinner?: boolean
    winnerPosition?: boolean
    isActive?: boolean
    isArchived?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    like?: boolean
    likeCount?: boolean
    isPaid?: boolean
    paymentDetails?: boolean
    otherInfo?: boolean
    ask?: boolean
    label?: boolean
    rewardInUSD?: boolean
    ogImage?: boolean
    notes?: boolean
  }

  export type SubmissionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "link" | "tweet" | "status" | "eligibilityAnswers" | "userId" | "listingId" | "isWinner" | "winnerPosition" | "isActive" | "isArchived" | "createdAt" | "updatedAt" | "like" | "likeCount" | "isPaid" | "paymentDetails" | "otherInfo" | "ask" | "label" | "rewardInUSD" | "ogImage" | "notes", ExtArgs["result"]["submission"]>
  export type SubmissionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    listing?: boolean | BountiesDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    Comments?: boolean | Submission$CommentsArgs<ExtArgs>
    CreditLedger?: boolean | Submission$CreditLedgerArgs<ExtArgs>
    _count?: boolean | SubmissionCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $SubmissionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Submission"
    objects: {
      listing: Prisma.$BountiesPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
      Comments: Prisma.$CommentPayload<ExtArgs>[]
      CreditLedger: Prisma.$CreditLedgerPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      link: string | null
      tweet: string | null
      status: $Enums.SubmissionStatus
      eligibilityAnswers: Prisma.JsonValue | null
      userId: string
      listingId: string
      isWinner: boolean
      winnerPosition: number | null
      isActive: boolean
      isArchived: boolean
      createdAt: Date
      updatedAt: Date
      like: Prisma.JsonValue | null
      likeCount: number
      isPaid: boolean
      paymentDetails: Prisma.JsonValue | null
      otherInfo: string | null
      ask: number | null
      label: $Enums.SubmissionLabels
      rewardInUSD: number
      ogImage: string | null
      notes: string | null
    }, ExtArgs["result"]["submission"]>
    composites: {}
  }

  type SubmissionGetPayload<S extends boolean | null | undefined | SubmissionDefaultArgs> = $Result.GetResult<Prisma.$SubmissionPayload, S>

  type SubmissionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SubmissionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SubmissionCountAggregateInputType | true
    }

  export interface SubmissionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Submission'], meta: { name: 'Submission' } }
    /**
     * Find zero or one Submission that matches the filter.
     * @param {SubmissionFindUniqueArgs} args - Arguments to find a Submission
     * @example
     * // Get one Submission
     * const submission = await prisma.submission.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SubmissionFindUniqueArgs>(args: SelectSubset<T, SubmissionFindUniqueArgs<ExtArgs>>): Prisma__SubmissionClient<$Result.GetResult<Prisma.$SubmissionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Submission that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SubmissionFindUniqueOrThrowArgs} args - Arguments to find a Submission
     * @example
     * // Get one Submission
     * const submission = await prisma.submission.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SubmissionFindUniqueOrThrowArgs>(args: SelectSubset<T, SubmissionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SubmissionClient<$Result.GetResult<Prisma.$SubmissionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Submission that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubmissionFindFirstArgs} args - Arguments to find a Submission
     * @example
     * // Get one Submission
     * const submission = await prisma.submission.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SubmissionFindFirstArgs>(args?: SelectSubset<T, SubmissionFindFirstArgs<ExtArgs>>): Prisma__SubmissionClient<$Result.GetResult<Prisma.$SubmissionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Submission that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubmissionFindFirstOrThrowArgs} args - Arguments to find a Submission
     * @example
     * // Get one Submission
     * const submission = await prisma.submission.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SubmissionFindFirstOrThrowArgs>(args?: SelectSubset<T, SubmissionFindFirstOrThrowArgs<ExtArgs>>): Prisma__SubmissionClient<$Result.GetResult<Prisma.$SubmissionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Submissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubmissionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Submissions
     * const submissions = await prisma.submission.findMany()
     * 
     * // Get first 10 Submissions
     * const submissions = await prisma.submission.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const submissionWithIdOnly = await prisma.submission.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SubmissionFindManyArgs>(args?: SelectSubset<T, SubmissionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SubmissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Submission.
     * @param {SubmissionCreateArgs} args - Arguments to create a Submission.
     * @example
     * // Create one Submission
     * const Submission = await prisma.submission.create({
     *   data: {
     *     // ... data to create a Submission
     *   }
     * })
     * 
     */
    create<T extends SubmissionCreateArgs>(args: SelectSubset<T, SubmissionCreateArgs<ExtArgs>>): Prisma__SubmissionClient<$Result.GetResult<Prisma.$SubmissionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Submissions.
     * @param {SubmissionCreateManyArgs} args - Arguments to create many Submissions.
     * @example
     * // Create many Submissions
     * const submission = await prisma.submission.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SubmissionCreateManyArgs>(args?: SelectSubset<T, SubmissionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Submission.
     * @param {SubmissionDeleteArgs} args - Arguments to delete one Submission.
     * @example
     * // Delete one Submission
     * const Submission = await prisma.submission.delete({
     *   where: {
     *     // ... filter to delete one Submission
     *   }
     * })
     * 
     */
    delete<T extends SubmissionDeleteArgs>(args: SelectSubset<T, SubmissionDeleteArgs<ExtArgs>>): Prisma__SubmissionClient<$Result.GetResult<Prisma.$SubmissionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Submission.
     * @param {SubmissionUpdateArgs} args - Arguments to update one Submission.
     * @example
     * // Update one Submission
     * const submission = await prisma.submission.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SubmissionUpdateArgs>(args: SelectSubset<T, SubmissionUpdateArgs<ExtArgs>>): Prisma__SubmissionClient<$Result.GetResult<Prisma.$SubmissionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Submissions.
     * @param {SubmissionDeleteManyArgs} args - Arguments to filter Submissions to delete.
     * @example
     * // Delete a few Submissions
     * const { count } = await prisma.submission.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SubmissionDeleteManyArgs>(args?: SelectSubset<T, SubmissionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Submissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubmissionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Submissions
     * const submission = await prisma.submission.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SubmissionUpdateManyArgs>(args: SelectSubset<T, SubmissionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Submission.
     * @param {SubmissionUpsertArgs} args - Arguments to update or create a Submission.
     * @example
     * // Update or create a Submission
     * const submission = await prisma.submission.upsert({
     *   create: {
     *     // ... data to create a Submission
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Submission we want to update
     *   }
     * })
     */
    upsert<T extends SubmissionUpsertArgs>(args: SelectSubset<T, SubmissionUpsertArgs<ExtArgs>>): Prisma__SubmissionClient<$Result.GetResult<Prisma.$SubmissionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Submissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubmissionCountArgs} args - Arguments to filter Submissions to count.
     * @example
     * // Count the number of Submissions
     * const count = await prisma.submission.count({
     *   where: {
     *     // ... the filter for the Submissions we want to count
     *   }
     * })
    **/
    count<T extends SubmissionCountArgs>(
      args?: Subset<T, SubmissionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SubmissionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Submission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubmissionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SubmissionAggregateArgs>(args: Subset<T, SubmissionAggregateArgs>): Prisma.PrismaPromise<GetSubmissionAggregateType<T>>

    /**
     * Group by Submission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubmissionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SubmissionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SubmissionGroupByArgs['orderBy'] }
        : { orderBy?: SubmissionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SubmissionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSubmissionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Submission model
   */
  readonly fields: SubmissionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Submission.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SubmissionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    listing<T extends BountiesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, BountiesDefaultArgs<ExtArgs>>): Prisma__BountiesClient<$Result.GetResult<Prisma.$BountiesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Comments<T extends Submission$CommentsArgs<ExtArgs> = {}>(args?: Subset<T, Submission$CommentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    CreditLedger<T extends Submission$CreditLedgerArgs<ExtArgs> = {}>(args?: Subset<T, Submission$CreditLedgerArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CreditLedgerPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Submission model
   */
  interface SubmissionFieldRefs {
    readonly id: FieldRef<"Submission", 'String'>
    readonly link: FieldRef<"Submission", 'String'>
    readonly tweet: FieldRef<"Submission", 'String'>
    readonly status: FieldRef<"Submission", 'SubmissionStatus'>
    readonly eligibilityAnswers: FieldRef<"Submission", 'Json'>
    readonly userId: FieldRef<"Submission", 'String'>
    readonly listingId: FieldRef<"Submission", 'String'>
    readonly isWinner: FieldRef<"Submission", 'Boolean'>
    readonly winnerPosition: FieldRef<"Submission", 'Int'>
    readonly isActive: FieldRef<"Submission", 'Boolean'>
    readonly isArchived: FieldRef<"Submission", 'Boolean'>
    readonly createdAt: FieldRef<"Submission", 'DateTime'>
    readonly updatedAt: FieldRef<"Submission", 'DateTime'>
    readonly like: FieldRef<"Submission", 'Json'>
    readonly likeCount: FieldRef<"Submission", 'Int'>
    readonly isPaid: FieldRef<"Submission", 'Boolean'>
    readonly paymentDetails: FieldRef<"Submission", 'Json'>
    readonly otherInfo: FieldRef<"Submission", 'String'>
    readonly ask: FieldRef<"Submission", 'Int'>
    readonly label: FieldRef<"Submission", 'SubmissionLabels'>
    readonly rewardInUSD: FieldRef<"Submission", 'Float'>
    readonly ogImage: FieldRef<"Submission", 'String'>
    readonly notes: FieldRef<"Submission", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Submission findUnique
   */
  export type SubmissionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Submission
     */
    select?: SubmissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Submission
     */
    omit?: SubmissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubmissionInclude<ExtArgs> | null
    /**
     * Filter, which Submission to fetch.
     */
    where: SubmissionWhereUniqueInput
  }

  /**
   * Submission findUniqueOrThrow
   */
  export type SubmissionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Submission
     */
    select?: SubmissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Submission
     */
    omit?: SubmissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubmissionInclude<ExtArgs> | null
    /**
     * Filter, which Submission to fetch.
     */
    where: SubmissionWhereUniqueInput
  }

  /**
   * Submission findFirst
   */
  export type SubmissionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Submission
     */
    select?: SubmissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Submission
     */
    omit?: SubmissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubmissionInclude<ExtArgs> | null
    /**
     * Filter, which Submission to fetch.
     */
    where?: SubmissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Submissions to fetch.
     */
    orderBy?: SubmissionOrderByWithRelationInput | SubmissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Submissions.
     */
    cursor?: SubmissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Submissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Submissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Submissions.
     */
    distinct?: SubmissionScalarFieldEnum | SubmissionScalarFieldEnum[]
  }

  /**
   * Submission findFirstOrThrow
   */
  export type SubmissionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Submission
     */
    select?: SubmissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Submission
     */
    omit?: SubmissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubmissionInclude<ExtArgs> | null
    /**
     * Filter, which Submission to fetch.
     */
    where?: SubmissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Submissions to fetch.
     */
    orderBy?: SubmissionOrderByWithRelationInput | SubmissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Submissions.
     */
    cursor?: SubmissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Submissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Submissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Submissions.
     */
    distinct?: SubmissionScalarFieldEnum | SubmissionScalarFieldEnum[]
  }

  /**
   * Submission findMany
   */
  export type SubmissionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Submission
     */
    select?: SubmissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Submission
     */
    omit?: SubmissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubmissionInclude<ExtArgs> | null
    /**
     * Filter, which Submissions to fetch.
     */
    where?: SubmissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Submissions to fetch.
     */
    orderBy?: SubmissionOrderByWithRelationInput | SubmissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Submissions.
     */
    cursor?: SubmissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Submissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Submissions.
     */
    skip?: number
    distinct?: SubmissionScalarFieldEnum | SubmissionScalarFieldEnum[]
  }

  /**
   * Submission create
   */
  export type SubmissionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Submission
     */
    select?: SubmissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Submission
     */
    omit?: SubmissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubmissionInclude<ExtArgs> | null
    /**
     * The data needed to create a Submission.
     */
    data: XOR<SubmissionCreateInput, SubmissionUncheckedCreateInput>
  }

  /**
   * Submission createMany
   */
  export type SubmissionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Submissions.
     */
    data: SubmissionCreateManyInput | SubmissionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Submission update
   */
  export type SubmissionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Submission
     */
    select?: SubmissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Submission
     */
    omit?: SubmissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubmissionInclude<ExtArgs> | null
    /**
     * The data needed to update a Submission.
     */
    data: XOR<SubmissionUpdateInput, SubmissionUncheckedUpdateInput>
    /**
     * Choose, which Submission to update.
     */
    where: SubmissionWhereUniqueInput
  }

  /**
   * Submission updateMany
   */
  export type SubmissionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Submissions.
     */
    data: XOR<SubmissionUpdateManyMutationInput, SubmissionUncheckedUpdateManyInput>
    /**
     * Filter which Submissions to update
     */
    where?: SubmissionWhereInput
    /**
     * Limit how many Submissions to update.
     */
    limit?: number
  }

  /**
   * Submission upsert
   */
  export type SubmissionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Submission
     */
    select?: SubmissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Submission
     */
    omit?: SubmissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubmissionInclude<ExtArgs> | null
    /**
     * The filter to search for the Submission to update in case it exists.
     */
    where: SubmissionWhereUniqueInput
    /**
     * In case the Submission found by the `where` argument doesn't exist, create a new Submission with this data.
     */
    create: XOR<SubmissionCreateInput, SubmissionUncheckedCreateInput>
    /**
     * In case the Submission was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SubmissionUpdateInput, SubmissionUncheckedUpdateInput>
  }

  /**
   * Submission delete
   */
  export type SubmissionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Submission
     */
    select?: SubmissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Submission
     */
    omit?: SubmissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubmissionInclude<ExtArgs> | null
    /**
     * Filter which Submission to delete.
     */
    where: SubmissionWhereUniqueInput
  }

  /**
   * Submission deleteMany
   */
  export type SubmissionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Submissions to delete
     */
    where?: SubmissionWhereInput
    /**
     * Limit how many Submissions to delete.
     */
    limit?: number
  }

  /**
   * Submission.Comments
   */
  export type Submission$CommentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    where?: CommentWhereInput
    orderBy?: CommentOrderByWithRelationInput | CommentOrderByWithRelationInput[]
    cursor?: CommentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CommentScalarFieldEnum | CommentScalarFieldEnum[]
  }

  /**
   * Submission.CreditLedger
   */
  export type Submission$CreditLedgerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CreditLedger
     */
    select?: CreditLedgerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CreditLedger
     */
    omit?: CreditLedgerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CreditLedgerInclude<ExtArgs> | null
    where?: CreditLedgerWhereInput
    orderBy?: CreditLedgerOrderByWithRelationInput | CreditLedgerOrderByWithRelationInput[]
    cursor?: CreditLedgerWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CreditLedgerScalarFieldEnum | CreditLedgerScalarFieldEnum[]
  }

  /**
   * Submission without action
   */
  export type SubmissionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Submission
     */
    select?: SubmissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Submission
     */
    omit?: SubmissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubmissionInclude<ExtArgs> | null
  }


  /**
   * Model Sponsors
   */

  export type AggregateSponsors = {
    _count: SponsorsCountAggregateOutputType | null
    _min: SponsorsMinAggregateOutputType | null
    _max: SponsorsMaxAggregateOutputType | null
  }

  export type SponsorsMinAggregateOutputType = {
    id: string | null
    name: string | null
    slug: string | null
    logo: string | null
    url: string | null
    industry: string | null
    twitter: string | null
    bio: string | null
    createdAt: Date | null
    updatedAt: Date | null
    isArchived: boolean | null
    isActive: boolean | null
    entityName: string | null
    isVerified: boolean | null
    isCaution: boolean | null
    st: boolean | null
  }

  export type SponsorsMaxAggregateOutputType = {
    id: string | null
    name: string | null
    slug: string | null
    logo: string | null
    url: string | null
    industry: string | null
    twitter: string | null
    bio: string | null
    createdAt: Date | null
    updatedAt: Date | null
    isArchived: boolean | null
    isActive: boolean | null
    entityName: string | null
    isVerified: boolean | null
    isCaution: boolean | null
    st: boolean | null
  }

  export type SponsorsCountAggregateOutputType = {
    id: number
    name: number
    slug: number
    logo: number
    url: number
    industry: number
    twitter: number
    bio: number
    createdAt: number
    updatedAt: number
    isArchived: number
    isActive: number
    entityName: number
    isVerified: number
    isCaution: number
    st: number
    verificationInfo: number
    _all: number
  }


  export type SponsorsMinAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    logo?: true
    url?: true
    industry?: true
    twitter?: true
    bio?: true
    createdAt?: true
    updatedAt?: true
    isArchived?: true
    isActive?: true
    entityName?: true
    isVerified?: true
    isCaution?: true
    st?: true
  }

  export type SponsorsMaxAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    logo?: true
    url?: true
    industry?: true
    twitter?: true
    bio?: true
    createdAt?: true
    updatedAt?: true
    isArchived?: true
    isActive?: true
    entityName?: true
    isVerified?: true
    isCaution?: true
    st?: true
  }

  export type SponsorsCountAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    logo?: true
    url?: true
    industry?: true
    twitter?: true
    bio?: true
    createdAt?: true
    updatedAt?: true
    isArchived?: true
    isActive?: true
    entityName?: true
    isVerified?: true
    isCaution?: true
    st?: true
    verificationInfo?: true
    _all?: true
  }

  export type SponsorsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Sponsors to aggregate.
     */
    where?: SponsorsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sponsors to fetch.
     */
    orderBy?: SponsorsOrderByWithRelationInput | SponsorsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SponsorsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sponsors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sponsors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Sponsors
    **/
    _count?: true | SponsorsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SponsorsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SponsorsMaxAggregateInputType
  }

  export type GetSponsorsAggregateType<T extends SponsorsAggregateArgs> = {
        [P in keyof T & keyof AggregateSponsors]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSponsors[P]>
      : GetScalarType<T[P], AggregateSponsors[P]>
  }




  export type SponsorsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SponsorsWhereInput
    orderBy?: SponsorsOrderByWithAggregationInput | SponsorsOrderByWithAggregationInput[]
    by: SponsorsScalarFieldEnum[] | SponsorsScalarFieldEnum
    having?: SponsorsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SponsorsCountAggregateInputType | true
    _min?: SponsorsMinAggregateInputType
    _max?: SponsorsMaxAggregateInputType
  }

  export type SponsorsGroupByOutputType = {
    id: string
    name: string
    slug: string
    logo: string | null
    url: string | null
    industry: string
    twitter: string | null
    bio: string | null
    createdAt: Date
    updatedAt: Date
    isArchived: boolean
    isActive: boolean
    entityName: string | null
    isVerified: boolean
    isCaution: boolean
    st: boolean
    verificationInfo: JsonValue | null
    _count: SponsorsCountAggregateOutputType | null
    _min: SponsorsMinAggregateOutputType | null
    _max: SponsorsMaxAggregateOutputType | null
  }

  type GetSponsorsGroupByPayload<T extends SponsorsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SponsorsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SponsorsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SponsorsGroupByOutputType[P]>
            : GetScalarType<T[P], SponsorsGroupByOutputType[P]>
        }
      >
    >


  export type SponsorsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    slug?: boolean
    logo?: boolean
    url?: boolean
    industry?: boolean
    twitter?: boolean
    bio?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isArchived?: boolean
    isActive?: boolean
    entityName?: boolean
    isVerified?: boolean
    isCaution?: boolean
    st?: boolean
    verificationInfo?: boolean
    Hackathon?: boolean | Sponsors$HackathonArgs<ExtArgs>
    UserSponsors?: boolean | Sponsors$UserSponsorsArgs<ExtArgs>
    Bounties?: boolean | Sponsors$BountiesArgs<ExtArgs>
    Templates?: boolean | Sponsors$TemplatesArgs<ExtArgs>
    Grants?: boolean | Sponsors$GrantsArgs<ExtArgs>
    User?: boolean | Sponsors$UserArgs<ExtArgs>
    UserInvites?: boolean | Sponsors$UserInvitesArgs<ExtArgs>
    _count?: boolean | SponsorsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sponsors"]>



  export type SponsorsSelectScalar = {
    id?: boolean
    name?: boolean
    slug?: boolean
    logo?: boolean
    url?: boolean
    industry?: boolean
    twitter?: boolean
    bio?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isArchived?: boolean
    isActive?: boolean
    entityName?: boolean
    isVerified?: boolean
    isCaution?: boolean
    st?: boolean
    verificationInfo?: boolean
  }

  export type SponsorsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "slug" | "logo" | "url" | "industry" | "twitter" | "bio" | "createdAt" | "updatedAt" | "isArchived" | "isActive" | "entityName" | "isVerified" | "isCaution" | "st" | "verificationInfo", ExtArgs["result"]["sponsors"]>
  export type SponsorsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Hackathon?: boolean | Sponsors$HackathonArgs<ExtArgs>
    UserSponsors?: boolean | Sponsors$UserSponsorsArgs<ExtArgs>
    Bounties?: boolean | Sponsors$BountiesArgs<ExtArgs>
    Templates?: boolean | Sponsors$TemplatesArgs<ExtArgs>
    Grants?: boolean | Sponsors$GrantsArgs<ExtArgs>
    User?: boolean | Sponsors$UserArgs<ExtArgs>
    UserInvites?: boolean | Sponsors$UserInvitesArgs<ExtArgs>
    _count?: boolean | SponsorsCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $SponsorsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Sponsors"
    objects: {
      Hackathon: Prisma.$HackathonPayload<ExtArgs> | null
      UserSponsors: Prisma.$UserSponsorsPayload<ExtArgs>[]
      Bounties: Prisma.$BountiesPayload<ExtArgs>[]
      Templates: Prisma.$BountiesTemplatesPayload<ExtArgs>[]
      Grants: Prisma.$GrantsPayload<ExtArgs>[]
      User: Prisma.$UserPayload<ExtArgs>[]
      UserInvites: Prisma.$UserInvitesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      slug: string
      logo: string | null
      url: string | null
      industry: string
      twitter: string | null
      bio: string | null
      createdAt: Date
      updatedAt: Date
      isArchived: boolean
      isActive: boolean
      entityName: string | null
      isVerified: boolean
      isCaution: boolean
      st: boolean
      verificationInfo: Prisma.JsonValue | null
    }, ExtArgs["result"]["sponsors"]>
    composites: {}
  }

  type SponsorsGetPayload<S extends boolean | null | undefined | SponsorsDefaultArgs> = $Result.GetResult<Prisma.$SponsorsPayload, S>

  type SponsorsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SponsorsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SponsorsCountAggregateInputType | true
    }

  export interface SponsorsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Sponsors'], meta: { name: 'Sponsors' } }
    /**
     * Find zero or one Sponsors that matches the filter.
     * @param {SponsorsFindUniqueArgs} args - Arguments to find a Sponsors
     * @example
     * // Get one Sponsors
     * const sponsors = await prisma.sponsors.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SponsorsFindUniqueArgs>(args: SelectSubset<T, SponsorsFindUniqueArgs<ExtArgs>>): Prisma__SponsorsClient<$Result.GetResult<Prisma.$SponsorsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sponsors that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SponsorsFindUniqueOrThrowArgs} args - Arguments to find a Sponsors
     * @example
     * // Get one Sponsors
     * const sponsors = await prisma.sponsors.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SponsorsFindUniqueOrThrowArgs>(args: SelectSubset<T, SponsorsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SponsorsClient<$Result.GetResult<Prisma.$SponsorsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sponsors that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SponsorsFindFirstArgs} args - Arguments to find a Sponsors
     * @example
     * // Get one Sponsors
     * const sponsors = await prisma.sponsors.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SponsorsFindFirstArgs>(args?: SelectSubset<T, SponsorsFindFirstArgs<ExtArgs>>): Prisma__SponsorsClient<$Result.GetResult<Prisma.$SponsorsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sponsors that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SponsorsFindFirstOrThrowArgs} args - Arguments to find a Sponsors
     * @example
     * // Get one Sponsors
     * const sponsors = await prisma.sponsors.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SponsorsFindFirstOrThrowArgs>(args?: SelectSubset<T, SponsorsFindFirstOrThrowArgs<ExtArgs>>): Prisma__SponsorsClient<$Result.GetResult<Prisma.$SponsorsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sponsors that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SponsorsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sponsors
     * const sponsors = await prisma.sponsors.findMany()
     * 
     * // Get first 10 Sponsors
     * const sponsors = await prisma.sponsors.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sponsorsWithIdOnly = await prisma.sponsors.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SponsorsFindManyArgs>(args?: SelectSubset<T, SponsorsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SponsorsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sponsors.
     * @param {SponsorsCreateArgs} args - Arguments to create a Sponsors.
     * @example
     * // Create one Sponsors
     * const Sponsors = await prisma.sponsors.create({
     *   data: {
     *     // ... data to create a Sponsors
     *   }
     * })
     * 
     */
    create<T extends SponsorsCreateArgs>(args: SelectSubset<T, SponsorsCreateArgs<ExtArgs>>): Prisma__SponsorsClient<$Result.GetResult<Prisma.$SponsorsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sponsors.
     * @param {SponsorsCreateManyArgs} args - Arguments to create many Sponsors.
     * @example
     * // Create many Sponsors
     * const sponsors = await prisma.sponsors.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SponsorsCreateManyArgs>(args?: SelectSubset<T, SponsorsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sponsors.
     * @param {SponsorsDeleteArgs} args - Arguments to delete one Sponsors.
     * @example
     * // Delete one Sponsors
     * const Sponsors = await prisma.sponsors.delete({
     *   where: {
     *     // ... filter to delete one Sponsors
     *   }
     * })
     * 
     */
    delete<T extends SponsorsDeleteArgs>(args: SelectSubset<T, SponsorsDeleteArgs<ExtArgs>>): Prisma__SponsorsClient<$Result.GetResult<Prisma.$SponsorsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sponsors.
     * @param {SponsorsUpdateArgs} args - Arguments to update one Sponsors.
     * @example
     * // Update one Sponsors
     * const sponsors = await prisma.sponsors.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SponsorsUpdateArgs>(args: SelectSubset<T, SponsorsUpdateArgs<ExtArgs>>): Prisma__SponsorsClient<$Result.GetResult<Prisma.$SponsorsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sponsors.
     * @param {SponsorsDeleteManyArgs} args - Arguments to filter Sponsors to delete.
     * @example
     * // Delete a few Sponsors
     * const { count } = await prisma.sponsors.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SponsorsDeleteManyArgs>(args?: SelectSubset<T, SponsorsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sponsors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SponsorsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sponsors
     * const sponsors = await prisma.sponsors.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SponsorsUpdateManyArgs>(args: SelectSubset<T, SponsorsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sponsors.
     * @param {SponsorsUpsertArgs} args - Arguments to update or create a Sponsors.
     * @example
     * // Update or create a Sponsors
     * const sponsors = await prisma.sponsors.upsert({
     *   create: {
     *     // ... data to create a Sponsors
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sponsors we want to update
     *   }
     * })
     */
    upsert<T extends SponsorsUpsertArgs>(args: SelectSubset<T, SponsorsUpsertArgs<ExtArgs>>): Prisma__SponsorsClient<$Result.GetResult<Prisma.$SponsorsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sponsors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SponsorsCountArgs} args - Arguments to filter Sponsors to count.
     * @example
     * // Count the number of Sponsors
     * const count = await prisma.sponsors.count({
     *   where: {
     *     // ... the filter for the Sponsors we want to count
     *   }
     * })
    **/
    count<T extends SponsorsCountArgs>(
      args?: Subset<T, SponsorsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SponsorsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sponsors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SponsorsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SponsorsAggregateArgs>(args: Subset<T, SponsorsAggregateArgs>): Prisma.PrismaPromise<GetSponsorsAggregateType<T>>

    /**
     * Group by Sponsors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SponsorsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SponsorsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SponsorsGroupByArgs['orderBy'] }
        : { orderBy?: SponsorsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SponsorsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSponsorsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Sponsors model
   */
  readonly fields: SponsorsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Sponsors.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SponsorsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Hackathon<T extends Sponsors$HackathonArgs<ExtArgs> = {}>(args?: Subset<T, Sponsors$HackathonArgs<ExtArgs>>): Prisma__HackathonClient<$Result.GetResult<Prisma.$HackathonPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    UserSponsors<T extends Sponsors$UserSponsorsArgs<ExtArgs> = {}>(args?: Subset<T, Sponsors$UserSponsorsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserSponsorsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Bounties<T extends Sponsors$BountiesArgs<ExtArgs> = {}>(args?: Subset<T, Sponsors$BountiesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BountiesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Templates<T extends Sponsors$TemplatesArgs<ExtArgs> = {}>(args?: Subset<T, Sponsors$TemplatesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BountiesTemplatesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Grants<T extends Sponsors$GrantsArgs<ExtArgs> = {}>(args?: Subset<T, Sponsors$GrantsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GrantsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    User<T extends Sponsors$UserArgs<ExtArgs> = {}>(args?: Subset<T, Sponsors$UserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    UserInvites<T extends Sponsors$UserInvitesArgs<ExtArgs> = {}>(args?: Subset<T, Sponsors$UserInvitesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserInvitesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Sponsors model
   */
  interface SponsorsFieldRefs {
    readonly id: FieldRef<"Sponsors", 'String'>
    readonly name: FieldRef<"Sponsors", 'String'>
    readonly slug: FieldRef<"Sponsors", 'String'>
    readonly logo: FieldRef<"Sponsors", 'String'>
    readonly url: FieldRef<"Sponsors", 'String'>
    readonly industry: FieldRef<"Sponsors", 'String'>
    readonly twitter: FieldRef<"Sponsors", 'String'>
    readonly bio: FieldRef<"Sponsors", 'String'>
    readonly createdAt: FieldRef<"Sponsors", 'DateTime'>
    readonly updatedAt: FieldRef<"Sponsors", 'DateTime'>
    readonly isArchived: FieldRef<"Sponsors", 'Boolean'>
    readonly isActive: FieldRef<"Sponsors", 'Boolean'>
    readonly entityName: FieldRef<"Sponsors", 'String'>
    readonly isVerified: FieldRef<"Sponsors", 'Boolean'>
    readonly isCaution: FieldRef<"Sponsors", 'Boolean'>
    readonly st: FieldRef<"Sponsors", 'Boolean'>
    readonly verificationInfo: FieldRef<"Sponsors", 'Json'>
  }
    

  // Custom InputTypes
  /**
   * Sponsors findUnique
   */
  export type SponsorsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sponsors
     */
    select?: SponsorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sponsors
     */
    omit?: SponsorsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SponsorsInclude<ExtArgs> | null
    /**
     * Filter, which Sponsors to fetch.
     */
    where: SponsorsWhereUniqueInput
  }

  /**
   * Sponsors findUniqueOrThrow
   */
  export type SponsorsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sponsors
     */
    select?: SponsorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sponsors
     */
    omit?: SponsorsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SponsorsInclude<ExtArgs> | null
    /**
     * Filter, which Sponsors to fetch.
     */
    where: SponsorsWhereUniqueInput
  }

  /**
   * Sponsors findFirst
   */
  export type SponsorsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sponsors
     */
    select?: SponsorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sponsors
     */
    omit?: SponsorsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SponsorsInclude<ExtArgs> | null
    /**
     * Filter, which Sponsors to fetch.
     */
    where?: SponsorsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sponsors to fetch.
     */
    orderBy?: SponsorsOrderByWithRelationInput | SponsorsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Sponsors.
     */
    cursor?: SponsorsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sponsors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sponsors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Sponsors.
     */
    distinct?: SponsorsScalarFieldEnum | SponsorsScalarFieldEnum[]
  }

  /**
   * Sponsors findFirstOrThrow
   */
  export type SponsorsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sponsors
     */
    select?: SponsorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sponsors
     */
    omit?: SponsorsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SponsorsInclude<ExtArgs> | null
    /**
     * Filter, which Sponsors to fetch.
     */
    where?: SponsorsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sponsors to fetch.
     */
    orderBy?: SponsorsOrderByWithRelationInput | SponsorsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Sponsors.
     */
    cursor?: SponsorsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sponsors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sponsors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Sponsors.
     */
    distinct?: SponsorsScalarFieldEnum | SponsorsScalarFieldEnum[]
  }

  /**
   * Sponsors findMany
   */
  export type SponsorsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sponsors
     */
    select?: SponsorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sponsors
     */
    omit?: SponsorsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SponsorsInclude<ExtArgs> | null
    /**
     * Filter, which Sponsors to fetch.
     */
    where?: SponsorsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sponsors to fetch.
     */
    orderBy?: SponsorsOrderByWithRelationInput | SponsorsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Sponsors.
     */
    cursor?: SponsorsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sponsors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sponsors.
     */
    skip?: number
    distinct?: SponsorsScalarFieldEnum | SponsorsScalarFieldEnum[]
  }

  /**
   * Sponsors create
   */
  export type SponsorsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sponsors
     */
    select?: SponsorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sponsors
     */
    omit?: SponsorsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SponsorsInclude<ExtArgs> | null
    /**
     * The data needed to create a Sponsors.
     */
    data: XOR<SponsorsCreateInput, SponsorsUncheckedCreateInput>
  }

  /**
   * Sponsors createMany
   */
  export type SponsorsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Sponsors.
     */
    data: SponsorsCreateManyInput | SponsorsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Sponsors update
   */
  export type SponsorsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sponsors
     */
    select?: SponsorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sponsors
     */
    omit?: SponsorsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SponsorsInclude<ExtArgs> | null
    /**
     * The data needed to update a Sponsors.
     */
    data: XOR<SponsorsUpdateInput, SponsorsUncheckedUpdateInput>
    /**
     * Choose, which Sponsors to update.
     */
    where: SponsorsWhereUniqueInput
  }

  /**
   * Sponsors updateMany
   */
  export type SponsorsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Sponsors.
     */
    data: XOR<SponsorsUpdateManyMutationInput, SponsorsUncheckedUpdateManyInput>
    /**
     * Filter which Sponsors to update
     */
    where?: SponsorsWhereInput
    /**
     * Limit how many Sponsors to update.
     */
    limit?: number
  }

  /**
   * Sponsors upsert
   */
  export type SponsorsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sponsors
     */
    select?: SponsorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sponsors
     */
    omit?: SponsorsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SponsorsInclude<ExtArgs> | null
    /**
     * The filter to search for the Sponsors to update in case it exists.
     */
    where: SponsorsWhereUniqueInput
    /**
     * In case the Sponsors found by the `where` argument doesn't exist, create a new Sponsors with this data.
     */
    create: XOR<SponsorsCreateInput, SponsorsUncheckedCreateInput>
    /**
     * In case the Sponsors was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SponsorsUpdateInput, SponsorsUncheckedUpdateInput>
  }

  /**
   * Sponsors delete
   */
  export type SponsorsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sponsors
     */
    select?: SponsorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sponsors
     */
    omit?: SponsorsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SponsorsInclude<ExtArgs> | null
    /**
     * Filter which Sponsors to delete.
     */
    where: SponsorsWhereUniqueInput
  }

  /**
   * Sponsors deleteMany
   */
  export type SponsorsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Sponsors to delete
     */
    where?: SponsorsWhereInput
    /**
     * Limit how many Sponsors to delete.
     */
    limit?: number
  }

  /**
   * Sponsors.Hackathon
   */
  export type Sponsors$HackathonArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Hackathon
     */
    select?: HackathonSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Hackathon
     */
    omit?: HackathonOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HackathonInclude<ExtArgs> | null
    where?: HackathonWhereInput
  }

  /**
   * Sponsors.UserSponsors
   */
  export type Sponsors$UserSponsorsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSponsors
     */
    select?: UserSponsorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSponsors
     */
    omit?: UserSponsorsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSponsorsInclude<ExtArgs> | null
    where?: UserSponsorsWhereInput
    orderBy?: UserSponsorsOrderByWithRelationInput | UserSponsorsOrderByWithRelationInput[]
    cursor?: UserSponsorsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserSponsorsScalarFieldEnum | UserSponsorsScalarFieldEnum[]
  }

  /**
   * Sponsors.Bounties
   */
  export type Sponsors$BountiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bounties
     */
    select?: BountiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Bounties
     */
    omit?: BountiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BountiesInclude<ExtArgs> | null
    where?: BountiesWhereInput
    orderBy?: BountiesOrderByWithRelationInput | BountiesOrderByWithRelationInput[]
    cursor?: BountiesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BountiesScalarFieldEnum | BountiesScalarFieldEnum[]
  }

  /**
   * Sponsors.Templates
   */
  export type Sponsors$TemplatesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BountiesTemplates
     */
    select?: BountiesTemplatesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BountiesTemplates
     */
    omit?: BountiesTemplatesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BountiesTemplatesInclude<ExtArgs> | null
    where?: BountiesTemplatesWhereInput
    orderBy?: BountiesTemplatesOrderByWithRelationInput | BountiesTemplatesOrderByWithRelationInput[]
    cursor?: BountiesTemplatesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BountiesTemplatesScalarFieldEnum | BountiesTemplatesScalarFieldEnum[]
  }

  /**
   * Sponsors.Grants
   */
  export type Sponsors$GrantsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Grants
     */
    select?: GrantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Grants
     */
    omit?: GrantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GrantsInclude<ExtArgs> | null
    where?: GrantsWhereInput
    orderBy?: GrantsOrderByWithRelationInput | GrantsOrderByWithRelationInput[]
    cursor?: GrantsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: GrantsScalarFieldEnum | GrantsScalarFieldEnum[]
  }

  /**
   * Sponsors.User
   */
  export type Sponsors$UserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * Sponsors.UserInvites
   */
  export type Sponsors$UserInvitesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserInvites
     */
    select?: UserInvitesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserInvites
     */
    omit?: UserInvitesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInvitesInclude<ExtArgs> | null
    where?: UserInvitesWhereInput
    orderBy?: UserInvitesOrderByWithRelationInput | UserInvitesOrderByWithRelationInput[]
    cursor?: UserInvitesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserInvitesScalarFieldEnum | UserInvitesScalarFieldEnum[]
  }

  /**
   * Sponsors without action
   */
  export type SponsorsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sponsors
     */
    select?: SponsorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sponsors
     */
    omit?: SponsorsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SponsorsInclude<ExtArgs> | null
  }


  /**
   * Model Account
   */

  export type AggregateAccount = {
    _count: AccountCountAggregateOutputType | null
    _avg: AccountAvgAggregateOutputType | null
    _sum: AccountSumAggregateOutputType | null
    _min: AccountMinAggregateOutputType | null
    _max: AccountMaxAggregateOutputType | null
  }

  export type AccountAvgAggregateOutputType = {
    expires_at: number | null
  }

  export type AccountSumAggregateOutputType = {
    expires_at: number | null
  }

  export type AccountMinAggregateOutputType = {
    id: string | null
    userId: string | null
    type: string | null
    provider: string | null
    providerAccountId: string | null
    refresh_token: string | null
    access_token: string | null
    expires_at: number | null
    token_type: string | null
    scope: string | null
    id_token: string | null
    session_state: string | null
  }

  export type AccountMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    type: string | null
    provider: string | null
    providerAccountId: string | null
    refresh_token: string | null
    access_token: string | null
    expires_at: number | null
    token_type: string | null
    scope: string | null
    id_token: string | null
    session_state: string | null
  }

  export type AccountCountAggregateOutputType = {
    id: number
    userId: number
    type: number
    provider: number
    providerAccountId: number
    refresh_token: number
    access_token: number
    expires_at: number
    token_type: number
    scope: number
    id_token: number
    session_state: number
    _all: number
  }


  export type AccountAvgAggregateInputType = {
    expires_at?: true
  }

  export type AccountSumAggregateInputType = {
    expires_at?: true
  }

  export type AccountMinAggregateInputType = {
    id?: true
    userId?: true
    type?: true
    provider?: true
    providerAccountId?: true
    refresh_token?: true
    access_token?: true
    expires_at?: true
    token_type?: true
    scope?: true
    id_token?: true
    session_state?: true
  }

  export type AccountMaxAggregateInputType = {
    id?: true
    userId?: true
    type?: true
    provider?: true
    providerAccountId?: true
    refresh_token?: true
    access_token?: true
    expires_at?: true
    token_type?: true
    scope?: true
    id_token?: true
    session_state?: true
  }

  export type AccountCountAggregateInputType = {
    id?: true
    userId?: true
    type?: true
    provider?: true
    providerAccountId?: true
    refresh_token?: true
    access_token?: true
    expires_at?: true
    token_type?: true
    scope?: true
    id_token?: true
    session_state?: true
    _all?: true
  }

  export type AccountAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Account to aggregate.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Accounts
    **/
    _count?: true | AccountCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AccountAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AccountSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AccountMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AccountMaxAggregateInputType
  }

  export type GetAccountAggregateType<T extends AccountAggregateArgs> = {
        [P in keyof T & keyof AggregateAccount]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAccount[P]>
      : GetScalarType<T[P], AggregateAccount[P]>
  }




  export type AccountGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AccountWhereInput
    orderBy?: AccountOrderByWithAggregationInput | AccountOrderByWithAggregationInput[]
    by: AccountScalarFieldEnum[] | AccountScalarFieldEnum
    having?: AccountScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AccountCountAggregateInputType | true
    _avg?: AccountAvgAggregateInputType
    _sum?: AccountSumAggregateInputType
    _min?: AccountMinAggregateInputType
    _max?: AccountMaxAggregateInputType
  }

  export type AccountGroupByOutputType = {
    id: string
    userId: string
    type: string
    provider: string
    providerAccountId: string
    refresh_token: string | null
    access_token: string | null
    expires_at: number | null
    token_type: string | null
    scope: string | null
    id_token: string | null
    session_state: string | null
    _count: AccountCountAggregateOutputType | null
    _avg: AccountAvgAggregateOutputType | null
    _sum: AccountSumAggregateOutputType | null
    _min: AccountMinAggregateOutputType | null
    _max: AccountMaxAggregateOutputType | null
  }

  type GetAccountGroupByPayload<T extends AccountGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AccountGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AccountGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AccountGroupByOutputType[P]>
            : GetScalarType<T[P], AccountGroupByOutputType[P]>
        }
      >
    >


  export type AccountSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    type?: boolean
    provider?: boolean
    providerAccountId?: boolean
    refresh_token?: boolean
    access_token?: boolean
    expires_at?: boolean
    token_type?: boolean
    scope?: boolean
    id_token?: boolean
    session_state?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["account"]>



  export type AccountSelectScalar = {
    id?: boolean
    userId?: boolean
    type?: boolean
    provider?: boolean
    providerAccountId?: boolean
    refresh_token?: boolean
    access_token?: boolean
    expires_at?: boolean
    token_type?: boolean
    scope?: boolean
    id_token?: boolean
    session_state?: boolean
  }

  export type AccountOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "type" | "provider" | "providerAccountId" | "refresh_token" | "access_token" | "expires_at" | "token_type" | "scope" | "id_token" | "session_state", ExtArgs["result"]["account"]>
  export type AccountInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $AccountPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Account"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      type: string
      provider: string
      providerAccountId: string
      refresh_token: string | null
      access_token: string | null
      expires_at: number | null
      token_type: string | null
      scope: string | null
      id_token: string | null
      session_state: string | null
    }, ExtArgs["result"]["account"]>
    composites: {}
  }

  type AccountGetPayload<S extends boolean | null | undefined | AccountDefaultArgs> = $Result.GetResult<Prisma.$AccountPayload, S>

  type AccountCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AccountFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AccountCountAggregateInputType | true
    }

  export interface AccountDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Account'], meta: { name: 'Account' } }
    /**
     * Find zero or one Account that matches the filter.
     * @param {AccountFindUniqueArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AccountFindUniqueArgs>(args: SelectSubset<T, AccountFindUniqueArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Account that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AccountFindUniqueOrThrowArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AccountFindUniqueOrThrowArgs>(args: SelectSubset<T, AccountFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Account that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountFindFirstArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AccountFindFirstArgs>(args?: SelectSubset<T, AccountFindFirstArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Account that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountFindFirstOrThrowArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AccountFindFirstOrThrowArgs>(args?: SelectSubset<T, AccountFindFirstOrThrowArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Accounts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Accounts
     * const accounts = await prisma.account.findMany()
     * 
     * // Get first 10 Accounts
     * const accounts = await prisma.account.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const accountWithIdOnly = await prisma.account.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AccountFindManyArgs>(args?: SelectSubset<T, AccountFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Account.
     * @param {AccountCreateArgs} args - Arguments to create a Account.
     * @example
     * // Create one Account
     * const Account = await prisma.account.create({
     *   data: {
     *     // ... data to create a Account
     *   }
     * })
     * 
     */
    create<T extends AccountCreateArgs>(args: SelectSubset<T, AccountCreateArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Accounts.
     * @param {AccountCreateManyArgs} args - Arguments to create many Accounts.
     * @example
     * // Create many Accounts
     * const account = await prisma.account.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AccountCreateManyArgs>(args?: SelectSubset<T, AccountCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Account.
     * @param {AccountDeleteArgs} args - Arguments to delete one Account.
     * @example
     * // Delete one Account
     * const Account = await prisma.account.delete({
     *   where: {
     *     // ... filter to delete one Account
     *   }
     * })
     * 
     */
    delete<T extends AccountDeleteArgs>(args: SelectSubset<T, AccountDeleteArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Account.
     * @param {AccountUpdateArgs} args - Arguments to update one Account.
     * @example
     * // Update one Account
     * const account = await prisma.account.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AccountUpdateArgs>(args: SelectSubset<T, AccountUpdateArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Accounts.
     * @param {AccountDeleteManyArgs} args - Arguments to filter Accounts to delete.
     * @example
     * // Delete a few Accounts
     * const { count } = await prisma.account.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AccountDeleteManyArgs>(args?: SelectSubset<T, AccountDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Accounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Accounts
     * const account = await prisma.account.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AccountUpdateManyArgs>(args: SelectSubset<T, AccountUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Account.
     * @param {AccountUpsertArgs} args - Arguments to update or create a Account.
     * @example
     * // Update or create a Account
     * const account = await prisma.account.upsert({
     *   create: {
     *     // ... data to create a Account
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Account we want to update
     *   }
     * })
     */
    upsert<T extends AccountUpsertArgs>(args: SelectSubset<T, AccountUpsertArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Accounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountCountArgs} args - Arguments to filter Accounts to count.
     * @example
     * // Count the number of Accounts
     * const count = await prisma.account.count({
     *   where: {
     *     // ... the filter for the Accounts we want to count
     *   }
     * })
    **/
    count<T extends AccountCountArgs>(
      args?: Subset<T, AccountCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AccountCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Account.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AccountAggregateArgs>(args: Subset<T, AccountAggregateArgs>): Prisma.PrismaPromise<GetAccountAggregateType<T>>

    /**
     * Group by Account.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AccountGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AccountGroupByArgs['orderBy'] }
        : { orderBy?: AccountGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AccountGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAccountGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Account model
   */
  readonly fields: AccountFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Account.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AccountClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Account model
   */
  interface AccountFieldRefs {
    readonly id: FieldRef<"Account", 'String'>
    readonly userId: FieldRef<"Account", 'String'>
    readonly type: FieldRef<"Account", 'String'>
    readonly provider: FieldRef<"Account", 'String'>
    readonly providerAccountId: FieldRef<"Account", 'String'>
    readonly refresh_token: FieldRef<"Account", 'String'>
    readonly access_token: FieldRef<"Account", 'String'>
    readonly expires_at: FieldRef<"Account", 'Int'>
    readonly token_type: FieldRef<"Account", 'String'>
    readonly scope: FieldRef<"Account", 'String'>
    readonly id_token: FieldRef<"Account", 'String'>
    readonly session_state: FieldRef<"Account", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Account findUnique
   */
  export type AccountFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account findUniqueOrThrow
   */
  export type AccountFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account findFirst
   */
  export type AccountFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Accounts.
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Accounts.
     */
    distinct?: AccountScalarFieldEnum | AccountScalarFieldEnum[]
  }

  /**
   * Account findFirstOrThrow
   */
  export type AccountFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Accounts.
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Accounts.
     */
    distinct?: AccountScalarFieldEnum | AccountScalarFieldEnum[]
  }

  /**
   * Account findMany
   */
  export type AccountFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Accounts to fetch.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Accounts.
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    distinct?: AccountScalarFieldEnum | AccountScalarFieldEnum[]
  }

  /**
   * Account create
   */
  export type AccountCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * The data needed to create a Account.
     */
    data: XOR<AccountCreateInput, AccountUncheckedCreateInput>
  }

  /**
   * Account createMany
   */
  export type AccountCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Accounts.
     */
    data: AccountCreateManyInput | AccountCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Account update
   */
  export type AccountUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * The data needed to update a Account.
     */
    data: XOR<AccountUpdateInput, AccountUncheckedUpdateInput>
    /**
     * Choose, which Account to update.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account updateMany
   */
  export type AccountUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Accounts.
     */
    data: XOR<AccountUpdateManyMutationInput, AccountUncheckedUpdateManyInput>
    /**
     * Filter which Accounts to update
     */
    where?: AccountWhereInput
    /**
     * Limit how many Accounts to update.
     */
    limit?: number
  }

  /**
   * Account upsert
   */
  export type AccountUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * The filter to search for the Account to update in case it exists.
     */
    where: AccountWhereUniqueInput
    /**
     * In case the Account found by the `where` argument doesn't exist, create a new Account with this data.
     */
    create: XOR<AccountCreateInput, AccountUncheckedCreateInput>
    /**
     * In case the Account was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AccountUpdateInput, AccountUncheckedUpdateInput>
  }

  /**
   * Account delete
   */
  export type AccountDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter which Account to delete.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account deleteMany
   */
  export type AccountDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Accounts to delete
     */
    where?: AccountWhereInput
    /**
     * Limit how many Accounts to delete.
     */
    limit?: number
  }

  /**
   * Account without action
   */
  export type AccountDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
  }


  /**
   * Model Session
   */

  export type AggregateSession = {
    _count: SessionCountAggregateOutputType | null
    _min: SessionMinAggregateOutputType | null
    _max: SessionMaxAggregateOutputType | null
  }

  export type SessionMinAggregateOutputType = {
    id: string | null
    sessionToken: string | null
    userId: string | null
    expires: Date | null
  }

  export type SessionMaxAggregateOutputType = {
    id: string | null
    sessionToken: string | null
    userId: string | null
    expires: Date | null
  }

  export type SessionCountAggregateOutputType = {
    id: number
    sessionToken: number
    userId: number
    expires: number
    _all: number
  }


  export type SessionMinAggregateInputType = {
    id?: true
    sessionToken?: true
    userId?: true
    expires?: true
  }

  export type SessionMaxAggregateInputType = {
    id?: true
    sessionToken?: true
    userId?: true
    expires?: true
  }

  export type SessionCountAggregateInputType = {
    id?: true
    sessionToken?: true
    userId?: true
    expires?: true
    _all?: true
  }

  export type SessionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Session to aggregate.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Sessions
    **/
    _count?: true | SessionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SessionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SessionMaxAggregateInputType
  }

  export type GetSessionAggregateType<T extends SessionAggregateArgs> = {
        [P in keyof T & keyof AggregateSession]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSession[P]>
      : GetScalarType<T[P], AggregateSession[P]>
  }




  export type SessionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SessionWhereInput
    orderBy?: SessionOrderByWithAggregationInput | SessionOrderByWithAggregationInput[]
    by: SessionScalarFieldEnum[] | SessionScalarFieldEnum
    having?: SessionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SessionCountAggregateInputType | true
    _min?: SessionMinAggregateInputType
    _max?: SessionMaxAggregateInputType
  }

  export type SessionGroupByOutputType = {
    id: string
    sessionToken: string
    userId: string
    expires: Date
    _count: SessionCountAggregateOutputType | null
    _min: SessionMinAggregateOutputType | null
    _max: SessionMaxAggregateOutputType | null
  }

  type GetSessionGroupByPayload<T extends SessionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SessionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SessionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SessionGroupByOutputType[P]>
            : GetScalarType<T[P], SessionGroupByOutputType[P]>
        }
      >
    >


  export type SessionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sessionToken?: boolean
    userId?: boolean
    expires?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["session"]>



  export type SessionSelectScalar = {
    id?: boolean
    sessionToken?: boolean
    userId?: boolean
    expires?: boolean
  }

  export type SessionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "sessionToken" | "userId" | "expires", ExtArgs["result"]["session"]>
  export type SessionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $SessionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Session"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      sessionToken: string
      userId: string
      expires: Date
    }, ExtArgs["result"]["session"]>
    composites: {}
  }

  type SessionGetPayload<S extends boolean | null | undefined | SessionDefaultArgs> = $Result.GetResult<Prisma.$SessionPayload, S>

  type SessionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SessionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SessionCountAggregateInputType | true
    }

  export interface SessionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Session'], meta: { name: 'Session' } }
    /**
     * Find zero or one Session that matches the filter.
     * @param {SessionFindUniqueArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SessionFindUniqueArgs>(args: SelectSubset<T, SessionFindUniqueArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Session that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SessionFindUniqueOrThrowArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SessionFindUniqueOrThrowArgs>(args: SelectSubset<T, SessionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Session that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionFindFirstArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SessionFindFirstArgs>(args?: SelectSubset<T, SessionFindFirstArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Session that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionFindFirstOrThrowArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SessionFindFirstOrThrowArgs>(args?: SelectSubset<T, SessionFindFirstOrThrowArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sessions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sessions
     * const sessions = await prisma.session.findMany()
     * 
     * // Get first 10 Sessions
     * const sessions = await prisma.session.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sessionWithIdOnly = await prisma.session.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SessionFindManyArgs>(args?: SelectSubset<T, SessionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Session.
     * @param {SessionCreateArgs} args - Arguments to create a Session.
     * @example
     * // Create one Session
     * const Session = await prisma.session.create({
     *   data: {
     *     // ... data to create a Session
     *   }
     * })
     * 
     */
    create<T extends SessionCreateArgs>(args: SelectSubset<T, SessionCreateArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sessions.
     * @param {SessionCreateManyArgs} args - Arguments to create many Sessions.
     * @example
     * // Create many Sessions
     * const session = await prisma.session.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SessionCreateManyArgs>(args?: SelectSubset<T, SessionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Session.
     * @param {SessionDeleteArgs} args - Arguments to delete one Session.
     * @example
     * // Delete one Session
     * const Session = await prisma.session.delete({
     *   where: {
     *     // ... filter to delete one Session
     *   }
     * })
     * 
     */
    delete<T extends SessionDeleteArgs>(args: SelectSubset<T, SessionDeleteArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Session.
     * @param {SessionUpdateArgs} args - Arguments to update one Session.
     * @example
     * // Update one Session
     * const session = await prisma.session.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SessionUpdateArgs>(args: SelectSubset<T, SessionUpdateArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sessions.
     * @param {SessionDeleteManyArgs} args - Arguments to filter Sessions to delete.
     * @example
     * // Delete a few Sessions
     * const { count } = await prisma.session.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SessionDeleteManyArgs>(args?: SelectSubset<T, SessionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sessions
     * const session = await prisma.session.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SessionUpdateManyArgs>(args: SelectSubset<T, SessionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Session.
     * @param {SessionUpsertArgs} args - Arguments to update or create a Session.
     * @example
     * // Update or create a Session
     * const session = await prisma.session.upsert({
     *   create: {
     *     // ... data to create a Session
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Session we want to update
     *   }
     * })
     */
    upsert<T extends SessionUpsertArgs>(args: SelectSubset<T, SessionUpsertArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionCountArgs} args - Arguments to filter Sessions to count.
     * @example
     * // Count the number of Sessions
     * const count = await prisma.session.count({
     *   where: {
     *     // ... the filter for the Sessions we want to count
     *   }
     * })
    **/
    count<T extends SessionCountArgs>(
      args?: Subset<T, SessionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SessionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Session.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SessionAggregateArgs>(args: Subset<T, SessionAggregateArgs>): Prisma.PrismaPromise<GetSessionAggregateType<T>>

    /**
     * Group by Session.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SessionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SessionGroupByArgs['orderBy'] }
        : { orderBy?: SessionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SessionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSessionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Session model
   */
  readonly fields: SessionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Session.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SessionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Session model
   */
  interface SessionFieldRefs {
    readonly id: FieldRef<"Session", 'String'>
    readonly sessionToken: FieldRef<"Session", 'String'>
    readonly userId: FieldRef<"Session", 'String'>
    readonly expires: FieldRef<"Session", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Session findUnique
   */
  export type SessionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session findUniqueOrThrow
   */
  export type SessionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session findFirst
   */
  export type SessionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Sessions.
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Sessions.
     */
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * Session findFirstOrThrow
   */
  export type SessionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Sessions.
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Sessions.
     */
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * Session findMany
   */
  export type SessionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Sessions to fetch.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Sessions.
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * Session create
   */
  export type SessionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * The data needed to create a Session.
     */
    data: XOR<SessionCreateInput, SessionUncheckedCreateInput>
  }

  /**
   * Session createMany
   */
  export type SessionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Sessions.
     */
    data: SessionCreateManyInput | SessionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Session update
   */
  export type SessionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * The data needed to update a Session.
     */
    data: XOR<SessionUpdateInput, SessionUncheckedUpdateInput>
    /**
     * Choose, which Session to update.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session updateMany
   */
  export type SessionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Sessions.
     */
    data: XOR<SessionUpdateManyMutationInput, SessionUncheckedUpdateManyInput>
    /**
     * Filter which Sessions to update
     */
    where?: SessionWhereInput
    /**
     * Limit how many Sessions to update.
     */
    limit?: number
  }

  /**
   * Session upsert
   */
  export type SessionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * The filter to search for the Session to update in case it exists.
     */
    where: SessionWhereUniqueInput
    /**
     * In case the Session found by the `where` argument doesn't exist, create a new Session with this data.
     */
    create: XOR<SessionCreateInput, SessionUncheckedCreateInput>
    /**
     * In case the Session was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SessionUpdateInput, SessionUncheckedUpdateInput>
  }

  /**
   * Session delete
   */
  export type SessionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter which Session to delete.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session deleteMany
   */
  export type SessionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Sessions to delete
     */
    where?: SessionWhereInput
    /**
     * Limit how many Sessions to delete.
     */
    limit?: number
  }

  /**
   * Session without action
   */
  export type SessionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
  }


  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserMinAggregateOutputType = {
    id: string | null
    publicKey: string | null
    walletAddress: string | null
    email: string | null
    username: string | null
    photo: string | null
    firstName: string | null
    lastName: string | null
    createdAt: Date | null
    updatedAt: Date | null
    isVerified: boolean | null
    role: string | null
    isTalentFilled: boolean | null
    interests: string | null
    bio: string | null
    twitter: string | null
    discord: string | null
    github: string | null
    linkedin: string | null
    website: string | null
    telegram: string | null
    community: string | null
    experience: string | null
    superteamLevel: string | null
    location: string | null
    cryptoExperience: string | null
    workPrefernce: string | null
    currentEmployer: string | null
    private: boolean | null
    currentSponsorId: string | null
    emailVerified: Date | null
    hackathonId: string | null
    featureModalShown: boolean | null
    stRecommended: boolean | null
    acceptedTOS: boolean | null
    stLead: string | null
    isBlocked: boolean | null
    privyDid: string | null
    isKYCVerified: boolean | null
    kycName: string | null
    kycCountry: string | null
    kycAddress: string | null
    kycDOB: string | null
    kycIDNumber: string | null
    kycIDType: string | null
  }

  export type UserMaxAggregateOutputType = {
    id: string | null
    publicKey: string | null
    walletAddress: string | null
    email: string | null
    username: string | null
    photo: string | null
    firstName: string | null
    lastName: string | null
    createdAt: Date | null
    updatedAt: Date | null
    isVerified: boolean | null
    role: string | null
    isTalentFilled: boolean | null
    interests: string | null
    bio: string | null
    twitter: string | null
    discord: string | null
    github: string | null
    linkedin: string | null
    website: string | null
    telegram: string | null
    community: string | null
    experience: string | null
    superteamLevel: string | null
    location: string | null
    cryptoExperience: string | null
    workPrefernce: string | null
    currentEmployer: string | null
    private: boolean | null
    currentSponsorId: string | null
    emailVerified: Date | null
    hackathonId: string | null
    featureModalShown: boolean | null
    stRecommended: boolean | null
    acceptedTOS: boolean | null
    stLead: string | null
    isBlocked: boolean | null
    privyDid: string | null
    isKYCVerified: boolean | null
    kycName: string | null
    kycCountry: string | null
    kycAddress: string | null
    kycDOB: string | null
    kycIDNumber: string | null
    kycIDType: string | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    publicKey: number
    walletAddress: number
    email: number
    username: number
    photo: number
    firstName: number
    lastName: number
    createdAt: number
    updatedAt: number
    isVerified: number
    role: number
    isTalentFilled: number
    interests: number
    bio: number
    twitter: number
    discord: number
    github: number
    linkedin: number
    website: number
    telegram: number
    community: number
    experience: number
    superteamLevel: number
    location: number
    cryptoExperience: number
    workPrefernce: number
    currentEmployer: number
    notifications: number
    private: number
    skills: number
    currentSponsorId: number
    emailVerified: number
    hackathonId: number
    featureModalShown: number
    surveysShown: number
    stRecommended: number
    acceptedTOS: number
    stLead: number
    isBlocked: number
    privyDid: number
    isKYCVerified: number
    kycName: number
    kycCountry: number
    kycAddress: number
    kycDOB: number
    kycIDNumber: number
    kycIDType: number
    _all: number
  }


  export type UserMinAggregateInputType = {
    id?: true
    publicKey?: true
    walletAddress?: true
    email?: true
    username?: true
    photo?: true
    firstName?: true
    lastName?: true
    createdAt?: true
    updatedAt?: true
    isVerified?: true
    role?: true
    isTalentFilled?: true
    interests?: true
    bio?: true
    twitter?: true
    discord?: true
    github?: true
    linkedin?: true
    website?: true
    telegram?: true
    community?: true
    experience?: true
    superteamLevel?: true
    location?: true
    cryptoExperience?: true
    workPrefernce?: true
    currentEmployer?: true
    private?: true
    currentSponsorId?: true
    emailVerified?: true
    hackathonId?: true
    featureModalShown?: true
    stRecommended?: true
    acceptedTOS?: true
    stLead?: true
    isBlocked?: true
    privyDid?: true
    isKYCVerified?: true
    kycName?: true
    kycCountry?: true
    kycAddress?: true
    kycDOB?: true
    kycIDNumber?: true
    kycIDType?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    publicKey?: true
    walletAddress?: true
    email?: true
    username?: true
    photo?: true
    firstName?: true
    lastName?: true
    createdAt?: true
    updatedAt?: true
    isVerified?: true
    role?: true
    isTalentFilled?: true
    interests?: true
    bio?: true
    twitter?: true
    discord?: true
    github?: true
    linkedin?: true
    website?: true
    telegram?: true
    community?: true
    experience?: true
    superteamLevel?: true
    location?: true
    cryptoExperience?: true
    workPrefernce?: true
    currentEmployer?: true
    private?: true
    currentSponsorId?: true
    emailVerified?: true
    hackathonId?: true
    featureModalShown?: true
    stRecommended?: true
    acceptedTOS?: true
    stLead?: true
    isBlocked?: true
    privyDid?: true
    isKYCVerified?: true
    kycName?: true
    kycCountry?: true
    kycAddress?: true
    kycDOB?: true
    kycIDNumber?: true
    kycIDType?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    publicKey?: true
    walletAddress?: true
    email?: true
    username?: true
    photo?: true
    firstName?: true
    lastName?: true
    createdAt?: true
    updatedAt?: true
    isVerified?: true
    role?: true
    isTalentFilled?: true
    interests?: true
    bio?: true
    twitter?: true
    discord?: true
    github?: true
    linkedin?: true
    website?: true
    telegram?: true
    community?: true
    experience?: true
    superteamLevel?: true
    location?: true
    cryptoExperience?: true
    workPrefernce?: true
    currentEmployer?: true
    notifications?: true
    private?: true
    skills?: true
    currentSponsorId?: true
    emailVerified?: true
    hackathonId?: true
    featureModalShown?: true
    surveysShown?: true
    stRecommended?: true
    acceptedTOS?: true
    stLead?: true
    isBlocked?: true
    privyDid?: true
    isKYCVerified?: true
    kycName?: true
    kycCountry?: true
    kycAddress?: true
    kycDOB?: true
    kycIDNumber?: true
    kycIDType?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: string
    publicKey: string | null
    walletAddress: string | null
    email: string
    username: string | null
    photo: string | null
    firstName: string | null
    lastName: string | null
    createdAt: Date
    updatedAt: Date
    isVerified: boolean
    role: string
    isTalentFilled: boolean
    interests: string | null
    bio: string | null
    twitter: string | null
    discord: string | null
    github: string | null
    linkedin: string | null
    website: string | null
    telegram: string | null
    community: string | null
    experience: string | null
    superteamLevel: string | null
    location: string | null
    cryptoExperience: string | null
    workPrefernce: string | null
    currentEmployer: string | null
    notifications: JsonValue | null
    private: boolean
    skills: JsonValue | null
    currentSponsorId: string | null
    emailVerified: Date | null
    hackathonId: string | null
    featureModalShown: boolean
    surveysShown: JsonValue | null
    stRecommended: boolean
    acceptedTOS: boolean
    stLead: string | null
    isBlocked: boolean
    privyDid: string
    isKYCVerified: boolean
    kycName: string | null
    kycCountry: string | null
    kycAddress: string | null
    kycDOB: string | null
    kycIDNumber: string | null
    kycIDType: string | null
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    publicKey?: boolean
    walletAddress?: boolean
    email?: boolean
    username?: boolean
    photo?: boolean
    firstName?: boolean
    lastName?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isVerified?: boolean
    role?: boolean
    isTalentFilled?: boolean
    interests?: boolean
    bio?: boolean
    twitter?: boolean
    discord?: boolean
    github?: boolean
    linkedin?: boolean
    website?: boolean
    telegram?: boolean
    community?: boolean
    experience?: boolean
    superteamLevel?: boolean
    location?: boolean
    cryptoExperience?: boolean
    workPrefernce?: boolean
    currentEmployer?: boolean
    notifications?: boolean
    private?: boolean
    skills?: boolean
    currentSponsorId?: boolean
    emailVerified?: boolean
    hackathonId?: boolean
    featureModalShown?: boolean
    surveysShown?: boolean
    stRecommended?: boolean
    acceptedTOS?: boolean
    stLead?: boolean
    isBlocked?: boolean
    privyDid?: boolean
    isKYCVerified?: boolean
    kycName?: boolean
    kycCountry?: boolean
    kycAddress?: boolean
    kycDOB?: boolean
    kycIDNumber?: boolean
    kycIDType?: boolean
    currentSponsor?: boolean | User$currentSponsorArgs<ExtArgs>
    UserSponsors?: boolean | User$UserSponsorsArgs<ExtArgs>
    poc?: boolean | User$pocArgs<ExtArgs>
    templates?: boolean | User$templatesArgs<ExtArgs>
    Comment?: boolean | User$CommentArgs<ExtArgs>
    Submission?: boolean | User$SubmissionArgs<ExtArgs>
    Grants?: boolean | User$GrantsArgs<ExtArgs>
    UserInvites?: boolean | User$UserInvitesArgs<ExtArgs>
    SubscribeBounty?: boolean | User$SubscribeBountyArgs<ExtArgs>
    PoW?: boolean | User$PoWArgs<ExtArgs>
    accounts?: boolean | User$accountsArgs<ExtArgs>
    sessions?: boolean | User$sessionsArgs<ExtArgs>
    Hackathon?: boolean | User$HackathonArgs<ExtArgs>
    emailSettings?: boolean | User$emailSettingsArgs<ExtArgs>
    TalentRankings?: boolean | User$TalentRankingsArgs<ExtArgs>
    Scouts?: boolean | User$ScoutsArgs<ExtArgs>
    GrantApplication?: boolean | User$GrantApplicationArgs<ExtArgs>
    SubscribeHackathon?: boolean | User$SubscribeHackathonArgs<ExtArgs>
    CreditLedger?: boolean | User$CreditLedgerArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>



  export type UserSelectScalar = {
    id?: boolean
    publicKey?: boolean
    walletAddress?: boolean
    email?: boolean
    username?: boolean
    photo?: boolean
    firstName?: boolean
    lastName?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isVerified?: boolean
    role?: boolean
    isTalentFilled?: boolean
    interests?: boolean
    bio?: boolean
    twitter?: boolean
    discord?: boolean
    github?: boolean
    linkedin?: boolean
    website?: boolean
    telegram?: boolean
    community?: boolean
    experience?: boolean
    superteamLevel?: boolean
    location?: boolean
    cryptoExperience?: boolean
    workPrefernce?: boolean
    currentEmployer?: boolean
    notifications?: boolean
    private?: boolean
    skills?: boolean
    currentSponsorId?: boolean
    emailVerified?: boolean
    hackathonId?: boolean
    featureModalShown?: boolean
    surveysShown?: boolean
    stRecommended?: boolean
    acceptedTOS?: boolean
    stLead?: boolean
    isBlocked?: boolean
    privyDid?: boolean
    isKYCVerified?: boolean
    kycName?: boolean
    kycCountry?: boolean
    kycAddress?: boolean
    kycDOB?: boolean
    kycIDNumber?: boolean
    kycIDType?: boolean
  }

  export type UserOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "publicKey" | "walletAddress" | "email" | "username" | "photo" | "firstName" | "lastName" | "createdAt" | "updatedAt" | "isVerified" | "role" | "isTalentFilled" | "interests" | "bio" | "twitter" | "discord" | "github" | "linkedin" | "website" | "telegram" | "community" | "experience" | "superteamLevel" | "location" | "cryptoExperience" | "workPrefernce" | "currentEmployer" | "notifications" | "private" | "skills" | "currentSponsorId" | "emailVerified" | "hackathonId" | "featureModalShown" | "surveysShown" | "stRecommended" | "acceptedTOS" | "stLead" | "isBlocked" | "privyDid" | "isKYCVerified" | "kycName" | "kycCountry" | "kycAddress" | "kycDOB" | "kycIDNumber" | "kycIDType", ExtArgs["result"]["user"]>
  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    currentSponsor?: boolean | User$currentSponsorArgs<ExtArgs>
    UserSponsors?: boolean | User$UserSponsorsArgs<ExtArgs>
    poc?: boolean | User$pocArgs<ExtArgs>
    templates?: boolean | User$templatesArgs<ExtArgs>
    Comment?: boolean | User$CommentArgs<ExtArgs>
    Submission?: boolean | User$SubmissionArgs<ExtArgs>
    Grants?: boolean | User$GrantsArgs<ExtArgs>
    UserInvites?: boolean | User$UserInvitesArgs<ExtArgs>
    SubscribeBounty?: boolean | User$SubscribeBountyArgs<ExtArgs>
    PoW?: boolean | User$PoWArgs<ExtArgs>
    accounts?: boolean | User$accountsArgs<ExtArgs>
    sessions?: boolean | User$sessionsArgs<ExtArgs>
    Hackathon?: boolean | User$HackathonArgs<ExtArgs>
    emailSettings?: boolean | User$emailSettingsArgs<ExtArgs>
    TalentRankings?: boolean | User$TalentRankingsArgs<ExtArgs>
    Scouts?: boolean | User$ScoutsArgs<ExtArgs>
    GrantApplication?: boolean | User$GrantApplicationArgs<ExtArgs>
    SubscribeHackathon?: boolean | User$SubscribeHackathonArgs<ExtArgs>
    CreditLedger?: boolean | User$CreditLedgerArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      currentSponsor: Prisma.$SponsorsPayload<ExtArgs> | null
      UserSponsors: Prisma.$UserSponsorsPayload<ExtArgs>[]
      poc: Prisma.$BountiesPayload<ExtArgs>[]
      templates: Prisma.$BountiesTemplatesPayload<ExtArgs>[]
      Comment: Prisma.$CommentPayload<ExtArgs>[]
      Submission: Prisma.$SubmissionPayload<ExtArgs>[]
      Grants: Prisma.$GrantsPayload<ExtArgs>[]
      UserInvites: Prisma.$UserInvitesPayload<ExtArgs>[]
      SubscribeBounty: Prisma.$SubscribeBountyPayload<ExtArgs>[]
      PoW: Prisma.$PoWPayload<ExtArgs>[]
      accounts: Prisma.$AccountPayload<ExtArgs>[]
      sessions: Prisma.$SessionPayload<ExtArgs>[]
      Hackathon: Prisma.$HackathonPayload<ExtArgs> | null
      emailSettings: Prisma.$EmailSettingsPayload<ExtArgs>[]
      TalentRankings: Prisma.$TalentRankingsPayload<ExtArgs>[]
      Scouts: Prisma.$ScoutsPayload<ExtArgs>[]
      GrantApplication: Prisma.$GrantApplicationPayload<ExtArgs>[]
      SubscribeHackathon: Prisma.$SubscribeHackathonPayload<ExtArgs>[]
      CreditLedger: Prisma.$CreditLedgerPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      publicKey: string | null
      walletAddress: string | null
      email: string
      username: string | null
      photo: string | null
      firstName: string | null
      lastName: string | null
      createdAt: Date
      updatedAt: Date
      isVerified: boolean
      role: string
      isTalentFilled: boolean
      interests: string | null
      bio: string | null
      twitter: string | null
      discord: string | null
      github: string | null
      linkedin: string | null
      website: string | null
      telegram: string | null
      community: string | null
      experience: string | null
      superteamLevel: string | null
      location: string | null
      cryptoExperience: string | null
      workPrefernce: string | null
      currentEmployer: string | null
      notifications: Prisma.JsonValue | null
      private: boolean
      skills: Prisma.JsonValue | null
      currentSponsorId: string | null
      emailVerified: Date | null
      hackathonId: string | null
      featureModalShown: boolean
      surveysShown: Prisma.JsonValue | null
      stRecommended: boolean
      acceptedTOS: boolean
      stLead: string | null
      isBlocked: boolean
      privyDid: string
      isKYCVerified: boolean
      kycName: string | null
      kycCountry: string | null
      kycAddress: string | null
      kycDOB: string | null
      kycIDNumber: string | null
      kycIDType: string | null
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    currentSponsor<T extends User$currentSponsorArgs<ExtArgs> = {}>(args?: Subset<T, User$currentSponsorArgs<ExtArgs>>): Prisma__SponsorsClient<$Result.GetResult<Prisma.$SponsorsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    UserSponsors<T extends User$UserSponsorsArgs<ExtArgs> = {}>(args?: Subset<T, User$UserSponsorsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserSponsorsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    poc<T extends User$pocArgs<ExtArgs> = {}>(args?: Subset<T, User$pocArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BountiesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    templates<T extends User$templatesArgs<ExtArgs> = {}>(args?: Subset<T, User$templatesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BountiesTemplatesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Comment<T extends User$CommentArgs<ExtArgs> = {}>(args?: Subset<T, User$CommentArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Submission<T extends User$SubmissionArgs<ExtArgs> = {}>(args?: Subset<T, User$SubmissionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SubmissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Grants<T extends User$GrantsArgs<ExtArgs> = {}>(args?: Subset<T, User$GrantsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GrantsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    UserInvites<T extends User$UserInvitesArgs<ExtArgs> = {}>(args?: Subset<T, User$UserInvitesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserInvitesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    SubscribeBounty<T extends User$SubscribeBountyArgs<ExtArgs> = {}>(args?: Subset<T, User$SubscribeBountyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SubscribeBountyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    PoW<T extends User$PoWArgs<ExtArgs> = {}>(args?: Subset<T, User$PoWArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PoWPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    accounts<T extends User$accountsArgs<ExtArgs> = {}>(args?: Subset<T, User$accountsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    sessions<T extends User$sessionsArgs<ExtArgs> = {}>(args?: Subset<T, User$sessionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Hackathon<T extends User$HackathonArgs<ExtArgs> = {}>(args?: Subset<T, User$HackathonArgs<ExtArgs>>): Prisma__HackathonClient<$Result.GetResult<Prisma.$HackathonPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    emailSettings<T extends User$emailSettingsArgs<ExtArgs> = {}>(args?: Subset<T, User$emailSettingsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EmailSettingsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    TalentRankings<T extends User$TalentRankingsArgs<ExtArgs> = {}>(args?: Subset<T, User$TalentRankingsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TalentRankingsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Scouts<T extends User$ScoutsArgs<ExtArgs> = {}>(args?: Subset<T, User$ScoutsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ScoutsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    GrantApplication<T extends User$GrantApplicationArgs<ExtArgs> = {}>(args?: Subset<T, User$GrantApplicationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GrantApplicationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    SubscribeHackathon<T extends User$SubscribeHackathonArgs<ExtArgs> = {}>(args?: Subset<T, User$SubscribeHackathonArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SubscribeHackathonPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    CreditLedger<T extends User$CreditLedgerArgs<ExtArgs> = {}>(args?: Subset<T, User$CreditLedgerArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CreditLedgerPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'String'>
    readonly publicKey: FieldRef<"User", 'String'>
    readonly walletAddress: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly username: FieldRef<"User", 'String'>
    readonly photo: FieldRef<"User", 'String'>
    readonly firstName: FieldRef<"User", 'String'>
    readonly lastName: FieldRef<"User", 'String'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
    readonly updatedAt: FieldRef<"User", 'DateTime'>
    readonly isVerified: FieldRef<"User", 'Boolean'>
    readonly role: FieldRef<"User", 'String'>
    readonly isTalentFilled: FieldRef<"User", 'Boolean'>
    readonly interests: FieldRef<"User", 'String'>
    readonly bio: FieldRef<"User", 'String'>
    readonly twitter: FieldRef<"User", 'String'>
    readonly discord: FieldRef<"User", 'String'>
    readonly github: FieldRef<"User", 'String'>
    readonly linkedin: FieldRef<"User", 'String'>
    readonly website: FieldRef<"User", 'String'>
    readonly telegram: FieldRef<"User", 'String'>
    readonly community: FieldRef<"User", 'String'>
    readonly experience: FieldRef<"User", 'String'>
    readonly superteamLevel: FieldRef<"User", 'String'>
    readonly location: FieldRef<"User", 'String'>
    readonly cryptoExperience: FieldRef<"User", 'String'>
    readonly workPrefernce: FieldRef<"User", 'String'>
    readonly currentEmployer: FieldRef<"User", 'String'>
    readonly notifications: FieldRef<"User", 'Json'>
    readonly private: FieldRef<"User", 'Boolean'>
    readonly skills: FieldRef<"User", 'Json'>
    readonly currentSponsorId: FieldRef<"User", 'String'>
    readonly emailVerified: FieldRef<"User", 'DateTime'>
    readonly hackathonId: FieldRef<"User", 'String'>
    readonly featureModalShown: FieldRef<"User", 'Boolean'>
    readonly surveysShown: FieldRef<"User", 'Json'>
    readonly stRecommended: FieldRef<"User", 'Boolean'>
    readonly acceptedTOS: FieldRef<"User", 'Boolean'>
    readonly stLead: FieldRef<"User", 'String'>
    readonly isBlocked: FieldRef<"User", 'Boolean'>
    readonly privyDid: FieldRef<"User", 'String'>
    readonly isKYCVerified: FieldRef<"User", 'Boolean'>
    readonly kycName: FieldRef<"User", 'String'>
    readonly kycCountry: FieldRef<"User", 'String'>
    readonly kycAddress: FieldRef<"User", 'String'>
    readonly kycDOB: FieldRef<"User", 'String'>
    readonly kycIDNumber: FieldRef<"User", 'String'>
    readonly kycIDType: FieldRef<"User", 'String'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to delete.
     */
    limit?: number
  }

  /**
   * User.currentSponsor
   */
  export type User$currentSponsorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sponsors
     */
    select?: SponsorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sponsors
     */
    omit?: SponsorsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SponsorsInclude<ExtArgs> | null
    where?: SponsorsWhereInput
  }

  /**
   * User.UserSponsors
   */
  export type User$UserSponsorsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSponsors
     */
    select?: UserSponsorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSponsors
     */
    omit?: UserSponsorsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSponsorsInclude<ExtArgs> | null
    where?: UserSponsorsWhereInput
    orderBy?: UserSponsorsOrderByWithRelationInput | UserSponsorsOrderByWithRelationInput[]
    cursor?: UserSponsorsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserSponsorsScalarFieldEnum | UserSponsorsScalarFieldEnum[]
  }

  /**
   * User.poc
   */
  export type User$pocArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bounties
     */
    select?: BountiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Bounties
     */
    omit?: BountiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BountiesInclude<ExtArgs> | null
    where?: BountiesWhereInput
    orderBy?: BountiesOrderByWithRelationInput | BountiesOrderByWithRelationInput[]
    cursor?: BountiesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BountiesScalarFieldEnum | BountiesScalarFieldEnum[]
  }

  /**
   * User.templates
   */
  export type User$templatesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BountiesTemplates
     */
    select?: BountiesTemplatesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BountiesTemplates
     */
    omit?: BountiesTemplatesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BountiesTemplatesInclude<ExtArgs> | null
    where?: BountiesTemplatesWhereInput
    orderBy?: BountiesTemplatesOrderByWithRelationInput | BountiesTemplatesOrderByWithRelationInput[]
    cursor?: BountiesTemplatesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BountiesTemplatesScalarFieldEnum | BountiesTemplatesScalarFieldEnum[]
  }

  /**
   * User.Comment
   */
  export type User$CommentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    where?: CommentWhereInput
    orderBy?: CommentOrderByWithRelationInput | CommentOrderByWithRelationInput[]
    cursor?: CommentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CommentScalarFieldEnum | CommentScalarFieldEnum[]
  }

  /**
   * User.Submission
   */
  export type User$SubmissionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Submission
     */
    select?: SubmissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Submission
     */
    omit?: SubmissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubmissionInclude<ExtArgs> | null
    where?: SubmissionWhereInput
    orderBy?: SubmissionOrderByWithRelationInput | SubmissionOrderByWithRelationInput[]
    cursor?: SubmissionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SubmissionScalarFieldEnum | SubmissionScalarFieldEnum[]
  }

  /**
   * User.Grants
   */
  export type User$GrantsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Grants
     */
    select?: GrantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Grants
     */
    omit?: GrantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GrantsInclude<ExtArgs> | null
    where?: GrantsWhereInput
    orderBy?: GrantsOrderByWithRelationInput | GrantsOrderByWithRelationInput[]
    cursor?: GrantsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: GrantsScalarFieldEnum | GrantsScalarFieldEnum[]
  }

  /**
   * User.UserInvites
   */
  export type User$UserInvitesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserInvites
     */
    select?: UserInvitesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserInvites
     */
    omit?: UserInvitesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInvitesInclude<ExtArgs> | null
    where?: UserInvitesWhereInput
    orderBy?: UserInvitesOrderByWithRelationInput | UserInvitesOrderByWithRelationInput[]
    cursor?: UserInvitesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserInvitesScalarFieldEnum | UserInvitesScalarFieldEnum[]
  }

  /**
   * User.SubscribeBounty
   */
  export type User$SubscribeBountyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscribeBounty
     */
    select?: SubscribeBountySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SubscribeBounty
     */
    omit?: SubscribeBountyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscribeBountyInclude<ExtArgs> | null
    where?: SubscribeBountyWhereInput
    orderBy?: SubscribeBountyOrderByWithRelationInput | SubscribeBountyOrderByWithRelationInput[]
    cursor?: SubscribeBountyWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SubscribeBountyScalarFieldEnum | SubscribeBountyScalarFieldEnum[]
  }

  /**
   * User.PoW
   */
  export type User$PoWArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PoW
     */
    select?: PoWSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PoW
     */
    omit?: PoWOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PoWInclude<ExtArgs> | null
    where?: PoWWhereInput
    orderBy?: PoWOrderByWithRelationInput | PoWOrderByWithRelationInput[]
    cursor?: PoWWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PoWScalarFieldEnum | PoWScalarFieldEnum[]
  }

  /**
   * User.accounts
   */
  export type User$accountsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    where?: AccountWhereInput
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    cursor?: AccountWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AccountScalarFieldEnum | AccountScalarFieldEnum[]
  }

  /**
   * User.sessions
   */
  export type User$sessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    where?: SessionWhereInput
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    cursor?: SessionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * User.Hackathon
   */
  export type User$HackathonArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Hackathon
     */
    select?: HackathonSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Hackathon
     */
    omit?: HackathonOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HackathonInclude<ExtArgs> | null
    where?: HackathonWhereInput
  }

  /**
   * User.emailSettings
   */
  export type User$emailSettingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EmailSettings
     */
    select?: EmailSettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EmailSettings
     */
    omit?: EmailSettingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmailSettingsInclude<ExtArgs> | null
    where?: EmailSettingsWhereInput
    orderBy?: EmailSettingsOrderByWithRelationInput | EmailSettingsOrderByWithRelationInput[]
    cursor?: EmailSettingsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EmailSettingsScalarFieldEnum | EmailSettingsScalarFieldEnum[]
  }

  /**
   * User.TalentRankings
   */
  export type User$TalentRankingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TalentRankings
     */
    select?: TalentRankingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TalentRankings
     */
    omit?: TalentRankingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TalentRankingsInclude<ExtArgs> | null
    where?: TalentRankingsWhereInput
    orderBy?: TalentRankingsOrderByWithRelationInput | TalentRankingsOrderByWithRelationInput[]
    cursor?: TalentRankingsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TalentRankingsScalarFieldEnum | TalentRankingsScalarFieldEnum[]
  }

  /**
   * User.Scouts
   */
  export type User$ScoutsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Scouts
     */
    select?: ScoutsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Scouts
     */
    omit?: ScoutsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScoutsInclude<ExtArgs> | null
    where?: ScoutsWhereInput
    orderBy?: ScoutsOrderByWithRelationInput | ScoutsOrderByWithRelationInput[]
    cursor?: ScoutsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ScoutsScalarFieldEnum | ScoutsScalarFieldEnum[]
  }

  /**
   * User.GrantApplication
   */
  export type User$GrantApplicationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GrantApplication
     */
    select?: GrantApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GrantApplication
     */
    omit?: GrantApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GrantApplicationInclude<ExtArgs> | null
    where?: GrantApplicationWhereInput
    orderBy?: GrantApplicationOrderByWithRelationInput | GrantApplicationOrderByWithRelationInput[]
    cursor?: GrantApplicationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: GrantApplicationScalarFieldEnum | GrantApplicationScalarFieldEnum[]
  }

  /**
   * User.SubscribeHackathon
   */
  export type User$SubscribeHackathonArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscribeHackathon
     */
    select?: SubscribeHackathonSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SubscribeHackathon
     */
    omit?: SubscribeHackathonOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscribeHackathonInclude<ExtArgs> | null
    where?: SubscribeHackathonWhereInput
    orderBy?: SubscribeHackathonOrderByWithRelationInput | SubscribeHackathonOrderByWithRelationInput[]
    cursor?: SubscribeHackathonWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SubscribeHackathonScalarFieldEnum | SubscribeHackathonScalarFieldEnum[]
  }

  /**
   * User.CreditLedger
   */
  export type User$CreditLedgerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CreditLedger
     */
    select?: CreditLedgerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CreditLedger
     */
    omit?: CreditLedgerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CreditLedgerInclude<ExtArgs> | null
    where?: CreditLedgerWhereInput
    orderBy?: CreditLedgerOrderByWithRelationInput | CreditLedgerOrderByWithRelationInput[]
    cursor?: CreditLedgerWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CreditLedgerScalarFieldEnum | CreditLedgerScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model Scouts
   */

  export type AggregateScouts = {
    _count: ScoutsCountAggregateOutputType | null
    _avg: ScoutsAvgAggregateOutputType | null
    _sum: ScoutsSumAggregateOutputType | null
    _min: ScoutsMinAggregateOutputType | null
    _max: ScoutsMaxAggregateOutputType | null
  }

  export type ScoutsAvgAggregateOutputType = {
    dollarsEarned: number | null
    score: Decimal | null
  }

  export type ScoutsSumAggregateOutputType = {
    dollarsEarned: number | null
    score: Decimal | null
  }

  export type ScoutsMinAggregateOutputType = {
    id: string | null
    userId: string | null
    listingId: string | null
    dollarsEarned: number | null
    score: Decimal | null
    invited: boolean | null
    createdAt: Date | null
  }

  export type ScoutsMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    listingId: string | null
    dollarsEarned: number | null
    score: Decimal | null
    invited: boolean | null
    createdAt: Date | null
  }

  export type ScoutsCountAggregateOutputType = {
    id: number
    userId: number
    listingId: number
    dollarsEarned: number
    score: number
    invited: number
    skills: number
    createdAt: number
    _all: number
  }


  export type ScoutsAvgAggregateInputType = {
    dollarsEarned?: true
    score?: true
  }

  export type ScoutsSumAggregateInputType = {
    dollarsEarned?: true
    score?: true
  }

  export type ScoutsMinAggregateInputType = {
    id?: true
    userId?: true
    listingId?: true
    dollarsEarned?: true
    score?: true
    invited?: true
    createdAt?: true
  }

  export type ScoutsMaxAggregateInputType = {
    id?: true
    userId?: true
    listingId?: true
    dollarsEarned?: true
    score?: true
    invited?: true
    createdAt?: true
  }

  export type ScoutsCountAggregateInputType = {
    id?: true
    userId?: true
    listingId?: true
    dollarsEarned?: true
    score?: true
    invited?: true
    skills?: true
    createdAt?: true
    _all?: true
  }

  export type ScoutsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Scouts to aggregate.
     */
    where?: ScoutsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Scouts to fetch.
     */
    orderBy?: ScoutsOrderByWithRelationInput | ScoutsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ScoutsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Scouts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Scouts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Scouts
    **/
    _count?: true | ScoutsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ScoutsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ScoutsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ScoutsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ScoutsMaxAggregateInputType
  }

  export type GetScoutsAggregateType<T extends ScoutsAggregateArgs> = {
        [P in keyof T & keyof AggregateScouts]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateScouts[P]>
      : GetScalarType<T[P], AggregateScouts[P]>
  }




  export type ScoutsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ScoutsWhereInput
    orderBy?: ScoutsOrderByWithAggregationInput | ScoutsOrderByWithAggregationInput[]
    by: ScoutsScalarFieldEnum[] | ScoutsScalarFieldEnum
    having?: ScoutsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ScoutsCountAggregateInputType | true
    _avg?: ScoutsAvgAggregateInputType
    _sum?: ScoutsSumAggregateInputType
    _min?: ScoutsMinAggregateInputType
    _max?: ScoutsMaxAggregateInputType
  }

  export type ScoutsGroupByOutputType = {
    id: string
    userId: string
    listingId: string
    dollarsEarned: number
    score: Decimal
    invited: boolean
    skills: JsonValue
    createdAt: Date
    _count: ScoutsCountAggregateOutputType | null
    _avg: ScoutsAvgAggregateOutputType | null
    _sum: ScoutsSumAggregateOutputType | null
    _min: ScoutsMinAggregateOutputType | null
    _max: ScoutsMaxAggregateOutputType | null
  }

  type GetScoutsGroupByPayload<T extends ScoutsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ScoutsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ScoutsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ScoutsGroupByOutputType[P]>
            : GetScalarType<T[P], ScoutsGroupByOutputType[P]>
        }
      >
    >


  export type ScoutsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    listingId?: boolean
    dollarsEarned?: boolean
    score?: boolean
    invited?: boolean
    skills?: boolean
    createdAt?: boolean
    listing?: boolean | BountiesDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["scouts"]>



  export type ScoutsSelectScalar = {
    id?: boolean
    userId?: boolean
    listingId?: boolean
    dollarsEarned?: boolean
    score?: boolean
    invited?: boolean
    skills?: boolean
    createdAt?: boolean
  }

  export type ScoutsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "listingId" | "dollarsEarned" | "score" | "invited" | "skills" | "createdAt", ExtArgs["result"]["scouts"]>
  export type ScoutsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    listing?: boolean | BountiesDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $ScoutsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Scouts"
    objects: {
      listing: Prisma.$BountiesPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      listingId: string
      dollarsEarned: number
      score: Prisma.Decimal
      invited: boolean
      skills: Prisma.JsonValue
      createdAt: Date
    }, ExtArgs["result"]["scouts"]>
    composites: {}
  }

  type ScoutsGetPayload<S extends boolean | null | undefined | ScoutsDefaultArgs> = $Result.GetResult<Prisma.$ScoutsPayload, S>

  type ScoutsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ScoutsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ScoutsCountAggregateInputType | true
    }

  export interface ScoutsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Scouts'], meta: { name: 'Scouts' } }
    /**
     * Find zero or one Scouts that matches the filter.
     * @param {ScoutsFindUniqueArgs} args - Arguments to find a Scouts
     * @example
     * // Get one Scouts
     * const scouts = await prisma.scouts.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ScoutsFindUniqueArgs>(args: SelectSubset<T, ScoutsFindUniqueArgs<ExtArgs>>): Prisma__ScoutsClient<$Result.GetResult<Prisma.$ScoutsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Scouts that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ScoutsFindUniqueOrThrowArgs} args - Arguments to find a Scouts
     * @example
     * // Get one Scouts
     * const scouts = await prisma.scouts.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ScoutsFindUniqueOrThrowArgs>(args: SelectSubset<T, ScoutsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ScoutsClient<$Result.GetResult<Prisma.$ScoutsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Scouts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ScoutsFindFirstArgs} args - Arguments to find a Scouts
     * @example
     * // Get one Scouts
     * const scouts = await prisma.scouts.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ScoutsFindFirstArgs>(args?: SelectSubset<T, ScoutsFindFirstArgs<ExtArgs>>): Prisma__ScoutsClient<$Result.GetResult<Prisma.$ScoutsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Scouts that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ScoutsFindFirstOrThrowArgs} args - Arguments to find a Scouts
     * @example
     * // Get one Scouts
     * const scouts = await prisma.scouts.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ScoutsFindFirstOrThrowArgs>(args?: SelectSubset<T, ScoutsFindFirstOrThrowArgs<ExtArgs>>): Prisma__ScoutsClient<$Result.GetResult<Prisma.$ScoutsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Scouts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ScoutsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Scouts
     * const scouts = await prisma.scouts.findMany()
     * 
     * // Get first 10 Scouts
     * const scouts = await prisma.scouts.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const scoutsWithIdOnly = await prisma.scouts.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ScoutsFindManyArgs>(args?: SelectSubset<T, ScoutsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ScoutsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Scouts.
     * @param {ScoutsCreateArgs} args - Arguments to create a Scouts.
     * @example
     * // Create one Scouts
     * const Scouts = await prisma.scouts.create({
     *   data: {
     *     // ... data to create a Scouts
     *   }
     * })
     * 
     */
    create<T extends ScoutsCreateArgs>(args: SelectSubset<T, ScoutsCreateArgs<ExtArgs>>): Prisma__ScoutsClient<$Result.GetResult<Prisma.$ScoutsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Scouts.
     * @param {ScoutsCreateManyArgs} args - Arguments to create many Scouts.
     * @example
     * // Create many Scouts
     * const scouts = await prisma.scouts.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ScoutsCreateManyArgs>(args?: SelectSubset<T, ScoutsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Scouts.
     * @param {ScoutsDeleteArgs} args - Arguments to delete one Scouts.
     * @example
     * // Delete one Scouts
     * const Scouts = await prisma.scouts.delete({
     *   where: {
     *     // ... filter to delete one Scouts
     *   }
     * })
     * 
     */
    delete<T extends ScoutsDeleteArgs>(args: SelectSubset<T, ScoutsDeleteArgs<ExtArgs>>): Prisma__ScoutsClient<$Result.GetResult<Prisma.$ScoutsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Scouts.
     * @param {ScoutsUpdateArgs} args - Arguments to update one Scouts.
     * @example
     * // Update one Scouts
     * const scouts = await prisma.scouts.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ScoutsUpdateArgs>(args: SelectSubset<T, ScoutsUpdateArgs<ExtArgs>>): Prisma__ScoutsClient<$Result.GetResult<Prisma.$ScoutsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Scouts.
     * @param {ScoutsDeleteManyArgs} args - Arguments to filter Scouts to delete.
     * @example
     * // Delete a few Scouts
     * const { count } = await prisma.scouts.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ScoutsDeleteManyArgs>(args?: SelectSubset<T, ScoutsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Scouts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ScoutsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Scouts
     * const scouts = await prisma.scouts.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ScoutsUpdateManyArgs>(args: SelectSubset<T, ScoutsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Scouts.
     * @param {ScoutsUpsertArgs} args - Arguments to update or create a Scouts.
     * @example
     * // Update or create a Scouts
     * const scouts = await prisma.scouts.upsert({
     *   create: {
     *     // ... data to create a Scouts
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Scouts we want to update
     *   }
     * })
     */
    upsert<T extends ScoutsUpsertArgs>(args: SelectSubset<T, ScoutsUpsertArgs<ExtArgs>>): Prisma__ScoutsClient<$Result.GetResult<Prisma.$ScoutsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Scouts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ScoutsCountArgs} args - Arguments to filter Scouts to count.
     * @example
     * // Count the number of Scouts
     * const count = await prisma.scouts.count({
     *   where: {
     *     // ... the filter for the Scouts we want to count
     *   }
     * })
    **/
    count<T extends ScoutsCountArgs>(
      args?: Subset<T, ScoutsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ScoutsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Scouts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ScoutsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ScoutsAggregateArgs>(args: Subset<T, ScoutsAggregateArgs>): Prisma.PrismaPromise<GetScoutsAggregateType<T>>

    /**
     * Group by Scouts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ScoutsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ScoutsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ScoutsGroupByArgs['orderBy'] }
        : { orderBy?: ScoutsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ScoutsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetScoutsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Scouts model
   */
  readonly fields: ScoutsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Scouts.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ScoutsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    listing<T extends BountiesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, BountiesDefaultArgs<ExtArgs>>): Prisma__BountiesClient<$Result.GetResult<Prisma.$BountiesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Scouts model
   */
  interface ScoutsFieldRefs {
    readonly id: FieldRef<"Scouts", 'String'>
    readonly userId: FieldRef<"Scouts", 'String'>
    readonly listingId: FieldRef<"Scouts", 'String'>
    readonly dollarsEarned: FieldRef<"Scouts", 'Int'>
    readonly score: FieldRef<"Scouts", 'Decimal'>
    readonly invited: FieldRef<"Scouts", 'Boolean'>
    readonly skills: FieldRef<"Scouts", 'Json'>
    readonly createdAt: FieldRef<"Scouts", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Scouts findUnique
   */
  export type ScoutsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Scouts
     */
    select?: ScoutsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Scouts
     */
    omit?: ScoutsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScoutsInclude<ExtArgs> | null
    /**
     * Filter, which Scouts to fetch.
     */
    where: ScoutsWhereUniqueInput
  }

  /**
   * Scouts findUniqueOrThrow
   */
  export type ScoutsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Scouts
     */
    select?: ScoutsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Scouts
     */
    omit?: ScoutsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScoutsInclude<ExtArgs> | null
    /**
     * Filter, which Scouts to fetch.
     */
    where: ScoutsWhereUniqueInput
  }

  /**
   * Scouts findFirst
   */
  export type ScoutsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Scouts
     */
    select?: ScoutsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Scouts
     */
    omit?: ScoutsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScoutsInclude<ExtArgs> | null
    /**
     * Filter, which Scouts to fetch.
     */
    where?: ScoutsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Scouts to fetch.
     */
    orderBy?: ScoutsOrderByWithRelationInput | ScoutsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Scouts.
     */
    cursor?: ScoutsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Scouts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Scouts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Scouts.
     */
    distinct?: ScoutsScalarFieldEnum | ScoutsScalarFieldEnum[]
  }

  /**
   * Scouts findFirstOrThrow
   */
  export type ScoutsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Scouts
     */
    select?: ScoutsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Scouts
     */
    omit?: ScoutsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScoutsInclude<ExtArgs> | null
    /**
     * Filter, which Scouts to fetch.
     */
    where?: ScoutsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Scouts to fetch.
     */
    orderBy?: ScoutsOrderByWithRelationInput | ScoutsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Scouts.
     */
    cursor?: ScoutsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Scouts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Scouts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Scouts.
     */
    distinct?: ScoutsScalarFieldEnum | ScoutsScalarFieldEnum[]
  }

  /**
   * Scouts findMany
   */
  export type ScoutsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Scouts
     */
    select?: ScoutsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Scouts
     */
    omit?: ScoutsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScoutsInclude<ExtArgs> | null
    /**
     * Filter, which Scouts to fetch.
     */
    where?: ScoutsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Scouts to fetch.
     */
    orderBy?: ScoutsOrderByWithRelationInput | ScoutsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Scouts.
     */
    cursor?: ScoutsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Scouts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Scouts.
     */
    skip?: number
    distinct?: ScoutsScalarFieldEnum | ScoutsScalarFieldEnum[]
  }

  /**
   * Scouts create
   */
  export type ScoutsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Scouts
     */
    select?: ScoutsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Scouts
     */
    omit?: ScoutsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScoutsInclude<ExtArgs> | null
    /**
     * The data needed to create a Scouts.
     */
    data: XOR<ScoutsCreateInput, ScoutsUncheckedCreateInput>
  }

  /**
   * Scouts createMany
   */
  export type ScoutsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Scouts.
     */
    data: ScoutsCreateManyInput | ScoutsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Scouts update
   */
  export type ScoutsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Scouts
     */
    select?: ScoutsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Scouts
     */
    omit?: ScoutsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScoutsInclude<ExtArgs> | null
    /**
     * The data needed to update a Scouts.
     */
    data: XOR<ScoutsUpdateInput, ScoutsUncheckedUpdateInput>
    /**
     * Choose, which Scouts to update.
     */
    where: ScoutsWhereUniqueInput
  }

  /**
   * Scouts updateMany
   */
  export type ScoutsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Scouts.
     */
    data: XOR<ScoutsUpdateManyMutationInput, ScoutsUncheckedUpdateManyInput>
    /**
     * Filter which Scouts to update
     */
    where?: ScoutsWhereInput
    /**
     * Limit how many Scouts to update.
     */
    limit?: number
  }

  /**
   * Scouts upsert
   */
  export type ScoutsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Scouts
     */
    select?: ScoutsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Scouts
     */
    omit?: ScoutsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScoutsInclude<ExtArgs> | null
    /**
     * The filter to search for the Scouts to update in case it exists.
     */
    where: ScoutsWhereUniqueInput
    /**
     * In case the Scouts found by the `where` argument doesn't exist, create a new Scouts with this data.
     */
    create: XOR<ScoutsCreateInput, ScoutsUncheckedCreateInput>
    /**
     * In case the Scouts was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ScoutsUpdateInput, ScoutsUncheckedUpdateInput>
  }

  /**
   * Scouts delete
   */
  export type ScoutsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Scouts
     */
    select?: ScoutsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Scouts
     */
    omit?: ScoutsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScoutsInclude<ExtArgs> | null
    /**
     * Filter which Scouts to delete.
     */
    where: ScoutsWhereUniqueInput
  }

  /**
   * Scouts deleteMany
   */
  export type ScoutsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Scouts to delete
     */
    where?: ScoutsWhereInput
    /**
     * Limit how many Scouts to delete.
     */
    limit?: number
  }

  /**
   * Scouts without action
   */
  export type ScoutsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Scouts
     */
    select?: ScoutsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Scouts
     */
    omit?: ScoutsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScoutsInclude<ExtArgs> | null
  }


  /**
   * Model TalentRankings
   */

  export type AggregateTalentRankings = {
    _count: TalentRankingsCountAggregateOutputType | null
    _avg: TalentRankingsAvgAggregateOutputType | null
    _sum: TalentRankingsSumAggregateOutputType | null
    _min: TalentRankingsMinAggregateOutputType | null
    _max: TalentRankingsMaxAggregateOutputType | null
  }

  export type TalentRankingsAvgAggregateOutputType = {
    rank: number | null
    submissions: number | null
    winRate: number | null
    wins: number | null
    totalEarnedInUSD: number | null
  }

  export type TalentRankingsSumAggregateOutputType = {
    rank: number | null
    submissions: number | null
    winRate: number | null
    wins: number | null
    totalEarnedInUSD: number | null
  }

  export type TalentRankingsMinAggregateOutputType = {
    id: string | null
    userId: string | null
    skill: $Enums.TalentRankingSkills | null
    timeframe: $Enums.TalentRankingTimeframe | null
    rank: number | null
    submissions: number | null
    winRate: number | null
    wins: number | null
    totalEarnedInUSD: number | null
  }

  export type TalentRankingsMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    skill: $Enums.TalentRankingSkills | null
    timeframe: $Enums.TalentRankingTimeframe | null
    rank: number | null
    submissions: number | null
    winRate: number | null
    wins: number | null
    totalEarnedInUSD: number | null
  }

  export type TalentRankingsCountAggregateOutputType = {
    id: number
    userId: number
    skill: number
    timeframe: number
    rank: number
    submissions: number
    winRate: number
    wins: number
    totalEarnedInUSD: number
    _all: number
  }


  export type TalentRankingsAvgAggregateInputType = {
    rank?: true
    submissions?: true
    winRate?: true
    wins?: true
    totalEarnedInUSD?: true
  }

  export type TalentRankingsSumAggregateInputType = {
    rank?: true
    submissions?: true
    winRate?: true
    wins?: true
    totalEarnedInUSD?: true
  }

  export type TalentRankingsMinAggregateInputType = {
    id?: true
    userId?: true
    skill?: true
    timeframe?: true
    rank?: true
    submissions?: true
    winRate?: true
    wins?: true
    totalEarnedInUSD?: true
  }

  export type TalentRankingsMaxAggregateInputType = {
    id?: true
    userId?: true
    skill?: true
    timeframe?: true
    rank?: true
    submissions?: true
    winRate?: true
    wins?: true
    totalEarnedInUSD?: true
  }

  export type TalentRankingsCountAggregateInputType = {
    id?: true
    userId?: true
    skill?: true
    timeframe?: true
    rank?: true
    submissions?: true
    winRate?: true
    wins?: true
    totalEarnedInUSD?: true
    _all?: true
  }

  export type TalentRankingsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TalentRankings to aggregate.
     */
    where?: TalentRankingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TalentRankings to fetch.
     */
    orderBy?: TalentRankingsOrderByWithRelationInput | TalentRankingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TalentRankingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TalentRankings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TalentRankings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TalentRankings
    **/
    _count?: true | TalentRankingsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TalentRankingsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TalentRankingsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TalentRankingsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TalentRankingsMaxAggregateInputType
  }

  export type GetTalentRankingsAggregateType<T extends TalentRankingsAggregateArgs> = {
        [P in keyof T & keyof AggregateTalentRankings]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTalentRankings[P]>
      : GetScalarType<T[P], AggregateTalentRankings[P]>
  }




  export type TalentRankingsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TalentRankingsWhereInput
    orderBy?: TalentRankingsOrderByWithAggregationInput | TalentRankingsOrderByWithAggregationInput[]
    by: TalentRankingsScalarFieldEnum[] | TalentRankingsScalarFieldEnum
    having?: TalentRankingsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TalentRankingsCountAggregateInputType | true
    _avg?: TalentRankingsAvgAggregateInputType
    _sum?: TalentRankingsSumAggregateInputType
    _min?: TalentRankingsMinAggregateInputType
    _max?: TalentRankingsMaxAggregateInputType
  }

  export type TalentRankingsGroupByOutputType = {
    id: string
    userId: string
    skill: $Enums.TalentRankingSkills
    timeframe: $Enums.TalentRankingTimeframe
    rank: number
    submissions: number
    winRate: number
    wins: number
    totalEarnedInUSD: number
    _count: TalentRankingsCountAggregateOutputType | null
    _avg: TalentRankingsAvgAggregateOutputType | null
    _sum: TalentRankingsSumAggregateOutputType | null
    _min: TalentRankingsMinAggregateOutputType | null
    _max: TalentRankingsMaxAggregateOutputType | null
  }

  type GetTalentRankingsGroupByPayload<T extends TalentRankingsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TalentRankingsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TalentRankingsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TalentRankingsGroupByOutputType[P]>
            : GetScalarType<T[P], TalentRankingsGroupByOutputType[P]>
        }
      >
    >


  export type TalentRankingsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    skill?: boolean
    timeframe?: boolean
    rank?: boolean
    submissions?: boolean
    winRate?: boolean
    wins?: boolean
    totalEarnedInUSD?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["talentRankings"]>



  export type TalentRankingsSelectScalar = {
    id?: boolean
    userId?: boolean
    skill?: boolean
    timeframe?: boolean
    rank?: boolean
    submissions?: boolean
    winRate?: boolean
    wins?: boolean
    totalEarnedInUSD?: boolean
  }

  export type TalentRankingsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "skill" | "timeframe" | "rank" | "submissions" | "winRate" | "wins" | "totalEarnedInUSD", ExtArgs["result"]["talentRankings"]>
  export type TalentRankingsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $TalentRankingsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TalentRankings"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      skill: $Enums.TalentRankingSkills
      timeframe: $Enums.TalentRankingTimeframe
      rank: number
      submissions: number
      winRate: number
      wins: number
      totalEarnedInUSD: number
    }, ExtArgs["result"]["talentRankings"]>
    composites: {}
  }

  type TalentRankingsGetPayload<S extends boolean | null | undefined | TalentRankingsDefaultArgs> = $Result.GetResult<Prisma.$TalentRankingsPayload, S>

  type TalentRankingsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TalentRankingsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TalentRankingsCountAggregateInputType | true
    }

  export interface TalentRankingsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TalentRankings'], meta: { name: 'TalentRankings' } }
    /**
     * Find zero or one TalentRankings that matches the filter.
     * @param {TalentRankingsFindUniqueArgs} args - Arguments to find a TalentRankings
     * @example
     * // Get one TalentRankings
     * const talentRankings = await prisma.talentRankings.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TalentRankingsFindUniqueArgs>(args: SelectSubset<T, TalentRankingsFindUniqueArgs<ExtArgs>>): Prisma__TalentRankingsClient<$Result.GetResult<Prisma.$TalentRankingsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one TalentRankings that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TalentRankingsFindUniqueOrThrowArgs} args - Arguments to find a TalentRankings
     * @example
     * // Get one TalentRankings
     * const talentRankings = await prisma.talentRankings.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TalentRankingsFindUniqueOrThrowArgs>(args: SelectSubset<T, TalentRankingsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TalentRankingsClient<$Result.GetResult<Prisma.$TalentRankingsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TalentRankings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TalentRankingsFindFirstArgs} args - Arguments to find a TalentRankings
     * @example
     * // Get one TalentRankings
     * const talentRankings = await prisma.talentRankings.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TalentRankingsFindFirstArgs>(args?: SelectSubset<T, TalentRankingsFindFirstArgs<ExtArgs>>): Prisma__TalentRankingsClient<$Result.GetResult<Prisma.$TalentRankingsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TalentRankings that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TalentRankingsFindFirstOrThrowArgs} args - Arguments to find a TalentRankings
     * @example
     * // Get one TalentRankings
     * const talentRankings = await prisma.talentRankings.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TalentRankingsFindFirstOrThrowArgs>(args?: SelectSubset<T, TalentRankingsFindFirstOrThrowArgs<ExtArgs>>): Prisma__TalentRankingsClient<$Result.GetResult<Prisma.$TalentRankingsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more TalentRankings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TalentRankingsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TalentRankings
     * const talentRankings = await prisma.talentRankings.findMany()
     * 
     * // Get first 10 TalentRankings
     * const talentRankings = await prisma.talentRankings.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const talentRankingsWithIdOnly = await prisma.talentRankings.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TalentRankingsFindManyArgs>(args?: SelectSubset<T, TalentRankingsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TalentRankingsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a TalentRankings.
     * @param {TalentRankingsCreateArgs} args - Arguments to create a TalentRankings.
     * @example
     * // Create one TalentRankings
     * const TalentRankings = await prisma.talentRankings.create({
     *   data: {
     *     // ... data to create a TalentRankings
     *   }
     * })
     * 
     */
    create<T extends TalentRankingsCreateArgs>(args: SelectSubset<T, TalentRankingsCreateArgs<ExtArgs>>): Prisma__TalentRankingsClient<$Result.GetResult<Prisma.$TalentRankingsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many TalentRankings.
     * @param {TalentRankingsCreateManyArgs} args - Arguments to create many TalentRankings.
     * @example
     * // Create many TalentRankings
     * const talentRankings = await prisma.talentRankings.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TalentRankingsCreateManyArgs>(args?: SelectSubset<T, TalentRankingsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a TalentRankings.
     * @param {TalentRankingsDeleteArgs} args - Arguments to delete one TalentRankings.
     * @example
     * // Delete one TalentRankings
     * const TalentRankings = await prisma.talentRankings.delete({
     *   where: {
     *     // ... filter to delete one TalentRankings
     *   }
     * })
     * 
     */
    delete<T extends TalentRankingsDeleteArgs>(args: SelectSubset<T, TalentRankingsDeleteArgs<ExtArgs>>): Prisma__TalentRankingsClient<$Result.GetResult<Prisma.$TalentRankingsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one TalentRankings.
     * @param {TalentRankingsUpdateArgs} args - Arguments to update one TalentRankings.
     * @example
     * // Update one TalentRankings
     * const talentRankings = await prisma.talentRankings.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TalentRankingsUpdateArgs>(args: SelectSubset<T, TalentRankingsUpdateArgs<ExtArgs>>): Prisma__TalentRankingsClient<$Result.GetResult<Prisma.$TalentRankingsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more TalentRankings.
     * @param {TalentRankingsDeleteManyArgs} args - Arguments to filter TalentRankings to delete.
     * @example
     * // Delete a few TalentRankings
     * const { count } = await prisma.talentRankings.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TalentRankingsDeleteManyArgs>(args?: SelectSubset<T, TalentRankingsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TalentRankings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TalentRankingsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TalentRankings
     * const talentRankings = await prisma.talentRankings.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TalentRankingsUpdateManyArgs>(args: SelectSubset<T, TalentRankingsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TalentRankings.
     * @param {TalentRankingsUpsertArgs} args - Arguments to update or create a TalentRankings.
     * @example
     * // Update or create a TalentRankings
     * const talentRankings = await prisma.talentRankings.upsert({
     *   create: {
     *     // ... data to create a TalentRankings
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TalentRankings we want to update
     *   }
     * })
     */
    upsert<T extends TalentRankingsUpsertArgs>(args: SelectSubset<T, TalentRankingsUpsertArgs<ExtArgs>>): Prisma__TalentRankingsClient<$Result.GetResult<Prisma.$TalentRankingsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of TalentRankings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TalentRankingsCountArgs} args - Arguments to filter TalentRankings to count.
     * @example
     * // Count the number of TalentRankings
     * const count = await prisma.talentRankings.count({
     *   where: {
     *     // ... the filter for the TalentRankings we want to count
     *   }
     * })
    **/
    count<T extends TalentRankingsCountArgs>(
      args?: Subset<T, TalentRankingsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TalentRankingsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TalentRankings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TalentRankingsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TalentRankingsAggregateArgs>(args: Subset<T, TalentRankingsAggregateArgs>): Prisma.PrismaPromise<GetTalentRankingsAggregateType<T>>

    /**
     * Group by TalentRankings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TalentRankingsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TalentRankingsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TalentRankingsGroupByArgs['orderBy'] }
        : { orderBy?: TalentRankingsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TalentRankingsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTalentRankingsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TalentRankings model
   */
  readonly fields: TalentRankingsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TalentRankings.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TalentRankingsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the TalentRankings model
   */
  interface TalentRankingsFieldRefs {
    readonly id: FieldRef<"TalentRankings", 'String'>
    readonly userId: FieldRef<"TalentRankings", 'String'>
    readonly skill: FieldRef<"TalentRankings", 'TalentRankingSkills'>
    readonly timeframe: FieldRef<"TalentRankings", 'TalentRankingTimeframe'>
    readonly rank: FieldRef<"TalentRankings", 'Int'>
    readonly submissions: FieldRef<"TalentRankings", 'Int'>
    readonly winRate: FieldRef<"TalentRankings", 'Int'>
    readonly wins: FieldRef<"TalentRankings", 'Int'>
    readonly totalEarnedInUSD: FieldRef<"TalentRankings", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * TalentRankings findUnique
   */
  export type TalentRankingsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TalentRankings
     */
    select?: TalentRankingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TalentRankings
     */
    omit?: TalentRankingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TalentRankingsInclude<ExtArgs> | null
    /**
     * Filter, which TalentRankings to fetch.
     */
    where: TalentRankingsWhereUniqueInput
  }

  /**
   * TalentRankings findUniqueOrThrow
   */
  export type TalentRankingsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TalentRankings
     */
    select?: TalentRankingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TalentRankings
     */
    omit?: TalentRankingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TalentRankingsInclude<ExtArgs> | null
    /**
     * Filter, which TalentRankings to fetch.
     */
    where: TalentRankingsWhereUniqueInput
  }

  /**
   * TalentRankings findFirst
   */
  export type TalentRankingsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TalentRankings
     */
    select?: TalentRankingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TalentRankings
     */
    omit?: TalentRankingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TalentRankingsInclude<ExtArgs> | null
    /**
     * Filter, which TalentRankings to fetch.
     */
    where?: TalentRankingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TalentRankings to fetch.
     */
    orderBy?: TalentRankingsOrderByWithRelationInput | TalentRankingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TalentRankings.
     */
    cursor?: TalentRankingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TalentRankings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TalentRankings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TalentRankings.
     */
    distinct?: TalentRankingsScalarFieldEnum | TalentRankingsScalarFieldEnum[]
  }

  /**
   * TalentRankings findFirstOrThrow
   */
  export type TalentRankingsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TalentRankings
     */
    select?: TalentRankingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TalentRankings
     */
    omit?: TalentRankingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TalentRankingsInclude<ExtArgs> | null
    /**
     * Filter, which TalentRankings to fetch.
     */
    where?: TalentRankingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TalentRankings to fetch.
     */
    orderBy?: TalentRankingsOrderByWithRelationInput | TalentRankingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TalentRankings.
     */
    cursor?: TalentRankingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TalentRankings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TalentRankings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TalentRankings.
     */
    distinct?: TalentRankingsScalarFieldEnum | TalentRankingsScalarFieldEnum[]
  }

  /**
   * TalentRankings findMany
   */
  export type TalentRankingsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TalentRankings
     */
    select?: TalentRankingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TalentRankings
     */
    omit?: TalentRankingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TalentRankingsInclude<ExtArgs> | null
    /**
     * Filter, which TalentRankings to fetch.
     */
    where?: TalentRankingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TalentRankings to fetch.
     */
    orderBy?: TalentRankingsOrderByWithRelationInput | TalentRankingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TalentRankings.
     */
    cursor?: TalentRankingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TalentRankings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TalentRankings.
     */
    skip?: number
    distinct?: TalentRankingsScalarFieldEnum | TalentRankingsScalarFieldEnum[]
  }

  /**
   * TalentRankings create
   */
  export type TalentRankingsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TalentRankings
     */
    select?: TalentRankingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TalentRankings
     */
    omit?: TalentRankingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TalentRankingsInclude<ExtArgs> | null
    /**
     * The data needed to create a TalentRankings.
     */
    data: XOR<TalentRankingsCreateInput, TalentRankingsUncheckedCreateInput>
  }

  /**
   * TalentRankings createMany
   */
  export type TalentRankingsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TalentRankings.
     */
    data: TalentRankingsCreateManyInput | TalentRankingsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * TalentRankings update
   */
  export type TalentRankingsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TalentRankings
     */
    select?: TalentRankingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TalentRankings
     */
    omit?: TalentRankingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TalentRankingsInclude<ExtArgs> | null
    /**
     * The data needed to update a TalentRankings.
     */
    data: XOR<TalentRankingsUpdateInput, TalentRankingsUncheckedUpdateInput>
    /**
     * Choose, which TalentRankings to update.
     */
    where: TalentRankingsWhereUniqueInput
  }

  /**
   * TalentRankings updateMany
   */
  export type TalentRankingsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TalentRankings.
     */
    data: XOR<TalentRankingsUpdateManyMutationInput, TalentRankingsUncheckedUpdateManyInput>
    /**
     * Filter which TalentRankings to update
     */
    where?: TalentRankingsWhereInput
    /**
     * Limit how many TalentRankings to update.
     */
    limit?: number
  }

  /**
   * TalentRankings upsert
   */
  export type TalentRankingsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TalentRankings
     */
    select?: TalentRankingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TalentRankings
     */
    omit?: TalentRankingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TalentRankingsInclude<ExtArgs> | null
    /**
     * The filter to search for the TalentRankings to update in case it exists.
     */
    where: TalentRankingsWhereUniqueInput
    /**
     * In case the TalentRankings found by the `where` argument doesn't exist, create a new TalentRankings with this data.
     */
    create: XOR<TalentRankingsCreateInput, TalentRankingsUncheckedCreateInput>
    /**
     * In case the TalentRankings was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TalentRankingsUpdateInput, TalentRankingsUncheckedUpdateInput>
  }

  /**
   * TalentRankings delete
   */
  export type TalentRankingsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TalentRankings
     */
    select?: TalentRankingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TalentRankings
     */
    omit?: TalentRankingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TalentRankingsInclude<ExtArgs> | null
    /**
     * Filter which TalentRankings to delete.
     */
    where: TalentRankingsWhereUniqueInput
  }

  /**
   * TalentRankings deleteMany
   */
  export type TalentRankingsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TalentRankings to delete
     */
    where?: TalentRankingsWhereInput
    /**
     * Limit how many TalentRankings to delete.
     */
    limit?: number
  }

  /**
   * TalentRankings without action
   */
  export type TalentRankingsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TalentRankings
     */
    select?: TalentRankingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TalentRankings
     */
    omit?: TalentRankingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TalentRankingsInclude<ExtArgs> | null
  }


  /**
   * Model PoW
   */

  export type AggregatePoW = {
    _count: PoWCountAggregateOutputType | null
    _avg: PoWAvgAggregateOutputType | null
    _sum: PoWSumAggregateOutputType | null
    _min: PoWMinAggregateOutputType | null
    _max: PoWMaxAggregateOutputType | null
  }

  export type PoWAvgAggregateOutputType = {
    likeCount: number | null
  }

  export type PoWSumAggregateOutputType = {
    likeCount: number | null
  }

  export type PoWMinAggregateOutputType = {
    id: string | null
    userId: string | null
    title: string | null
    description: string | null
    link: string | null
    createdAt: Date | null
    updatedAt: Date | null
    likeCount: number | null
    ogImage: string | null
  }

  export type PoWMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    title: string | null
    description: string | null
    link: string | null
    createdAt: Date | null
    updatedAt: Date | null
    likeCount: number | null
    ogImage: string | null
  }

  export type PoWCountAggregateOutputType = {
    id: number
    userId: number
    title: number
    description: number
    skills: number
    link: number
    createdAt: number
    subSkills: number
    updatedAt: number
    like: number
    likeCount: number
    ogImage: number
    _all: number
  }


  export type PoWAvgAggregateInputType = {
    likeCount?: true
  }

  export type PoWSumAggregateInputType = {
    likeCount?: true
  }

  export type PoWMinAggregateInputType = {
    id?: true
    userId?: true
    title?: true
    description?: true
    link?: true
    createdAt?: true
    updatedAt?: true
    likeCount?: true
    ogImage?: true
  }

  export type PoWMaxAggregateInputType = {
    id?: true
    userId?: true
    title?: true
    description?: true
    link?: true
    createdAt?: true
    updatedAt?: true
    likeCount?: true
    ogImage?: true
  }

  export type PoWCountAggregateInputType = {
    id?: true
    userId?: true
    title?: true
    description?: true
    skills?: true
    link?: true
    createdAt?: true
    subSkills?: true
    updatedAt?: true
    like?: true
    likeCount?: true
    ogImage?: true
    _all?: true
  }

  export type PoWAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PoW to aggregate.
     */
    where?: PoWWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PoWS to fetch.
     */
    orderBy?: PoWOrderByWithRelationInput | PoWOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PoWWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PoWS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PoWS.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PoWS
    **/
    _count?: true | PoWCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PoWAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PoWSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PoWMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PoWMaxAggregateInputType
  }

  export type GetPoWAggregateType<T extends PoWAggregateArgs> = {
        [P in keyof T & keyof AggregatePoW]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePoW[P]>
      : GetScalarType<T[P], AggregatePoW[P]>
  }




  export type PoWGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PoWWhereInput
    orderBy?: PoWOrderByWithAggregationInput | PoWOrderByWithAggregationInput[]
    by: PoWScalarFieldEnum[] | PoWScalarFieldEnum
    having?: PoWScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PoWCountAggregateInputType | true
    _avg?: PoWAvgAggregateInputType
    _sum?: PoWSumAggregateInputType
    _min?: PoWMinAggregateInputType
    _max?: PoWMaxAggregateInputType
  }

  export type PoWGroupByOutputType = {
    id: string
    userId: string
    title: string
    description: string
    skills: JsonValue | null
    link: string
    createdAt: Date
    subSkills: JsonValue | null
    updatedAt: Date
    like: JsonValue | null
    likeCount: number
    ogImage: string | null
    _count: PoWCountAggregateOutputType | null
    _avg: PoWAvgAggregateOutputType | null
    _sum: PoWSumAggregateOutputType | null
    _min: PoWMinAggregateOutputType | null
    _max: PoWMaxAggregateOutputType | null
  }

  type GetPoWGroupByPayload<T extends PoWGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PoWGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PoWGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PoWGroupByOutputType[P]>
            : GetScalarType<T[P], PoWGroupByOutputType[P]>
        }
      >
    >


  export type PoWSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    title?: boolean
    description?: boolean
    skills?: boolean
    link?: boolean
    createdAt?: boolean
    subSkills?: boolean
    updatedAt?: boolean
    like?: boolean
    likeCount?: boolean
    ogImage?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    Comments?: boolean | PoW$CommentsArgs<ExtArgs>
    _count?: boolean | PoWCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["poW"]>



  export type PoWSelectScalar = {
    id?: boolean
    userId?: boolean
    title?: boolean
    description?: boolean
    skills?: boolean
    link?: boolean
    createdAt?: boolean
    subSkills?: boolean
    updatedAt?: boolean
    like?: boolean
    likeCount?: boolean
    ogImage?: boolean
  }

  export type PoWOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "title" | "description" | "skills" | "link" | "createdAt" | "subSkills" | "updatedAt" | "like" | "likeCount" | "ogImage", ExtArgs["result"]["poW"]>
  export type PoWInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    Comments?: boolean | PoW$CommentsArgs<ExtArgs>
    _count?: boolean | PoWCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $PoWPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PoW"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      Comments: Prisma.$CommentPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      title: string
      description: string
      skills: Prisma.JsonValue | null
      link: string
      createdAt: Date
      subSkills: Prisma.JsonValue | null
      updatedAt: Date
      like: Prisma.JsonValue | null
      likeCount: number
      ogImage: string | null
    }, ExtArgs["result"]["poW"]>
    composites: {}
  }

  type PoWGetPayload<S extends boolean | null | undefined | PoWDefaultArgs> = $Result.GetResult<Prisma.$PoWPayload, S>

  type PoWCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PoWFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PoWCountAggregateInputType | true
    }

  export interface PoWDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PoW'], meta: { name: 'PoW' } }
    /**
     * Find zero or one PoW that matches the filter.
     * @param {PoWFindUniqueArgs} args - Arguments to find a PoW
     * @example
     * // Get one PoW
     * const poW = await prisma.poW.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PoWFindUniqueArgs>(args: SelectSubset<T, PoWFindUniqueArgs<ExtArgs>>): Prisma__PoWClient<$Result.GetResult<Prisma.$PoWPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PoW that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PoWFindUniqueOrThrowArgs} args - Arguments to find a PoW
     * @example
     * // Get one PoW
     * const poW = await prisma.poW.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PoWFindUniqueOrThrowArgs>(args: SelectSubset<T, PoWFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PoWClient<$Result.GetResult<Prisma.$PoWPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PoW that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PoWFindFirstArgs} args - Arguments to find a PoW
     * @example
     * // Get one PoW
     * const poW = await prisma.poW.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PoWFindFirstArgs>(args?: SelectSubset<T, PoWFindFirstArgs<ExtArgs>>): Prisma__PoWClient<$Result.GetResult<Prisma.$PoWPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PoW that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PoWFindFirstOrThrowArgs} args - Arguments to find a PoW
     * @example
     * // Get one PoW
     * const poW = await prisma.poW.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PoWFindFirstOrThrowArgs>(args?: SelectSubset<T, PoWFindFirstOrThrowArgs<ExtArgs>>): Prisma__PoWClient<$Result.GetResult<Prisma.$PoWPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PoWS that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PoWFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PoWS
     * const poWS = await prisma.poW.findMany()
     * 
     * // Get first 10 PoWS
     * const poWS = await prisma.poW.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const poWWithIdOnly = await prisma.poW.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PoWFindManyArgs>(args?: SelectSubset<T, PoWFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PoWPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PoW.
     * @param {PoWCreateArgs} args - Arguments to create a PoW.
     * @example
     * // Create one PoW
     * const PoW = await prisma.poW.create({
     *   data: {
     *     // ... data to create a PoW
     *   }
     * })
     * 
     */
    create<T extends PoWCreateArgs>(args: SelectSubset<T, PoWCreateArgs<ExtArgs>>): Prisma__PoWClient<$Result.GetResult<Prisma.$PoWPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PoWS.
     * @param {PoWCreateManyArgs} args - Arguments to create many PoWS.
     * @example
     * // Create many PoWS
     * const poW = await prisma.poW.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PoWCreateManyArgs>(args?: SelectSubset<T, PoWCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a PoW.
     * @param {PoWDeleteArgs} args - Arguments to delete one PoW.
     * @example
     * // Delete one PoW
     * const PoW = await prisma.poW.delete({
     *   where: {
     *     // ... filter to delete one PoW
     *   }
     * })
     * 
     */
    delete<T extends PoWDeleteArgs>(args: SelectSubset<T, PoWDeleteArgs<ExtArgs>>): Prisma__PoWClient<$Result.GetResult<Prisma.$PoWPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PoW.
     * @param {PoWUpdateArgs} args - Arguments to update one PoW.
     * @example
     * // Update one PoW
     * const poW = await prisma.poW.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PoWUpdateArgs>(args: SelectSubset<T, PoWUpdateArgs<ExtArgs>>): Prisma__PoWClient<$Result.GetResult<Prisma.$PoWPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PoWS.
     * @param {PoWDeleteManyArgs} args - Arguments to filter PoWS to delete.
     * @example
     * // Delete a few PoWS
     * const { count } = await prisma.poW.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PoWDeleteManyArgs>(args?: SelectSubset<T, PoWDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PoWS.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PoWUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PoWS
     * const poW = await prisma.poW.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PoWUpdateManyArgs>(args: SelectSubset<T, PoWUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one PoW.
     * @param {PoWUpsertArgs} args - Arguments to update or create a PoW.
     * @example
     * // Update or create a PoW
     * const poW = await prisma.poW.upsert({
     *   create: {
     *     // ... data to create a PoW
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PoW we want to update
     *   }
     * })
     */
    upsert<T extends PoWUpsertArgs>(args: SelectSubset<T, PoWUpsertArgs<ExtArgs>>): Prisma__PoWClient<$Result.GetResult<Prisma.$PoWPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PoWS.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PoWCountArgs} args - Arguments to filter PoWS to count.
     * @example
     * // Count the number of PoWS
     * const count = await prisma.poW.count({
     *   where: {
     *     // ... the filter for the PoWS we want to count
     *   }
     * })
    **/
    count<T extends PoWCountArgs>(
      args?: Subset<T, PoWCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PoWCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PoW.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PoWAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PoWAggregateArgs>(args: Subset<T, PoWAggregateArgs>): Prisma.PrismaPromise<GetPoWAggregateType<T>>

    /**
     * Group by PoW.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PoWGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PoWGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PoWGroupByArgs['orderBy'] }
        : { orderBy?: PoWGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PoWGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPoWGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PoW model
   */
  readonly fields: PoWFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PoW.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PoWClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Comments<T extends PoW$CommentsArgs<ExtArgs> = {}>(args?: Subset<T, PoW$CommentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PoW model
   */
  interface PoWFieldRefs {
    readonly id: FieldRef<"PoW", 'String'>
    readonly userId: FieldRef<"PoW", 'String'>
    readonly title: FieldRef<"PoW", 'String'>
    readonly description: FieldRef<"PoW", 'String'>
    readonly skills: FieldRef<"PoW", 'Json'>
    readonly link: FieldRef<"PoW", 'String'>
    readonly createdAt: FieldRef<"PoW", 'DateTime'>
    readonly subSkills: FieldRef<"PoW", 'Json'>
    readonly updatedAt: FieldRef<"PoW", 'DateTime'>
    readonly like: FieldRef<"PoW", 'Json'>
    readonly likeCount: FieldRef<"PoW", 'Int'>
    readonly ogImage: FieldRef<"PoW", 'String'>
  }
    

  // Custom InputTypes
  /**
   * PoW findUnique
   */
  export type PoWFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PoW
     */
    select?: PoWSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PoW
     */
    omit?: PoWOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PoWInclude<ExtArgs> | null
    /**
     * Filter, which PoW to fetch.
     */
    where: PoWWhereUniqueInput
  }

  /**
   * PoW findUniqueOrThrow
   */
  export type PoWFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PoW
     */
    select?: PoWSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PoW
     */
    omit?: PoWOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PoWInclude<ExtArgs> | null
    /**
     * Filter, which PoW to fetch.
     */
    where: PoWWhereUniqueInput
  }

  /**
   * PoW findFirst
   */
  export type PoWFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PoW
     */
    select?: PoWSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PoW
     */
    omit?: PoWOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PoWInclude<ExtArgs> | null
    /**
     * Filter, which PoW to fetch.
     */
    where?: PoWWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PoWS to fetch.
     */
    orderBy?: PoWOrderByWithRelationInput | PoWOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PoWS.
     */
    cursor?: PoWWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PoWS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PoWS.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PoWS.
     */
    distinct?: PoWScalarFieldEnum | PoWScalarFieldEnum[]
  }

  /**
   * PoW findFirstOrThrow
   */
  export type PoWFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PoW
     */
    select?: PoWSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PoW
     */
    omit?: PoWOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PoWInclude<ExtArgs> | null
    /**
     * Filter, which PoW to fetch.
     */
    where?: PoWWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PoWS to fetch.
     */
    orderBy?: PoWOrderByWithRelationInput | PoWOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PoWS.
     */
    cursor?: PoWWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PoWS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PoWS.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PoWS.
     */
    distinct?: PoWScalarFieldEnum | PoWScalarFieldEnum[]
  }

  /**
   * PoW findMany
   */
  export type PoWFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PoW
     */
    select?: PoWSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PoW
     */
    omit?: PoWOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PoWInclude<ExtArgs> | null
    /**
     * Filter, which PoWS to fetch.
     */
    where?: PoWWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PoWS to fetch.
     */
    orderBy?: PoWOrderByWithRelationInput | PoWOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PoWS.
     */
    cursor?: PoWWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PoWS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PoWS.
     */
    skip?: number
    distinct?: PoWScalarFieldEnum | PoWScalarFieldEnum[]
  }

  /**
   * PoW create
   */
  export type PoWCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PoW
     */
    select?: PoWSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PoW
     */
    omit?: PoWOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PoWInclude<ExtArgs> | null
    /**
     * The data needed to create a PoW.
     */
    data: XOR<PoWCreateInput, PoWUncheckedCreateInput>
  }

  /**
   * PoW createMany
   */
  export type PoWCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PoWS.
     */
    data: PoWCreateManyInput | PoWCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PoW update
   */
  export type PoWUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PoW
     */
    select?: PoWSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PoW
     */
    omit?: PoWOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PoWInclude<ExtArgs> | null
    /**
     * The data needed to update a PoW.
     */
    data: XOR<PoWUpdateInput, PoWUncheckedUpdateInput>
    /**
     * Choose, which PoW to update.
     */
    where: PoWWhereUniqueInput
  }

  /**
   * PoW updateMany
   */
  export type PoWUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PoWS.
     */
    data: XOR<PoWUpdateManyMutationInput, PoWUncheckedUpdateManyInput>
    /**
     * Filter which PoWS to update
     */
    where?: PoWWhereInput
    /**
     * Limit how many PoWS to update.
     */
    limit?: number
  }

  /**
   * PoW upsert
   */
  export type PoWUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PoW
     */
    select?: PoWSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PoW
     */
    omit?: PoWOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PoWInclude<ExtArgs> | null
    /**
     * The filter to search for the PoW to update in case it exists.
     */
    where: PoWWhereUniqueInput
    /**
     * In case the PoW found by the `where` argument doesn't exist, create a new PoW with this data.
     */
    create: XOR<PoWCreateInput, PoWUncheckedCreateInput>
    /**
     * In case the PoW was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PoWUpdateInput, PoWUncheckedUpdateInput>
  }

  /**
   * PoW delete
   */
  export type PoWDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PoW
     */
    select?: PoWSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PoW
     */
    omit?: PoWOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PoWInclude<ExtArgs> | null
    /**
     * Filter which PoW to delete.
     */
    where: PoWWhereUniqueInput
  }

  /**
   * PoW deleteMany
   */
  export type PoWDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PoWS to delete
     */
    where?: PoWWhereInput
    /**
     * Limit how many PoWS to delete.
     */
    limit?: number
  }

  /**
   * PoW.Comments
   */
  export type PoW$CommentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    where?: CommentWhereInput
    orderBy?: CommentOrderByWithRelationInput | CommentOrderByWithRelationInput[]
    cursor?: CommentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CommentScalarFieldEnum | CommentScalarFieldEnum[]
  }

  /**
   * PoW without action
   */
  export type PoWDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PoW
     */
    select?: PoWSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PoW
     */
    omit?: PoWOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PoWInclude<ExtArgs> | null
  }


  /**
   * Model EmailSettings
   */

  export type AggregateEmailSettings = {
    _count: EmailSettingsCountAggregateOutputType | null
    _avg: EmailSettingsAvgAggregateOutputType | null
    _sum: EmailSettingsSumAggregateOutputType | null
    _min: EmailSettingsMinAggregateOutputType | null
    _max: EmailSettingsMaxAggregateOutputType | null
  }

  export type EmailSettingsAvgAggregateOutputType = {
    id: number | null
  }

  export type EmailSettingsSumAggregateOutputType = {
    id: number | null
  }

  export type EmailSettingsMinAggregateOutputType = {
    id: number | null
    userId: string | null
    category: string | null
  }

  export type EmailSettingsMaxAggregateOutputType = {
    id: number | null
    userId: string | null
    category: string | null
  }

  export type EmailSettingsCountAggregateOutputType = {
    id: number
    userId: number
    category: number
    _all: number
  }


  export type EmailSettingsAvgAggregateInputType = {
    id?: true
  }

  export type EmailSettingsSumAggregateInputType = {
    id?: true
  }

  export type EmailSettingsMinAggregateInputType = {
    id?: true
    userId?: true
    category?: true
  }

  export type EmailSettingsMaxAggregateInputType = {
    id?: true
    userId?: true
    category?: true
  }

  export type EmailSettingsCountAggregateInputType = {
    id?: true
    userId?: true
    category?: true
    _all?: true
  }

  export type EmailSettingsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EmailSettings to aggregate.
     */
    where?: EmailSettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EmailSettings to fetch.
     */
    orderBy?: EmailSettingsOrderByWithRelationInput | EmailSettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EmailSettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EmailSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EmailSettings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned EmailSettings
    **/
    _count?: true | EmailSettingsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EmailSettingsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EmailSettingsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EmailSettingsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EmailSettingsMaxAggregateInputType
  }

  export type GetEmailSettingsAggregateType<T extends EmailSettingsAggregateArgs> = {
        [P in keyof T & keyof AggregateEmailSettings]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEmailSettings[P]>
      : GetScalarType<T[P], AggregateEmailSettings[P]>
  }




  export type EmailSettingsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EmailSettingsWhereInput
    orderBy?: EmailSettingsOrderByWithAggregationInput | EmailSettingsOrderByWithAggregationInput[]
    by: EmailSettingsScalarFieldEnum[] | EmailSettingsScalarFieldEnum
    having?: EmailSettingsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EmailSettingsCountAggregateInputType | true
    _avg?: EmailSettingsAvgAggregateInputType
    _sum?: EmailSettingsSumAggregateInputType
    _min?: EmailSettingsMinAggregateInputType
    _max?: EmailSettingsMaxAggregateInputType
  }

  export type EmailSettingsGroupByOutputType = {
    id: number
    userId: string
    category: string
    _count: EmailSettingsCountAggregateOutputType | null
    _avg: EmailSettingsAvgAggregateOutputType | null
    _sum: EmailSettingsSumAggregateOutputType | null
    _min: EmailSettingsMinAggregateOutputType | null
    _max: EmailSettingsMaxAggregateOutputType | null
  }

  type GetEmailSettingsGroupByPayload<T extends EmailSettingsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EmailSettingsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EmailSettingsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EmailSettingsGroupByOutputType[P]>
            : GetScalarType<T[P], EmailSettingsGroupByOutputType[P]>
        }
      >
    >


  export type EmailSettingsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    category?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["emailSettings"]>



  export type EmailSettingsSelectScalar = {
    id?: boolean
    userId?: boolean
    category?: boolean
  }

  export type EmailSettingsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "category", ExtArgs["result"]["emailSettings"]>
  export type EmailSettingsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $EmailSettingsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "EmailSettings"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      userId: string
      category: string
    }, ExtArgs["result"]["emailSettings"]>
    composites: {}
  }

  type EmailSettingsGetPayload<S extends boolean | null | undefined | EmailSettingsDefaultArgs> = $Result.GetResult<Prisma.$EmailSettingsPayload, S>

  type EmailSettingsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EmailSettingsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EmailSettingsCountAggregateInputType | true
    }

  export interface EmailSettingsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EmailSettings'], meta: { name: 'EmailSettings' } }
    /**
     * Find zero or one EmailSettings that matches the filter.
     * @param {EmailSettingsFindUniqueArgs} args - Arguments to find a EmailSettings
     * @example
     * // Get one EmailSettings
     * const emailSettings = await prisma.emailSettings.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EmailSettingsFindUniqueArgs>(args: SelectSubset<T, EmailSettingsFindUniqueArgs<ExtArgs>>): Prisma__EmailSettingsClient<$Result.GetResult<Prisma.$EmailSettingsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one EmailSettings that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EmailSettingsFindUniqueOrThrowArgs} args - Arguments to find a EmailSettings
     * @example
     * // Get one EmailSettings
     * const emailSettings = await prisma.emailSettings.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EmailSettingsFindUniqueOrThrowArgs>(args: SelectSubset<T, EmailSettingsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EmailSettingsClient<$Result.GetResult<Prisma.$EmailSettingsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EmailSettings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmailSettingsFindFirstArgs} args - Arguments to find a EmailSettings
     * @example
     * // Get one EmailSettings
     * const emailSettings = await prisma.emailSettings.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EmailSettingsFindFirstArgs>(args?: SelectSubset<T, EmailSettingsFindFirstArgs<ExtArgs>>): Prisma__EmailSettingsClient<$Result.GetResult<Prisma.$EmailSettingsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EmailSettings that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmailSettingsFindFirstOrThrowArgs} args - Arguments to find a EmailSettings
     * @example
     * // Get one EmailSettings
     * const emailSettings = await prisma.emailSettings.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EmailSettingsFindFirstOrThrowArgs>(args?: SelectSubset<T, EmailSettingsFindFirstOrThrowArgs<ExtArgs>>): Prisma__EmailSettingsClient<$Result.GetResult<Prisma.$EmailSettingsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more EmailSettings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmailSettingsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EmailSettings
     * const emailSettings = await prisma.emailSettings.findMany()
     * 
     * // Get first 10 EmailSettings
     * const emailSettings = await prisma.emailSettings.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const emailSettingsWithIdOnly = await prisma.emailSettings.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EmailSettingsFindManyArgs>(args?: SelectSubset<T, EmailSettingsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EmailSettingsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a EmailSettings.
     * @param {EmailSettingsCreateArgs} args - Arguments to create a EmailSettings.
     * @example
     * // Create one EmailSettings
     * const EmailSettings = await prisma.emailSettings.create({
     *   data: {
     *     // ... data to create a EmailSettings
     *   }
     * })
     * 
     */
    create<T extends EmailSettingsCreateArgs>(args: SelectSubset<T, EmailSettingsCreateArgs<ExtArgs>>): Prisma__EmailSettingsClient<$Result.GetResult<Prisma.$EmailSettingsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many EmailSettings.
     * @param {EmailSettingsCreateManyArgs} args - Arguments to create many EmailSettings.
     * @example
     * // Create many EmailSettings
     * const emailSettings = await prisma.emailSettings.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EmailSettingsCreateManyArgs>(args?: SelectSubset<T, EmailSettingsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a EmailSettings.
     * @param {EmailSettingsDeleteArgs} args - Arguments to delete one EmailSettings.
     * @example
     * // Delete one EmailSettings
     * const EmailSettings = await prisma.emailSettings.delete({
     *   where: {
     *     // ... filter to delete one EmailSettings
     *   }
     * })
     * 
     */
    delete<T extends EmailSettingsDeleteArgs>(args: SelectSubset<T, EmailSettingsDeleteArgs<ExtArgs>>): Prisma__EmailSettingsClient<$Result.GetResult<Prisma.$EmailSettingsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one EmailSettings.
     * @param {EmailSettingsUpdateArgs} args - Arguments to update one EmailSettings.
     * @example
     * // Update one EmailSettings
     * const emailSettings = await prisma.emailSettings.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EmailSettingsUpdateArgs>(args: SelectSubset<T, EmailSettingsUpdateArgs<ExtArgs>>): Prisma__EmailSettingsClient<$Result.GetResult<Prisma.$EmailSettingsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more EmailSettings.
     * @param {EmailSettingsDeleteManyArgs} args - Arguments to filter EmailSettings to delete.
     * @example
     * // Delete a few EmailSettings
     * const { count } = await prisma.emailSettings.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EmailSettingsDeleteManyArgs>(args?: SelectSubset<T, EmailSettingsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EmailSettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmailSettingsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EmailSettings
     * const emailSettings = await prisma.emailSettings.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EmailSettingsUpdateManyArgs>(args: SelectSubset<T, EmailSettingsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one EmailSettings.
     * @param {EmailSettingsUpsertArgs} args - Arguments to update or create a EmailSettings.
     * @example
     * // Update or create a EmailSettings
     * const emailSettings = await prisma.emailSettings.upsert({
     *   create: {
     *     // ... data to create a EmailSettings
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EmailSettings we want to update
     *   }
     * })
     */
    upsert<T extends EmailSettingsUpsertArgs>(args: SelectSubset<T, EmailSettingsUpsertArgs<ExtArgs>>): Prisma__EmailSettingsClient<$Result.GetResult<Prisma.$EmailSettingsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of EmailSettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmailSettingsCountArgs} args - Arguments to filter EmailSettings to count.
     * @example
     * // Count the number of EmailSettings
     * const count = await prisma.emailSettings.count({
     *   where: {
     *     // ... the filter for the EmailSettings we want to count
     *   }
     * })
    **/
    count<T extends EmailSettingsCountArgs>(
      args?: Subset<T, EmailSettingsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EmailSettingsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EmailSettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmailSettingsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EmailSettingsAggregateArgs>(args: Subset<T, EmailSettingsAggregateArgs>): Prisma.PrismaPromise<GetEmailSettingsAggregateType<T>>

    /**
     * Group by EmailSettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmailSettingsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EmailSettingsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EmailSettingsGroupByArgs['orderBy'] }
        : { orderBy?: EmailSettingsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EmailSettingsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEmailSettingsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the EmailSettings model
   */
  readonly fields: EmailSettingsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for EmailSettings.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EmailSettingsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the EmailSettings model
   */
  interface EmailSettingsFieldRefs {
    readonly id: FieldRef<"EmailSettings", 'Int'>
    readonly userId: FieldRef<"EmailSettings", 'String'>
    readonly category: FieldRef<"EmailSettings", 'String'>
  }
    

  // Custom InputTypes
  /**
   * EmailSettings findUnique
   */
  export type EmailSettingsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EmailSettings
     */
    select?: EmailSettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EmailSettings
     */
    omit?: EmailSettingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmailSettingsInclude<ExtArgs> | null
    /**
     * Filter, which EmailSettings to fetch.
     */
    where: EmailSettingsWhereUniqueInput
  }

  /**
   * EmailSettings findUniqueOrThrow
   */
  export type EmailSettingsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EmailSettings
     */
    select?: EmailSettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EmailSettings
     */
    omit?: EmailSettingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmailSettingsInclude<ExtArgs> | null
    /**
     * Filter, which EmailSettings to fetch.
     */
    where: EmailSettingsWhereUniqueInput
  }

  /**
   * EmailSettings findFirst
   */
  export type EmailSettingsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EmailSettings
     */
    select?: EmailSettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EmailSettings
     */
    omit?: EmailSettingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmailSettingsInclude<ExtArgs> | null
    /**
     * Filter, which EmailSettings to fetch.
     */
    where?: EmailSettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EmailSettings to fetch.
     */
    orderBy?: EmailSettingsOrderByWithRelationInput | EmailSettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EmailSettings.
     */
    cursor?: EmailSettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EmailSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EmailSettings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EmailSettings.
     */
    distinct?: EmailSettingsScalarFieldEnum | EmailSettingsScalarFieldEnum[]
  }

  /**
   * EmailSettings findFirstOrThrow
   */
  export type EmailSettingsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EmailSettings
     */
    select?: EmailSettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EmailSettings
     */
    omit?: EmailSettingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmailSettingsInclude<ExtArgs> | null
    /**
     * Filter, which EmailSettings to fetch.
     */
    where?: EmailSettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EmailSettings to fetch.
     */
    orderBy?: EmailSettingsOrderByWithRelationInput | EmailSettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EmailSettings.
     */
    cursor?: EmailSettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EmailSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EmailSettings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EmailSettings.
     */
    distinct?: EmailSettingsScalarFieldEnum | EmailSettingsScalarFieldEnum[]
  }

  /**
   * EmailSettings findMany
   */
  export type EmailSettingsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EmailSettings
     */
    select?: EmailSettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EmailSettings
     */
    omit?: EmailSettingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmailSettingsInclude<ExtArgs> | null
    /**
     * Filter, which EmailSettings to fetch.
     */
    where?: EmailSettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EmailSettings to fetch.
     */
    orderBy?: EmailSettingsOrderByWithRelationInput | EmailSettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing EmailSettings.
     */
    cursor?: EmailSettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EmailSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EmailSettings.
     */
    skip?: number
    distinct?: EmailSettingsScalarFieldEnum | EmailSettingsScalarFieldEnum[]
  }

  /**
   * EmailSettings create
   */
  export type EmailSettingsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EmailSettings
     */
    select?: EmailSettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EmailSettings
     */
    omit?: EmailSettingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmailSettingsInclude<ExtArgs> | null
    /**
     * The data needed to create a EmailSettings.
     */
    data: XOR<EmailSettingsCreateInput, EmailSettingsUncheckedCreateInput>
  }

  /**
   * EmailSettings createMany
   */
  export type EmailSettingsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many EmailSettings.
     */
    data: EmailSettingsCreateManyInput | EmailSettingsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EmailSettings update
   */
  export type EmailSettingsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EmailSettings
     */
    select?: EmailSettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EmailSettings
     */
    omit?: EmailSettingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmailSettingsInclude<ExtArgs> | null
    /**
     * The data needed to update a EmailSettings.
     */
    data: XOR<EmailSettingsUpdateInput, EmailSettingsUncheckedUpdateInput>
    /**
     * Choose, which EmailSettings to update.
     */
    where: EmailSettingsWhereUniqueInput
  }

  /**
   * EmailSettings updateMany
   */
  export type EmailSettingsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update EmailSettings.
     */
    data: XOR<EmailSettingsUpdateManyMutationInput, EmailSettingsUncheckedUpdateManyInput>
    /**
     * Filter which EmailSettings to update
     */
    where?: EmailSettingsWhereInput
    /**
     * Limit how many EmailSettings to update.
     */
    limit?: number
  }

  /**
   * EmailSettings upsert
   */
  export type EmailSettingsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EmailSettings
     */
    select?: EmailSettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EmailSettings
     */
    omit?: EmailSettingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmailSettingsInclude<ExtArgs> | null
    /**
     * The filter to search for the EmailSettings to update in case it exists.
     */
    where: EmailSettingsWhereUniqueInput
    /**
     * In case the EmailSettings found by the `where` argument doesn't exist, create a new EmailSettings with this data.
     */
    create: XOR<EmailSettingsCreateInput, EmailSettingsUncheckedCreateInput>
    /**
     * In case the EmailSettings was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EmailSettingsUpdateInput, EmailSettingsUncheckedUpdateInput>
  }

  /**
   * EmailSettings delete
   */
  export type EmailSettingsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EmailSettings
     */
    select?: EmailSettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EmailSettings
     */
    omit?: EmailSettingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmailSettingsInclude<ExtArgs> | null
    /**
     * Filter which EmailSettings to delete.
     */
    where: EmailSettingsWhereUniqueInput
  }

  /**
   * EmailSettings deleteMany
   */
  export type EmailSettingsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EmailSettings to delete
     */
    where?: EmailSettingsWhereInput
    /**
     * Limit how many EmailSettings to delete.
     */
    limit?: number
  }

  /**
   * EmailSettings without action
   */
  export type EmailSettingsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EmailSettings
     */
    select?: EmailSettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EmailSettings
     */
    omit?: EmailSettingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmailSettingsInclude<ExtArgs> | null
  }


  /**
   * Model UserSponsors
   */

  export type AggregateUserSponsors = {
    _count: UserSponsorsCountAggregateOutputType | null
    _min: UserSponsorsMinAggregateOutputType | null
    _max: UserSponsorsMaxAggregateOutputType | null
  }

  export type UserSponsorsMinAggregateOutputType = {
    userId: string | null
    sponsorId: string | null
    role: $Enums.Role | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserSponsorsMaxAggregateOutputType = {
    userId: string | null
    sponsorId: string | null
    role: $Enums.Role | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserSponsorsCountAggregateOutputType = {
    userId: number
    sponsorId: number
    role: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type UserSponsorsMinAggregateInputType = {
    userId?: true
    sponsorId?: true
    role?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserSponsorsMaxAggregateInputType = {
    userId?: true
    sponsorId?: true
    role?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserSponsorsCountAggregateInputType = {
    userId?: true
    sponsorId?: true
    role?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type UserSponsorsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserSponsors to aggregate.
     */
    where?: UserSponsorsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserSponsors to fetch.
     */
    orderBy?: UserSponsorsOrderByWithRelationInput | UserSponsorsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserSponsorsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserSponsors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserSponsors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UserSponsors
    **/
    _count?: true | UserSponsorsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserSponsorsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserSponsorsMaxAggregateInputType
  }

  export type GetUserSponsorsAggregateType<T extends UserSponsorsAggregateArgs> = {
        [P in keyof T & keyof AggregateUserSponsors]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUserSponsors[P]>
      : GetScalarType<T[P], AggregateUserSponsors[P]>
  }




  export type UserSponsorsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserSponsorsWhereInput
    orderBy?: UserSponsorsOrderByWithAggregationInput | UserSponsorsOrderByWithAggregationInput[]
    by: UserSponsorsScalarFieldEnum[] | UserSponsorsScalarFieldEnum
    having?: UserSponsorsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserSponsorsCountAggregateInputType | true
    _min?: UserSponsorsMinAggregateInputType
    _max?: UserSponsorsMaxAggregateInputType
  }

  export type UserSponsorsGroupByOutputType = {
    userId: string
    sponsorId: string
    role: $Enums.Role
    createdAt: Date
    updatedAt: Date
    _count: UserSponsorsCountAggregateOutputType | null
    _min: UserSponsorsMinAggregateOutputType | null
    _max: UserSponsorsMaxAggregateOutputType | null
  }

  type GetUserSponsorsGroupByPayload<T extends UserSponsorsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserSponsorsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserSponsorsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserSponsorsGroupByOutputType[P]>
            : GetScalarType<T[P], UserSponsorsGroupByOutputType[P]>
        }
      >
    >


  export type UserSponsorsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    userId?: boolean
    sponsorId?: boolean
    role?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    sponsor?: boolean | SponsorsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userSponsors"]>



  export type UserSponsorsSelectScalar = {
    userId?: boolean
    sponsorId?: boolean
    role?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type UserSponsorsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"userId" | "sponsorId" | "role" | "createdAt" | "updatedAt", ExtArgs["result"]["userSponsors"]>
  export type UserSponsorsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    sponsor?: boolean | SponsorsDefaultArgs<ExtArgs>
  }

  export type $UserSponsorsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UserSponsors"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      sponsor: Prisma.$SponsorsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      userId: string
      sponsorId: string
      role: $Enums.Role
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["userSponsors"]>
    composites: {}
  }

  type UserSponsorsGetPayload<S extends boolean | null | undefined | UserSponsorsDefaultArgs> = $Result.GetResult<Prisma.$UserSponsorsPayload, S>

  type UserSponsorsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserSponsorsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserSponsorsCountAggregateInputType | true
    }

  export interface UserSponsorsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UserSponsors'], meta: { name: 'UserSponsors' } }
    /**
     * Find zero or one UserSponsors that matches the filter.
     * @param {UserSponsorsFindUniqueArgs} args - Arguments to find a UserSponsors
     * @example
     * // Get one UserSponsors
     * const userSponsors = await prisma.userSponsors.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserSponsorsFindUniqueArgs>(args: SelectSubset<T, UserSponsorsFindUniqueArgs<ExtArgs>>): Prisma__UserSponsorsClient<$Result.GetResult<Prisma.$UserSponsorsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one UserSponsors that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserSponsorsFindUniqueOrThrowArgs} args - Arguments to find a UserSponsors
     * @example
     * // Get one UserSponsors
     * const userSponsors = await prisma.userSponsors.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserSponsorsFindUniqueOrThrowArgs>(args: SelectSubset<T, UserSponsorsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserSponsorsClient<$Result.GetResult<Prisma.$UserSponsorsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UserSponsors that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSponsorsFindFirstArgs} args - Arguments to find a UserSponsors
     * @example
     * // Get one UserSponsors
     * const userSponsors = await prisma.userSponsors.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserSponsorsFindFirstArgs>(args?: SelectSubset<T, UserSponsorsFindFirstArgs<ExtArgs>>): Prisma__UserSponsorsClient<$Result.GetResult<Prisma.$UserSponsorsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UserSponsors that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSponsorsFindFirstOrThrowArgs} args - Arguments to find a UserSponsors
     * @example
     * // Get one UserSponsors
     * const userSponsors = await prisma.userSponsors.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserSponsorsFindFirstOrThrowArgs>(args?: SelectSubset<T, UserSponsorsFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserSponsorsClient<$Result.GetResult<Prisma.$UserSponsorsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more UserSponsors that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSponsorsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UserSponsors
     * const userSponsors = await prisma.userSponsors.findMany()
     * 
     * // Get first 10 UserSponsors
     * const userSponsors = await prisma.userSponsors.findMany({ take: 10 })
     * 
     * // Only select the `userId`
     * const userSponsorsWithUserIdOnly = await prisma.userSponsors.findMany({ select: { userId: true } })
     * 
     */
    findMany<T extends UserSponsorsFindManyArgs>(args?: SelectSubset<T, UserSponsorsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserSponsorsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a UserSponsors.
     * @param {UserSponsorsCreateArgs} args - Arguments to create a UserSponsors.
     * @example
     * // Create one UserSponsors
     * const UserSponsors = await prisma.userSponsors.create({
     *   data: {
     *     // ... data to create a UserSponsors
     *   }
     * })
     * 
     */
    create<T extends UserSponsorsCreateArgs>(args: SelectSubset<T, UserSponsorsCreateArgs<ExtArgs>>): Prisma__UserSponsorsClient<$Result.GetResult<Prisma.$UserSponsorsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many UserSponsors.
     * @param {UserSponsorsCreateManyArgs} args - Arguments to create many UserSponsors.
     * @example
     * // Create many UserSponsors
     * const userSponsors = await prisma.userSponsors.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserSponsorsCreateManyArgs>(args?: SelectSubset<T, UserSponsorsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a UserSponsors.
     * @param {UserSponsorsDeleteArgs} args - Arguments to delete one UserSponsors.
     * @example
     * // Delete one UserSponsors
     * const UserSponsors = await prisma.userSponsors.delete({
     *   where: {
     *     // ... filter to delete one UserSponsors
     *   }
     * })
     * 
     */
    delete<T extends UserSponsorsDeleteArgs>(args: SelectSubset<T, UserSponsorsDeleteArgs<ExtArgs>>): Prisma__UserSponsorsClient<$Result.GetResult<Prisma.$UserSponsorsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one UserSponsors.
     * @param {UserSponsorsUpdateArgs} args - Arguments to update one UserSponsors.
     * @example
     * // Update one UserSponsors
     * const userSponsors = await prisma.userSponsors.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserSponsorsUpdateArgs>(args: SelectSubset<T, UserSponsorsUpdateArgs<ExtArgs>>): Prisma__UserSponsorsClient<$Result.GetResult<Prisma.$UserSponsorsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more UserSponsors.
     * @param {UserSponsorsDeleteManyArgs} args - Arguments to filter UserSponsors to delete.
     * @example
     * // Delete a few UserSponsors
     * const { count } = await prisma.userSponsors.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserSponsorsDeleteManyArgs>(args?: SelectSubset<T, UserSponsorsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserSponsors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSponsorsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UserSponsors
     * const userSponsors = await prisma.userSponsors.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserSponsorsUpdateManyArgs>(args: SelectSubset<T, UserSponsorsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one UserSponsors.
     * @param {UserSponsorsUpsertArgs} args - Arguments to update or create a UserSponsors.
     * @example
     * // Update or create a UserSponsors
     * const userSponsors = await prisma.userSponsors.upsert({
     *   create: {
     *     // ... data to create a UserSponsors
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UserSponsors we want to update
     *   }
     * })
     */
    upsert<T extends UserSponsorsUpsertArgs>(args: SelectSubset<T, UserSponsorsUpsertArgs<ExtArgs>>): Prisma__UserSponsorsClient<$Result.GetResult<Prisma.$UserSponsorsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of UserSponsors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSponsorsCountArgs} args - Arguments to filter UserSponsors to count.
     * @example
     * // Count the number of UserSponsors
     * const count = await prisma.userSponsors.count({
     *   where: {
     *     // ... the filter for the UserSponsors we want to count
     *   }
     * })
    **/
    count<T extends UserSponsorsCountArgs>(
      args?: Subset<T, UserSponsorsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserSponsorsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UserSponsors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSponsorsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserSponsorsAggregateArgs>(args: Subset<T, UserSponsorsAggregateArgs>): Prisma.PrismaPromise<GetUserSponsorsAggregateType<T>>

    /**
     * Group by UserSponsors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSponsorsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserSponsorsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserSponsorsGroupByArgs['orderBy'] }
        : { orderBy?: UserSponsorsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserSponsorsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserSponsorsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UserSponsors model
   */
  readonly fields: UserSponsorsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UserSponsors.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserSponsorsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    sponsor<T extends SponsorsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SponsorsDefaultArgs<ExtArgs>>): Prisma__SponsorsClient<$Result.GetResult<Prisma.$SponsorsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UserSponsors model
   */
  interface UserSponsorsFieldRefs {
    readonly userId: FieldRef<"UserSponsors", 'String'>
    readonly sponsorId: FieldRef<"UserSponsors", 'String'>
    readonly role: FieldRef<"UserSponsors", 'Role'>
    readonly createdAt: FieldRef<"UserSponsors", 'DateTime'>
    readonly updatedAt: FieldRef<"UserSponsors", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * UserSponsors findUnique
   */
  export type UserSponsorsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSponsors
     */
    select?: UserSponsorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSponsors
     */
    omit?: UserSponsorsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSponsorsInclude<ExtArgs> | null
    /**
     * Filter, which UserSponsors to fetch.
     */
    where: UserSponsorsWhereUniqueInput
  }

  /**
   * UserSponsors findUniqueOrThrow
   */
  export type UserSponsorsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSponsors
     */
    select?: UserSponsorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSponsors
     */
    omit?: UserSponsorsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSponsorsInclude<ExtArgs> | null
    /**
     * Filter, which UserSponsors to fetch.
     */
    where: UserSponsorsWhereUniqueInput
  }

  /**
   * UserSponsors findFirst
   */
  export type UserSponsorsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSponsors
     */
    select?: UserSponsorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSponsors
     */
    omit?: UserSponsorsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSponsorsInclude<ExtArgs> | null
    /**
     * Filter, which UserSponsors to fetch.
     */
    where?: UserSponsorsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserSponsors to fetch.
     */
    orderBy?: UserSponsorsOrderByWithRelationInput | UserSponsorsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserSponsors.
     */
    cursor?: UserSponsorsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserSponsors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserSponsors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserSponsors.
     */
    distinct?: UserSponsorsScalarFieldEnum | UserSponsorsScalarFieldEnum[]
  }

  /**
   * UserSponsors findFirstOrThrow
   */
  export type UserSponsorsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSponsors
     */
    select?: UserSponsorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSponsors
     */
    omit?: UserSponsorsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSponsorsInclude<ExtArgs> | null
    /**
     * Filter, which UserSponsors to fetch.
     */
    where?: UserSponsorsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserSponsors to fetch.
     */
    orderBy?: UserSponsorsOrderByWithRelationInput | UserSponsorsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserSponsors.
     */
    cursor?: UserSponsorsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserSponsors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserSponsors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserSponsors.
     */
    distinct?: UserSponsorsScalarFieldEnum | UserSponsorsScalarFieldEnum[]
  }

  /**
   * UserSponsors findMany
   */
  export type UserSponsorsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSponsors
     */
    select?: UserSponsorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSponsors
     */
    omit?: UserSponsorsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSponsorsInclude<ExtArgs> | null
    /**
     * Filter, which UserSponsors to fetch.
     */
    where?: UserSponsorsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserSponsors to fetch.
     */
    orderBy?: UserSponsorsOrderByWithRelationInput | UserSponsorsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UserSponsors.
     */
    cursor?: UserSponsorsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserSponsors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserSponsors.
     */
    skip?: number
    distinct?: UserSponsorsScalarFieldEnum | UserSponsorsScalarFieldEnum[]
  }

  /**
   * UserSponsors create
   */
  export type UserSponsorsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSponsors
     */
    select?: UserSponsorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSponsors
     */
    omit?: UserSponsorsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSponsorsInclude<ExtArgs> | null
    /**
     * The data needed to create a UserSponsors.
     */
    data: XOR<UserSponsorsCreateInput, UserSponsorsUncheckedCreateInput>
  }

  /**
   * UserSponsors createMany
   */
  export type UserSponsorsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UserSponsors.
     */
    data: UserSponsorsCreateManyInput | UserSponsorsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UserSponsors update
   */
  export type UserSponsorsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSponsors
     */
    select?: UserSponsorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSponsors
     */
    omit?: UserSponsorsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSponsorsInclude<ExtArgs> | null
    /**
     * The data needed to update a UserSponsors.
     */
    data: XOR<UserSponsorsUpdateInput, UserSponsorsUncheckedUpdateInput>
    /**
     * Choose, which UserSponsors to update.
     */
    where: UserSponsorsWhereUniqueInput
  }

  /**
   * UserSponsors updateMany
   */
  export type UserSponsorsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UserSponsors.
     */
    data: XOR<UserSponsorsUpdateManyMutationInput, UserSponsorsUncheckedUpdateManyInput>
    /**
     * Filter which UserSponsors to update
     */
    where?: UserSponsorsWhereInput
    /**
     * Limit how many UserSponsors to update.
     */
    limit?: number
  }

  /**
   * UserSponsors upsert
   */
  export type UserSponsorsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSponsors
     */
    select?: UserSponsorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSponsors
     */
    omit?: UserSponsorsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSponsorsInclude<ExtArgs> | null
    /**
     * The filter to search for the UserSponsors to update in case it exists.
     */
    where: UserSponsorsWhereUniqueInput
    /**
     * In case the UserSponsors found by the `where` argument doesn't exist, create a new UserSponsors with this data.
     */
    create: XOR<UserSponsorsCreateInput, UserSponsorsUncheckedCreateInput>
    /**
     * In case the UserSponsors was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserSponsorsUpdateInput, UserSponsorsUncheckedUpdateInput>
  }

  /**
   * UserSponsors delete
   */
  export type UserSponsorsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSponsors
     */
    select?: UserSponsorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSponsors
     */
    omit?: UserSponsorsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSponsorsInclude<ExtArgs> | null
    /**
     * Filter which UserSponsors to delete.
     */
    where: UserSponsorsWhereUniqueInput
  }

  /**
   * UserSponsors deleteMany
   */
  export type UserSponsorsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserSponsors to delete
     */
    where?: UserSponsorsWhereInput
    /**
     * Limit how many UserSponsors to delete.
     */
    limit?: number
  }

  /**
   * UserSponsors without action
   */
  export type UserSponsorsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSponsors
     */
    select?: UserSponsorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSponsors
     */
    omit?: UserSponsorsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSponsorsInclude<ExtArgs> | null
  }


  /**
   * Model UserInvites
   */

  export type AggregateUserInvites = {
    _count: UserInvitesCountAggregateOutputType | null
    _min: UserInvitesMinAggregateOutputType | null
    _max: UserInvitesMaxAggregateOutputType | null
  }

  export type UserInvitesMinAggregateOutputType = {
    id: string | null
    email: string | null
    senderId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    sponsorId: string | null
    memberType: $Enums.Role | null
    token: string | null
    expires: Date | null
  }

  export type UserInvitesMaxAggregateOutputType = {
    id: string | null
    email: string | null
    senderId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    sponsorId: string | null
    memberType: $Enums.Role | null
    token: string | null
    expires: Date | null
  }

  export type UserInvitesCountAggregateOutputType = {
    id: number
    email: number
    senderId: number
    createdAt: number
    updatedAt: number
    sponsorId: number
    memberType: number
    token: number
    expires: number
    _all: number
  }


  export type UserInvitesMinAggregateInputType = {
    id?: true
    email?: true
    senderId?: true
    createdAt?: true
    updatedAt?: true
    sponsorId?: true
    memberType?: true
    token?: true
    expires?: true
  }

  export type UserInvitesMaxAggregateInputType = {
    id?: true
    email?: true
    senderId?: true
    createdAt?: true
    updatedAt?: true
    sponsorId?: true
    memberType?: true
    token?: true
    expires?: true
  }

  export type UserInvitesCountAggregateInputType = {
    id?: true
    email?: true
    senderId?: true
    createdAt?: true
    updatedAt?: true
    sponsorId?: true
    memberType?: true
    token?: true
    expires?: true
    _all?: true
  }

  export type UserInvitesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserInvites to aggregate.
     */
    where?: UserInvitesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserInvites to fetch.
     */
    orderBy?: UserInvitesOrderByWithRelationInput | UserInvitesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserInvitesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserInvites from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserInvites.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UserInvites
    **/
    _count?: true | UserInvitesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserInvitesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserInvitesMaxAggregateInputType
  }

  export type GetUserInvitesAggregateType<T extends UserInvitesAggregateArgs> = {
        [P in keyof T & keyof AggregateUserInvites]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUserInvites[P]>
      : GetScalarType<T[P], AggregateUserInvites[P]>
  }




  export type UserInvitesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserInvitesWhereInput
    orderBy?: UserInvitesOrderByWithAggregationInput | UserInvitesOrderByWithAggregationInput[]
    by: UserInvitesScalarFieldEnum[] | UserInvitesScalarFieldEnum
    having?: UserInvitesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserInvitesCountAggregateInputType | true
    _min?: UserInvitesMinAggregateInputType
    _max?: UserInvitesMaxAggregateInputType
  }

  export type UserInvitesGroupByOutputType = {
    id: string
    email: string
    senderId: string
    createdAt: Date
    updatedAt: Date
    sponsorId: string
    memberType: $Enums.Role
    token: string
    expires: Date
    _count: UserInvitesCountAggregateOutputType | null
    _min: UserInvitesMinAggregateOutputType | null
    _max: UserInvitesMaxAggregateOutputType | null
  }

  type GetUserInvitesGroupByPayload<T extends UserInvitesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserInvitesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserInvitesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserInvitesGroupByOutputType[P]>
            : GetScalarType<T[P], UserInvitesGroupByOutputType[P]>
        }
      >
    >


  export type UserInvitesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    senderId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    sponsorId?: boolean
    memberType?: boolean
    token?: boolean
    expires?: boolean
    sender?: boolean | UserDefaultArgs<ExtArgs>
    sponsor?: boolean | SponsorsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userInvites"]>



  export type UserInvitesSelectScalar = {
    id?: boolean
    email?: boolean
    senderId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    sponsorId?: boolean
    memberType?: boolean
    token?: boolean
    expires?: boolean
  }

  export type UserInvitesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "email" | "senderId" | "createdAt" | "updatedAt" | "sponsorId" | "memberType" | "token" | "expires", ExtArgs["result"]["userInvites"]>
  export type UserInvitesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sender?: boolean | UserDefaultArgs<ExtArgs>
    sponsor?: boolean | SponsorsDefaultArgs<ExtArgs>
  }

  export type $UserInvitesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UserInvites"
    objects: {
      sender: Prisma.$UserPayload<ExtArgs>
      sponsor: Prisma.$SponsorsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      email: string
      senderId: string
      createdAt: Date
      updatedAt: Date
      sponsorId: string
      memberType: $Enums.Role
      token: string
      expires: Date
    }, ExtArgs["result"]["userInvites"]>
    composites: {}
  }

  type UserInvitesGetPayload<S extends boolean | null | undefined | UserInvitesDefaultArgs> = $Result.GetResult<Prisma.$UserInvitesPayload, S>

  type UserInvitesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserInvitesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserInvitesCountAggregateInputType | true
    }

  export interface UserInvitesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UserInvites'], meta: { name: 'UserInvites' } }
    /**
     * Find zero or one UserInvites that matches the filter.
     * @param {UserInvitesFindUniqueArgs} args - Arguments to find a UserInvites
     * @example
     * // Get one UserInvites
     * const userInvites = await prisma.userInvites.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserInvitesFindUniqueArgs>(args: SelectSubset<T, UserInvitesFindUniqueArgs<ExtArgs>>): Prisma__UserInvitesClient<$Result.GetResult<Prisma.$UserInvitesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one UserInvites that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserInvitesFindUniqueOrThrowArgs} args - Arguments to find a UserInvites
     * @example
     * // Get one UserInvites
     * const userInvites = await prisma.userInvites.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserInvitesFindUniqueOrThrowArgs>(args: SelectSubset<T, UserInvitesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserInvitesClient<$Result.GetResult<Prisma.$UserInvitesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UserInvites that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserInvitesFindFirstArgs} args - Arguments to find a UserInvites
     * @example
     * // Get one UserInvites
     * const userInvites = await prisma.userInvites.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserInvitesFindFirstArgs>(args?: SelectSubset<T, UserInvitesFindFirstArgs<ExtArgs>>): Prisma__UserInvitesClient<$Result.GetResult<Prisma.$UserInvitesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UserInvites that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserInvitesFindFirstOrThrowArgs} args - Arguments to find a UserInvites
     * @example
     * // Get one UserInvites
     * const userInvites = await prisma.userInvites.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserInvitesFindFirstOrThrowArgs>(args?: SelectSubset<T, UserInvitesFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserInvitesClient<$Result.GetResult<Prisma.$UserInvitesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more UserInvites that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserInvitesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UserInvites
     * const userInvites = await prisma.userInvites.findMany()
     * 
     * // Get first 10 UserInvites
     * const userInvites = await prisma.userInvites.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userInvitesWithIdOnly = await prisma.userInvites.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserInvitesFindManyArgs>(args?: SelectSubset<T, UserInvitesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserInvitesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a UserInvites.
     * @param {UserInvitesCreateArgs} args - Arguments to create a UserInvites.
     * @example
     * // Create one UserInvites
     * const UserInvites = await prisma.userInvites.create({
     *   data: {
     *     // ... data to create a UserInvites
     *   }
     * })
     * 
     */
    create<T extends UserInvitesCreateArgs>(args: SelectSubset<T, UserInvitesCreateArgs<ExtArgs>>): Prisma__UserInvitesClient<$Result.GetResult<Prisma.$UserInvitesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many UserInvites.
     * @param {UserInvitesCreateManyArgs} args - Arguments to create many UserInvites.
     * @example
     * // Create many UserInvites
     * const userInvites = await prisma.userInvites.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserInvitesCreateManyArgs>(args?: SelectSubset<T, UserInvitesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a UserInvites.
     * @param {UserInvitesDeleteArgs} args - Arguments to delete one UserInvites.
     * @example
     * // Delete one UserInvites
     * const UserInvites = await prisma.userInvites.delete({
     *   where: {
     *     // ... filter to delete one UserInvites
     *   }
     * })
     * 
     */
    delete<T extends UserInvitesDeleteArgs>(args: SelectSubset<T, UserInvitesDeleteArgs<ExtArgs>>): Prisma__UserInvitesClient<$Result.GetResult<Prisma.$UserInvitesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one UserInvites.
     * @param {UserInvitesUpdateArgs} args - Arguments to update one UserInvites.
     * @example
     * // Update one UserInvites
     * const userInvites = await prisma.userInvites.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserInvitesUpdateArgs>(args: SelectSubset<T, UserInvitesUpdateArgs<ExtArgs>>): Prisma__UserInvitesClient<$Result.GetResult<Prisma.$UserInvitesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more UserInvites.
     * @param {UserInvitesDeleteManyArgs} args - Arguments to filter UserInvites to delete.
     * @example
     * // Delete a few UserInvites
     * const { count } = await prisma.userInvites.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserInvitesDeleteManyArgs>(args?: SelectSubset<T, UserInvitesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserInvites.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserInvitesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UserInvites
     * const userInvites = await prisma.userInvites.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserInvitesUpdateManyArgs>(args: SelectSubset<T, UserInvitesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one UserInvites.
     * @param {UserInvitesUpsertArgs} args - Arguments to update or create a UserInvites.
     * @example
     * // Update or create a UserInvites
     * const userInvites = await prisma.userInvites.upsert({
     *   create: {
     *     // ... data to create a UserInvites
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UserInvites we want to update
     *   }
     * })
     */
    upsert<T extends UserInvitesUpsertArgs>(args: SelectSubset<T, UserInvitesUpsertArgs<ExtArgs>>): Prisma__UserInvitesClient<$Result.GetResult<Prisma.$UserInvitesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of UserInvites.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserInvitesCountArgs} args - Arguments to filter UserInvites to count.
     * @example
     * // Count the number of UserInvites
     * const count = await prisma.userInvites.count({
     *   where: {
     *     // ... the filter for the UserInvites we want to count
     *   }
     * })
    **/
    count<T extends UserInvitesCountArgs>(
      args?: Subset<T, UserInvitesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserInvitesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UserInvites.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserInvitesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserInvitesAggregateArgs>(args: Subset<T, UserInvitesAggregateArgs>): Prisma.PrismaPromise<GetUserInvitesAggregateType<T>>

    /**
     * Group by UserInvites.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserInvitesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserInvitesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserInvitesGroupByArgs['orderBy'] }
        : { orderBy?: UserInvitesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserInvitesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserInvitesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UserInvites model
   */
  readonly fields: UserInvitesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UserInvites.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserInvitesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    sender<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    sponsor<T extends SponsorsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SponsorsDefaultArgs<ExtArgs>>): Prisma__SponsorsClient<$Result.GetResult<Prisma.$SponsorsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UserInvites model
   */
  interface UserInvitesFieldRefs {
    readonly id: FieldRef<"UserInvites", 'String'>
    readonly email: FieldRef<"UserInvites", 'String'>
    readonly senderId: FieldRef<"UserInvites", 'String'>
    readonly createdAt: FieldRef<"UserInvites", 'DateTime'>
    readonly updatedAt: FieldRef<"UserInvites", 'DateTime'>
    readonly sponsorId: FieldRef<"UserInvites", 'String'>
    readonly memberType: FieldRef<"UserInvites", 'Role'>
    readonly token: FieldRef<"UserInvites", 'String'>
    readonly expires: FieldRef<"UserInvites", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * UserInvites findUnique
   */
  export type UserInvitesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserInvites
     */
    select?: UserInvitesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserInvites
     */
    omit?: UserInvitesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInvitesInclude<ExtArgs> | null
    /**
     * Filter, which UserInvites to fetch.
     */
    where: UserInvitesWhereUniqueInput
  }

  /**
   * UserInvites findUniqueOrThrow
   */
  export type UserInvitesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserInvites
     */
    select?: UserInvitesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserInvites
     */
    omit?: UserInvitesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInvitesInclude<ExtArgs> | null
    /**
     * Filter, which UserInvites to fetch.
     */
    where: UserInvitesWhereUniqueInput
  }

  /**
   * UserInvites findFirst
   */
  export type UserInvitesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserInvites
     */
    select?: UserInvitesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserInvites
     */
    omit?: UserInvitesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInvitesInclude<ExtArgs> | null
    /**
     * Filter, which UserInvites to fetch.
     */
    where?: UserInvitesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserInvites to fetch.
     */
    orderBy?: UserInvitesOrderByWithRelationInput | UserInvitesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserInvites.
     */
    cursor?: UserInvitesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserInvites from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserInvites.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserInvites.
     */
    distinct?: UserInvitesScalarFieldEnum | UserInvitesScalarFieldEnum[]
  }

  /**
   * UserInvites findFirstOrThrow
   */
  export type UserInvitesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserInvites
     */
    select?: UserInvitesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserInvites
     */
    omit?: UserInvitesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInvitesInclude<ExtArgs> | null
    /**
     * Filter, which UserInvites to fetch.
     */
    where?: UserInvitesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserInvites to fetch.
     */
    orderBy?: UserInvitesOrderByWithRelationInput | UserInvitesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserInvites.
     */
    cursor?: UserInvitesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserInvites from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserInvites.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserInvites.
     */
    distinct?: UserInvitesScalarFieldEnum | UserInvitesScalarFieldEnum[]
  }

  /**
   * UserInvites findMany
   */
  export type UserInvitesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserInvites
     */
    select?: UserInvitesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserInvites
     */
    omit?: UserInvitesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInvitesInclude<ExtArgs> | null
    /**
     * Filter, which UserInvites to fetch.
     */
    where?: UserInvitesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserInvites to fetch.
     */
    orderBy?: UserInvitesOrderByWithRelationInput | UserInvitesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UserInvites.
     */
    cursor?: UserInvitesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserInvites from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserInvites.
     */
    skip?: number
    distinct?: UserInvitesScalarFieldEnum | UserInvitesScalarFieldEnum[]
  }

  /**
   * UserInvites create
   */
  export type UserInvitesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserInvites
     */
    select?: UserInvitesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserInvites
     */
    omit?: UserInvitesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInvitesInclude<ExtArgs> | null
    /**
     * The data needed to create a UserInvites.
     */
    data: XOR<UserInvitesCreateInput, UserInvitesUncheckedCreateInput>
  }

  /**
   * UserInvites createMany
   */
  export type UserInvitesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UserInvites.
     */
    data: UserInvitesCreateManyInput | UserInvitesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UserInvites update
   */
  export type UserInvitesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserInvites
     */
    select?: UserInvitesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserInvites
     */
    omit?: UserInvitesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInvitesInclude<ExtArgs> | null
    /**
     * The data needed to update a UserInvites.
     */
    data: XOR<UserInvitesUpdateInput, UserInvitesUncheckedUpdateInput>
    /**
     * Choose, which UserInvites to update.
     */
    where: UserInvitesWhereUniqueInput
  }

  /**
   * UserInvites updateMany
   */
  export type UserInvitesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UserInvites.
     */
    data: XOR<UserInvitesUpdateManyMutationInput, UserInvitesUncheckedUpdateManyInput>
    /**
     * Filter which UserInvites to update
     */
    where?: UserInvitesWhereInput
    /**
     * Limit how many UserInvites to update.
     */
    limit?: number
  }

  /**
   * UserInvites upsert
   */
  export type UserInvitesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserInvites
     */
    select?: UserInvitesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserInvites
     */
    omit?: UserInvitesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInvitesInclude<ExtArgs> | null
    /**
     * The filter to search for the UserInvites to update in case it exists.
     */
    where: UserInvitesWhereUniqueInput
    /**
     * In case the UserInvites found by the `where` argument doesn't exist, create a new UserInvites with this data.
     */
    create: XOR<UserInvitesCreateInput, UserInvitesUncheckedCreateInput>
    /**
     * In case the UserInvites was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserInvitesUpdateInput, UserInvitesUncheckedUpdateInput>
  }

  /**
   * UserInvites delete
   */
  export type UserInvitesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserInvites
     */
    select?: UserInvitesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserInvites
     */
    omit?: UserInvitesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInvitesInclude<ExtArgs> | null
    /**
     * Filter which UserInvites to delete.
     */
    where: UserInvitesWhereUniqueInput
  }

  /**
   * UserInvites deleteMany
   */
  export type UserInvitesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserInvites to delete
     */
    where?: UserInvitesWhereInput
    /**
     * Limit how many UserInvites to delete.
     */
    limit?: number
  }

  /**
   * UserInvites without action
   */
  export type UserInvitesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserInvites
     */
    select?: UserInvitesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserInvites
     */
    omit?: UserInvitesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInvitesInclude<ExtArgs> | null
  }


  /**
   * Model emailLogs
   */

  export type AggregateEmailLogs = {
    _count: EmailLogsCountAggregateOutputType | null
    _min: EmailLogsMinAggregateOutputType | null
    _max: EmailLogsMaxAggregateOutputType | null
  }

  export type EmailLogsMinAggregateOutputType = {
    id: string | null
    email: string | null
    type: $Enums.EmailType | null
    bountyId: string | null
    userId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type EmailLogsMaxAggregateOutputType = {
    id: string | null
    email: string | null
    type: $Enums.EmailType | null
    bountyId: string | null
    userId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type EmailLogsCountAggregateOutputType = {
    id: number
    email: number
    type: number
    bountyId: number
    userId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type EmailLogsMinAggregateInputType = {
    id?: true
    email?: true
    type?: true
    bountyId?: true
    userId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type EmailLogsMaxAggregateInputType = {
    id?: true
    email?: true
    type?: true
    bountyId?: true
    userId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type EmailLogsCountAggregateInputType = {
    id?: true
    email?: true
    type?: true
    bountyId?: true
    userId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type EmailLogsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which emailLogs to aggregate.
     */
    where?: emailLogsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of emailLogs to fetch.
     */
    orderBy?: emailLogsOrderByWithRelationInput | emailLogsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: emailLogsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` emailLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` emailLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned emailLogs
    **/
    _count?: true | EmailLogsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EmailLogsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EmailLogsMaxAggregateInputType
  }

  export type GetEmailLogsAggregateType<T extends EmailLogsAggregateArgs> = {
        [P in keyof T & keyof AggregateEmailLogs]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEmailLogs[P]>
      : GetScalarType<T[P], AggregateEmailLogs[P]>
  }




  export type emailLogsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: emailLogsWhereInput
    orderBy?: emailLogsOrderByWithAggregationInput | emailLogsOrderByWithAggregationInput[]
    by: EmailLogsScalarFieldEnum[] | EmailLogsScalarFieldEnum
    having?: emailLogsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EmailLogsCountAggregateInputType | true
    _min?: EmailLogsMinAggregateInputType
    _max?: EmailLogsMaxAggregateInputType
  }

  export type EmailLogsGroupByOutputType = {
    id: string
    email: string | null
    type: $Enums.EmailType
    bountyId: string | null
    userId: string | null
    createdAt: Date
    updatedAt: Date
    _count: EmailLogsCountAggregateOutputType | null
    _min: EmailLogsMinAggregateOutputType | null
    _max: EmailLogsMaxAggregateOutputType | null
  }

  type GetEmailLogsGroupByPayload<T extends emailLogsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EmailLogsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EmailLogsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EmailLogsGroupByOutputType[P]>
            : GetScalarType<T[P], EmailLogsGroupByOutputType[P]>
        }
      >
    >


  export type emailLogsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    type?: boolean
    bountyId?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["emailLogs"]>



  export type emailLogsSelectScalar = {
    id?: boolean
    email?: boolean
    type?: boolean
    bountyId?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type emailLogsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "email" | "type" | "bountyId" | "userId" | "createdAt" | "updatedAt", ExtArgs["result"]["emailLogs"]>

  export type $emailLogsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "emailLogs"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      email: string | null
      type: $Enums.EmailType
      bountyId: string | null
      userId: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["emailLogs"]>
    composites: {}
  }

  type emailLogsGetPayload<S extends boolean | null | undefined | emailLogsDefaultArgs> = $Result.GetResult<Prisma.$emailLogsPayload, S>

  type emailLogsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<emailLogsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EmailLogsCountAggregateInputType | true
    }

  export interface emailLogsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['emailLogs'], meta: { name: 'emailLogs' } }
    /**
     * Find zero or one EmailLogs that matches the filter.
     * @param {emailLogsFindUniqueArgs} args - Arguments to find a EmailLogs
     * @example
     * // Get one EmailLogs
     * const emailLogs = await prisma.emailLogs.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends emailLogsFindUniqueArgs>(args: SelectSubset<T, emailLogsFindUniqueArgs<ExtArgs>>): Prisma__emailLogsClient<$Result.GetResult<Prisma.$emailLogsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one EmailLogs that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {emailLogsFindUniqueOrThrowArgs} args - Arguments to find a EmailLogs
     * @example
     * // Get one EmailLogs
     * const emailLogs = await prisma.emailLogs.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends emailLogsFindUniqueOrThrowArgs>(args: SelectSubset<T, emailLogsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__emailLogsClient<$Result.GetResult<Prisma.$emailLogsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EmailLogs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {emailLogsFindFirstArgs} args - Arguments to find a EmailLogs
     * @example
     * // Get one EmailLogs
     * const emailLogs = await prisma.emailLogs.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends emailLogsFindFirstArgs>(args?: SelectSubset<T, emailLogsFindFirstArgs<ExtArgs>>): Prisma__emailLogsClient<$Result.GetResult<Prisma.$emailLogsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EmailLogs that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {emailLogsFindFirstOrThrowArgs} args - Arguments to find a EmailLogs
     * @example
     * // Get one EmailLogs
     * const emailLogs = await prisma.emailLogs.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends emailLogsFindFirstOrThrowArgs>(args?: SelectSubset<T, emailLogsFindFirstOrThrowArgs<ExtArgs>>): Prisma__emailLogsClient<$Result.GetResult<Prisma.$emailLogsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more EmailLogs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {emailLogsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EmailLogs
     * const emailLogs = await prisma.emailLogs.findMany()
     * 
     * // Get first 10 EmailLogs
     * const emailLogs = await prisma.emailLogs.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const emailLogsWithIdOnly = await prisma.emailLogs.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends emailLogsFindManyArgs>(args?: SelectSubset<T, emailLogsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$emailLogsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a EmailLogs.
     * @param {emailLogsCreateArgs} args - Arguments to create a EmailLogs.
     * @example
     * // Create one EmailLogs
     * const EmailLogs = await prisma.emailLogs.create({
     *   data: {
     *     // ... data to create a EmailLogs
     *   }
     * })
     * 
     */
    create<T extends emailLogsCreateArgs>(args: SelectSubset<T, emailLogsCreateArgs<ExtArgs>>): Prisma__emailLogsClient<$Result.GetResult<Prisma.$emailLogsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many EmailLogs.
     * @param {emailLogsCreateManyArgs} args - Arguments to create many EmailLogs.
     * @example
     * // Create many EmailLogs
     * const emailLogs = await prisma.emailLogs.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends emailLogsCreateManyArgs>(args?: SelectSubset<T, emailLogsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a EmailLogs.
     * @param {emailLogsDeleteArgs} args - Arguments to delete one EmailLogs.
     * @example
     * // Delete one EmailLogs
     * const EmailLogs = await prisma.emailLogs.delete({
     *   where: {
     *     // ... filter to delete one EmailLogs
     *   }
     * })
     * 
     */
    delete<T extends emailLogsDeleteArgs>(args: SelectSubset<T, emailLogsDeleteArgs<ExtArgs>>): Prisma__emailLogsClient<$Result.GetResult<Prisma.$emailLogsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one EmailLogs.
     * @param {emailLogsUpdateArgs} args - Arguments to update one EmailLogs.
     * @example
     * // Update one EmailLogs
     * const emailLogs = await prisma.emailLogs.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends emailLogsUpdateArgs>(args: SelectSubset<T, emailLogsUpdateArgs<ExtArgs>>): Prisma__emailLogsClient<$Result.GetResult<Prisma.$emailLogsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more EmailLogs.
     * @param {emailLogsDeleteManyArgs} args - Arguments to filter EmailLogs to delete.
     * @example
     * // Delete a few EmailLogs
     * const { count } = await prisma.emailLogs.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends emailLogsDeleteManyArgs>(args?: SelectSubset<T, emailLogsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EmailLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {emailLogsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EmailLogs
     * const emailLogs = await prisma.emailLogs.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends emailLogsUpdateManyArgs>(args: SelectSubset<T, emailLogsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one EmailLogs.
     * @param {emailLogsUpsertArgs} args - Arguments to update or create a EmailLogs.
     * @example
     * // Update or create a EmailLogs
     * const emailLogs = await prisma.emailLogs.upsert({
     *   create: {
     *     // ... data to create a EmailLogs
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EmailLogs we want to update
     *   }
     * })
     */
    upsert<T extends emailLogsUpsertArgs>(args: SelectSubset<T, emailLogsUpsertArgs<ExtArgs>>): Prisma__emailLogsClient<$Result.GetResult<Prisma.$emailLogsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of EmailLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {emailLogsCountArgs} args - Arguments to filter EmailLogs to count.
     * @example
     * // Count the number of EmailLogs
     * const count = await prisma.emailLogs.count({
     *   where: {
     *     // ... the filter for the EmailLogs we want to count
     *   }
     * })
    **/
    count<T extends emailLogsCountArgs>(
      args?: Subset<T, emailLogsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EmailLogsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EmailLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmailLogsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EmailLogsAggregateArgs>(args: Subset<T, EmailLogsAggregateArgs>): Prisma.PrismaPromise<GetEmailLogsAggregateType<T>>

    /**
     * Group by EmailLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {emailLogsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends emailLogsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: emailLogsGroupByArgs['orderBy'] }
        : { orderBy?: emailLogsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, emailLogsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEmailLogsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the emailLogs model
   */
  readonly fields: emailLogsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for emailLogs.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__emailLogsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the emailLogs model
   */
  interface emailLogsFieldRefs {
    readonly id: FieldRef<"emailLogs", 'String'>
    readonly email: FieldRef<"emailLogs", 'String'>
    readonly type: FieldRef<"emailLogs", 'EmailType'>
    readonly bountyId: FieldRef<"emailLogs", 'String'>
    readonly userId: FieldRef<"emailLogs", 'String'>
    readonly createdAt: FieldRef<"emailLogs", 'DateTime'>
    readonly updatedAt: FieldRef<"emailLogs", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * emailLogs findUnique
   */
  export type emailLogsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the emailLogs
     */
    select?: emailLogsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the emailLogs
     */
    omit?: emailLogsOmit<ExtArgs> | null
    /**
     * Filter, which emailLogs to fetch.
     */
    where: emailLogsWhereUniqueInput
  }

  /**
   * emailLogs findUniqueOrThrow
   */
  export type emailLogsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the emailLogs
     */
    select?: emailLogsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the emailLogs
     */
    omit?: emailLogsOmit<ExtArgs> | null
    /**
     * Filter, which emailLogs to fetch.
     */
    where: emailLogsWhereUniqueInput
  }

  /**
   * emailLogs findFirst
   */
  export type emailLogsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the emailLogs
     */
    select?: emailLogsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the emailLogs
     */
    omit?: emailLogsOmit<ExtArgs> | null
    /**
     * Filter, which emailLogs to fetch.
     */
    where?: emailLogsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of emailLogs to fetch.
     */
    orderBy?: emailLogsOrderByWithRelationInput | emailLogsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for emailLogs.
     */
    cursor?: emailLogsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` emailLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` emailLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of emailLogs.
     */
    distinct?: EmailLogsScalarFieldEnum | EmailLogsScalarFieldEnum[]
  }

  /**
   * emailLogs findFirstOrThrow
   */
  export type emailLogsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the emailLogs
     */
    select?: emailLogsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the emailLogs
     */
    omit?: emailLogsOmit<ExtArgs> | null
    /**
     * Filter, which emailLogs to fetch.
     */
    where?: emailLogsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of emailLogs to fetch.
     */
    orderBy?: emailLogsOrderByWithRelationInput | emailLogsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for emailLogs.
     */
    cursor?: emailLogsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` emailLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` emailLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of emailLogs.
     */
    distinct?: EmailLogsScalarFieldEnum | EmailLogsScalarFieldEnum[]
  }

  /**
   * emailLogs findMany
   */
  export type emailLogsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the emailLogs
     */
    select?: emailLogsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the emailLogs
     */
    omit?: emailLogsOmit<ExtArgs> | null
    /**
     * Filter, which emailLogs to fetch.
     */
    where?: emailLogsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of emailLogs to fetch.
     */
    orderBy?: emailLogsOrderByWithRelationInput | emailLogsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing emailLogs.
     */
    cursor?: emailLogsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` emailLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` emailLogs.
     */
    skip?: number
    distinct?: EmailLogsScalarFieldEnum | EmailLogsScalarFieldEnum[]
  }

  /**
   * emailLogs create
   */
  export type emailLogsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the emailLogs
     */
    select?: emailLogsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the emailLogs
     */
    omit?: emailLogsOmit<ExtArgs> | null
    /**
     * The data needed to create a emailLogs.
     */
    data: XOR<emailLogsCreateInput, emailLogsUncheckedCreateInput>
  }

  /**
   * emailLogs createMany
   */
  export type emailLogsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many emailLogs.
     */
    data: emailLogsCreateManyInput | emailLogsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * emailLogs update
   */
  export type emailLogsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the emailLogs
     */
    select?: emailLogsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the emailLogs
     */
    omit?: emailLogsOmit<ExtArgs> | null
    /**
     * The data needed to update a emailLogs.
     */
    data: XOR<emailLogsUpdateInput, emailLogsUncheckedUpdateInput>
    /**
     * Choose, which emailLogs to update.
     */
    where: emailLogsWhereUniqueInput
  }

  /**
   * emailLogs updateMany
   */
  export type emailLogsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update emailLogs.
     */
    data: XOR<emailLogsUpdateManyMutationInput, emailLogsUncheckedUpdateManyInput>
    /**
     * Filter which emailLogs to update
     */
    where?: emailLogsWhereInput
    /**
     * Limit how many emailLogs to update.
     */
    limit?: number
  }

  /**
   * emailLogs upsert
   */
  export type emailLogsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the emailLogs
     */
    select?: emailLogsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the emailLogs
     */
    omit?: emailLogsOmit<ExtArgs> | null
    /**
     * The filter to search for the emailLogs to update in case it exists.
     */
    where: emailLogsWhereUniqueInput
    /**
     * In case the emailLogs found by the `where` argument doesn't exist, create a new emailLogs with this data.
     */
    create: XOR<emailLogsCreateInput, emailLogsUncheckedCreateInput>
    /**
     * In case the emailLogs was found with the provided `where` argument, update it with this data.
     */
    update: XOR<emailLogsUpdateInput, emailLogsUncheckedUpdateInput>
  }

  /**
   * emailLogs delete
   */
  export type emailLogsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the emailLogs
     */
    select?: emailLogsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the emailLogs
     */
    omit?: emailLogsOmit<ExtArgs> | null
    /**
     * Filter which emailLogs to delete.
     */
    where: emailLogsWhereUniqueInput
  }

  /**
   * emailLogs deleteMany
   */
  export type emailLogsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which emailLogs to delete
     */
    where?: emailLogsWhereInput
    /**
     * Limit how many emailLogs to delete.
     */
    limit?: number
  }

  /**
   * emailLogs without action
   */
  export type emailLogsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the emailLogs
     */
    select?: emailLogsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the emailLogs
     */
    omit?: emailLogsOmit<ExtArgs> | null
  }


  /**
   * Model ResendLogs
   */

  export type AggregateResendLogs = {
    _count: ResendLogsCountAggregateOutputType | null
    _min: ResendLogsMinAggregateOutputType | null
    _max: ResendLogsMaxAggregateOutputType | null
  }

  export type ResendLogsMinAggregateOutputType = {
    id: string | null
    email: string | null
    subject: string | null
    status: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ResendLogsMaxAggregateOutputType = {
    id: string | null
    email: string | null
    subject: string | null
    status: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ResendLogsCountAggregateOutputType = {
    id: number
    email: number
    subject: number
    status: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ResendLogsMinAggregateInputType = {
    id?: true
    email?: true
    subject?: true
    status?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ResendLogsMaxAggregateInputType = {
    id?: true
    email?: true
    subject?: true
    status?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ResendLogsCountAggregateInputType = {
    id?: true
    email?: true
    subject?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ResendLogsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ResendLogs to aggregate.
     */
    where?: ResendLogsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ResendLogs to fetch.
     */
    orderBy?: ResendLogsOrderByWithRelationInput | ResendLogsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ResendLogsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ResendLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ResendLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ResendLogs
    **/
    _count?: true | ResendLogsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ResendLogsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ResendLogsMaxAggregateInputType
  }

  export type GetResendLogsAggregateType<T extends ResendLogsAggregateArgs> = {
        [P in keyof T & keyof AggregateResendLogs]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateResendLogs[P]>
      : GetScalarType<T[P], AggregateResendLogs[P]>
  }




  export type ResendLogsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ResendLogsWhereInput
    orderBy?: ResendLogsOrderByWithAggregationInput | ResendLogsOrderByWithAggregationInput[]
    by: ResendLogsScalarFieldEnum[] | ResendLogsScalarFieldEnum
    having?: ResendLogsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ResendLogsCountAggregateInputType | true
    _min?: ResendLogsMinAggregateInputType
    _max?: ResendLogsMaxAggregateInputType
  }

  export type ResendLogsGroupByOutputType = {
    id: string
    email: string
    subject: string
    status: string
    createdAt: Date
    updatedAt: Date
    _count: ResendLogsCountAggregateOutputType | null
    _min: ResendLogsMinAggregateOutputType | null
    _max: ResendLogsMaxAggregateOutputType | null
  }

  type GetResendLogsGroupByPayload<T extends ResendLogsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ResendLogsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ResendLogsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ResendLogsGroupByOutputType[P]>
            : GetScalarType<T[P], ResendLogsGroupByOutputType[P]>
        }
      >
    >


  export type ResendLogsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    subject?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["resendLogs"]>



  export type ResendLogsSelectScalar = {
    id?: boolean
    email?: boolean
    subject?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ResendLogsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "email" | "subject" | "status" | "createdAt" | "updatedAt", ExtArgs["result"]["resendLogs"]>

  export type $ResendLogsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ResendLogs"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      email: string
      subject: string
      status: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["resendLogs"]>
    composites: {}
  }

  type ResendLogsGetPayload<S extends boolean | null | undefined | ResendLogsDefaultArgs> = $Result.GetResult<Prisma.$ResendLogsPayload, S>

  type ResendLogsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ResendLogsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ResendLogsCountAggregateInputType | true
    }

  export interface ResendLogsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ResendLogs'], meta: { name: 'ResendLogs' } }
    /**
     * Find zero or one ResendLogs that matches the filter.
     * @param {ResendLogsFindUniqueArgs} args - Arguments to find a ResendLogs
     * @example
     * // Get one ResendLogs
     * const resendLogs = await prisma.resendLogs.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ResendLogsFindUniqueArgs>(args: SelectSubset<T, ResendLogsFindUniqueArgs<ExtArgs>>): Prisma__ResendLogsClient<$Result.GetResult<Prisma.$ResendLogsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ResendLogs that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ResendLogsFindUniqueOrThrowArgs} args - Arguments to find a ResendLogs
     * @example
     * // Get one ResendLogs
     * const resendLogs = await prisma.resendLogs.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ResendLogsFindUniqueOrThrowArgs>(args: SelectSubset<T, ResendLogsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ResendLogsClient<$Result.GetResult<Prisma.$ResendLogsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ResendLogs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ResendLogsFindFirstArgs} args - Arguments to find a ResendLogs
     * @example
     * // Get one ResendLogs
     * const resendLogs = await prisma.resendLogs.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ResendLogsFindFirstArgs>(args?: SelectSubset<T, ResendLogsFindFirstArgs<ExtArgs>>): Prisma__ResendLogsClient<$Result.GetResult<Prisma.$ResendLogsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ResendLogs that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ResendLogsFindFirstOrThrowArgs} args - Arguments to find a ResendLogs
     * @example
     * // Get one ResendLogs
     * const resendLogs = await prisma.resendLogs.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ResendLogsFindFirstOrThrowArgs>(args?: SelectSubset<T, ResendLogsFindFirstOrThrowArgs<ExtArgs>>): Prisma__ResendLogsClient<$Result.GetResult<Prisma.$ResendLogsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ResendLogs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ResendLogsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ResendLogs
     * const resendLogs = await prisma.resendLogs.findMany()
     * 
     * // Get first 10 ResendLogs
     * const resendLogs = await prisma.resendLogs.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const resendLogsWithIdOnly = await prisma.resendLogs.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ResendLogsFindManyArgs>(args?: SelectSubset<T, ResendLogsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ResendLogsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ResendLogs.
     * @param {ResendLogsCreateArgs} args - Arguments to create a ResendLogs.
     * @example
     * // Create one ResendLogs
     * const ResendLogs = await prisma.resendLogs.create({
     *   data: {
     *     // ... data to create a ResendLogs
     *   }
     * })
     * 
     */
    create<T extends ResendLogsCreateArgs>(args: SelectSubset<T, ResendLogsCreateArgs<ExtArgs>>): Prisma__ResendLogsClient<$Result.GetResult<Prisma.$ResendLogsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ResendLogs.
     * @param {ResendLogsCreateManyArgs} args - Arguments to create many ResendLogs.
     * @example
     * // Create many ResendLogs
     * const resendLogs = await prisma.resendLogs.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ResendLogsCreateManyArgs>(args?: SelectSubset<T, ResendLogsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a ResendLogs.
     * @param {ResendLogsDeleteArgs} args - Arguments to delete one ResendLogs.
     * @example
     * // Delete one ResendLogs
     * const ResendLogs = await prisma.resendLogs.delete({
     *   where: {
     *     // ... filter to delete one ResendLogs
     *   }
     * })
     * 
     */
    delete<T extends ResendLogsDeleteArgs>(args: SelectSubset<T, ResendLogsDeleteArgs<ExtArgs>>): Prisma__ResendLogsClient<$Result.GetResult<Prisma.$ResendLogsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ResendLogs.
     * @param {ResendLogsUpdateArgs} args - Arguments to update one ResendLogs.
     * @example
     * // Update one ResendLogs
     * const resendLogs = await prisma.resendLogs.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ResendLogsUpdateArgs>(args: SelectSubset<T, ResendLogsUpdateArgs<ExtArgs>>): Prisma__ResendLogsClient<$Result.GetResult<Prisma.$ResendLogsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ResendLogs.
     * @param {ResendLogsDeleteManyArgs} args - Arguments to filter ResendLogs to delete.
     * @example
     * // Delete a few ResendLogs
     * const { count } = await prisma.resendLogs.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ResendLogsDeleteManyArgs>(args?: SelectSubset<T, ResendLogsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ResendLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ResendLogsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ResendLogs
     * const resendLogs = await prisma.resendLogs.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ResendLogsUpdateManyArgs>(args: SelectSubset<T, ResendLogsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ResendLogs.
     * @param {ResendLogsUpsertArgs} args - Arguments to update or create a ResendLogs.
     * @example
     * // Update or create a ResendLogs
     * const resendLogs = await prisma.resendLogs.upsert({
     *   create: {
     *     // ... data to create a ResendLogs
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ResendLogs we want to update
     *   }
     * })
     */
    upsert<T extends ResendLogsUpsertArgs>(args: SelectSubset<T, ResendLogsUpsertArgs<ExtArgs>>): Prisma__ResendLogsClient<$Result.GetResult<Prisma.$ResendLogsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ResendLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ResendLogsCountArgs} args - Arguments to filter ResendLogs to count.
     * @example
     * // Count the number of ResendLogs
     * const count = await prisma.resendLogs.count({
     *   where: {
     *     // ... the filter for the ResendLogs we want to count
     *   }
     * })
    **/
    count<T extends ResendLogsCountArgs>(
      args?: Subset<T, ResendLogsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ResendLogsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ResendLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ResendLogsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ResendLogsAggregateArgs>(args: Subset<T, ResendLogsAggregateArgs>): Prisma.PrismaPromise<GetResendLogsAggregateType<T>>

    /**
     * Group by ResendLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ResendLogsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ResendLogsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ResendLogsGroupByArgs['orderBy'] }
        : { orderBy?: ResendLogsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ResendLogsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetResendLogsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ResendLogs model
   */
  readonly fields: ResendLogsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ResendLogs.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ResendLogsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ResendLogs model
   */
  interface ResendLogsFieldRefs {
    readonly id: FieldRef<"ResendLogs", 'String'>
    readonly email: FieldRef<"ResendLogs", 'String'>
    readonly subject: FieldRef<"ResendLogs", 'String'>
    readonly status: FieldRef<"ResendLogs", 'String'>
    readonly createdAt: FieldRef<"ResendLogs", 'DateTime'>
    readonly updatedAt: FieldRef<"ResendLogs", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ResendLogs findUnique
   */
  export type ResendLogsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResendLogs
     */
    select?: ResendLogsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ResendLogs
     */
    omit?: ResendLogsOmit<ExtArgs> | null
    /**
     * Filter, which ResendLogs to fetch.
     */
    where: ResendLogsWhereUniqueInput
  }

  /**
   * ResendLogs findUniqueOrThrow
   */
  export type ResendLogsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResendLogs
     */
    select?: ResendLogsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ResendLogs
     */
    omit?: ResendLogsOmit<ExtArgs> | null
    /**
     * Filter, which ResendLogs to fetch.
     */
    where: ResendLogsWhereUniqueInput
  }

  /**
   * ResendLogs findFirst
   */
  export type ResendLogsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResendLogs
     */
    select?: ResendLogsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ResendLogs
     */
    omit?: ResendLogsOmit<ExtArgs> | null
    /**
     * Filter, which ResendLogs to fetch.
     */
    where?: ResendLogsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ResendLogs to fetch.
     */
    orderBy?: ResendLogsOrderByWithRelationInput | ResendLogsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ResendLogs.
     */
    cursor?: ResendLogsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ResendLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ResendLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ResendLogs.
     */
    distinct?: ResendLogsScalarFieldEnum | ResendLogsScalarFieldEnum[]
  }

  /**
   * ResendLogs findFirstOrThrow
   */
  export type ResendLogsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResendLogs
     */
    select?: ResendLogsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ResendLogs
     */
    omit?: ResendLogsOmit<ExtArgs> | null
    /**
     * Filter, which ResendLogs to fetch.
     */
    where?: ResendLogsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ResendLogs to fetch.
     */
    orderBy?: ResendLogsOrderByWithRelationInput | ResendLogsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ResendLogs.
     */
    cursor?: ResendLogsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ResendLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ResendLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ResendLogs.
     */
    distinct?: ResendLogsScalarFieldEnum | ResendLogsScalarFieldEnum[]
  }

  /**
   * ResendLogs findMany
   */
  export type ResendLogsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResendLogs
     */
    select?: ResendLogsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ResendLogs
     */
    omit?: ResendLogsOmit<ExtArgs> | null
    /**
     * Filter, which ResendLogs to fetch.
     */
    where?: ResendLogsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ResendLogs to fetch.
     */
    orderBy?: ResendLogsOrderByWithRelationInput | ResendLogsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ResendLogs.
     */
    cursor?: ResendLogsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ResendLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ResendLogs.
     */
    skip?: number
    distinct?: ResendLogsScalarFieldEnum | ResendLogsScalarFieldEnum[]
  }

  /**
   * ResendLogs create
   */
  export type ResendLogsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResendLogs
     */
    select?: ResendLogsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ResendLogs
     */
    omit?: ResendLogsOmit<ExtArgs> | null
    /**
     * The data needed to create a ResendLogs.
     */
    data: XOR<ResendLogsCreateInput, ResendLogsUncheckedCreateInput>
  }

  /**
   * ResendLogs createMany
   */
  export type ResendLogsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ResendLogs.
     */
    data: ResendLogsCreateManyInput | ResendLogsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ResendLogs update
   */
  export type ResendLogsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResendLogs
     */
    select?: ResendLogsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ResendLogs
     */
    omit?: ResendLogsOmit<ExtArgs> | null
    /**
     * The data needed to update a ResendLogs.
     */
    data: XOR<ResendLogsUpdateInput, ResendLogsUncheckedUpdateInput>
    /**
     * Choose, which ResendLogs to update.
     */
    where: ResendLogsWhereUniqueInput
  }

  /**
   * ResendLogs updateMany
   */
  export type ResendLogsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ResendLogs.
     */
    data: XOR<ResendLogsUpdateManyMutationInput, ResendLogsUncheckedUpdateManyInput>
    /**
     * Filter which ResendLogs to update
     */
    where?: ResendLogsWhereInput
    /**
     * Limit how many ResendLogs to update.
     */
    limit?: number
  }

  /**
   * ResendLogs upsert
   */
  export type ResendLogsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResendLogs
     */
    select?: ResendLogsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ResendLogs
     */
    omit?: ResendLogsOmit<ExtArgs> | null
    /**
     * The filter to search for the ResendLogs to update in case it exists.
     */
    where: ResendLogsWhereUniqueInput
    /**
     * In case the ResendLogs found by the `where` argument doesn't exist, create a new ResendLogs with this data.
     */
    create: XOR<ResendLogsCreateInput, ResendLogsUncheckedCreateInput>
    /**
     * In case the ResendLogs was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ResendLogsUpdateInput, ResendLogsUncheckedUpdateInput>
  }

  /**
   * ResendLogs delete
   */
  export type ResendLogsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResendLogs
     */
    select?: ResendLogsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ResendLogs
     */
    omit?: ResendLogsOmit<ExtArgs> | null
    /**
     * Filter which ResendLogs to delete.
     */
    where: ResendLogsWhereUniqueInput
  }

  /**
   * ResendLogs deleteMany
   */
  export type ResendLogsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ResendLogs to delete
     */
    where?: ResendLogsWhereInput
    /**
     * Limit how many ResendLogs to delete.
     */
    limit?: number
  }

  /**
   * ResendLogs without action
   */
  export type ResendLogsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResendLogs
     */
    select?: ResendLogsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ResendLogs
     */
    omit?: ResendLogsOmit<ExtArgs> | null
  }


  /**
   * Model SubscribeBounty
   */

  export type AggregateSubscribeBounty = {
    _count: SubscribeBountyCountAggregateOutputType | null
    _min: SubscribeBountyMinAggregateOutputType | null
    _max: SubscribeBountyMaxAggregateOutputType | null
  }

  export type SubscribeBountyMinAggregateOutputType = {
    id: string | null
    userId: string | null
    bountyId: string | null
    isArchived: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SubscribeBountyMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    bountyId: string | null
    isArchived: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SubscribeBountyCountAggregateOutputType = {
    id: number
    userId: number
    bountyId: number
    isArchived: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type SubscribeBountyMinAggregateInputType = {
    id?: true
    userId?: true
    bountyId?: true
    isArchived?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SubscribeBountyMaxAggregateInputType = {
    id?: true
    userId?: true
    bountyId?: true
    isArchived?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SubscribeBountyCountAggregateInputType = {
    id?: true
    userId?: true
    bountyId?: true
    isArchived?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type SubscribeBountyAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SubscribeBounty to aggregate.
     */
    where?: SubscribeBountyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SubscribeBounties to fetch.
     */
    orderBy?: SubscribeBountyOrderByWithRelationInput | SubscribeBountyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SubscribeBountyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SubscribeBounties from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SubscribeBounties.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SubscribeBounties
    **/
    _count?: true | SubscribeBountyCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SubscribeBountyMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SubscribeBountyMaxAggregateInputType
  }

  export type GetSubscribeBountyAggregateType<T extends SubscribeBountyAggregateArgs> = {
        [P in keyof T & keyof AggregateSubscribeBounty]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSubscribeBounty[P]>
      : GetScalarType<T[P], AggregateSubscribeBounty[P]>
  }




  export type SubscribeBountyGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SubscribeBountyWhereInput
    orderBy?: SubscribeBountyOrderByWithAggregationInput | SubscribeBountyOrderByWithAggregationInput[]
    by: SubscribeBountyScalarFieldEnum[] | SubscribeBountyScalarFieldEnum
    having?: SubscribeBountyScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SubscribeBountyCountAggregateInputType | true
    _min?: SubscribeBountyMinAggregateInputType
    _max?: SubscribeBountyMaxAggregateInputType
  }

  export type SubscribeBountyGroupByOutputType = {
    id: string
    userId: string
    bountyId: string
    isArchived: boolean
    createdAt: Date
    updatedAt: Date
    _count: SubscribeBountyCountAggregateOutputType | null
    _min: SubscribeBountyMinAggregateOutputType | null
    _max: SubscribeBountyMaxAggregateOutputType | null
  }

  type GetSubscribeBountyGroupByPayload<T extends SubscribeBountyGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SubscribeBountyGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SubscribeBountyGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SubscribeBountyGroupByOutputType[P]>
            : GetScalarType<T[P], SubscribeBountyGroupByOutputType[P]>
        }
      >
    >


  export type SubscribeBountySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    bountyId?: boolean
    isArchived?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    User?: boolean | UserDefaultArgs<ExtArgs>
    Bounties?: boolean | SubscribeBounty$BountiesArgs<ExtArgs>
  }, ExtArgs["result"]["subscribeBounty"]>



  export type SubscribeBountySelectScalar = {
    id?: boolean
    userId?: boolean
    bountyId?: boolean
    isArchived?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type SubscribeBountyOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "bountyId" | "isArchived" | "createdAt" | "updatedAt", ExtArgs["result"]["subscribeBounty"]>
  export type SubscribeBountyInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User?: boolean | UserDefaultArgs<ExtArgs>
    Bounties?: boolean | SubscribeBounty$BountiesArgs<ExtArgs>
  }

  export type $SubscribeBountyPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SubscribeBounty"
    objects: {
      User: Prisma.$UserPayload<ExtArgs>
      Bounties: Prisma.$BountiesPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      bountyId: string
      isArchived: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["subscribeBounty"]>
    composites: {}
  }

  type SubscribeBountyGetPayload<S extends boolean | null | undefined | SubscribeBountyDefaultArgs> = $Result.GetResult<Prisma.$SubscribeBountyPayload, S>

  type SubscribeBountyCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SubscribeBountyFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SubscribeBountyCountAggregateInputType | true
    }

  export interface SubscribeBountyDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SubscribeBounty'], meta: { name: 'SubscribeBounty' } }
    /**
     * Find zero or one SubscribeBounty that matches the filter.
     * @param {SubscribeBountyFindUniqueArgs} args - Arguments to find a SubscribeBounty
     * @example
     * // Get one SubscribeBounty
     * const subscribeBounty = await prisma.subscribeBounty.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SubscribeBountyFindUniqueArgs>(args: SelectSubset<T, SubscribeBountyFindUniqueArgs<ExtArgs>>): Prisma__SubscribeBountyClient<$Result.GetResult<Prisma.$SubscribeBountyPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SubscribeBounty that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SubscribeBountyFindUniqueOrThrowArgs} args - Arguments to find a SubscribeBounty
     * @example
     * // Get one SubscribeBounty
     * const subscribeBounty = await prisma.subscribeBounty.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SubscribeBountyFindUniqueOrThrowArgs>(args: SelectSubset<T, SubscribeBountyFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SubscribeBountyClient<$Result.GetResult<Prisma.$SubscribeBountyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SubscribeBounty that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscribeBountyFindFirstArgs} args - Arguments to find a SubscribeBounty
     * @example
     * // Get one SubscribeBounty
     * const subscribeBounty = await prisma.subscribeBounty.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SubscribeBountyFindFirstArgs>(args?: SelectSubset<T, SubscribeBountyFindFirstArgs<ExtArgs>>): Prisma__SubscribeBountyClient<$Result.GetResult<Prisma.$SubscribeBountyPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SubscribeBounty that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscribeBountyFindFirstOrThrowArgs} args - Arguments to find a SubscribeBounty
     * @example
     * // Get one SubscribeBounty
     * const subscribeBounty = await prisma.subscribeBounty.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SubscribeBountyFindFirstOrThrowArgs>(args?: SelectSubset<T, SubscribeBountyFindFirstOrThrowArgs<ExtArgs>>): Prisma__SubscribeBountyClient<$Result.GetResult<Prisma.$SubscribeBountyPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SubscribeBounties that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscribeBountyFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SubscribeBounties
     * const subscribeBounties = await prisma.subscribeBounty.findMany()
     * 
     * // Get first 10 SubscribeBounties
     * const subscribeBounties = await prisma.subscribeBounty.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const subscribeBountyWithIdOnly = await prisma.subscribeBounty.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SubscribeBountyFindManyArgs>(args?: SelectSubset<T, SubscribeBountyFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SubscribeBountyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SubscribeBounty.
     * @param {SubscribeBountyCreateArgs} args - Arguments to create a SubscribeBounty.
     * @example
     * // Create one SubscribeBounty
     * const SubscribeBounty = await prisma.subscribeBounty.create({
     *   data: {
     *     // ... data to create a SubscribeBounty
     *   }
     * })
     * 
     */
    create<T extends SubscribeBountyCreateArgs>(args: SelectSubset<T, SubscribeBountyCreateArgs<ExtArgs>>): Prisma__SubscribeBountyClient<$Result.GetResult<Prisma.$SubscribeBountyPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SubscribeBounties.
     * @param {SubscribeBountyCreateManyArgs} args - Arguments to create many SubscribeBounties.
     * @example
     * // Create many SubscribeBounties
     * const subscribeBounty = await prisma.subscribeBounty.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SubscribeBountyCreateManyArgs>(args?: SelectSubset<T, SubscribeBountyCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a SubscribeBounty.
     * @param {SubscribeBountyDeleteArgs} args - Arguments to delete one SubscribeBounty.
     * @example
     * // Delete one SubscribeBounty
     * const SubscribeBounty = await prisma.subscribeBounty.delete({
     *   where: {
     *     // ... filter to delete one SubscribeBounty
     *   }
     * })
     * 
     */
    delete<T extends SubscribeBountyDeleteArgs>(args: SelectSubset<T, SubscribeBountyDeleteArgs<ExtArgs>>): Prisma__SubscribeBountyClient<$Result.GetResult<Prisma.$SubscribeBountyPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SubscribeBounty.
     * @param {SubscribeBountyUpdateArgs} args - Arguments to update one SubscribeBounty.
     * @example
     * // Update one SubscribeBounty
     * const subscribeBounty = await prisma.subscribeBounty.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SubscribeBountyUpdateArgs>(args: SelectSubset<T, SubscribeBountyUpdateArgs<ExtArgs>>): Prisma__SubscribeBountyClient<$Result.GetResult<Prisma.$SubscribeBountyPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SubscribeBounties.
     * @param {SubscribeBountyDeleteManyArgs} args - Arguments to filter SubscribeBounties to delete.
     * @example
     * // Delete a few SubscribeBounties
     * const { count } = await prisma.subscribeBounty.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SubscribeBountyDeleteManyArgs>(args?: SelectSubset<T, SubscribeBountyDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SubscribeBounties.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscribeBountyUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SubscribeBounties
     * const subscribeBounty = await prisma.subscribeBounty.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SubscribeBountyUpdateManyArgs>(args: SelectSubset<T, SubscribeBountyUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one SubscribeBounty.
     * @param {SubscribeBountyUpsertArgs} args - Arguments to update or create a SubscribeBounty.
     * @example
     * // Update or create a SubscribeBounty
     * const subscribeBounty = await prisma.subscribeBounty.upsert({
     *   create: {
     *     // ... data to create a SubscribeBounty
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SubscribeBounty we want to update
     *   }
     * })
     */
    upsert<T extends SubscribeBountyUpsertArgs>(args: SelectSubset<T, SubscribeBountyUpsertArgs<ExtArgs>>): Prisma__SubscribeBountyClient<$Result.GetResult<Prisma.$SubscribeBountyPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SubscribeBounties.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscribeBountyCountArgs} args - Arguments to filter SubscribeBounties to count.
     * @example
     * // Count the number of SubscribeBounties
     * const count = await prisma.subscribeBounty.count({
     *   where: {
     *     // ... the filter for the SubscribeBounties we want to count
     *   }
     * })
    **/
    count<T extends SubscribeBountyCountArgs>(
      args?: Subset<T, SubscribeBountyCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SubscribeBountyCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SubscribeBounty.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscribeBountyAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SubscribeBountyAggregateArgs>(args: Subset<T, SubscribeBountyAggregateArgs>): Prisma.PrismaPromise<GetSubscribeBountyAggregateType<T>>

    /**
     * Group by SubscribeBounty.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscribeBountyGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SubscribeBountyGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SubscribeBountyGroupByArgs['orderBy'] }
        : { orderBy?: SubscribeBountyGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SubscribeBountyGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSubscribeBountyGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SubscribeBounty model
   */
  readonly fields: SubscribeBountyFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SubscribeBounty.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SubscribeBountyClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    User<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Bounties<T extends SubscribeBounty$BountiesArgs<ExtArgs> = {}>(args?: Subset<T, SubscribeBounty$BountiesArgs<ExtArgs>>): Prisma__BountiesClient<$Result.GetResult<Prisma.$BountiesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SubscribeBounty model
   */
  interface SubscribeBountyFieldRefs {
    readonly id: FieldRef<"SubscribeBounty", 'String'>
    readonly userId: FieldRef<"SubscribeBounty", 'String'>
    readonly bountyId: FieldRef<"SubscribeBounty", 'String'>
    readonly isArchived: FieldRef<"SubscribeBounty", 'Boolean'>
    readonly createdAt: FieldRef<"SubscribeBounty", 'DateTime'>
    readonly updatedAt: FieldRef<"SubscribeBounty", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * SubscribeBounty findUnique
   */
  export type SubscribeBountyFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscribeBounty
     */
    select?: SubscribeBountySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SubscribeBounty
     */
    omit?: SubscribeBountyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscribeBountyInclude<ExtArgs> | null
    /**
     * Filter, which SubscribeBounty to fetch.
     */
    where: SubscribeBountyWhereUniqueInput
  }

  /**
   * SubscribeBounty findUniqueOrThrow
   */
  export type SubscribeBountyFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscribeBounty
     */
    select?: SubscribeBountySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SubscribeBounty
     */
    omit?: SubscribeBountyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscribeBountyInclude<ExtArgs> | null
    /**
     * Filter, which SubscribeBounty to fetch.
     */
    where: SubscribeBountyWhereUniqueInput
  }

  /**
   * SubscribeBounty findFirst
   */
  export type SubscribeBountyFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscribeBounty
     */
    select?: SubscribeBountySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SubscribeBounty
     */
    omit?: SubscribeBountyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscribeBountyInclude<ExtArgs> | null
    /**
     * Filter, which SubscribeBounty to fetch.
     */
    where?: SubscribeBountyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SubscribeBounties to fetch.
     */
    orderBy?: SubscribeBountyOrderByWithRelationInput | SubscribeBountyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SubscribeBounties.
     */
    cursor?: SubscribeBountyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SubscribeBounties from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SubscribeBounties.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SubscribeBounties.
     */
    distinct?: SubscribeBountyScalarFieldEnum | SubscribeBountyScalarFieldEnum[]
  }

  /**
   * SubscribeBounty findFirstOrThrow
   */
  export type SubscribeBountyFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscribeBounty
     */
    select?: SubscribeBountySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SubscribeBounty
     */
    omit?: SubscribeBountyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscribeBountyInclude<ExtArgs> | null
    /**
     * Filter, which SubscribeBounty to fetch.
     */
    where?: SubscribeBountyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SubscribeBounties to fetch.
     */
    orderBy?: SubscribeBountyOrderByWithRelationInput | SubscribeBountyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SubscribeBounties.
     */
    cursor?: SubscribeBountyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SubscribeBounties from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SubscribeBounties.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SubscribeBounties.
     */
    distinct?: SubscribeBountyScalarFieldEnum | SubscribeBountyScalarFieldEnum[]
  }

  /**
   * SubscribeBounty findMany
   */
  export type SubscribeBountyFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscribeBounty
     */
    select?: SubscribeBountySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SubscribeBounty
     */
    omit?: SubscribeBountyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscribeBountyInclude<ExtArgs> | null
    /**
     * Filter, which SubscribeBounties to fetch.
     */
    where?: SubscribeBountyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SubscribeBounties to fetch.
     */
    orderBy?: SubscribeBountyOrderByWithRelationInput | SubscribeBountyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SubscribeBounties.
     */
    cursor?: SubscribeBountyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SubscribeBounties from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SubscribeBounties.
     */
    skip?: number
    distinct?: SubscribeBountyScalarFieldEnum | SubscribeBountyScalarFieldEnum[]
  }

  /**
   * SubscribeBounty create
   */
  export type SubscribeBountyCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscribeBounty
     */
    select?: SubscribeBountySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SubscribeBounty
     */
    omit?: SubscribeBountyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscribeBountyInclude<ExtArgs> | null
    /**
     * The data needed to create a SubscribeBounty.
     */
    data: XOR<SubscribeBountyCreateInput, SubscribeBountyUncheckedCreateInput>
  }

  /**
   * SubscribeBounty createMany
   */
  export type SubscribeBountyCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SubscribeBounties.
     */
    data: SubscribeBountyCreateManyInput | SubscribeBountyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SubscribeBounty update
   */
  export type SubscribeBountyUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscribeBounty
     */
    select?: SubscribeBountySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SubscribeBounty
     */
    omit?: SubscribeBountyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscribeBountyInclude<ExtArgs> | null
    /**
     * The data needed to update a SubscribeBounty.
     */
    data: XOR<SubscribeBountyUpdateInput, SubscribeBountyUncheckedUpdateInput>
    /**
     * Choose, which SubscribeBounty to update.
     */
    where: SubscribeBountyWhereUniqueInput
  }

  /**
   * SubscribeBounty updateMany
   */
  export type SubscribeBountyUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SubscribeBounties.
     */
    data: XOR<SubscribeBountyUpdateManyMutationInput, SubscribeBountyUncheckedUpdateManyInput>
    /**
     * Filter which SubscribeBounties to update
     */
    where?: SubscribeBountyWhereInput
    /**
     * Limit how many SubscribeBounties to update.
     */
    limit?: number
  }

  /**
   * SubscribeBounty upsert
   */
  export type SubscribeBountyUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscribeBounty
     */
    select?: SubscribeBountySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SubscribeBounty
     */
    omit?: SubscribeBountyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscribeBountyInclude<ExtArgs> | null
    /**
     * The filter to search for the SubscribeBounty to update in case it exists.
     */
    where: SubscribeBountyWhereUniqueInput
    /**
     * In case the SubscribeBounty found by the `where` argument doesn't exist, create a new SubscribeBounty with this data.
     */
    create: XOR<SubscribeBountyCreateInput, SubscribeBountyUncheckedCreateInput>
    /**
     * In case the SubscribeBounty was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SubscribeBountyUpdateInput, SubscribeBountyUncheckedUpdateInput>
  }

  /**
   * SubscribeBounty delete
   */
  export type SubscribeBountyDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscribeBounty
     */
    select?: SubscribeBountySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SubscribeBounty
     */
    omit?: SubscribeBountyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscribeBountyInclude<ExtArgs> | null
    /**
     * Filter which SubscribeBounty to delete.
     */
    where: SubscribeBountyWhereUniqueInput
  }

  /**
   * SubscribeBounty deleteMany
   */
  export type SubscribeBountyDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SubscribeBounties to delete
     */
    where?: SubscribeBountyWhereInput
    /**
     * Limit how many SubscribeBounties to delete.
     */
    limit?: number
  }

  /**
   * SubscribeBounty.Bounties
   */
  export type SubscribeBounty$BountiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bounties
     */
    select?: BountiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Bounties
     */
    omit?: BountiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BountiesInclude<ExtArgs> | null
    where?: BountiesWhereInput
  }

  /**
   * SubscribeBounty without action
   */
  export type SubscribeBountyDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscribeBounty
     */
    select?: SubscribeBountySelect<ExtArgs> | null
    /**
     * Omit specific fields from the SubscribeBounty
     */
    omit?: SubscribeBountyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscribeBountyInclude<ExtArgs> | null
  }


  /**
   * Model SubscribeHackathon
   */

  export type AggregateSubscribeHackathon = {
    _count: SubscribeHackathonCountAggregateOutputType | null
    _min: SubscribeHackathonMinAggregateOutputType | null
    _max: SubscribeHackathonMaxAggregateOutputType | null
  }

  export type SubscribeHackathonMinAggregateOutputType = {
    id: string | null
    userId: string | null
    hackathonId: string | null
    isArchived: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SubscribeHackathonMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    hackathonId: string | null
    isArchived: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SubscribeHackathonCountAggregateOutputType = {
    id: number
    userId: number
    hackathonId: number
    isArchived: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type SubscribeHackathonMinAggregateInputType = {
    id?: true
    userId?: true
    hackathonId?: true
    isArchived?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SubscribeHackathonMaxAggregateInputType = {
    id?: true
    userId?: true
    hackathonId?: true
    isArchived?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SubscribeHackathonCountAggregateInputType = {
    id?: true
    userId?: true
    hackathonId?: true
    isArchived?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type SubscribeHackathonAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SubscribeHackathon to aggregate.
     */
    where?: SubscribeHackathonWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SubscribeHackathons to fetch.
     */
    orderBy?: SubscribeHackathonOrderByWithRelationInput | SubscribeHackathonOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SubscribeHackathonWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SubscribeHackathons from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SubscribeHackathons.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SubscribeHackathons
    **/
    _count?: true | SubscribeHackathonCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SubscribeHackathonMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SubscribeHackathonMaxAggregateInputType
  }

  export type GetSubscribeHackathonAggregateType<T extends SubscribeHackathonAggregateArgs> = {
        [P in keyof T & keyof AggregateSubscribeHackathon]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSubscribeHackathon[P]>
      : GetScalarType<T[P], AggregateSubscribeHackathon[P]>
  }




  export type SubscribeHackathonGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SubscribeHackathonWhereInput
    orderBy?: SubscribeHackathonOrderByWithAggregationInput | SubscribeHackathonOrderByWithAggregationInput[]
    by: SubscribeHackathonScalarFieldEnum[] | SubscribeHackathonScalarFieldEnum
    having?: SubscribeHackathonScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SubscribeHackathonCountAggregateInputType | true
    _min?: SubscribeHackathonMinAggregateInputType
    _max?: SubscribeHackathonMaxAggregateInputType
  }

  export type SubscribeHackathonGroupByOutputType = {
    id: string
    userId: string
    hackathonId: string
    isArchived: boolean
    createdAt: Date
    updatedAt: Date
    _count: SubscribeHackathonCountAggregateOutputType | null
    _min: SubscribeHackathonMinAggregateOutputType | null
    _max: SubscribeHackathonMaxAggregateOutputType | null
  }

  type GetSubscribeHackathonGroupByPayload<T extends SubscribeHackathonGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SubscribeHackathonGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SubscribeHackathonGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SubscribeHackathonGroupByOutputType[P]>
            : GetScalarType<T[P], SubscribeHackathonGroupByOutputType[P]>
        }
      >
    >


  export type SubscribeHackathonSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    hackathonId?: boolean
    isArchived?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    User?: boolean | UserDefaultArgs<ExtArgs>
    Hackthons?: boolean | SubscribeHackathon$HackthonsArgs<ExtArgs>
  }, ExtArgs["result"]["subscribeHackathon"]>



  export type SubscribeHackathonSelectScalar = {
    id?: boolean
    userId?: boolean
    hackathonId?: boolean
    isArchived?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type SubscribeHackathonOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "hackathonId" | "isArchived" | "createdAt" | "updatedAt", ExtArgs["result"]["subscribeHackathon"]>
  export type SubscribeHackathonInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User?: boolean | UserDefaultArgs<ExtArgs>
    Hackthons?: boolean | SubscribeHackathon$HackthonsArgs<ExtArgs>
  }

  export type $SubscribeHackathonPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SubscribeHackathon"
    objects: {
      User: Prisma.$UserPayload<ExtArgs>
      Hackthons: Prisma.$HackathonPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      hackathonId: string
      isArchived: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["subscribeHackathon"]>
    composites: {}
  }

  type SubscribeHackathonGetPayload<S extends boolean | null | undefined | SubscribeHackathonDefaultArgs> = $Result.GetResult<Prisma.$SubscribeHackathonPayload, S>

  type SubscribeHackathonCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SubscribeHackathonFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SubscribeHackathonCountAggregateInputType | true
    }

  export interface SubscribeHackathonDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SubscribeHackathon'], meta: { name: 'SubscribeHackathon' } }
    /**
     * Find zero or one SubscribeHackathon that matches the filter.
     * @param {SubscribeHackathonFindUniqueArgs} args - Arguments to find a SubscribeHackathon
     * @example
     * // Get one SubscribeHackathon
     * const subscribeHackathon = await prisma.subscribeHackathon.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SubscribeHackathonFindUniqueArgs>(args: SelectSubset<T, SubscribeHackathonFindUniqueArgs<ExtArgs>>): Prisma__SubscribeHackathonClient<$Result.GetResult<Prisma.$SubscribeHackathonPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SubscribeHackathon that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SubscribeHackathonFindUniqueOrThrowArgs} args - Arguments to find a SubscribeHackathon
     * @example
     * // Get one SubscribeHackathon
     * const subscribeHackathon = await prisma.subscribeHackathon.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SubscribeHackathonFindUniqueOrThrowArgs>(args: SelectSubset<T, SubscribeHackathonFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SubscribeHackathonClient<$Result.GetResult<Prisma.$SubscribeHackathonPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SubscribeHackathon that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscribeHackathonFindFirstArgs} args - Arguments to find a SubscribeHackathon
     * @example
     * // Get one SubscribeHackathon
     * const subscribeHackathon = await prisma.subscribeHackathon.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SubscribeHackathonFindFirstArgs>(args?: SelectSubset<T, SubscribeHackathonFindFirstArgs<ExtArgs>>): Prisma__SubscribeHackathonClient<$Result.GetResult<Prisma.$SubscribeHackathonPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SubscribeHackathon that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscribeHackathonFindFirstOrThrowArgs} args - Arguments to find a SubscribeHackathon
     * @example
     * // Get one SubscribeHackathon
     * const subscribeHackathon = await prisma.subscribeHackathon.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SubscribeHackathonFindFirstOrThrowArgs>(args?: SelectSubset<T, SubscribeHackathonFindFirstOrThrowArgs<ExtArgs>>): Prisma__SubscribeHackathonClient<$Result.GetResult<Prisma.$SubscribeHackathonPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SubscribeHackathons that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscribeHackathonFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SubscribeHackathons
     * const subscribeHackathons = await prisma.subscribeHackathon.findMany()
     * 
     * // Get first 10 SubscribeHackathons
     * const subscribeHackathons = await prisma.subscribeHackathon.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const subscribeHackathonWithIdOnly = await prisma.subscribeHackathon.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SubscribeHackathonFindManyArgs>(args?: SelectSubset<T, SubscribeHackathonFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SubscribeHackathonPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SubscribeHackathon.
     * @param {SubscribeHackathonCreateArgs} args - Arguments to create a SubscribeHackathon.
     * @example
     * // Create one SubscribeHackathon
     * const SubscribeHackathon = await prisma.subscribeHackathon.create({
     *   data: {
     *     // ... data to create a SubscribeHackathon
     *   }
     * })
     * 
     */
    create<T extends SubscribeHackathonCreateArgs>(args: SelectSubset<T, SubscribeHackathonCreateArgs<ExtArgs>>): Prisma__SubscribeHackathonClient<$Result.GetResult<Prisma.$SubscribeHackathonPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SubscribeHackathons.
     * @param {SubscribeHackathonCreateManyArgs} args - Arguments to create many SubscribeHackathons.
     * @example
     * // Create many SubscribeHackathons
     * const subscribeHackathon = await prisma.subscribeHackathon.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SubscribeHackathonCreateManyArgs>(args?: SelectSubset<T, SubscribeHackathonCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a SubscribeHackathon.
     * @param {SubscribeHackathonDeleteArgs} args - Arguments to delete one SubscribeHackathon.
     * @example
     * // Delete one SubscribeHackathon
     * const SubscribeHackathon = await prisma.subscribeHackathon.delete({
     *   where: {
     *     // ... filter to delete one SubscribeHackathon
     *   }
     * })
     * 
     */
    delete<T extends SubscribeHackathonDeleteArgs>(args: SelectSubset<T, SubscribeHackathonDeleteArgs<ExtArgs>>): Prisma__SubscribeHackathonClient<$Result.GetResult<Prisma.$SubscribeHackathonPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SubscribeHackathon.
     * @param {SubscribeHackathonUpdateArgs} args - Arguments to update one SubscribeHackathon.
     * @example
     * // Update one SubscribeHackathon
     * const subscribeHackathon = await prisma.subscribeHackathon.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SubscribeHackathonUpdateArgs>(args: SelectSubset<T, SubscribeHackathonUpdateArgs<ExtArgs>>): Prisma__SubscribeHackathonClient<$Result.GetResult<Prisma.$SubscribeHackathonPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SubscribeHackathons.
     * @param {SubscribeHackathonDeleteManyArgs} args - Arguments to filter SubscribeHackathons to delete.
     * @example
     * // Delete a few SubscribeHackathons
     * const { count } = await prisma.subscribeHackathon.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SubscribeHackathonDeleteManyArgs>(args?: SelectSubset<T, SubscribeHackathonDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SubscribeHackathons.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscribeHackathonUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SubscribeHackathons
     * const subscribeHackathon = await prisma.subscribeHackathon.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SubscribeHackathonUpdateManyArgs>(args: SelectSubset<T, SubscribeHackathonUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one SubscribeHackathon.
     * @param {SubscribeHackathonUpsertArgs} args - Arguments to update or create a SubscribeHackathon.
     * @example
     * // Update or create a SubscribeHackathon
     * const subscribeHackathon = await prisma.subscribeHackathon.upsert({
     *   create: {
     *     // ... data to create a SubscribeHackathon
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SubscribeHackathon we want to update
     *   }
     * })
     */
    upsert<T extends SubscribeHackathonUpsertArgs>(args: SelectSubset<T, SubscribeHackathonUpsertArgs<ExtArgs>>): Prisma__SubscribeHackathonClient<$Result.GetResult<Prisma.$SubscribeHackathonPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SubscribeHackathons.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscribeHackathonCountArgs} args - Arguments to filter SubscribeHackathons to count.
     * @example
     * // Count the number of SubscribeHackathons
     * const count = await prisma.subscribeHackathon.count({
     *   where: {
     *     // ... the filter for the SubscribeHackathons we want to count
     *   }
     * })
    **/
    count<T extends SubscribeHackathonCountArgs>(
      args?: Subset<T, SubscribeHackathonCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SubscribeHackathonCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SubscribeHackathon.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscribeHackathonAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SubscribeHackathonAggregateArgs>(args: Subset<T, SubscribeHackathonAggregateArgs>): Prisma.PrismaPromise<GetSubscribeHackathonAggregateType<T>>

    /**
     * Group by SubscribeHackathon.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscribeHackathonGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SubscribeHackathonGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SubscribeHackathonGroupByArgs['orderBy'] }
        : { orderBy?: SubscribeHackathonGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SubscribeHackathonGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSubscribeHackathonGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SubscribeHackathon model
   */
  readonly fields: SubscribeHackathonFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SubscribeHackathon.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SubscribeHackathonClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    User<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Hackthons<T extends SubscribeHackathon$HackthonsArgs<ExtArgs> = {}>(args?: Subset<T, SubscribeHackathon$HackthonsArgs<ExtArgs>>): Prisma__HackathonClient<$Result.GetResult<Prisma.$HackathonPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SubscribeHackathon model
   */
  interface SubscribeHackathonFieldRefs {
    readonly id: FieldRef<"SubscribeHackathon", 'String'>
    readonly userId: FieldRef<"SubscribeHackathon", 'String'>
    readonly hackathonId: FieldRef<"SubscribeHackathon", 'String'>
    readonly isArchived: FieldRef<"SubscribeHackathon", 'Boolean'>
    readonly createdAt: FieldRef<"SubscribeHackathon", 'DateTime'>
    readonly updatedAt: FieldRef<"SubscribeHackathon", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * SubscribeHackathon findUnique
   */
  export type SubscribeHackathonFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscribeHackathon
     */
    select?: SubscribeHackathonSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SubscribeHackathon
     */
    omit?: SubscribeHackathonOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscribeHackathonInclude<ExtArgs> | null
    /**
     * Filter, which SubscribeHackathon to fetch.
     */
    where: SubscribeHackathonWhereUniqueInput
  }

  /**
   * SubscribeHackathon findUniqueOrThrow
   */
  export type SubscribeHackathonFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscribeHackathon
     */
    select?: SubscribeHackathonSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SubscribeHackathon
     */
    omit?: SubscribeHackathonOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscribeHackathonInclude<ExtArgs> | null
    /**
     * Filter, which SubscribeHackathon to fetch.
     */
    where: SubscribeHackathonWhereUniqueInput
  }

  /**
   * SubscribeHackathon findFirst
   */
  export type SubscribeHackathonFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscribeHackathon
     */
    select?: SubscribeHackathonSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SubscribeHackathon
     */
    omit?: SubscribeHackathonOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscribeHackathonInclude<ExtArgs> | null
    /**
     * Filter, which SubscribeHackathon to fetch.
     */
    where?: SubscribeHackathonWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SubscribeHackathons to fetch.
     */
    orderBy?: SubscribeHackathonOrderByWithRelationInput | SubscribeHackathonOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SubscribeHackathons.
     */
    cursor?: SubscribeHackathonWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SubscribeHackathons from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SubscribeHackathons.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SubscribeHackathons.
     */
    distinct?: SubscribeHackathonScalarFieldEnum | SubscribeHackathonScalarFieldEnum[]
  }

  /**
   * SubscribeHackathon findFirstOrThrow
   */
  export type SubscribeHackathonFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscribeHackathon
     */
    select?: SubscribeHackathonSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SubscribeHackathon
     */
    omit?: SubscribeHackathonOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscribeHackathonInclude<ExtArgs> | null
    /**
     * Filter, which SubscribeHackathon to fetch.
     */
    where?: SubscribeHackathonWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SubscribeHackathons to fetch.
     */
    orderBy?: SubscribeHackathonOrderByWithRelationInput | SubscribeHackathonOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SubscribeHackathons.
     */
    cursor?: SubscribeHackathonWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SubscribeHackathons from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SubscribeHackathons.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SubscribeHackathons.
     */
    distinct?: SubscribeHackathonScalarFieldEnum | SubscribeHackathonScalarFieldEnum[]
  }

  /**
   * SubscribeHackathon findMany
   */
  export type SubscribeHackathonFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscribeHackathon
     */
    select?: SubscribeHackathonSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SubscribeHackathon
     */
    omit?: SubscribeHackathonOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscribeHackathonInclude<ExtArgs> | null
    /**
     * Filter, which SubscribeHackathons to fetch.
     */
    where?: SubscribeHackathonWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SubscribeHackathons to fetch.
     */
    orderBy?: SubscribeHackathonOrderByWithRelationInput | SubscribeHackathonOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SubscribeHackathons.
     */
    cursor?: SubscribeHackathonWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SubscribeHackathons from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SubscribeHackathons.
     */
    skip?: number
    distinct?: SubscribeHackathonScalarFieldEnum | SubscribeHackathonScalarFieldEnum[]
  }

  /**
   * SubscribeHackathon create
   */
  export type SubscribeHackathonCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscribeHackathon
     */
    select?: SubscribeHackathonSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SubscribeHackathon
     */
    omit?: SubscribeHackathonOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscribeHackathonInclude<ExtArgs> | null
    /**
     * The data needed to create a SubscribeHackathon.
     */
    data: XOR<SubscribeHackathonCreateInput, SubscribeHackathonUncheckedCreateInput>
  }

  /**
   * SubscribeHackathon createMany
   */
  export type SubscribeHackathonCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SubscribeHackathons.
     */
    data: SubscribeHackathonCreateManyInput | SubscribeHackathonCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SubscribeHackathon update
   */
  export type SubscribeHackathonUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscribeHackathon
     */
    select?: SubscribeHackathonSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SubscribeHackathon
     */
    omit?: SubscribeHackathonOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscribeHackathonInclude<ExtArgs> | null
    /**
     * The data needed to update a SubscribeHackathon.
     */
    data: XOR<SubscribeHackathonUpdateInput, SubscribeHackathonUncheckedUpdateInput>
    /**
     * Choose, which SubscribeHackathon to update.
     */
    where: SubscribeHackathonWhereUniqueInput
  }

  /**
   * SubscribeHackathon updateMany
   */
  export type SubscribeHackathonUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SubscribeHackathons.
     */
    data: XOR<SubscribeHackathonUpdateManyMutationInput, SubscribeHackathonUncheckedUpdateManyInput>
    /**
     * Filter which SubscribeHackathons to update
     */
    where?: SubscribeHackathonWhereInput
    /**
     * Limit how many SubscribeHackathons to update.
     */
    limit?: number
  }

  /**
   * SubscribeHackathon upsert
   */
  export type SubscribeHackathonUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscribeHackathon
     */
    select?: SubscribeHackathonSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SubscribeHackathon
     */
    omit?: SubscribeHackathonOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscribeHackathonInclude<ExtArgs> | null
    /**
     * The filter to search for the SubscribeHackathon to update in case it exists.
     */
    where: SubscribeHackathonWhereUniqueInput
    /**
     * In case the SubscribeHackathon found by the `where` argument doesn't exist, create a new SubscribeHackathon with this data.
     */
    create: XOR<SubscribeHackathonCreateInput, SubscribeHackathonUncheckedCreateInput>
    /**
     * In case the SubscribeHackathon was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SubscribeHackathonUpdateInput, SubscribeHackathonUncheckedUpdateInput>
  }

  /**
   * SubscribeHackathon delete
   */
  export type SubscribeHackathonDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscribeHackathon
     */
    select?: SubscribeHackathonSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SubscribeHackathon
     */
    omit?: SubscribeHackathonOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscribeHackathonInclude<ExtArgs> | null
    /**
     * Filter which SubscribeHackathon to delete.
     */
    where: SubscribeHackathonWhereUniqueInput
  }

  /**
   * SubscribeHackathon deleteMany
   */
  export type SubscribeHackathonDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SubscribeHackathons to delete
     */
    where?: SubscribeHackathonWhereInput
    /**
     * Limit how many SubscribeHackathons to delete.
     */
    limit?: number
  }

  /**
   * SubscribeHackathon.Hackthons
   */
  export type SubscribeHackathon$HackthonsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Hackathon
     */
    select?: HackathonSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Hackathon
     */
    omit?: HackathonOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HackathonInclude<ExtArgs> | null
    where?: HackathonWhereInput
  }

  /**
   * SubscribeHackathon without action
   */
  export type SubscribeHackathonDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscribeHackathon
     */
    select?: SubscribeHackathonSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SubscribeHackathon
     */
    omit?: SubscribeHackathonOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscribeHackathonInclude<ExtArgs> | null
  }


  /**
   * Model VerificationToken
   */

  export type AggregateVerificationToken = {
    _count: VerificationTokenCountAggregateOutputType | null
    _min: VerificationTokenMinAggregateOutputType | null
    _max: VerificationTokenMaxAggregateOutputType | null
  }

  export type VerificationTokenMinAggregateOutputType = {
    identifier: string | null
    token: string | null
    expires: Date | null
  }

  export type VerificationTokenMaxAggregateOutputType = {
    identifier: string | null
    token: string | null
    expires: Date | null
  }

  export type VerificationTokenCountAggregateOutputType = {
    identifier: number
    token: number
    expires: number
    _all: number
  }


  export type VerificationTokenMinAggregateInputType = {
    identifier?: true
    token?: true
    expires?: true
  }

  export type VerificationTokenMaxAggregateInputType = {
    identifier?: true
    token?: true
    expires?: true
  }

  export type VerificationTokenCountAggregateInputType = {
    identifier?: true
    token?: true
    expires?: true
    _all?: true
  }

  export type VerificationTokenAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which VerificationToken to aggregate.
     */
    where?: VerificationTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VerificationTokens to fetch.
     */
    orderBy?: VerificationTokenOrderByWithRelationInput | VerificationTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: VerificationTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VerificationTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VerificationTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned VerificationTokens
    **/
    _count?: true | VerificationTokenCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: VerificationTokenMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: VerificationTokenMaxAggregateInputType
  }

  export type GetVerificationTokenAggregateType<T extends VerificationTokenAggregateArgs> = {
        [P in keyof T & keyof AggregateVerificationToken]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVerificationToken[P]>
      : GetScalarType<T[P], AggregateVerificationToken[P]>
  }




  export type VerificationTokenGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VerificationTokenWhereInput
    orderBy?: VerificationTokenOrderByWithAggregationInput | VerificationTokenOrderByWithAggregationInput[]
    by: VerificationTokenScalarFieldEnum[] | VerificationTokenScalarFieldEnum
    having?: VerificationTokenScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: VerificationTokenCountAggregateInputType | true
    _min?: VerificationTokenMinAggregateInputType
    _max?: VerificationTokenMaxAggregateInputType
  }

  export type VerificationTokenGroupByOutputType = {
    identifier: string
    token: string
    expires: Date
    _count: VerificationTokenCountAggregateOutputType | null
    _min: VerificationTokenMinAggregateOutputType | null
    _max: VerificationTokenMaxAggregateOutputType | null
  }

  type GetVerificationTokenGroupByPayload<T extends VerificationTokenGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<VerificationTokenGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof VerificationTokenGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], VerificationTokenGroupByOutputType[P]>
            : GetScalarType<T[P], VerificationTokenGroupByOutputType[P]>
        }
      >
    >


  export type VerificationTokenSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    identifier?: boolean
    token?: boolean
    expires?: boolean
  }, ExtArgs["result"]["verificationToken"]>



  export type VerificationTokenSelectScalar = {
    identifier?: boolean
    token?: boolean
    expires?: boolean
  }

  export type VerificationTokenOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"identifier" | "token" | "expires", ExtArgs["result"]["verificationToken"]>

  export type $VerificationTokenPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "VerificationToken"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      identifier: string
      token: string
      expires: Date
    }, ExtArgs["result"]["verificationToken"]>
    composites: {}
  }

  type VerificationTokenGetPayload<S extends boolean | null | undefined | VerificationTokenDefaultArgs> = $Result.GetResult<Prisma.$VerificationTokenPayload, S>

  type VerificationTokenCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<VerificationTokenFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: VerificationTokenCountAggregateInputType | true
    }

  export interface VerificationTokenDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['VerificationToken'], meta: { name: 'VerificationToken' } }
    /**
     * Find zero or one VerificationToken that matches the filter.
     * @param {VerificationTokenFindUniqueArgs} args - Arguments to find a VerificationToken
     * @example
     * // Get one VerificationToken
     * const verificationToken = await prisma.verificationToken.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends VerificationTokenFindUniqueArgs>(args: SelectSubset<T, VerificationTokenFindUniqueArgs<ExtArgs>>): Prisma__VerificationTokenClient<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one VerificationToken that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {VerificationTokenFindUniqueOrThrowArgs} args - Arguments to find a VerificationToken
     * @example
     * // Get one VerificationToken
     * const verificationToken = await prisma.verificationToken.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends VerificationTokenFindUniqueOrThrowArgs>(args: SelectSubset<T, VerificationTokenFindUniqueOrThrowArgs<ExtArgs>>): Prisma__VerificationTokenClient<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first VerificationToken that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationTokenFindFirstArgs} args - Arguments to find a VerificationToken
     * @example
     * // Get one VerificationToken
     * const verificationToken = await prisma.verificationToken.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends VerificationTokenFindFirstArgs>(args?: SelectSubset<T, VerificationTokenFindFirstArgs<ExtArgs>>): Prisma__VerificationTokenClient<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first VerificationToken that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationTokenFindFirstOrThrowArgs} args - Arguments to find a VerificationToken
     * @example
     * // Get one VerificationToken
     * const verificationToken = await prisma.verificationToken.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends VerificationTokenFindFirstOrThrowArgs>(args?: SelectSubset<T, VerificationTokenFindFirstOrThrowArgs<ExtArgs>>): Prisma__VerificationTokenClient<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more VerificationTokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationTokenFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all VerificationTokens
     * const verificationTokens = await prisma.verificationToken.findMany()
     * 
     * // Get first 10 VerificationTokens
     * const verificationTokens = await prisma.verificationToken.findMany({ take: 10 })
     * 
     * // Only select the `identifier`
     * const verificationTokenWithIdentifierOnly = await prisma.verificationToken.findMany({ select: { identifier: true } })
     * 
     */
    findMany<T extends VerificationTokenFindManyArgs>(args?: SelectSubset<T, VerificationTokenFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a VerificationToken.
     * @param {VerificationTokenCreateArgs} args - Arguments to create a VerificationToken.
     * @example
     * // Create one VerificationToken
     * const VerificationToken = await prisma.verificationToken.create({
     *   data: {
     *     // ... data to create a VerificationToken
     *   }
     * })
     * 
     */
    create<T extends VerificationTokenCreateArgs>(args: SelectSubset<T, VerificationTokenCreateArgs<ExtArgs>>): Prisma__VerificationTokenClient<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many VerificationTokens.
     * @param {VerificationTokenCreateManyArgs} args - Arguments to create many VerificationTokens.
     * @example
     * // Create many VerificationTokens
     * const verificationToken = await prisma.verificationToken.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends VerificationTokenCreateManyArgs>(args?: SelectSubset<T, VerificationTokenCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a VerificationToken.
     * @param {VerificationTokenDeleteArgs} args - Arguments to delete one VerificationToken.
     * @example
     * // Delete one VerificationToken
     * const VerificationToken = await prisma.verificationToken.delete({
     *   where: {
     *     // ... filter to delete one VerificationToken
     *   }
     * })
     * 
     */
    delete<T extends VerificationTokenDeleteArgs>(args: SelectSubset<T, VerificationTokenDeleteArgs<ExtArgs>>): Prisma__VerificationTokenClient<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one VerificationToken.
     * @param {VerificationTokenUpdateArgs} args - Arguments to update one VerificationToken.
     * @example
     * // Update one VerificationToken
     * const verificationToken = await prisma.verificationToken.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends VerificationTokenUpdateArgs>(args: SelectSubset<T, VerificationTokenUpdateArgs<ExtArgs>>): Prisma__VerificationTokenClient<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more VerificationTokens.
     * @param {VerificationTokenDeleteManyArgs} args - Arguments to filter VerificationTokens to delete.
     * @example
     * // Delete a few VerificationTokens
     * const { count } = await prisma.verificationToken.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends VerificationTokenDeleteManyArgs>(args?: SelectSubset<T, VerificationTokenDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more VerificationTokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationTokenUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many VerificationTokens
     * const verificationToken = await prisma.verificationToken.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends VerificationTokenUpdateManyArgs>(args: SelectSubset<T, VerificationTokenUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one VerificationToken.
     * @param {VerificationTokenUpsertArgs} args - Arguments to update or create a VerificationToken.
     * @example
     * // Update or create a VerificationToken
     * const verificationToken = await prisma.verificationToken.upsert({
     *   create: {
     *     // ... data to create a VerificationToken
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the VerificationToken we want to update
     *   }
     * })
     */
    upsert<T extends VerificationTokenUpsertArgs>(args: SelectSubset<T, VerificationTokenUpsertArgs<ExtArgs>>): Prisma__VerificationTokenClient<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of VerificationTokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationTokenCountArgs} args - Arguments to filter VerificationTokens to count.
     * @example
     * // Count the number of VerificationTokens
     * const count = await prisma.verificationToken.count({
     *   where: {
     *     // ... the filter for the VerificationTokens we want to count
     *   }
     * })
    **/
    count<T extends VerificationTokenCountArgs>(
      args?: Subset<T, VerificationTokenCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], VerificationTokenCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a VerificationToken.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationTokenAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends VerificationTokenAggregateArgs>(args: Subset<T, VerificationTokenAggregateArgs>): Prisma.PrismaPromise<GetVerificationTokenAggregateType<T>>

    /**
     * Group by VerificationToken.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationTokenGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends VerificationTokenGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: VerificationTokenGroupByArgs['orderBy'] }
        : { orderBy?: VerificationTokenGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, VerificationTokenGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVerificationTokenGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the VerificationToken model
   */
  readonly fields: VerificationTokenFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for VerificationToken.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__VerificationTokenClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the VerificationToken model
   */
  interface VerificationTokenFieldRefs {
    readonly identifier: FieldRef<"VerificationToken", 'String'>
    readonly token: FieldRef<"VerificationToken", 'String'>
    readonly expires: FieldRef<"VerificationToken", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * VerificationToken findUnique
   */
  export type VerificationTokenFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * Filter, which VerificationToken to fetch.
     */
    where: VerificationTokenWhereUniqueInput
  }

  /**
   * VerificationToken findUniqueOrThrow
   */
  export type VerificationTokenFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * Filter, which VerificationToken to fetch.
     */
    where: VerificationTokenWhereUniqueInput
  }

  /**
   * VerificationToken findFirst
   */
  export type VerificationTokenFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * Filter, which VerificationToken to fetch.
     */
    where?: VerificationTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VerificationTokens to fetch.
     */
    orderBy?: VerificationTokenOrderByWithRelationInput | VerificationTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for VerificationTokens.
     */
    cursor?: VerificationTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VerificationTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VerificationTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of VerificationTokens.
     */
    distinct?: VerificationTokenScalarFieldEnum | VerificationTokenScalarFieldEnum[]
  }

  /**
   * VerificationToken findFirstOrThrow
   */
  export type VerificationTokenFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * Filter, which VerificationToken to fetch.
     */
    where?: VerificationTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VerificationTokens to fetch.
     */
    orderBy?: VerificationTokenOrderByWithRelationInput | VerificationTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for VerificationTokens.
     */
    cursor?: VerificationTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VerificationTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VerificationTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of VerificationTokens.
     */
    distinct?: VerificationTokenScalarFieldEnum | VerificationTokenScalarFieldEnum[]
  }

  /**
   * VerificationToken findMany
   */
  export type VerificationTokenFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * Filter, which VerificationTokens to fetch.
     */
    where?: VerificationTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VerificationTokens to fetch.
     */
    orderBy?: VerificationTokenOrderByWithRelationInput | VerificationTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing VerificationTokens.
     */
    cursor?: VerificationTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VerificationTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VerificationTokens.
     */
    skip?: number
    distinct?: VerificationTokenScalarFieldEnum | VerificationTokenScalarFieldEnum[]
  }

  /**
   * VerificationToken create
   */
  export type VerificationTokenCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * The data needed to create a VerificationToken.
     */
    data: XOR<VerificationTokenCreateInput, VerificationTokenUncheckedCreateInput>
  }

  /**
   * VerificationToken createMany
   */
  export type VerificationTokenCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many VerificationTokens.
     */
    data: VerificationTokenCreateManyInput | VerificationTokenCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * VerificationToken update
   */
  export type VerificationTokenUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * The data needed to update a VerificationToken.
     */
    data: XOR<VerificationTokenUpdateInput, VerificationTokenUncheckedUpdateInput>
    /**
     * Choose, which VerificationToken to update.
     */
    where: VerificationTokenWhereUniqueInput
  }

  /**
   * VerificationToken updateMany
   */
  export type VerificationTokenUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update VerificationTokens.
     */
    data: XOR<VerificationTokenUpdateManyMutationInput, VerificationTokenUncheckedUpdateManyInput>
    /**
     * Filter which VerificationTokens to update
     */
    where?: VerificationTokenWhereInput
    /**
     * Limit how many VerificationTokens to update.
     */
    limit?: number
  }

  /**
   * VerificationToken upsert
   */
  export type VerificationTokenUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * The filter to search for the VerificationToken to update in case it exists.
     */
    where: VerificationTokenWhereUniqueInput
    /**
     * In case the VerificationToken found by the `where` argument doesn't exist, create a new VerificationToken with this data.
     */
    create: XOR<VerificationTokenCreateInput, VerificationTokenUncheckedCreateInput>
    /**
     * In case the VerificationToken was found with the provided `where` argument, update it with this data.
     */
    update: XOR<VerificationTokenUpdateInput, VerificationTokenUncheckedUpdateInput>
  }

  /**
   * VerificationToken delete
   */
  export type VerificationTokenDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * Filter which VerificationToken to delete.
     */
    where: VerificationTokenWhereUniqueInput
  }

  /**
   * VerificationToken deleteMany
   */
  export type VerificationTokenDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which VerificationTokens to delete
     */
    where?: VerificationTokenWhereInput
    /**
     * Limit how many VerificationTokens to delete.
     */
    limit?: number
  }

  /**
   * VerificationToken without action
   */
  export type VerificationTokenDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
  }


  /**
   * Model Hackathon
   */

  export type AggregateHackathon = {
    _count: HackathonCountAggregateOutputType | null
    _min: HackathonMinAggregateOutputType | null
    _max: HackathonMaxAggregateOutputType | null
  }

  export type HackathonMinAggregateOutputType = {
    id: string | null
    slug: string | null
    name: string | null
    logo: string | null
    sponsorId: string | null
    deadline: Date | null
    startDate: Date | null
    description: string | null
    altLogo: string | null
    announceDate: Date | null
  }

  export type HackathonMaxAggregateOutputType = {
    id: string | null
    slug: string | null
    name: string | null
    logo: string | null
    sponsorId: string | null
    deadline: Date | null
    startDate: Date | null
    description: string | null
    altLogo: string | null
    announceDate: Date | null
  }

  export type HackathonCountAggregateOutputType = {
    id: number
    slug: number
    name: number
    logo: number
    sponsorId: number
    deadline: number
    startDate: number
    description: number
    altLogo: number
    announceDate: number
    eligibility: number
    _all: number
  }


  export type HackathonMinAggregateInputType = {
    id?: true
    slug?: true
    name?: true
    logo?: true
    sponsorId?: true
    deadline?: true
    startDate?: true
    description?: true
    altLogo?: true
    announceDate?: true
  }

  export type HackathonMaxAggregateInputType = {
    id?: true
    slug?: true
    name?: true
    logo?: true
    sponsorId?: true
    deadline?: true
    startDate?: true
    description?: true
    altLogo?: true
    announceDate?: true
  }

  export type HackathonCountAggregateInputType = {
    id?: true
    slug?: true
    name?: true
    logo?: true
    sponsorId?: true
    deadline?: true
    startDate?: true
    description?: true
    altLogo?: true
    announceDate?: true
    eligibility?: true
    _all?: true
  }

  export type HackathonAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Hackathon to aggregate.
     */
    where?: HackathonWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Hackathons to fetch.
     */
    orderBy?: HackathonOrderByWithRelationInput | HackathonOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: HackathonWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Hackathons from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Hackathons.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Hackathons
    **/
    _count?: true | HackathonCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: HackathonMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: HackathonMaxAggregateInputType
  }

  export type GetHackathonAggregateType<T extends HackathonAggregateArgs> = {
        [P in keyof T & keyof AggregateHackathon]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateHackathon[P]>
      : GetScalarType<T[P], AggregateHackathon[P]>
  }




  export type HackathonGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HackathonWhereInput
    orderBy?: HackathonOrderByWithAggregationInput | HackathonOrderByWithAggregationInput[]
    by: HackathonScalarFieldEnum[] | HackathonScalarFieldEnum
    having?: HackathonScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: HackathonCountAggregateInputType | true
    _min?: HackathonMinAggregateInputType
    _max?: HackathonMaxAggregateInputType
  }

  export type HackathonGroupByOutputType = {
    id: string
    slug: string
    name: string
    logo: string
    sponsorId: string | null
    deadline: Date | null
    startDate: Date | null
    description: string
    altLogo: string | null
    announceDate: Date | null
    eligibility: JsonValue | null
    _count: HackathonCountAggregateOutputType | null
    _min: HackathonMinAggregateOutputType | null
    _max: HackathonMaxAggregateOutputType | null
  }

  type GetHackathonGroupByPayload<T extends HackathonGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<HackathonGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof HackathonGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], HackathonGroupByOutputType[P]>
            : GetScalarType<T[P], HackathonGroupByOutputType[P]>
        }
      >
    >


  export type HackathonSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    slug?: boolean
    name?: boolean
    logo?: boolean
    sponsorId?: boolean
    deadline?: boolean
    startDate?: boolean
    description?: boolean
    altLogo?: boolean
    announceDate?: boolean
    eligibility?: boolean
    listings?: boolean | Hackathon$listingsArgs<ExtArgs>
    Sponsor?: boolean | Hackathon$SponsorArgs<ExtArgs>
    User?: boolean | Hackathon$UserArgs<ExtArgs>
    SubscribeHackathon?: boolean | Hackathon$SubscribeHackathonArgs<ExtArgs>
    _count?: boolean | HackathonCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["hackathon"]>



  export type HackathonSelectScalar = {
    id?: boolean
    slug?: boolean
    name?: boolean
    logo?: boolean
    sponsorId?: boolean
    deadline?: boolean
    startDate?: boolean
    description?: boolean
    altLogo?: boolean
    announceDate?: boolean
    eligibility?: boolean
  }

  export type HackathonOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "slug" | "name" | "logo" | "sponsorId" | "deadline" | "startDate" | "description" | "altLogo" | "announceDate" | "eligibility", ExtArgs["result"]["hackathon"]>
  export type HackathonInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    listings?: boolean | Hackathon$listingsArgs<ExtArgs>
    Sponsor?: boolean | Hackathon$SponsorArgs<ExtArgs>
    User?: boolean | Hackathon$UserArgs<ExtArgs>
    SubscribeHackathon?: boolean | Hackathon$SubscribeHackathonArgs<ExtArgs>
    _count?: boolean | HackathonCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $HackathonPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Hackathon"
    objects: {
      listings: Prisma.$BountiesPayload<ExtArgs>[]
      Sponsor: Prisma.$SponsorsPayload<ExtArgs> | null
      User: Prisma.$UserPayload<ExtArgs>[]
      SubscribeHackathon: Prisma.$SubscribeHackathonPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      slug: string
      name: string
      logo: string
      sponsorId: string | null
      deadline: Date | null
      startDate: Date | null
      description: string
      altLogo: string | null
      announceDate: Date | null
      eligibility: Prisma.JsonValue | null
    }, ExtArgs["result"]["hackathon"]>
    composites: {}
  }

  type HackathonGetPayload<S extends boolean | null | undefined | HackathonDefaultArgs> = $Result.GetResult<Prisma.$HackathonPayload, S>

  type HackathonCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<HackathonFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: HackathonCountAggregateInputType | true
    }

  export interface HackathonDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Hackathon'], meta: { name: 'Hackathon' } }
    /**
     * Find zero or one Hackathon that matches the filter.
     * @param {HackathonFindUniqueArgs} args - Arguments to find a Hackathon
     * @example
     * // Get one Hackathon
     * const hackathon = await prisma.hackathon.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends HackathonFindUniqueArgs>(args: SelectSubset<T, HackathonFindUniqueArgs<ExtArgs>>): Prisma__HackathonClient<$Result.GetResult<Prisma.$HackathonPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Hackathon that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {HackathonFindUniqueOrThrowArgs} args - Arguments to find a Hackathon
     * @example
     * // Get one Hackathon
     * const hackathon = await prisma.hackathon.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends HackathonFindUniqueOrThrowArgs>(args: SelectSubset<T, HackathonFindUniqueOrThrowArgs<ExtArgs>>): Prisma__HackathonClient<$Result.GetResult<Prisma.$HackathonPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Hackathon that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HackathonFindFirstArgs} args - Arguments to find a Hackathon
     * @example
     * // Get one Hackathon
     * const hackathon = await prisma.hackathon.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends HackathonFindFirstArgs>(args?: SelectSubset<T, HackathonFindFirstArgs<ExtArgs>>): Prisma__HackathonClient<$Result.GetResult<Prisma.$HackathonPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Hackathon that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HackathonFindFirstOrThrowArgs} args - Arguments to find a Hackathon
     * @example
     * // Get one Hackathon
     * const hackathon = await prisma.hackathon.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends HackathonFindFirstOrThrowArgs>(args?: SelectSubset<T, HackathonFindFirstOrThrowArgs<ExtArgs>>): Prisma__HackathonClient<$Result.GetResult<Prisma.$HackathonPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Hackathons that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HackathonFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Hackathons
     * const hackathons = await prisma.hackathon.findMany()
     * 
     * // Get first 10 Hackathons
     * const hackathons = await prisma.hackathon.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const hackathonWithIdOnly = await prisma.hackathon.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends HackathonFindManyArgs>(args?: SelectSubset<T, HackathonFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HackathonPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Hackathon.
     * @param {HackathonCreateArgs} args - Arguments to create a Hackathon.
     * @example
     * // Create one Hackathon
     * const Hackathon = await prisma.hackathon.create({
     *   data: {
     *     // ... data to create a Hackathon
     *   }
     * })
     * 
     */
    create<T extends HackathonCreateArgs>(args: SelectSubset<T, HackathonCreateArgs<ExtArgs>>): Prisma__HackathonClient<$Result.GetResult<Prisma.$HackathonPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Hackathons.
     * @param {HackathonCreateManyArgs} args - Arguments to create many Hackathons.
     * @example
     * // Create many Hackathons
     * const hackathon = await prisma.hackathon.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends HackathonCreateManyArgs>(args?: SelectSubset<T, HackathonCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Hackathon.
     * @param {HackathonDeleteArgs} args - Arguments to delete one Hackathon.
     * @example
     * // Delete one Hackathon
     * const Hackathon = await prisma.hackathon.delete({
     *   where: {
     *     // ... filter to delete one Hackathon
     *   }
     * })
     * 
     */
    delete<T extends HackathonDeleteArgs>(args: SelectSubset<T, HackathonDeleteArgs<ExtArgs>>): Prisma__HackathonClient<$Result.GetResult<Prisma.$HackathonPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Hackathon.
     * @param {HackathonUpdateArgs} args - Arguments to update one Hackathon.
     * @example
     * // Update one Hackathon
     * const hackathon = await prisma.hackathon.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends HackathonUpdateArgs>(args: SelectSubset<T, HackathonUpdateArgs<ExtArgs>>): Prisma__HackathonClient<$Result.GetResult<Prisma.$HackathonPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Hackathons.
     * @param {HackathonDeleteManyArgs} args - Arguments to filter Hackathons to delete.
     * @example
     * // Delete a few Hackathons
     * const { count } = await prisma.hackathon.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends HackathonDeleteManyArgs>(args?: SelectSubset<T, HackathonDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Hackathons.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HackathonUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Hackathons
     * const hackathon = await prisma.hackathon.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends HackathonUpdateManyArgs>(args: SelectSubset<T, HackathonUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Hackathon.
     * @param {HackathonUpsertArgs} args - Arguments to update or create a Hackathon.
     * @example
     * // Update or create a Hackathon
     * const hackathon = await prisma.hackathon.upsert({
     *   create: {
     *     // ... data to create a Hackathon
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Hackathon we want to update
     *   }
     * })
     */
    upsert<T extends HackathonUpsertArgs>(args: SelectSubset<T, HackathonUpsertArgs<ExtArgs>>): Prisma__HackathonClient<$Result.GetResult<Prisma.$HackathonPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Hackathons.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HackathonCountArgs} args - Arguments to filter Hackathons to count.
     * @example
     * // Count the number of Hackathons
     * const count = await prisma.hackathon.count({
     *   where: {
     *     // ... the filter for the Hackathons we want to count
     *   }
     * })
    **/
    count<T extends HackathonCountArgs>(
      args?: Subset<T, HackathonCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], HackathonCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Hackathon.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HackathonAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends HackathonAggregateArgs>(args: Subset<T, HackathonAggregateArgs>): Prisma.PrismaPromise<GetHackathonAggregateType<T>>

    /**
     * Group by Hackathon.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HackathonGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends HackathonGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: HackathonGroupByArgs['orderBy'] }
        : { orderBy?: HackathonGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, HackathonGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetHackathonGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Hackathon model
   */
  readonly fields: HackathonFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Hackathon.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__HackathonClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    listings<T extends Hackathon$listingsArgs<ExtArgs> = {}>(args?: Subset<T, Hackathon$listingsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BountiesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Sponsor<T extends Hackathon$SponsorArgs<ExtArgs> = {}>(args?: Subset<T, Hackathon$SponsorArgs<ExtArgs>>): Prisma__SponsorsClient<$Result.GetResult<Prisma.$SponsorsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    User<T extends Hackathon$UserArgs<ExtArgs> = {}>(args?: Subset<T, Hackathon$UserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    SubscribeHackathon<T extends Hackathon$SubscribeHackathonArgs<ExtArgs> = {}>(args?: Subset<T, Hackathon$SubscribeHackathonArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SubscribeHackathonPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Hackathon model
   */
  interface HackathonFieldRefs {
    readonly id: FieldRef<"Hackathon", 'String'>
    readonly slug: FieldRef<"Hackathon", 'String'>
    readonly name: FieldRef<"Hackathon", 'String'>
    readonly logo: FieldRef<"Hackathon", 'String'>
    readonly sponsorId: FieldRef<"Hackathon", 'String'>
    readonly deadline: FieldRef<"Hackathon", 'DateTime'>
    readonly startDate: FieldRef<"Hackathon", 'DateTime'>
    readonly description: FieldRef<"Hackathon", 'String'>
    readonly altLogo: FieldRef<"Hackathon", 'String'>
    readonly announceDate: FieldRef<"Hackathon", 'DateTime'>
    readonly eligibility: FieldRef<"Hackathon", 'Json'>
  }
    

  // Custom InputTypes
  /**
   * Hackathon findUnique
   */
  export type HackathonFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Hackathon
     */
    select?: HackathonSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Hackathon
     */
    omit?: HackathonOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HackathonInclude<ExtArgs> | null
    /**
     * Filter, which Hackathon to fetch.
     */
    where: HackathonWhereUniqueInput
  }

  /**
   * Hackathon findUniqueOrThrow
   */
  export type HackathonFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Hackathon
     */
    select?: HackathonSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Hackathon
     */
    omit?: HackathonOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HackathonInclude<ExtArgs> | null
    /**
     * Filter, which Hackathon to fetch.
     */
    where: HackathonWhereUniqueInput
  }

  /**
   * Hackathon findFirst
   */
  export type HackathonFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Hackathon
     */
    select?: HackathonSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Hackathon
     */
    omit?: HackathonOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HackathonInclude<ExtArgs> | null
    /**
     * Filter, which Hackathon to fetch.
     */
    where?: HackathonWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Hackathons to fetch.
     */
    orderBy?: HackathonOrderByWithRelationInput | HackathonOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Hackathons.
     */
    cursor?: HackathonWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Hackathons from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Hackathons.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Hackathons.
     */
    distinct?: HackathonScalarFieldEnum | HackathonScalarFieldEnum[]
  }

  /**
   * Hackathon findFirstOrThrow
   */
  export type HackathonFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Hackathon
     */
    select?: HackathonSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Hackathon
     */
    omit?: HackathonOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HackathonInclude<ExtArgs> | null
    /**
     * Filter, which Hackathon to fetch.
     */
    where?: HackathonWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Hackathons to fetch.
     */
    orderBy?: HackathonOrderByWithRelationInput | HackathonOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Hackathons.
     */
    cursor?: HackathonWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Hackathons from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Hackathons.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Hackathons.
     */
    distinct?: HackathonScalarFieldEnum | HackathonScalarFieldEnum[]
  }

  /**
   * Hackathon findMany
   */
  export type HackathonFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Hackathon
     */
    select?: HackathonSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Hackathon
     */
    omit?: HackathonOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HackathonInclude<ExtArgs> | null
    /**
     * Filter, which Hackathons to fetch.
     */
    where?: HackathonWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Hackathons to fetch.
     */
    orderBy?: HackathonOrderByWithRelationInput | HackathonOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Hackathons.
     */
    cursor?: HackathonWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Hackathons from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Hackathons.
     */
    skip?: number
    distinct?: HackathonScalarFieldEnum | HackathonScalarFieldEnum[]
  }

  /**
   * Hackathon create
   */
  export type HackathonCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Hackathon
     */
    select?: HackathonSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Hackathon
     */
    omit?: HackathonOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HackathonInclude<ExtArgs> | null
    /**
     * The data needed to create a Hackathon.
     */
    data: XOR<HackathonCreateInput, HackathonUncheckedCreateInput>
  }

  /**
   * Hackathon createMany
   */
  export type HackathonCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Hackathons.
     */
    data: HackathonCreateManyInput | HackathonCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Hackathon update
   */
  export type HackathonUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Hackathon
     */
    select?: HackathonSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Hackathon
     */
    omit?: HackathonOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HackathonInclude<ExtArgs> | null
    /**
     * The data needed to update a Hackathon.
     */
    data: XOR<HackathonUpdateInput, HackathonUncheckedUpdateInput>
    /**
     * Choose, which Hackathon to update.
     */
    where: HackathonWhereUniqueInput
  }

  /**
   * Hackathon updateMany
   */
  export type HackathonUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Hackathons.
     */
    data: XOR<HackathonUpdateManyMutationInput, HackathonUncheckedUpdateManyInput>
    /**
     * Filter which Hackathons to update
     */
    where?: HackathonWhereInput
    /**
     * Limit how many Hackathons to update.
     */
    limit?: number
  }

  /**
   * Hackathon upsert
   */
  export type HackathonUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Hackathon
     */
    select?: HackathonSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Hackathon
     */
    omit?: HackathonOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HackathonInclude<ExtArgs> | null
    /**
     * The filter to search for the Hackathon to update in case it exists.
     */
    where: HackathonWhereUniqueInput
    /**
     * In case the Hackathon found by the `where` argument doesn't exist, create a new Hackathon with this data.
     */
    create: XOR<HackathonCreateInput, HackathonUncheckedCreateInput>
    /**
     * In case the Hackathon was found with the provided `where` argument, update it with this data.
     */
    update: XOR<HackathonUpdateInput, HackathonUncheckedUpdateInput>
  }

  /**
   * Hackathon delete
   */
  export type HackathonDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Hackathon
     */
    select?: HackathonSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Hackathon
     */
    omit?: HackathonOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HackathonInclude<ExtArgs> | null
    /**
     * Filter which Hackathon to delete.
     */
    where: HackathonWhereUniqueInput
  }

  /**
   * Hackathon deleteMany
   */
  export type HackathonDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Hackathons to delete
     */
    where?: HackathonWhereInput
    /**
     * Limit how many Hackathons to delete.
     */
    limit?: number
  }

  /**
   * Hackathon.listings
   */
  export type Hackathon$listingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bounties
     */
    select?: BountiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Bounties
     */
    omit?: BountiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BountiesInclude<ExtArgs> | null
    where?: BountiesWhereInput
    orderBy?: BountiesOrderByWithRelationInput | BountiesOrderByWithRelationInput[]
    cursor?: BountiesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BountiesScalarFieldEnum | BountiesScalarFieldEnum[]
  }

  /**
   * Hackathon.Sponsor
   */
  export type Hackathon$SponsorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sponsors
     */
    select?: SponsorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sponsors
     */
    omit?: SponsorsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SponsorsInclude<ExtArgs> | null
    where?: SponsorsWhereInput
  }

  /**
   * Hackathon.User
   */
  export type Hackathon$UserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * Hackathon.SubscribeHackathon
   */
  export type Hackathon$SubscribeHackathonArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscribeHackathon
     */
    select?: SubscribeHackathonSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SubscribeHackathon
     */
    omit?: SubscribeHackathonOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscribeHackathonInclude<ExtArgs> | null
    where?: SubscribeHackathonWhereInput
    orderBy?: SubscribeHackathonOrderByWithRelationInput | SubscribeHackathonOrderByWithRelationInput[]
    cursor?: SubscribeHackathonWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SubscribeHackathonScalarFieldEnum | SubscribeHackathonScalarFieldEnum[]
  }

  /**
   * Hackathon without action
   */
  export type HackathonDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Hackathon
     */
    select?: HackathonSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Hackathon
     */
    omit?: HackathonOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HackathonInclude<ExtArgs> | null
  }


  /**
   * Model UnsubscribedEmail
   */

  export type AggregateUnsubscribedEmail = {
    _count: UnsubscribedEmailCountAggregateOutputType | null
    _min: UnsubscribedEmailMinAggregateOutputType | null
    _max: UnsubscribedEmailMaxAggregateOutputType | null
  }

  export type UnsubscribedEmailMinAggregateOutputType = {
    id: string | null
    email: string | null
    createdAt: Date | null
  }

  export type UnsubscribedEmailMaxAggregateOutputType = {
    id: string | null
    email: string | null
    createdAt: Date | null
  }

  export type UnsubscribedEmailCountAggregateOutputType = {
    id: number
    email: number
    createdAt: number
    _all: number
  }


  export type UnsubscribedEmailMinAggregateInputType = {
    id?: true
    email?: true
    createdAt?: true
  }

  export type UnsubscribedEmailMaxAggregateInputType = {
    id?: true
    email?: true
    createdAt?: true
  }

  export type UnsubscribedEmailCountAggregateInputType = {
    id?: true
    email?: true
    createdAt?: true
    _all?: true
  }

  export type UnsubscribedEmailAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UnsubscribedEmail to aggregate.
     */
    where?: UnsubscribedEmailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UnsubscribedEmails to fetch.
     */
    orderBy?: UnsubscribedEmailOrderByWithRelationInput | UnsubscribedEmailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UnsubscribedEmailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UnsubscribedEmails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UnsubscribedEmails.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UnsubscribedEmails
    **/
    _count?: true | UnsubscribedEmailCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UnsubscribedEmailMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UnsubscribedEmailMaxAggregateInputType
  }

  export type GetUnsubscribedEmailAggregateType<T extends UnsubscribedEmailAggregateArgs> = {
        [P in keyof T & keyof AggregateUnsubscribedEmail]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUnsubscribedEmail[P]>
      : GetScalarType<T[P], AggregateUnsubscribedEmail[P]>
  }




  export type UnsubscribedEmailGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UnsubscribedEmailWhereInput
    orderBy?: UnsubscribedEmailOrderByWithAggregationInput | UnsubscribedEmailOrderByWithAggregationInput[]
    by: UnsubscribedEmailScalarFieldEnum[] | UnsubscribedEmailScalarFieldEnum
    having?: UnsubscribedEmailScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UnsubscribedEmailCountAggregateInputType | true
    _min?: UnsubscribedEmailMinAggregateInputType
    _max?: UnsubscribedEmailMaxAggregateInputType
  }

  export type UnsubscribedEmailGroupByOutputType = {
    id: string
    email: string
    createdAt: Date
    _count: UnsubscribedEmailCountAggregateOutputType | null
    _min: UnsubscribedEmailMinAggregateOutputType | null
    _max: UnsubscribedEmailMaxAggregateOutputType | null
  }

  type GetUnsubscribedEmailGroupByPayload<T extends UnsubscribedEmailGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UnsubscribedEmailGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UnsubscribedEmailGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UnsubscribedEmailGroupByOutputType[P]>
            : GetScalarType<T[P], UnsubscribedEmailGroupByOutputType[P]>
        }
      >
    >


  export type UnsubscribedEmailSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["unsubscribedEmail"]>



  export type UnsubscribedEmailSelectScalar = {
    id?: boolean
    email?: boolean
    createdAt?: boolean
  }

  export type UnsubscribedEmailOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "email" | "createdAt", ExtArgs["result"]["unsubscribedEmail"]>

  export type $UnsubscribedEmailPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UnsubscribedEmail"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      email: string
      createdAt: Date
    }, ExtArgs["result"]["unsubscribedEmail"]>
    composites: {}
  }

  type UnsubscribedEmailGetPayload<S extends boolean | null | undefined | UnsubscribedEmailDefaultArgs> = $Result.GetResult<Prisma.$UnsubscribedEmailPayload, S>

  type UnsubscribedEmailCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UnsubscribedEmailFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UnsubscribedEmailCountAggregateInputType | true
    }

  export interface UnsubscribedEmailDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UnsubscribedEmail'], meta: { name: 'UnsubscribedEmail' } }
    /**
     * Find zero or one UnsubscribedEmail that matches the filter.
     * @param {UnsubscribedEmailFindUniqueArgs} args - Arguments to find a UnsubscribedEmail
     * @example
     * // Get one UnsubscribedEmail
     * const unsubscribedEmail = await prisma.unsubscribedEmail.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UnsubscribedEmailFindUniqueArgs>(args: SelectSubset<T, UnsubscribedEmailFindUniqueArgs<ExtArgs>>): Prisma__UnsubscribedEmailClient<$Result.GetResult<Prisma.$UnsubscribedEmailPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one UnsubscribedEmail that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UnsubscribedEmailFindUniqueOrThrowArgs} args - Arguments to find a UnsubscribedEmail
     * @example
     * // Get one UnsubscribedEmail
     * const unsubscribedEmail = await prisma.unsubscribedEmail.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UnsubscribedEmailFindUniqueOrThrowArgs>(args: SelectSubset<T, UnsubscribedEmailFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UnsubscribedEmailClient<$Result.GetResult<Prisma.$UnsubscribedEmailPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UnsubscribedEmail that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UnsubscribedEmailFindFirstArgs} args - Arguments to find a UnsubscribedEmail
     * @example
     * // Get one UnsubscribedEmail
     * const unsubscribedEmail = await prisma.unsubscribedEmail.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UnsubscribedEmailFindFirstArgs>(args?: SelectSubset<T, UnsubscribedEmailFindFirstArgs<ExtArgs>>): Prisma__UnsubscribedEmailClient<$Result.GetResult<Prisma.$UnsubscribedEmailPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UnsubscribedEmail that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UnsubscribedEmailFindFirstOrThrowArgs} args - Arguments to find a UnsubscribedEmail
     * @example
     * // Get one UnsubscribedEmail
     * const unsubscribedEmail = await prisma.unsubscribedEmail.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UnsubscribedEmailFindFirstOrThrowArgs>(args?: SelectSubset<T, UnsubscribedEmailFindFirstOrThrowArgs<ExtArgs>>): Prisma__UnsubscribedEmailClient<$Result.GetResult<Prisma.$UnsubscribedEmailPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more UnsubscribedEmails that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UnsubscribedEmailFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UnsubscribedEmails
     * const unsubscribedEmails = await prisma.unsubscribedEmail.findMany()
     * 
     * // Get first 10 UnsubscribedEmails
     * const unsubscribedEmails = await prisma.unsubscribedEmail.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const unsubscribedEmailWithIdOnly = await prisma.unsubscribedEmail.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UnsubscribedEmailFindManyArgs>(args?: SelectSubset<T, UnsubscribedEmailFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UnsubscribedEmailPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a UnsubscribedEmail.
     * @param {UnsubscribedEmailCreateArgs} args - Arguments to create a UnsubscribedEmail.
     * @example
     * // Create one UnsubscribedEmail
     * const UnsubscribedEmail = await prisma.unsubscribedEmail.create({
     *   data: {
     *     // ... data to create a UnsubscribedEmail
     *   }
     * })
     * 
     */
    create<T extends UnsubscribedEmailCreateArgs>(args: SelectSubset<T, UnsubscribedEmailCreateArgs<ExtArgs>>): Prisma__UnsubscribedEmailClient<$Result.GetResult<Prisma.$UnsubscribedEmailPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many UnsubscribedEmails.
     * @param {UnsubscribedEmailCreateManyArgs} args - Arguments to create many UnsubscribedEmails.
     * @example
     * // Create many UnsubscribedEmails
     * const unsubscribedEmail = await prisma.unsubscribedEmail.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UnsubscribedEmailCreateManyArgs>(args?: SelectSubset<T, UnsubscribedEmailCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a UnsubscribedEmail.
     * @param {UnsubscribedEmailDeleteArgs} args - Arguments to delete one UnsubscribedEmail.
     * @example
     * // Delete one UnsubscribedEmail
     * const UnsubscribedEmail = await prisma.unsubscribedEmail.delete({
     *   where: {
     *     // ... filter to delete one UnsubscribedEmail
     *   }
     * })
     * 
     */
    delete<T extends UnsubscribedEmailDeleteArgs>(args: SelectSubset<T, UnsubscribedEmailDeleteArgs<ExtArgs>>): Prisma__UnsubscribedEmailClient<$Result.GetResult<Prisma.$UnsubscribedEmailPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one UnsubscribedEmail.
     * @param {UnsubscribedEmailUpdateArgs} args - Arguments to update one UnsubscribedEmail.
     * @example
     * // Update one UnsubscribedEmail
     * const unsubscribedEmail = await prisma.unsubscribedEmail.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UnsubscribedEmailUpdateArgs>(args: SelectSubset<T, UnsubscribedEmailUpdateArgs<ExtArgs>>): Prisma__UnsubscribedEmailClient<$Result.GetResult<Prisma.$UnsubscribedEmailPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more UnsubscribedEmails.
     * @param {UnsubscribedEmailDeleteManyArgs} args - Arguments to filter UnsubscribedEmails to delete.
     * @example
     * // Delete a few UnsubscribedEmails
     * const { count } = await prisma.unsubscribedEmail.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UnsubscribedEmailDeleteManyArgs>(args?: SelectSubset<T, UnsubscribedEmailDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UnsubscribedEmails.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UnsubscribedEmailUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UnsubscribedEmails
     * const unsubscribedEmail = await prisma.unsubscribedEmail.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UnsubscribedEmailUpdateManyArgs>(args: SelectSubset<T, UnsubscribedEmailUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one UnsubscribedEmail.
     * @param {UnsubscribedEmailUpsertArgs} args - Arguments to update or create a UnsubscribedEmail.
     * @example
     * // Update or create a UnsubscribedEmail
     * const unsubscribedEmail = await prisma.unsubscribedEmail.upsert({
     *   create: {
     *     // ... data to create a UnsubscribedEmail
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UnsubscribedEmail we want to update
     *   }
     * })
     */
    upsert<T extends UnsubscribedEmailUpsertArgs>(args: SelectSubset<T, UnsubscribedEmailUpsertArgs<ExtArgs>>): Prisma__UnsubscribedEmailClient<$Result.GetResult<Prisma.$UnsubscribedEmailPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of UnsubscribedEmails.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UnsubscribedEmailCountArgs} args - Arguments to filter UnsubscribedEmails to count.
     * @example
     * // Count the number of UnsubscribedEmails
     * const count = await prisma.unsubscribedEmail.count({
     *   where: {
     *     // ... the filter for the UnsubscribedEmails we want to count
     *   }
     * })
    **/
    count<T extends UnsubscribedEmailCountArgs>(
      args?: Subset<T, UnsubscribedEmailCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UnsubscribedEmailCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UnsubscribedEmail.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UnsubscribedEmailAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UnsubscribedEmailAggregateArgs>(args: Subset<T, UnsubscribedEmailAggregateArgs>): Prisma.PrismaPromise<GetUnsubscribedEmailAggregateType<T>>

    /**
     * Group by UnsubscribedEmail.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UnsubscribedEmailGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UnsubscribedEmailGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UnsubscribedEmailGroupByArgs['orderBy'] }
        : { orderBy?: UnsubscribedEmailGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UnsubscribedEmailGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUnsubscribedEmailGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UnsubscribedEmail model
   */
  readonly fields: UnsubscribedEmailFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UnsubscribedEmail.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UnsubscribedEmailClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UnsubscribedEmail model
   */
  interface UnsubscribedEmailFieldRefs {
    readonly id: FieldRef<"UnsubscribedEmail", 'String'>
    readonly email: FieldRef<"UnsubscribedEmail", 'String'>
    readonly createdAt: FieldRef<"UnsubscribedEmail", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * UnsubscribedEmail findUnique
   */
  export type UnsubscribedEmailFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UnsubscribedEmail
     */
    select?: UnsubscribedEmailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UnsubscribedEmail
     */
    omit?: UnsubscribedEmailOmit<ExtArgs> | null
    /**
     * Filter, which UnsubscribedEmail to fetch.
     */
    where: UnsubscribedEmailWhereUniqueInput
  }

  /**
   * UnsubscribedEmail findUniqueOrThrow
   */
  export type UnsubscribedEmailFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UnsubscribedEmail
     */
    select?: UnsubscribedEmailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UnsubscribedEmail
     */
    omit?: UnsubscribedEmailOmit<ExtArgs> | null
    /**
     * Filter, which UnsubscribedEmail to fetch.
     */
    where: UnsubscribedEmailWhereUniqueInput
  }

  /**
   * UnsubscribedEmail findFirst
   */
  export type UnsubscribedEmailFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UnsubscribedEmail
     */
    select?: UnsubscribedEmailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UnsubscribedEmail
     */
    omit?: UnsubscribedEmailOmit<ExtArgs> | null
    /**
     * Filter, which UnsubscribedEmail to fetch.
     */
    where?: UnsubscribedEmailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UnsubscribedEmails to fetch.
     */
    orderBy?: UnsubscribedEmailOrderByWithRelationInput | UnsubscribedEmailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UnsubscribedEmails.
     */
    cursor?: UnsubscribedEmailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UnsubscribedEmails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UnsubscribedEmails.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UnsubscribedEmails.
     */
    distinct?: UnsubscribedEmailScalarFieldEnum | UnsubscribedEmailScalarFieldEnum[]
  }

  /**
   * UnsubscribedEmail findFirstOrThrow
   */
  export type UnsubscribedEmailFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UnsubscribedEmail
     */
    select?: UnsubscribedEmailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UnsubscribedEmail
     */
    omit?: UnsubscribedEmailOmit<ExtArgs> | null
    /**
     * Filter, which UnsubscribedEmail to fetch.
     */
    where?: UnsubscribedEmailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UnsubscribedEmails to fetch.
     */
    orderBy?: UnsubscribedEmailOrderByWithRelationInput | UnsubscribedEmailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UnsubscribedEmails.
     */
    cursor?: UnsubscribedEmailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UnsubscribedEmails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UnsubscribedEmails.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UnsubscribedEmails.
     */
    distinct?: UnsubscribedEmailScalarFieldEnum | UnsubscribedEmailScalarFieldEnum[]
  }

  /**
   * UnsubscribedEmail findMany
   */
  export type UnsubscribedEmailFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UnsubscribedEmail
     */
    select?: UnsubscribedEmailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UnsubscribedEmail
     */
    omit?: UnsubscribedEmailOmit<ExtArgs> | null
    /**
     * Filter, which UnsubscribedEmails to fetch.
     */
    where?: UnsubscribedEmailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UnsubscribedEmails to fetch.
     */
    orderBy?: UnsubscribedEmailOrderByWithRelationInput | UnsubscribedEmailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UnsubscribedEmails.
     */
    cursor?: UnsubscribedEmailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UnsubscribedEmails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UnsubscribedEmails.
     */
    skip?: number
    distinct?: UnsubscribedEmailScalarFieldEnum | UnsubscribedEmailScalarFieldEnum[]
  }

  /**
   * UnsubscribedEmail create
   */
  export type UnsubscribedEmailCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UnsubscribedEmail
     */
    select?: UnsubscribedEmailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UnsubscribedEmail
     */
    omit?: UnsubscribedEmailOmit<ExtArgs> | null
    /**
     * The data needed to create a UnsubscribedEmail.
     */
    data: XOR<UnsubscribedEmailCreateInput, UnsubscribedEmailUncheckedCreateInput>
  }

  /**
   * UnsubscribedEmail createMany
   */
  export type UnsubscribedEmailCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UnsubscribedEmails.
     */
    data: UnsubscribedEmailCreateManyInput | UnsubscribedEmailCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UnsubscribedEmail update
   */
  export type UnsubscribedEmailUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UnsubscribedEmail
     */
    select?: UnsubscribedEmailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UnsubscribedEmail
     */
    omit?: UnsubscribedEmailOmit<ExtArgs> | null
    /**
     * The data needed to update a UnsubscribedEmail.
     */
    data: XOR<UnsubscribedEmailUpdateInput, UnsubscribedEmailUncheckedUpdateInput>
    /**
     * Choose, which UnsubscribedEmail to update.
     */
    where: UnsubscribedEmailWhereUniqueInput
  }

  /**
   * UnsubscribedEmail updateMany
   */
  export type UnsubscribedEmailUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UnsubscribedEmails.
     */
    data: XOR<UnsubscribedEmailUpdateManyMutationInput, UnsubscribedEmailUncheckedUpdateManyInput>
    /**
     * Filter which UnsubscribedEmails to update
     */
    where?: UnsubscribedEmailWhereInput
    /**
     * Limit how many UnsubscribedEmails to update.
     */
    limit?: number
  }

  /**
   * UnsubscribedEmail upsert
   */
  export type UnsubscribedEmailUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UnsubscribedEmail
     */
    select?: UnsubscribedEmailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UnsubscribedEmail
     */
    omit?: UnsubscribedEmailOmit<ExtArgs> | null
    /**
     * The filter to search for the UnsubscribedEmail to update in case it exists.
     */
    where: UnsubscribedEmailWhereUniqueInput
    /**
     * In case the UnsubscribedEmail found by the `where` argument doesn't exist, create a new UnsubscribedEmail with this data.
     */
    create: XOR<UnsubscribedEmailCreateInput, UnsubscribedEmailUncheckedCreateInput>
    /**
     * In case the UnsubscribedEmail was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UnsubscribedEmailUpdateInput, UnsubscribedEmailUncheckedUpdateInput>
  }

  /**
   * UnsubscribedEmail delete
   */
  export type UnsubscribedEmailDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UnsubscribedEmail
     */
    select?: UnsubscribedEmailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UnsubscribedEmail
     */
    omit?: UnsubscribedEmailOmit<ExtArgs> | null
    /**
     * Filter which UnsubscribedEmail to delete.
     */
    where: UnsubscribedEmailWhereUniqueInput
  }

  /**
   * UnsubscribedEmail deleteMany
   */
  export type UnsubscribedEmailDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UnsubscribedEmails to delete
     */
    where?: UnsubscribedEmailWhereInput
    /**
     * Limit how many UnsubscribedEmails to delete.
     */
    limit?: number
  }

  /**
   * UnsubscribedEmail without action
   */
  export type UnsubscribedEmailDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UnsubscribedEmail
     */
    select?: UnsubscribedEmailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UnsubscribedEmail
     */
    omit?: UnsubscribedEmailOmit<ExtArgs> | null
  }


  /**
   * Model BlockedEmail
   */

  export type AggregateBlockedEmail = {
    _count: BlockedEmailCountAggregateOutputType | null
    _min: BlockedEmailMinAggregateOutputType | null
    _max: BlockedEmailMaxAggregateOutputType | null
  }

  export type BlockedEmailMinAggregateOutputType = {
    id: string | null
    email: string | null
    createdAt: Date | null
  }

  export type BlockedEmailMaxAggregateOutputType = {
    id: string | null
    email: string | null
    createdAt: Date | null
  }

  export type BlockedEmailCountAggregateOutputType = {
    id: number
    email: number
    createdAt: number
    _all: number
  }


  export type BlockedEmailMinAggregateInputType = {
    id?: true
    email?: true
    createdAt?: true
  }

  export type BlockedEmailMaxAggregateInputType = {
    id?: true
    email?: true
    createdAt?: true
  }

  export type BlockedEmailCountAggregateInputType = {
    id?: true
    email?: true
    createdAt?: true
    _all?: true
  }

  export type BlockedEmailAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BlockedEmail to aggregate.
     */
    where?: BlockedEmailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BlockedEmails to fetch.
     */
    orderBy?: BlockedEmailOrderByWithRelationInput | BlockedEmailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BlockedEmailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BlockedEmails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BlockedEmails.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned BlockedEmails
    **/
    _count?: true | BlockedEmailCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BlockedEmailMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BlockedEmailMaxAggregateInputType
  }

  export type GetBlockedEmailAggregateType<T extends BlockedEmailAggregateArgs> = {
        [P in keyof T & keyof AggregateBlockedEmail]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBlockedEmail[P]>
      : GetScalarType<T[P], AggregateBlockedEmail[P]>
  }




  export type BlockedEmailGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BlockedEmailWhereInput
    orderBy?: BlockedEmailOrderByWithAggregationInput | BlockedEmailOrderByWithAggregationInput[]
    by: BlockedEmailScalarFieldEnum[] | BlockedEmailScalarFieldEnum
    having?: BlockedEmailScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BlockedEmailCountAggregateInputType | true
    _min?: BlockedEmailMinAggregateInputType
    _max?: BlockedEmailMaxAggregateInputType
  }

  export type BlockedEmailGroupByOutputType = {
    id: string
    email: string
    createdAt: Date
    _count: BlockedEmailCountAggregateOutputType | null
    _min: BlockedEmailMinAggregateOutputType | null
    _max: BlockedEmailMaxAggregateOutputType | null
  }

  type GetBlockedEmailGroupByPayload<T extends BlockedEmailGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BlockedEmailGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BlockedEmailGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BlockedEmailGroupByOutputType[P]>
            : GetScalarType<T[P], BlockedEmailGroupByOutputType[P]>
        }
      >
    >


  export type BlockedEmailSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["blockedEmail"]>



  export type BlockedEmailSelectScalar = {
    id?: boolean
    email?: boolean
    createdAt?: boolean
  }

  export type BlockedEmailOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "email" | "createdAt", ExtArgs["result"]["blockedEmail"]>

  export type $BlockedEmailPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "BlockedEmail"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      email: string
      createdAt: Date
    }, ExtArgs["result"]["blockedEmail"]>
    composites: {}
  }

  type BlockedEmailGetPayload<S extends boolean | null | undefined | BlockedEmailDefaultArgs> = $Result.GetResult<Prisma.$BlockedEmailPayload, S>

  type BlockedEmailCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<BlockedEmailFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: BlockedEmailCountAggregateInputType | true
    }

  export interface BlockedEmailDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['BlockedEmail'], meta: { name: 'BlockedEmail' } }
    /**
     * Find zero or one BlockedEmail that matches the filter.
     * @param {BlockedEmailFindUniqueArgs} args - Arguments to find a BlockedEmail
     * @example
     * // Get one BlockedEmail
     * const blockedEmail = await prisma.blockedEmail.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BlockedEmailFindUniqueArgs>(args: SelectSubset<T, BlockedEmailFindUniqueArgs<ExtArgs>>): Prisma__BlockedEmailClient<$Result.GetResult<Prisma.$BlockedEmailPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one BlockedEmail that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {BlockedEmailFindUniqueOrThrowArgs} args - Arguments to find a BlockedEmail
     * @example
     * // Get one BlockedEmail
     * const blockedEmail = await prisma.blockedEmail.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BlockedEmailFindUniqueOrThrowArgs>(args: SelectSubset<T, BlockedEmailFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BlockedEmailClient<$Result.GetResult<Prisma.$BlockedEmailPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first BlockedEmail that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BlockedEmailFindFirstArgs} args - Arguments to find a BlockedEmail
     * @example
     * // Get one BlockedEmail
     * const blockedEmail = await prisma.blockedEmail.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BlockedEmailFindFirstArgs>(args?: SelectSubset<T, BlockedEmailFindFirstArgs<ExtArgs>>): Prisma__BlockedEmailClient<$Result.GetResult<Prisma.$BlockedEmailPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first BlockedEmail that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BlockedEmailFindFirstOrThrowArgs} args - Arguments to find a BlockedEmail
     * @example
     * // Get one BlockedEmail
     * const blockedEmail = await prisma.blockedEmail.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BlockedEmailFindFirstOrThrowArgs>(args?: SelectSubset<T, BlockedEmailFindFirstOrThrowArgs<ExtArgs>>): Prisma__BlockedEmailClient<$Result.GetResult<Prisma.$BlockedEmailPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more BlockedEmails that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BlockedEmailFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all BlockedEmails
     * const blockedEmails = await prisma.blockedEmail.findMany()
     * 
     * // Get first 10 BlockedEmails
     * const blockedEmails = await prisma.blockedEmail.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const blockedEmailWithIdOnly = await prisma.blockedEmail.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends BlockedEmailFindManyArgs>(args?: SelectSubset<T, BlockedEmailFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BlockedEmailPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a BlockedEmail.
     * @param {BlockedEmailCreateArgs} args - Arguments to create a BlockedEmail.
     * @example
     * // Create one BlockedEmail
     * const BlockedEmail = await prisma.blockedEmail.create({
     *   data: {
     *     // ... data to create a BlockedEmail
     *   }
     * })
     * 
     */
    create<T extends BlockedEmailCreateArgs>(args: SelectSubset<T, BlockedEmailCreateArgs<ExtArgs>>): Prisma__BlockedEmailClient<$Result.GetResult<Prisma.$BlockedEmailPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many BlockedEmails.
     * @param {BlockedEmailCreateManyArgs} args - Arguments to create many BlockedEmails.
     * @example
     * // Create many BlockedEmails
     * const blockedEmail = await prisma.blockedEmail.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BlockedEmailCreateManyArgs>(args?: SelectSubset<T, BlockedEmailCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a BlockedEmail.
     * @param {BlockedEmailDeleteArgs} args - Arguments to delete one BlockedEmail.
     * @example
     * // Delete one BlockedEmail
     * const BlockedEmail = await prisma.blockedEmail.delete({
     *   where: {
     *     // ... filter to delete one BlockedEmail
     *   }
     * })
     * 
     */
    delete<T extends BlockedEmailDeleteArgs>(args: SelectSubset<T, BlockedEmailDeleteArgs<ExtArgs>>): Prisma__BlockedEmailClient<$Result.GetResult<Prisma.$BlockedEmailPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one BlockedEmail.
     * @param {BlockedEmailUpdateArgs} args - Arguments to update one BlockedEmail.
     * @example
     * // Update one BlockedEmail
     * const blockedEmail = await prisma.blockedEmail.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BlockedEmailUpdateArgs>(args: SelectSubset<T, BlockedEmailUpdateArgs<ExtArgs>>): Prisma__BlockedEmailClient<$Result.GetResult<Prisma.$BlockedEmailPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more BlockedEmails.
     * @param {BlockedEmailDeleteManyArgs} args - Arguments to filter BlockedEmails to delete.
     * @example
     * // Delete a few BlockedEmails
     * const { count } = await prisma.blockedEmail.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BlockedEmailDeleteManyArgs>(args?: SelectSubset<T, BlockedEmailDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BlockedEmails.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BlockedEmailUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many BlockedEmails
     * const blockedEmail = await prisma.blockedEmail.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BlockedEmailUpdateManyArgs>(args: SelectSubset<T, BlockedEmailUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one BlockedEmail.
     * @param {BlockedEmailUpsertArgs} args - Arguments to update or create a BlockedEmail.
     * @example
     * // Update or create a BlockedEmail
     * const blockedEmail = await prisma.blockedEmail.upsert({
     *   create: {
     *     // ... data to create a BlockedEmail
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the BlockedEmail we want to update
     *   }
     * })
     */
    upsert<T extends BlockedEmailUpsertArgs>(args: SelectSubset<T, BlockedEmailUpsertArgs<ExtArgs>>): Prisma__BlockedEmailClient<$Result.GetResult<Prisma.$BlockedEmailPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of BlockedEmails.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BlockedEmailCountArgs} args - Arguments to filter BlockedEmails to count.
     * @example
     * // Count the number of BlockedEmails
     * const count = await prisma.blockedEmail.count({
     *   where: {
     *     // ... the filter for the BlockedEmails we want to count
     *   }
     * })
    **/
    count<T extends BlockedEmailCountArgs>(
      args?: Subset<T, BlockedEmailCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BlockedEmailCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a BlockedEmail.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BlockedEmailAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BlockedEmailAggregateArgs>(args: Subset<T, BlockedEmailAggregateArgs>): Prisma.PrismaPromise<GetBlockedEmailAggregateType<T>>

    /**
     * Group by BlockedEmail.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BlockedEmailGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BlockedEmailGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BlockedEmailGroupByArgs['orderBy'] }
        : { orderBy?: BlockedEmailGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BlockedEmailGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBlockedEmailGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the BlockedEmail model
   */
  readonly fields: BlockedEmailFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for BlockedEmail.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BlockedEmailClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the BlockedEmail model
   */
  interface BlockedEmailFieldRefs {
    readonly id: FieldRef<"BlockedEmail", 'String'>
    readonly email: FieldRef<"BlockedEmail", 'String'>
    readonly createdAt: FieldRef<"BlockedEmail", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * BlockedEmail findUnique
   */
  export type BlockedEmailFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlockedEmail
     */
    select?: BlockedEmailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BlockedEmail
     */
    omit?: BlockedEmailOmit<ExtArgs> | null
    /**
     * Filter, which BlockedEmail to fetch.
     */
    where: BlockedEmailWhereUniqueInput
  }

  /**
   * BlockedEmail findUniqueOrThrow
   */
  export type BlockedEmailFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlockedEmail
     */
    select?: BlockedEmailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BlockedEmail
     */
    omit?: BlockedEmailOmit<ExtArgs> | null
    /**
     * Filter, which BlockedEmail to fetch.
     */
    where: BlockedEmailWhereUniqueInput
  }

  /**
   * BlockedEmail findFirst
   */
  export type BlockedEmailFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlockedEmail
     */
    select?: BlockedEmailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BlockedEmail
     */
    omit?: BlockedEmailOmit<ExtArgs> | null
    /**
     * Filter, which BlockedEmail to fetch.
     */
    where?: BlockedEmailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BlockedEmails to fetch.
     */
    orderBy?: BlockedEmailOrderByWithRelationInput | BlockedEmailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BlockedEmails.
     */
    cursor?: BlockedEmailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BlockedEmails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BlockedEmails.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BlockedEmails.
     */
    distinct?: BlockedEmailScalarFieldEnum | BlockedEmailScalarFieldEnum[]
  }

  /**
   * BlockedEmail findFirstOrThrow
   */
  export type BlockedEmailFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlockedEmail
     */
    select?: BlockedEmailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BlockedEmail
     */
    omit?: BlockedEmailOmit<ExtArgs> | null
    /**
     * Filter, which BlockedEmail to fetch.
     */
    where?: BlockedEmailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BlockedEmails to fetch.
     */
    orderBy?: BlockedEmailOrderByWithRelationInput | BlockedEmailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BlockedEmails.
     */
    cursor?: BlockedEmailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BlockedEmails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BlockedEmails.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BlockedEmails.
     */
    distinct?: BlockedEmailScalarFieldEnum | BlockedEmailScalarFieldEnum[]
  }

  /**
   * BlockedEmail findMany
   */
  export type BlockedEmailFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlockedEmail
     */
    select?: BlockedEmailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BlockedEmail
     */
    omit?: BlockedEmailOmit<ExtArgs> | null
    /**
     * Filter, which BlockedEmails to fetch.
     */
    where?: BlockedEmailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BlockedEmails to fetch.
     */
    orderBy?: BlockedEmailOrderByWithRelationInput | BlockedEmailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing BlockedEmails.
     */
    cursor?: BlockedEmailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BlockedEmails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BlockedEmails.
     */
    skip?: number
    distinct?: BlockedEmailScalarFieldEnum | BlockedEmailScalarFieldEnum[]
  }

  /**
   * BlockedEmail create
   */
  export type BlockedEmailCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlockedEmail
     */
    select?: BlockedEmailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BlockedEmail
     */
    omit?: BlockedEmailOmit<ExtArgs> | null
    /**
     * The data needed to create a BlockedEmail.
     */
    data: XOR<BlockedEmailCreateInput, BlockedEmailUncheckedCreateInput>
  }

  /**
   * BlockedEmail createMany
   */
  export type BlockedEmailCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many BlockedEmails.
     */
    data: BlockedEmailCreateManyInput | BlockedEmailCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * BlockedEmail update
   */
  export type BlockedEmailUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlockedEmail
     */
    select?: BlockedEmailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BlockedEmail
     */
    omit?: BlockedEmailOmit<ExtArgs> | null
    /**
     * The data needed to update a BlockedEmail.
     */
    data: XOR<BlockedEmailUpdateInput, BlockedEmailUncheckedUpdateInput>
    /**
     * Choose, which BlockedEmail to update.
     */
    where: BlockedEmailWhereUniqueInput
  }

  /**
   * BlockedEmail updateMany
   */
  export type BlockedEmailUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update BlockedEmails.
     */
    data: XOR<BlockedEmailUpdateManyMutationInput, BlockedEmailUncheckedUpdateManyInput>
    /**
     * Filter which BlockedEmails to update
     */
    where?: BlockedEmailWhereInput
    /**
     * Limit how many BlockedEmails to update.
     */
    limit?: number
  }

  /**
   * BlockedEmail upsert
   */
  export type BlockedEmailUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlockedEmail
     */
    select?: BlockedEmailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BlockedEmail
     */
    omit?: BlockedEmailOmit<ExtArgs> | null
    /**
     * The filter to search for the BlockedEmail to update in case it exists.
     */
    where: BlockedEmailWhereUniqueInput
    /**
     * In case the BlockedEmail found by the `where` argument doesn't exist, create a new BlockedEmail with this data.
     */
    create: XOR<BlockedEmailCreateInput, BlockedEmailUncheckedCreateInput>
    /**
     * In case the BlockedEmail was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BlockedEmailUpdateInput, BlockedEmailUncheckedUpdateInput>
  }

  /**
   * BlockedEmail delete
   */
  export type BlockedEmailDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlockedEmail
     */
    select?: BlockedEmailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BlockedEmail
     */
    omit?: BlockedEmailOmit<ExtArgs> | null
    /**
     * Filter which BlockedEmail to delete.
     */
    where: BlockedEmailWhereUniqueInput
  }

  /**
   * BlockedEmail deleteMany
   */
  export type BlockedEmailDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BlockedEmails to delete
     */
    where?: BlockedEmailWhereInput
    /**
     * Limit how many BlockedEmails to delete.
     */
    limit?: number
  }

  /**
   * BlockedEmail without action
   */
  export type BlockedEmailDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlockedEmail
     */
    select?: BlockedEmailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BlockedEmail
     */
    omit?: BlockedEmailOmit<ExtArgs> | null
  }


  /**
   * Model CreditLedger
   */

  export type AggregateCreditLedger = {
    _count: CreditLedgerCountAggregateOutputType | null
    _avg: CreditLedgerAvgAggregateOutputType | null
    _sum: CreditLedgerSumAggregateOutputType | null
    _min: CreditLedgerMinAggregateOutputType | null
    _max: CreditLedgerMaxAggregateOutputType | null
  }

  export type CreditLedgerAvgAggregateOutputType = {
    change: number | null
  }

  export type CreditLedgerSumAggregateOutputType = {
    change: number | null
  }

  export type CreditLedgerMinAggregateOutputType = {
    id: string | null
    userId: string | null
    submissionId: string | null
    applicationId: string | null
    type: $Enums.CreditEventType | null
    change: number | null
    effectiveMonth: Date | null
    createdAt: Date | null
  }

  export type CreditLedgerMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    submissionId: string | null
    applicationId: string | null
    type: $Enums.CreditEventType | null
    change: number | null
    effectiveMonth: Date | null
    createdAt: Date | null
  }

  export type CreditLedgerCountAggregateOutputType = {
    id: number
    userId: number
    submissionId: number
    applicationId: number
    type: number
    change: number
    effectiveMonth: number
    createdAt: number
    _all: number
  }


  export type CreditLedgerAvgAggregateInputType = {
    change?: true
  }

  export type CreditLedgerSumAggregateInputType = {
    change?: true
  }

  export type CreditLedgerMinAggregateInputType = {
    id?: true
    userId?: true
    submissionId?: true
    applicationId?: true
    type?: true
    change?: true
    effectiveMonth?: true
    createdAt?: true
  }

  export type CreditLedgerMaxAggregateInputType = {
    id?: true
    userId?: true
    submissionId?: true
    applicationId?: true
    type?: true
    change?: true
    effectiveMonth?: true
    createdAt?: true
  }

  export type CreditLedgerCountAggregateInputType = {
    id?: true
    userId?: true
    submissionId?: true
    applicationId?: true
    type?: true
    change?: true
    effectiveMonth?: true
    createdAt?: true
    _all?: true
  }

  export type CreditLedgerAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CreditLedger to aggregate.
     */
    where?: CreditLedgerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CreditLedgers to fetch.
     */
    orderBy?: CreditLedgerOrderByWithRelationInput | CreditLedgerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CreditLedgerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CreditLedgers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CreditLedgers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CreditLedgers
    **/
    _count?: true | CreditLedgerCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CreditLedgerAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CreditLedgerSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CreditLedgerMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CreditLedgerMaxAggregateInputType
  }

  export type GetCreditLedgerAggregateType<T extends CreditLedgerAggregateArgs> = {
        [P in keyof T & keyof AggregateCreditLedger]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCreditLedger[P]>
      : GetScalarType<T[P], AggregateCreditLedger[P]>
  }




  export type CreditLedgerGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CreditLedgerWhereInput
    orderBy?: CreditLedgerOrderByWithAggregationInput | CreditLedgerOrderByWithAggregationInput[]
    by: CreditLedgerScalarFieldEnum[] | CreditLedgerScalarFieldEnum
    having?: CreditLedgerScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CreditLedgerCountAggregateInputType | true
    _avg?: CreditLedgerAvgAggregateInputType
    _sum?: CreditLedgerSumAggregateInputType
    _min?: CreditLedgerMinAggregateInputType
    _max?: CreditLedgerMaxAggregateInputType
  }

  export type CreditLedgerGroupByOutputType = {
    id: string
    userId: string
    submissionId: string | null
    applicationId: string | null
    type: $Enums.CreditEventType
    change: number
    effectiveMonth: Date
    createdAt: Date
    _count: CreditLedgerCountAggregateOutputType | null
    _avg: CreditLedgerAvgAggregateOutputType | null
    _sum: CreditLedgerSumAggregateOutputType | null
    _min: CreditLedgerMinAggregateOutputType | null
    _max: CreditLedgerMaxAggregateOutputType | null
  }

  type GetCreditLedgerGroupByPayload<T extends CreditLedgerGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CreditLedgerGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CreditLedgerGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CreditLedgerGroupByOutputType[P]>
            : GetScalarType<T[P], CreditLedgerGroupByOutputType[P]>
        }
      >
    >


  export type CreditLedgerSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    submissionId?: boolean
    applicationId?: boolean
    type?: boolean
    change?: boolean
    effectiveMonth?: boolean
    createdAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    submission?: boolean | CreditLedger$submissionArgs<ExtArgs>
    application?: boolean | CreditLedger$applicationArgs<ExtArgs>
  }, ExtArgs["result"]["creditLedger"]>



  export type CreditLedgerSelectScalar = {
    id?: boolean
    userId?: boolean
    submissionId?: boolean
    applicationId?: boolean
    type?: boolean
    change?: boolean
    effectiveMonth?: boolean
    createdAt?: boolean
  }

  export type CreditLedgerOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "submissionId" | "applicationId" | "type" | "change" | "effectiveMonth" | "createdAt", ExtArgs["result"]["creditLedger"]>
  export type CreditLedgerInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    submission?: boolean | CreditLedger$submissionArgs<ExtArgs>
    application?: boolean | CreditLedger$applicationArgs<ExtArgs>
  }

  export type $CreditLedgerPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CreditLedger"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      submission: Prisma.$SubmissionPayload<ExtArgs> | null
      application: Prisma.$GrantApplicationPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      submissionId: string | null
      applicationId: string | null
      type: $Enums.CreditEventType
      change: number
      effectiveMonth: Date
      createdAt: Date
    }, ExtArgs["result"]["creditLedger"]>
    composites: {}
  }

  type CreditLedgerGetPayload<S extends boolean | null | undefined | CreditLedgerDefaultArgs> = $Result.GetResult<Prisma.$CreditLedgerPayload, S>

  type CreditLedgerCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CreditLedgerFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CreditLedgerCountAggregateInputType | true
    }

  export interface CreditLedgerDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CreditLedger'], meta: { name: 'CreditLedger' } }
    /**
     * Find zero or one CreditLedger that matches the filter.
     * @param {CreditLedgerFindUniqueArgs} args - Arguments to find a CreditLedger
     * @example
     * // Get one CreditLedger
     * const creditLedger = await prisma.creditLedger.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CreditLedgerFindUniqueArgs>(args: SelectSubset<T, CreditLedgerFindUniqueArgs<ExtArgs>>): Prisma__CreditLedgerClient<$Result.GetResult<Prisma.$CreditLedgerPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CreditLedger that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CreditLedgerFindUniqueOrThrowArgs} args - Arguments to find a CreditLedger
     * @example
     * // Get one CreditLedger
     * const creditLedger = await prisma.creditLedger.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CreditLedgerFindUniqueOrThrowArgs>(args: SelectSubset<T, CreditLedgerFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CreditLedgerClient<$Result.GetResult<Prisma.$CreditLedgerPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CreditLedger that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CreditLedgerFindFirstArgs} args - Arguments to find a CreditLedger
     * @example
     * // Get one CreditLedger
     * const creditLedger = await prisma.creditLedger.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CreditLedgerFindFirstArgs>(args?: SelectSubset<T, CreditLedgerFindFirstArgs<ExtArgs>>): Prisma__CreditLedgerClient<$Result.GetResult<Prisma.$CreditLedgerPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CreditLedger that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CreditLedgerFindFirstOrThrowArgs} args - Arguments to find a CreditLedger
     * @example
     * // Get one CreditLedger
     * const creditLedger = await prisma.creditLedger.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CreditLedgerFindFirstOrThrowArgs>(args?: SelectSubset<T, CreditLedgerFindFirstOrThrowArgs<ExtArgs>>): Prisma__CreditLedgerClient<$Result.GetResult<Prisma.$CreditLedgerPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CreditLedgers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CreditLedgerFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CreditLedgers
     * const creditLedgers = await prisma.creditLedger.findMany()
     * 
     * // Get first 10 CreditLedgers
     * const creditLedgers = await prisma.creditLedger.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const creditLedgerWithIdOnly = await prisma.creditLedger.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CreditLedgerFindManyArgs>(args?: SelectSubset<T, CreditLedgerFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CreditLedgerPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CreditLedger.
     * @param {CreditLedgerCreateArgs} args - Arguments to create a CreditLedger.
     * @example
     * // Create one CreditLedger
     * const CreditLedger = await prisma.creditLedger.create({
     *   data: {
     *     // ... data to create a CreditLedger
     *   }
     * })
     * 
     */
    create<T extends CreditLedgerCreateArgs>(args: SelectSubset<T, CreditLedgerCreateArgs<ExtArgs>>): Prisma__CreditLedgerClient<$Result.GetResult<Prisma.$CreditLedgerPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CreditLedgers.
     * @param {CreditLedgerCreateManyArgs} args - Arguments to create many CreditLedgers.
     * @example
     * // Create many CreditLedgers
     * const creditLedger = await prisma.creditLedger.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CreditLedgerCreateManyArgs>(args?: SelectSubset<T, CreditLedgerCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a CreditLedger.
     * @param {CreditLedgerDeleteArgs} args - Arguments to delete one CreditLedger.
     * @example
     * // Delete one CreditLedger
     * const CreditLedger = await prisma.creditLedger.delete({
     *   where: {
     *     // ... filter to delete one CreditLedger
     *   }
     * })
     * 
     */
    delete<T extends CreditLedgerDeleteArgs>(args: SelectSubset<T, CreditLedgerDeleteArgs<ExtArgs>>): Prisma__CreditLedgerClient<$Result.GetResult<Prisma.$CreditLedgerPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CreditLedger.
     * @param {CreditLedgerUpdateArgs} args - Arguments to update one CreditLedger.
     * @example
     * // Update one CreditLedger
     * const creditLedger = await prisma.creditLedger.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CreditLedgerUpdateArgs>(args: SelectSubset<T, CreditLedgerUpdateArgs<ExtArgs>>): Prisma__CreditLedgerClient<$Result.GetResult<Prisma.$CreditLedgerPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CreditLedgers.
     * @param {CreditLedgerDeleteManyArgs} args - Arguments to filter CreditLedgers to delete.
     * @example
     * // Delete a few CreditLedgers
     * const { count } = await prisma.creditLedger.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CreditLedgerDeleteManyArgs>(args?: SelectSubset<T, CreditLedgerDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CreditLedgers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CreditLedgerUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CreditLedgers
     * const creditLedger = await prisma.creditLedger.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CreditLedgerUpdateManyArgs>(args: SelectSubset<T, CreditLedgerUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one CreditLedger.
     * @param {CreditLedgerUpsertArgs} args - Arguments to update or create a CreditLedger.
     * @example
     * // Update or create a CreditLedger
     * const creditLedger = await prisma.creditLedger.upsert({
     *   create: {
     *     // ... data to create a CreditLedger
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CreditLedger we want to update
     *   }
     * })
     */
    upsert<T extends CreditLedgerUpsertArgs>(args: SelectSubset<T, CreditLedgerUpsertArgs<ExtArgs>>): Prisma__CreditLedgerClient<$Result.GetResult<Prisma.$CreditLedgerPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CreditLedgers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CreditLedgerCountArgs} args - Arguments to filter CreditLedgers to count.
     * @example
     * // Count the number of CreditLedgers
     * const count = await prisma.creditLedger.count({
     *   where: {
     *     // ... the filter for the CreditLedgers we want to count
     *   }
     * })
    **/
    count<T extends CreditLedgerCountArgs>(
      args?: Subset<T, CreditLedgerCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CreditLedgerCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CreditLedger.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CreditLedgerAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CreditLedgerAggregateArgs>(args: Subset<T, CreditLedgerAggregateArgs>): Prisma.PrismaPromise<GetCreditLedgerAggregateType<T>>

    /**
     * Group by CreditLedger.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CreditLedgerGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CreditLedgerGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CreditLedgerGroupByArgs['orderBy'] }
        : { orderBy?: CreditLedgerGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CreditLedgerGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCreditLedgerGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CreditLedger model
   */
  readonly fields: CreditLedgerFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CreditLedger.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CreditLedgerClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    submission<T extends CreditLedger$submissionArgs<ExtArgs> = {}>(args?: Subset<T, CreditLedger$submissionArgs<ExtArgs>>): Prisma__SubmissionClient<$Result.GetResult<Prisma.$SubmissionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    application<T extends CreditLedger$applicationArgs<ExtArgs> = {}>(args?: Subset<T, CreditLedger$applicationArgs<ExtArgs>>): Prisma__GrantApplicationClient<$Result.GetResult<Prisma.$GrantApplicationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CreditLedger model
   */
  interface CreditLedgerFieldRefs {
    readonly id: FieldRef<"CreditLedger", 'String'>
    readonly userId: FieldRef<"CreditLedger", 'String'>
    readonly submissionId: FieldRef<"CreditLedger", 'String'>
    readonly applicationId: FieldRef<"CreditLedger", 'String'>
    readonly type: FieldRef<"CreditLedger", 'CreditEventType'>
    readonly change: FieldRef<"CreditLedger", 'Int'>
    readonly effectiveMonth: FieldRef<"CreditLedger", 'DateTime'>
    readonly createdAt: FieldRef<"CreditLedger", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * CreditLedger findUnique
   */
  export type CreditLedgerFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CreditLedger
     */
    select?: CreditLedgerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CreditLedger
     */
    omit?: CreditLedgerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CreditLedgerInclude<ExtArgs> | null
    /**
     * Filter, which CreditLedger to fetch.
     */
    where: CreditLedgerWhereUniqueInput
  }

  /**
   * CreditLedger findUniqueOrThrow
   */
  export type CreditLedgerFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CreditLedger
     */
    select?: CreditLedgerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CreditLedger
     */
    omit?: CreditLedgerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CreditLedgerInclude<ExtArgs> | null
    /**
     * Filter, which CreditLedger to fetch.
     */
    where: CreditLedgerWhereUniqueInput
  }

  /**
   * CreditLedger findFirst
   */
  export type CreditLedgerFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CreditLedger
     */
    select?: CreditLedgerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CreditLedger
     */
    omit?: CreditLedgerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CreditLedgerInclude<ExtArgs> | null
    /**
     * Filter, which CreditLedger to fetch.
     */
    where?: CreditLedgerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CreditLedgers to fetch.
     */
    orderBy?: CreditLedgerOrderByWithRelationInput | CreditLedgerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CreditLedgers.
     */
    cursor?: CreditLedgerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CreditLedgers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CreditLedgers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CreditLedgers.
     */
    distinct?: CreditLedgerScalarFieldEnum | CreditLedgerScalarFieldEnum[]
  }

  /**
   * CreditLedger findFirstOrThrow
   */
  export type CreditLedgerFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CreditLedger
     */
    select?: CreditLedgerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CreditLedger
     */
    omit?: CreditLedgerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CreditLedgerInclude<ExtArgs> | null
    /**
     * Filter, which CreditLedger to fetch.
     */
    where?: CreditLedgerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CreditLedgers to fetch.
     */
    orderBy?: CreditLedgerOrderByWithRelationInput | CreditLedgerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CreditLedgers.
     */
    cursor?: CreditLedgerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CreditLedgers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CreditLedgers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CreditLedgers.
     */
    distinct?: CreditLedgerScalarFieldEnum | CreditLedgerScalarFieldEnum[]
  }

  /**
   * CreditLedger findMany
   */
  export type CreditLedgerFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CreditLedger
     */
    select?: CreditLedgerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CreditLedger
     */
    omit?: CreditLedgerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CreditLedgerInclude<ExtArgs> | null
    /**
     * Filter, which CreditLedgers to fetch.
     */
    where?: CreditLedgerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CreditLedgers to fetch.
     */
    orderBy?: CreditLedgerOrderByWithRelationInput | CreditLedgerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CreditLedgers.
     */
    cursor?: CreditLedgerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CreditLedgers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CreditLedgers.
     */
    skip?: number
    distinct?: CreditLedgerScalarFieldEnum | CreditLedgerScalarFieldEnum[]
  }

  /**
   * CreditLedger create
   */
  export type CreditLedgerCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CreditLedger
     */
    select?: CreditLedgerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CreditLedger
     */
    omit?: CreditLedgerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CreditLedgerInclude<ExtArgs> | null
    /**
     * The data needed to create a CreditLedger.
     */
    data: XOR<CreditLedgerCreateInput, CreditLedgerUncheckedCreateInput>
  }

  /**
   * CreditLedger createMany
   */
  export type CreditLedgerCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CreditLedgers.
     */
    data: CreditLedgerCreateManyInput | CreditLedgerCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CreditLedger update
   */
  export type CreditLedgerUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CreditLedger
     */
    select?: CreditLedgerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CreditLedger
     */
    omit?: CreditLedgerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CreditLedgerInclude<ExtArgs> | null
    /**
     * The data needed to update a CreditLedger.
     */
    data: XOR<CreditLedgerUpdateInput, CreditLedgerUncheckedUpdateInput>
    /**
     * Choose, which CreditLedger to update.
     */
    where: CreditLedgerWhereUniqueInput
  }

  /**
   * CreditLedger updateMany
   */
  export type CreditLedgerUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CreditLedgers.
     */
    data: XOR<CreditLedgerUpdateManyMutationInput, CreditLedgerUncheckedUpdateManyInput>
    /**
     * Filter which CreditLedgers to update
     */
    where?: CreditLedgerWhereInput
    /**
     * Limit how many CreditLedgers to update.
     */
    limit?: number
  }

  /**
   * CreditLedger upsert
   */
  export type CreditLedgerUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CreditLedger
     */
    select?: CreditLedgerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CreditLedger
     */
    omit?: CreditLedgerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CreditLedgerInclude<ExtArgs> | null
    /**
     * The filter to search for the CreditLedger to update in case it exists.
     */
    where: CreditLedgerWhereUniqueInput
    /**
     * In case the CreditLedger found by the `where` argument doesn't exist, create a new CreditLedger with this data.
     */
    create: XOR<CreditLedgerCreateInput, CreditLedgerUncheckedCreateInput>
    /**
     * In case the CreditLedger was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CreditLedgerUpdateInput, CreditLedgerUncheckedUpdateInput>
  }

  /**
   * CreditLedger delete
   */
  export type CreditLedgerDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CreditLedger
     */
    select?: CreditLedgerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CreditLedger
     */
    omit?: CreditLedgerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CreditLedgerInclude<ExtArgs> | null
    /**
     * Filter which CreditLedger to delete.
     */
    where: CreditLedgerWhereUniqueInput
  }

  /**
   * CreditLedger deleteMany
   */
  export type CreditLedgerDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CreditLedgers to delete
     */
    where?: CreditLedgerWhereInput
    /**
     * Limit how many CreditLedgers to delete.
     */
    limit?: number
  }

  /**
   * CreditLedger.submission
   */
  export type CreditLedger$submissionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Submission
     */
    select?: SubmissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Submission
     */
    omit?: SubmissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubmissionInclude<ExtArgs> | null
    where?: SubmissionWhereInput
  }

  /**
   * CreditLedger.application
   */
  export type CreditLedger$applicationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GrantApplication
     */
    select?: GrantApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GrantApplication
     */
    omit?: GrantApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GrantApplicationInclude<ExtArgs> | null
    where?: GrantApplicationWhereInput
  }

  /**
   * CreditLedger without action
   */
  export type CreditLedgerDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CreditLedger
     */
    select?: CreditLedgerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CreditLedger
     */
    omit?: CreditLedgerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CreditLedgerInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const BountiesScalarFieldEnum: {
    id: 'id',
    title: 'title',
    slug: 'slug',
    description: 'description',
    deadline: 'deadline',
    commitmentDate: 'commitmentDate',
    eligibility: 'eligibility',
    status: 'status',
    token: 'token',
    rewardAmount: 'rewardAmount',
    rewards: 'rewards',
    maxBonusSpots: 'maxBonusSpots',
    usdValue: 'usdValue',
    sponsorId: 'sponsorId',
    pocId: 'pocId',
    source: 'source',
    isPublished: 'isPublished',
    isFeatured: 'isFeatured',
    isActive: 'isActive',
    isArchived: 'isArchived',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    applicationLink: 'applicationLink',
    skills: 'skills',
    type: 'type',
    requirements: 'requirements',
    isWinnersAnnounced: 'isWinnersAnnounced',
    templateId: 'templateId',
    region: 'region',
    pocSocials: 'pocSocials',
    hackathonprize: 'hackathonprize',
    applicationType: 'applicationType',
    timeToComplete: 'timeToComplete',
    references: 'references',
    referredBy: 'referredBy',
    publishedAt: 'publishedAt',
    isPrivate: 'isPrivate',
    hackathonId: 'hackathonId',
    compensationType: 'compensationType',
    maxRewardAsk: 'maxRewardAsk',
    minRewardAsk: 'minRewardAsk',
    language: 'language',
    shouldSendEmail: 'shouldSendEmail',
    isFndnPaying: 'isFndnPaying',
    winnersAnnouncedAt: 'winnersAnnouncedAt',
    discordMessageIds: 'discordMessageIds'
  };

  export type BountiesScalarFieldEnum = (typeof BountiesScalarFieldEnum)[keyof typeof BountiesScalarFieldEnum]


  export const BountiesTemplatesScalarFieldEnum: {
    id: 'id',
    title: 'title',
    deadline: 'deadline',
    slug: 'slug',
    description: 'description',
    color: 'color',
    emoji: 'emoji',
    isFeatured: 'isFeatured',
    isActive: 'isActive',
    isArchived: 'isArchived',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    skills: 'skills',
    type: 'type',
    requirements: 'requirements',
    region: 'region',
    applicationType: 'applicationType',
    status: 'status',
    timeToComplete: 'timeToComplete',
    token: 'token',
    references: 'references',
    referredBy: 'referredBy',
    publishedAt: 'publishedAt',
    compensationType: 'compensationType',
    maxRewardAsk: 'maxRewardAsk',
    minRewardAsk: 'minRewardAsk',
    language: 'language',
    rewardAmount: 'rewardAmount',
    rewards: 'rewards',
    maxBonusSpots: 'maxBonusSpots',
    usdValue: 'usdValue',
    sponsorId: 'sponsorId',
    pocId: 'pocId',
    pocSocials: 'pocSocials',
    source: 'source',
    isPublished: 'isPublished'
  };

  export type BountiesTemplatesScalarFieldEnum = (typeof BountiesTemplatesScalarFieldEnum)[keyof typeof BountiesTemplatesScalarFieldEnum]


  export const CommentScalarFieldEnum: {
    id: 'id',
    message: 'message',
    authorId: 'authorId',
    refType: 'refType',
    refId: 'refId',
    isActive: 'isActive',
    isArchived: 'isArchived',
    isPinned: 'isPinned',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    replyToId: 'replyToId',
    submissionId: 'submissionId',
    type: 'type'
  };

  export type CommentScalarFieldEnum = (typeof CommentScalarFieldEnum)[keyof typeof CommentScalarFieldEnum]


  export const GrantsScalarFieldEnum: {
    id: 'id',
    title: 'title',
    slug: 'slug',
    description: 'description',
    shortDescription: 'shortDescription',
    token: 'token',
    minReward: 'minReward',
    maxReward: 'maxReward',
    totalPaid: 'totalPaid',
    totalApproved: 'totalApproved',
    historicalApplications: 'historicalApplications',
    historicalPaid: 'historicalPaid',
    link: 'link',
    sponsorId: 'sponsorId',
    pocId: 'pocId',
    isPublished: 'isPublished',
    isFeatured: 'isFeatured',
    isActive: 'isActive',
    isArchived: 'isArchived',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    skills: 'skills',
    logo: 'logo',
    region: 'region',
    questions: 'questions',
    pocSocials: 'pocSocials',
    status: 'status',
    airtableId: 'airtableId',
    avgResponseTime: 'avgResponseTime',
    isNative: 'isNative',
    isPrivate: 'isPrivate',
    references: 'references',
    ai: 'ai',
    approverRecordId: 'approverRecordId',
    emailSender: 'emailSender',
    replyToEmail: 'replyToEmail',
    emailSalutation: 'emailSalutation',
    communityLink: 'communityLink'
  };

  export type GrantsScalarFieldEnum = (typeof GrantsScalarFieldEnum)[keyof typeof GrantsScalarFieldEnum]


  export const GrantApplicationScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    grantId: 'grantId',
    applicationStatus: 'applicationStatus',
    projectTitle: 'projectTitle',
    projectOneLiner: 'projectOneLiner',
    projectDetails: 'projectDetails',
    projectTimeline: 'projectTimeline',
    proofOfWork: 'proofOfWork',
    walletAddress: 'walletAddress',
    twitter: 'twitter',
    github: 'github',
    milestones: 'milestones',
    kpi: 'kpi',
    answers: 'answers',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    label: 'label',
    ask: 'ask',
    approvedAmount: 'approvedAmount',
    approvedAmountInUSD: 'approvedAmountInUSD',
    decidedAt: 'decidedAt',
    totalPaid: 'totalPaid',
    isShipped: 'isShipped',
    paymentDetails: 'paymentDetails',
    totalTranches: 'totalTranches',
    like: 'like',
    likeCount: 'likeCount',
    decidedBy: 'decidedBy',
    notes: 'notes',
    ai: 'ai'
  };

  export type GrantApplicationScalarFieldEnum = (typeof GrantApplicationScalarFieldEnum)[keyof typeof GrantApplicationScalarFieldEnum]


  export const GrantTrancheScalarFieldEnum: {
    id: 'id',
    applicationId: 'applicationId',
    grantId: 'grantId',
    ask: 'ask',
    update: 'update',
    helpWanted: 'helpWanted',
    status: 'status',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    approvedAmount: 'approvedAmount',
    decidedAt: 'decidedAt',
    trancheNumber: 'trancheNumber'
  };

  export type GrantTrancheScalarFieldEnum = (typeof GrantTrancheScalarFieldEnum)[keyof typeof GrantTrancheScalarFieldEnum]


  export const SubmissionScalarFieldEnum: {
    id: 'id',
    link: 'link',
    tweet: 'tweet',
    status: 'status',
    eligibilityAnswers: 'eligibilityAnswers',
    userId: 'userId',
    listingId: 'listingId',
    isWinner: 'isWinner',
    winnerPosition: 'winnerPosition',
    isActive: 'isActive',
    isArchived: 'isArchived',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    like: 'like',
    likeCount: 'likeCount',
    isPaid: 'isPaid',
    paymentDetails: 'paymentDetails',
    otherInfo: 'otherInfo',
    ask: 'ask',
    label: 'label',
    rewardInUSD: 'rewardInUSD',
    ogImage: 'ogImage',
    notes: 'notes'
  };

  export type SubmissionScalarFieldEnum = (typeof SubmissionScalarFieldEnum)[keyof typeof SubmissionScalarFieldEnum]


  export const SponsorsScalarFieldEnum: {
    id: 'id',
    name: 'name',
    slug: 'slug',
    logo: 'logo',
    url: 'url',
    industry: 'industry',
    twitter: 'twitter',
    bio: 'bio',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    isArchived: 'isArchived',
    isActive: 'isActive',
    entityName: 'entityName',
    isVerified: 'isVerified',
    isCaution: 'isCaution',
    st: 'st',
    verificationInfo: 'verificationInfo'
  };

  export type SponsorsScalarFieldEnum = (typeof SponsorsScalarFieldEnum)[keyof typeof SponsorsScalarFieldEnum]


  export const AccountScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    type: 'type',
    provider: 'provider',
    providerAccountId: 'providerAccountId',
    refresh_token: 'refresh_token',
    access_token: 'access_token',
    expires_at: 'expires_at',
    token_type: 'token_type',
    scope: 'scope',
    id_token: 'id_token',
    session_state: 'session_state'
  };

  export type AccountScalarFieldEnum = (typeof AccountScalarFieldEnum)[keyof typeof AccountScalarFieldEnum]


  export const SessionScalarFieldEnum: {
    id: 'id',
    sessionToken: 'sessionToken',
    userId: 'userId',
    expires: 'expires'
  };

  export type SessionScalarFieldEnum = (typeof SessionScalarFieldEnum)[keyof typeof SessionScalarFieldEnum]


  export const UserScalarFieldEnum: {
    id: 'id',
    publicKey: 'publicKey',
    walletAddress: 'walletAddress',
    email: 'email',
    username: 'username',
    photo: 'photo',
    firstName: 'firstName',
    lastName: 'lastName',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    isVerified: 'isVerified',
    role: 'role',
    isTalentFilled: 'isTalentFilled',
    interests: 'interests',
    bio: 'bio',
    twitter: 'twitter',
    discord: 'discord',
    github: 'github',
    linkedin: 'linkedin',
    website: 'website',
    telegram: 'telegram',
    community: 'community',
    experience: 'experience',
    superteamLevel: 'superteamLevel',
    location: 'location',
    cryptoExperience: 'cryptoExperience',
    workPrefernce: 'workPrefernce',
    currentEmployer: 'currentEmployer',
    notifications: 'notifications',
    private: 'private',
    skills: 'skills',
    currentSponsorId: 'currentSponsorId',
    emailVerified: 'emailVerified',
    hackathonId: 'hackathonId',
    featureModalShown: 'featureModalShown',
    surveysShown: 'surveysShown',
    stRecommended: 'stRecommended',
    acceptedTOS: 'acceptedTOS',
    stLead: 'stLead',
    isBlocked: 'isBlocked',
    privyDid: 'privyDid',
    isKYCVerified: 'isKYCVerified',
    kycName: 'kycName',
    kycCountry: 'kycCountry',
    kycAddress: 'kycAddress',
    kycDOB: 'kycDOB',
    kycIDNumber: 'kycIDNumber',
    kycIDType: 'kycIDType'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const ScoutsScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    listingId: 'listingId',
    dollarsEarned: 'dollarsEarned',
    score: 'score',
    invited: 'invited',
    skills: 'skills',
    createdAt: 'createdAt'
  };

  export type ScoutsScalarFieldEnum = (typeof ScoutsScalarFieldEnum)[keyof typeof ScoutsScalarFieldEnum]


  export const TalentRankingsScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    skill: 'skill',
    timeframe: 'timeframe',
    rank: 'rank',
    submissions: 'submissions',
    winRate: 'winRate',
    wins: 'wins',
    totalEarnedInUSD: 'totalEarnedInUSD'
  };

  export type TalentRankingsScalarFieldEnum = (typeof TalentRankingsScalarFieldEnum)[keyof typeof TalentRankingsScalarFieldEnum]


  export const PoWScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    title: 'title',
    description: 'description',
    skills: 'skills',
    link: 'link',
    createdAt: 'createdAt',
    subSkills: 'subSkills',
    updatedAt: 'updatedAt',
    like: 'like',
    likeCount: 'likeCount',
    ogImage: 'ogImage'
  };

  export type PoWScalarFieldEnum = (typeof PoWScalarFieldEnum)[keyof typeof PoWScalarFieldEnum]


  export const EmailSettingsScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    category: 'category'
  };

  export type EmailSettingsScalarFieldEnum = (typeof EmailSettingsScalarFieldEnum)[keyof typeof EmailSettingsScalarFieldEnum]


  export const UserSponsorsScalarFieldEnum: {
    userId: 'userId',
    sponsorId: 'sponsorId',
    role: 'role',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type UserSponsorsScalarFieldEnum = (typeof UserSponsorsScalarFieldEnum)[keyof typeof UserSponsorsScalarFieldEnum]


  export const UserInvitesScalarFieldEnum: {
    id: 'id',
    email: 'email',
    senderId: 'senderId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    sponsorId: 'sponsorId',
    memberType: 'memberType',
    token: 'token',
    expires: 'expires'
  };

  export type UserInvitesScalarFieldEnum = (typeof UserInvitesScalarFieldEnum)[keyof typeof UserInvitesScalarFieldEnum]


  export const EmailLogsScalarFieldEnum: {
    id: 'id',
    email: 'email',
    type: 'type',
    bountyId: 'bountyId',
    userId: 'userId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type EmailLogsScalarFieldEnum = (typeof EmailLogsScalarFieldEnum)[keyof typeof EmailLogsScalarFieldEnum]


  export const ResendLogsScalarFieldEnum: {
    id: 'id',
    email: 'email',
    subject: 'subject',
    status: 'status',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ResendLogsScalarFieldEnum = (typeof ResendLogsScalarFieldEnum)[keyof typeof ResendLogsScalarFieldEnum]


  export const SubscribeBountyScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    bountyId: 'bountyId',
    isArchived: 'isArchived',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type SubscribeBountyScalarFieldEnum = (typeof SubscribeBountyScalarFieldEnum)[keyof typeof SubscribeBountyScalarFieldEnum]


  export const SubscribeHackathonScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    hackathonId: 'hackathonId',
    isArchived: 'isArchived',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type SubscribeHackathonScalarFieldEnum = (typeof SubscribeHackathonScalarFieldEnum)[keyof typeof SubscribeHackathonScalarFieldEnum]


  export const VerificationTokenScalarFieldEnum: {
    identifier: 'identifier',
    token: 'token',
    expires: 'expires'
  };

  export type VerificationTokenScalarFieldEnum = (typeof VerificationTokenScalarFieldEnum)[keyof typeof VerificationTokenScalarFieldEnum]


  export const HackathonScalarFieldEnum: {
    id: 'id',
    slug: 'slug',
    name: 'name',
    logo: 'logo',
    sponsorId: 'sponsorId',
    deadline: 'deadline',
    startDate: 'startDate',
    description: 'description',
    altLogo: 'altLogo',
    announceDate: 'announceDate',
    eligibility: 'eligibility'
  };

  export type HackathonScalarFieldEnum = (typeof HackathonScalarFieldEnum)[keyof typeof HackathonScalarFieldEnum]


  export const UnsubscribedEmailScalarFieldEnum: {
    id: 'id',
    email: 'email',
    createdAt: 'createdAt'
  };

  export type UnsubscribedEmailScalarFieldEnum = (typeof UnsubscribedEmailScalarFieldEnum)[keyof typeof UnsubscribedEmailScalarFieldEnum]


  export const BlockedEmailScalarFieldEnum: {
    id: 'id',
    email: 'email',
    createdAt: 'createdAt'
  };

  export type BlockedEmailScalarFieldEnum = (typeof BlockedEmailScalarFieldEnum)[keyof typeof BlockedEmailScalarFieldEnum]


  export const CreditLedgerScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    submissionId: 'submissionId',
    applicationId: 'applicationId',
    type: 'type',
    change: 'change',
    effectiveMonth: 'effectiveMonth',
    createdAt: 'createdAt'
  };

  export type CreditLedgerScalarFieldEnum = (typeof CreditLedgerScalarFieldEnum)[keyof typeof CreditLedgerScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const JsonNullValueInput: {
    JsonNull: typeof JsonNull
  };

  export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const BountiesOrderByRelevanceFieldEnum: {
    id: 'id',
    title: 'title',
    slug: 'slug',
    description: 'description',
    token: 'token',
    sponsorId: 'sponsorId',
    pocId: 'pocId',
    applicationLink: 'applicationLink',
    requirements: 'requirements',
    templateId: 'templateId',
    region: 'region',
    pocSocials: 'pocSocials',
    timeToComplete: 'timeToComplete',
    referredBy: 'referredBy',
    hackathonId: 'hackathonId',
    language: 'language'
  };

  export type BountiesOrderByRelevanceFieldEnum = (typeof BountiesOrderByRelevanceFieldEnum)[keyof typeof BountiesOrderByRelevanceFieldEnum]


  export const BountiesTemplatesOrderByRelevanceFieldEnum: {
    id: 'id',
    title: 'title',
    slug: 'slug',
    description: 'description',
    color: 'color',
    emoji: 'emoji',
    requirements: 'requirements',
    region: 'region',
    timeToComplete: 'timeToComplete',
    token: 'token',
    referredBy: 'referredBy',
    language: 'language',
    sponsorId: 'sponsorId',
    pocId: 'pocId',
    pocSocials: 'pocSocials'
  };

  export type BountiesTemplatesOrderByRelevanceFieldEnum = (typeof BountiesTemplatesOrderByRelevanceFieldEnum)[keyof typeof BountiesTemplatesOrderByRelevanceFieldEnum]


  export const CommentOrderByRelevanceFieldEnum: {
    id: 'id',
    message: 'message',
    authorId: 'authorId',
    refId: 'refId',
    replyToId: 'replyToId',
    submissionId: 'submissionId'
  };

  export type CommentOrderByRelevanceFieldEnum = (typeof CommentOrderByRelevanceFieldEnum)[keyof typeof CommentOrderByRelevanceFieldEnum]


  export const GrantsOrderByRelevanceFieldEnum: {
    id: 'id',
    title: 'title',
    slug: 'slug',
    description: 'description',
    shortDescription: 'shortDescription',
    token: 'token',
    link: 'link',
    sponsorId: 'sponsorId',
    pocId: 'pocId',
    logo: 'logo',
    region: 'region',
    pocSocials: 'pocSocials',
    airtableId: 'airtableId',
    avgResponseTime: 'avgResponseTime',
    approverRecordId: 'approverRecordId',
    emailSender: 'emailSender',
    replyToEmail: 'replyToEmail',
    emailSalutation: 'emailSalutation',
    communityLink: 'communityLink'
  };

  export type GrantsOrderByRelevanceFieldEnum = (typeof GrantsOrderByRelevanceFieldEnum)[keyof typeof GrantsOrderByRelevanceFieldEnum]


  export const GrantApplicationOrderByRelevanceFieldEnum: {
    id: 'id',
    userId: 'userId',
    grantId: 'grantId',
    projectTitle: 'projectTitle',
    projectOneLiner: 'projectOneLiner',
    projectDetails: 'projectDetails',
    projectTimeline: 'projectTimeline',
    proofOfWork: 'proofOfWork',
    walletAddress: 'walletAddress',
    twitter: 'twitter',
    github: 'github',
    milestones: 'milestones',
    kpi: 'kpi',
    decidedBy: 'decidedBy',
    notes: 'notes'
  };

  export type GrantApplicationOrderByRelevanceFieldEnum = (typeof GrantApplicationOrderByRelevanceFieldEnum)[keyof typeof GrantApplicationOrderByRelevanceFieldEnum]


  export const GrantTrancheOrderByRelevanceFieldEnum: {
    id: 'id',
    applicationId: 'applicationId',
    grantId: 'grantId',
    update: 'update',
    helpWanted: 'helpWanted'
  };

  export type GrantTrancheOrderByRelevanceFieldEnum = (typeof GrantTrancheOrderByRelevanceFieldEnum)[keyof typeof GrantTrancheOrderByRelevanceFieldEnum]


  export const SubmissionOrderByRelevanceFieldEnum: {
    id: 'id',
    link: 'link',
    tweet: 'tweet',
    userId: 'userId',
    listingId: 'listingId',
    otherInfo: 'otherInfo',
    ogImage: 'ogImage',
    notes: 'notes'
  };

  export type SubmissionOrderByRelevanceFieldEnum = (typeof SubmissionOrderByRelevanceFieldEnum)[keyof typeof SubmissionOrderByRelevanceFieldEnum]


  export const SponsorsOrderByRelevanceFieldEnum: {
    id: 'id',
    name: 'name',
    slug: 'slug',
    logo: 'logo',
    url: 'url',
    industry: 'industry',
    twitter: 'twitter',
    bio: 'bio',
    entityName: 'entityName'
  };

  export type SponsorsOrderByRelevanceFieldEnum = (typeof SponsorsOrderByRelevanceFieldEnum)[keyof typeof SponsorsOrderByRelevanceFieldEnum]


  export const AccountOrderByRelevanceFieldEnum: {
    id: 'id',
    userId: 'userId',
    type: 'type',
    provider: 'provider',
    providerAccountId: 'providerAccountId',
    refresh_token: 'refresh_token',
    access_token: 'access_token',
    token_type: 'token_type',
    scope: 'scope',
    id_token: 'id_token',
    session_state: 'session_state'
  };

  export type AccountOrderByRelevanceFieldEnum = (typeof AccountOrderByRelevanceFieldEnum)[keyof typeof AccountOrderByRelevanceFieldEnum]


  export const SessionOrderByRelevanceFieldEnum: {
    id: 'id',
    sessionToken: 'sessionToken',
    userId: 'userId'
  };

  export type SessionOrderByRelevanceFieldEnum = (typeof SessionOrderByRelevanceFieldEnum)[keyof typeof SessionOrderByRelevanceFieldEnum]


  export const UserOrderByRelevanceFieldEnum: {
    id: 'id',
    publicKey: 'publicKey',
    walletAddress: 'walletAddress',
    email: 'email',
    username: 'username',
    photo: 'photo',
    firstName: 'firstName',
    lastName: 'lastName',
    role: 'role',
    interests: 'interests',
    bio: 'bio',
    twitter: 'twitter',
    discord: 'discord',
    github: 'github',
    linkedin: 'linkedin',
    website: 'website',
    telegram: 'telegram',
    community: 'community',
    experience: 'experience',
    superteamLevel: 'superteamLevel',
    location: 'location',
    cryptoExperience: 'cryptoExperience',
    workPrefernce: 'workPrefernce',
    currentEmployer: 'currentEmployer',
    currentSponsorId: 'currentSponsorId',
    hackathonId: 'hackathonId',
    stLead: 'stLead',
    privyDid: 'privyDid',
    kycName: 'kycName',
    kycCountry: 'kycCountry',
    kycAddress: 'kycAddress',
    kycDOB: 'kycDOB',
    kycIDNumber: 'kycIDNumber',
    kycIDType: 'kycIDType'
  };

  export type UserOrderByRelevanceFieldEnum = (typeof UserOrderByRelevanceFieldEnum)[keyof typeof UserOrderByRelevanceFieldEnum]


  export const ScoutsOrderByRelevanceFieldEnum: {
    id: 'id',
    userId: 'userId',
    listingId: 'listingId'
  };

  export type ScoutsOrderByRelevanceFieldEnum = (typeof ScoutsOrderByRelevanceFieldEnum)[keyof typeof ScoutsOrderByRelevanceFieldEnum]


  export const TalentRankingsOrderByRelevanceFieldEnum: {
    id: 'id',
    userId: 'userId'
  };

  export type TalentRankingsOrderByRelevanceFieldEnum = (typeof TalentRankingsOrderByRelevanceFieldEnum)[keyof typeof TalentRankingsOrderByRelevanceFieldEnum]


  export const PoWOrderByRelevanceFieldEnum: {
    id: 'id',
    userId: 'userId',
    title: 'title',
    description: 'description',
    link: 'link',
    ogImage: 'ogImage'
  };

  export type PoWOrderByRelevanceFieldEnum = (typeof PoWOrderByRelevanceFieldEnum)[keyof typeof PoWOrderByRelevanceFieldEnum]


  export const EmailSettingsOrderByRelevanceFieldEnum: {
    userId: 'userId',
    category: 'category'
  };

  export type EmailSettingsOrderByRelevanceFieldEnum = (typeof EmailSettingsOrderByRelevanceFieldEnum)[keyof typeof EmailSettingsOrderByRelevanceFieldEnum]


  export const UserSponsorsOrderByRelevanceFieldEnum: {
    userId: 'userId',
    sponsorId: 'sponsorId'
  };

  export type UserSponsorsOrderByRelevanceFieldEnum = (typeof UserSponsorsOrderByRelevanceFieldEnum)[keyof typeof UserSponsorsOrderByRelevanceFieldEnum]


  export const UserInvitesOrderByRelevanceFieldEnum: {
    id: 'id',
    email: 'email',
    senderId: 'senderId',
    sponsorId: 'sponsorId',
    token: 'token'
  };

  export type UserInvitesOrderByRelevanceFieldEnum = (typeof UserInvitesOrderByRelevanceFieldEnum)[keyof typeof UserInvitesOrderByRelevanceFieldEnum]


  export const emailLogsOrderByRelevanceFieldEnum: {
    id: 'id',
    email: 'email',
    bountyId: 'bountyId',
    userId: 'userId'
  };

  export type emailLogsOrderByRelevanceFieldEnum = (typeof emailLogsOrderByRelevanceFieldEnum)[keyof typeof emailLogsOrderByRelevanceFieldEnum]


  export const ResendLogsOrderByRelevanceFieldEnum: {
    id: 'id',
    email: 'email',
    subject: 'subject',
    status: 'status'
  };

  export type ResendLogsOrderByRelevanceFieldEnum = (typeof ResendLogsOrderByRelevanceFieldEnum)[keyof typeof ResendLogsOrderByRelevanceFieldEnum]


  export const SubscribeBountyOrderByRelevanceFieldEnum: {
    id: 'id',
    userId: 'userId',
    bountyId: 'bountyId'
  };

  export type SubscribeBountyOrderByRelevanceFieldEnum = (typeof SubscribeBountyOrderByRelevanceFieldEnum)[keyof typeof SubscribeBountyOrderByRelevanceFieldEnum]


  export const SubscribeHackathonOrderByRelevanceFieldEnum: {
    id: 'id',
    userId: 'userId',
    hackathonId: 'hackathonId'
  };

  export type SubscribeHackathonOrderByRelevanceFieldEnum = (typeof SubscribeHackathonOrderByRelevanceFieldEnum)[keyof typeof SubscribeHackathonOrderByRelevanceFieldEnum]


  export const VerificationTokenOrderByRelevanceFieldEnum: {
    identifier: 'identifier',
    token: 'token'
  };

  export type VerificationTokenOrderByRelevanceFieldEnum = (typeof VerificationTokenOrderByRelevanceFieldEnum)[keyof typeof VerificationTokenOrderByRelevanceFieldEnum]


  export const HackathonOrderByRelevanceFieldEnum: {
    id: 'id',
    slug: 'slug',
    name: 'name',
    logo: 'logo',
    sponsorId: 'sponsorId',
    description: 'description',
    altLogo: 'altLogo'
  };

  export type HackathonOrderByRelevanceFieldEnum = (typeof HackathonOrderByRelevanceFieldEnum)[keyof typeof HackathonOrderByRelevanceFieldEnum]


  export const UnsubscribedEmailOrderByRelevanceFieldEnum: {
    id: 'id',
    email: 'email'
  };

  export type UnsubscribedEmailOrderByRelevanceFieldEnum = (typeof UnsubscribedEmailOrderByRelevanceFieldEnum)[keyof typeof UnsubscribedEmailOrderByRelevanceFieldEnum]


  export const BlockedEmailOrderByRelevanceFieldEnum: {
    id: 'id',
    email: 'email'
  };

  export type BlockedEmailOrderByRelevanceFieldEnum = (typeof BlockedEmailOrderByRelevanceFieldEnum)[keyof typeof BlockedEmailOrderByRelevanceFieldEnum]


  export const CreditLedgerOrderByRelevanceFieldEnum: {
    id: 'id',
    userId: 'userId',
    submissionId: 'submissionId',
    applicationId: 'applicationId'
  };

  export type CreditLedgerOrderByRelevanceFieldEnum = (typeof CreditLedgerOrderByRelevanceFieldEnum)[keyof typeof CreditLedgerOrderByRelevanceFieldEnum]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'status'
   */
  export type EnumstatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'status'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Source'
   */
  export type EnumSourceFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Source'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'BountyType'
   */
  export type EnumBountyTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BountyType'>
    


  /**
   * Reference to a field of type 'ApplicationType'
   */
  export type EnumApplicationTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ApplicationType'>
    


  /**
   * Reference to a field of type 'CompensationType'
   */
  export type EnumCompensationTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CompensationType'>
    


  /**
   * Reference to a field of type 'CommentRefType'
   */
  export type EnumCommentRefTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CommentRefType'>
    


  /**
   * Reference to a field of type 'CommentType'
   */
  export type EnumCommentTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CommentType'>
    


  /**
   * Reference to a field of type 'GrantStatus'
   */
  export type EnumGrantStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'GrantStatus'>
    


  /**
   * Reference to a field of type 'GrantApplicationStatus'
   */
  export type EnumGrantApplicationStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'GrantApplicationStatus'>
    


  /**
   * Reference to a field of type 'SubmissionLabels'
   */
  export type EnumSubmissionLabelsFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SubmissionLabels'>
    


  /**
   * Reference to a field of type 'GrantTrancheStatus'
   */
  export type EnumGrantTrancheStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'GrantTrancheStatus'>
    


  /**
   * Reference to a field of type 'SubmissionStatus'
   */
  export type EnumSubmissionStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SubmissionStatus'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'TalentRankingSkills'
   */
  export type EnumTalentRankingSkillsFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TalentRankingSkills'>
    


  /**
   * Reference to a field of type 'TalentRankingTimeframe'
   */
  export type EnumTalentRankingTimeframeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TalentRankingTimeframe'>
    


  /**
   * Reference to a field of type 'Role'
   */
  export type EnumRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Role'>
    


  /**
   * Reference to a field of type 'EmailType'
   */
  export type EnumEmailTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EmailType'>
    


  /**
   * Reference to a field of type 'CreditEventType'
   */
  export type EnumCreditEventTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CreditEventType'>
    
  /**
   * Deep Input Types
   */


  export type BountiesWhereInput = {
    AND?: BountiesWhereInput | BountiesWhereInput[]
    OR?: BountiesWhereInput[]
    NOT?: BountiesWhereInput | BountiesWhereInput[]
    id?: StringFilter<"Bounties"> | string
    title?: StringFilter<"Bounties"> | string
    slug?: StringFilter<"Bounties"> | string
    description?: StringNullableFilter<"Bounties"> | string | null
    deadline?: DateTimeNullableFilter<"Bounties"> | Date | string | null
    commitmentDate?: DateTimeNullableFilter<"Bounties"> | Date | string | null
    eligibility?: JsonNullableFilter<"Bounties">
    status?: EnumstatusFilter<"Bounties"> | $Enums.status
    token?: StringNullableFilter<"Bounties"> | string | null
    rewardAmount?: FloatNullableFilter<"Bounties"> | number | null
    rewards?: JsonNullableFilter<"Bounties">
    maxBonusSpots?: IntFilter<"Bounties"> | number
    usdValue?: FloatNullableFilter<"Bounties"> | number | null
    sponsorId?: StringFilter<"Bounties"> | string
    pocId?: StringFilter<"Bounties"> | string
    source?: EnumSourceFilter<"Bounties"> | $Enums.Source
    isPublished?: BoolFilter<"Bounties"> | boolean
    isFeatured?: BoolFilter<"Bounties"> | boolean
    isActive?: BoolFilter<"Bounties"> | boolean
    isArchived?: BoolFilter<"Bounties"> | boolean
    createdAt?: DateTimeFilter<"Bounties"> | Date | string
    updatedAt?: DateTimeFilter<"Bounties"> | Date | string
    applicationLink?: StringNullableFilter<"Bounties"> | string | null
    skills?: JsonNullableFilter<"Bounties">
    type?: EnumBountyTypeFilter<"Bounties"> | $Enums.BountyType
    requirements?: StringNullableFilter<"Bounties"> | string | null
    isWinnersAnnounced?: BoolFilter<"Bounties"> | boolean
    templateId?: StringNullableFilter<"Bounties"> | string | null
    region?: StringFilter<"Bounties"> | string
    pocSocials?: StringNullableFilter<"Bounties"> | string | null
    hackathonprize?: BoolFilter<"Bounties"> | boolean
    applicationType?: EnumApplicationTypeFilter<"Bounties"> | $Enums.ApplicationType
    timeToComplete?: StringNullableFilter<"Bounties"> | string | null
    references?: JsonNullableFilter<"Bounties">
    referredBy?: StringNullableFilter<"Bounties"> | string | null
    publishedAt?: DateTimeNullableFilter<"Bounties"> | Date | string | null
    isPrivate?: BoolFilter<"Bounties"> | boolean
    hackathonId?: StringNullableFilter<"Bounties"> | string | null
    compensationType?: EnumCompensationTypeFilter<"Bounties"> | $Enums.CompensationType
    maxRewardAsk?: IntNullableFilter<"Bounties"> | number | null
    minRewardAsk?: IntNullableFilter<"Bounties"> | number | null
    language?: StringNullableFilter<"Bounties"> | string | null
    shouldSendEmail?: BoolFilter<"Bounties"> | boolean
    isFndnPaying?: BoolFilter<"Bounties"> | boolean
    winnersAnnouncedAt?: DateTimeNullableFilter<"Bounties"> | Date | string | null
    discordMessageIds?: JsonNullableFilter<"Bounties">
    template?: XOR<BountiesTemplatesNullableScalarRelationFilter, BountiesTemplatesWhereInput> | null
    sponsor?: XOR<SponsorsScalarRelationFilter, SponsorsWhereInput>
    poc?: XOR<UserScalarRelationFilter, UserWhereInput>
    Submission?: SubmissionListRelationFilter
    SubscribeBounty?: SubscribeBountyListRelationFilter
    Hackathon?: XOR<HackathonNullableScalarRelationFilter, HackathonWhereInput> | null
    Scouts?: ScoutsListRelationFilter
    Comments?: CommentListRelationFilter
  }

  export type BountiesOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    slug?: SortOrder
    description?: SortOrderInput | SortOrder
    deadline?: SortOrderInput | SortOrder
    commitmentDate?: SortOrderInput | SortOrder
    eligibility?: SortOrderInput | SortOrder
    status?: SortOrder
    token?: SortOrderInput | SortOrder
    rewardAmount?: SortOrderInput | SortOrder
    rewards?: SortOrderInput | SortOrder
    maxBonusSpots?: SortOrder
    usdValue?: SortOrderInput | SortOrder
    sponsorId?: SortOrder
    pocId?: SortOrder
    source?: SortOrder
    isPublished?: SortOrder
    isFeatured?: SortOrder
    isActive?: SortOrder
    isArchived?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    applicationLink?: SortOrderInput | SortOrder
    skills?: SortOrderInput | SortOrder
    type?: SortOrder
    requirements?: SortOrderInput | SortOrder
    isWinnersAnnounced?: SortOrder
    templateId?: SortOrderInput | SortOrder
    region?: SortOrder
    pocSocials?: SortOrderInput | SortOrder
    hackathonprize?: SortOrder
    applicationType?: SortOrder
    timeToComplete?: SortOrderInput | SortOrder
    references?: SortOrderInput | SortOrder
    referredBy?: SortOrderInput | SortOrder
    publishedAt?: SortOrderInput | SortOrder
    isPrivate?: SortOrder
    hackathonId?: SortOrderInput | SortOrder
    compensationType?: SortOrder
    maxRewardAsk?: SortOrderInput | SortOrder
    minRewardAsk?: SortOrderInput | SortOrder
    language?: SortOrderInput | SortOrder
    shouldSendEmail?: SortOrder
    isFndnPaying?: SortOrder
    winnersAnnouncedAt?: SortOrderInput | SortOrder
    discordMessageIds?: SortOrderInput | SortOrder
    template?: BountiesTemplatesOrderByWithRelationInput
    sponsor?: SponsorsOrderByWithRelationInput
    poc?: UserOrderByWithRelationInput
    Submission?: SubmissionOrderByRelationAggregateInput
    SubscribeBounty?: SubscribeBountyOrderByRelationAggregateInput
    Hackathon?: HackathonOrderByWithRelationInput
    Scouts?: ScoutsOrderByRelationAggregateInput
    Comments?: CommentOrderByRelationAggregateInput
    _relevance?: BountiesOrderByRelevanceInput
  }

  export type BountiesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    slug?: string
    AND?: BountiesWhereInput | BountiesWhereInput[]
    OR?: BountiesWhereInput[]
    NOT?: BountiesWhereInput | BountiesWhereInput[]
    title?: StringFilter<"Bounties"> | string
    description?: StringNullableFilter<"Bounties"> | string | null
    deadline?: DateTimeNullableFilter<"Bounties"> | Date | string | null
    commitmentDate?: DateTimeNullableFilter<"Bounties"> | Date | string | null
    eligibility?: JsonNullableFilter<"Bounties">
    status?: EnumstatusFilter<"Bounties"> | $Enums.status
    token?: StringNullableFilter<"Bounties"> | string | null
    rewardAmount?: FloatNullableFilter<"Bounties"> | number | null
    rewards?: JsonNullableFilter<"Bounties">
    maxBonusSpots?: IntFilter<"Bounties"> | number
    usdValue?: FloatNullableFilter<"Bounties"> | number | null
    sponsorId?: StringFilter<"Bounties"> | string
    pocId?: StringFilter<"Bounties"> | string
    source?: EnumSourceFilter<"Bounties"> | $Enums.Source
    isPublished?: BoolFilter<"Bounties"> | boolean
    isFeatured?: BoolFilter<"Bounties"> | boolean
    isActive?: BoolFilter<"Bounties"> | boolean
    isArchived?: BoolFilter<"Bounties"> | boolean
    createdAt?: DateTimeFilter<"Bounties"> | Date | string
    updatedAt?: DateTimeFilter<"Bounties"> | Date | string
    applicationLink?: StringNullableFilter<"Bounties"> | string | null
    skills?: JsonNullableFilter<"Bounties">
    type?: EnumBountyTypeFilter<"Bounties"> | $Enums.BountyType
    requirements?: StringNullableFilter<"Bounties"> | string | null
    isWinnersAnnounced?: BoolFilter<"Bounties"> | boolean
    templateId?: StringNullableFilter<"Bounties"> | string | null
    region?: StringFilter<"Bounties"> | string
    pocSocials?: StringNullableFilter<"Bounties"> | string | null
    hackathonprize?: BoolFilter<"Bounties"> | boolean
    applicationType?: EnumApplicationTypeFilter<"Bounties"> | $Enums.ApplicationType
    timeToComplete?: StringNullableFilter<"Bounties"> | string | null
    references?: JsonNullableFilter<"Bounties">
    referredBy?: StringNullableFilter<"Bounties"> | string | null
    publishedAt?: DateTimeNullableFilter<"Bounties"> | Date | string | null
    isPrivate?: BoolFilter<"Bounties"> | boolean
    hackathonId?: StringNullableFilter<"Bounties"> | string | null
    compensationType?: EnumCompensationTypeFilter<"Bounties"> | $Enums.CompensationType
    maxRewardAsk?: IntNullableFilter<"Bounties"> | number | null
    minRewardAsk?: IntNullableFilter<"Bounties"> | number | null
    language?: StringNullableFilter<"Bounties"> | string | null
    shouldSendEmail?: BoolFilter<"Bounties"> | boolean
    isFndnPaying?: BoolFilter<"Bounties"> | boolean
    winnersAnnouncedAt?: DateTimeNullableFilter<"Bounties"> | Date | string | null
    discordMessageIds?: JsonNullableFilter<"Bounties">
    template?: XOR<BountiesTemplatesNullableScalarRelationFilter, BountiesTemplatesWhereInput> | null
    sponsor?: XOR<SponsorsScalarRelationFilter, SponsorsWhereInput>
    poc?: XOR<UserScalarRelationFilter, UserWhereInput>
    Submission?: SubmissionListRelationFilter
    SubscribeBounty?: SubscribeBountyListRelationFilter
    Hackathon?: XOR<HackathonNullableScalarRelationFilter, HackathonWhereInput> | null
    Scouts?: ScoutsListRelationFilter
    Comments?: CommentListRelationFilter
  }, "id" | "slug">

  export type BountiesOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    slug?: SortOrder
    description?: SortOrderInput | SortOrder
    deadline?: SortOrderInput | SortOrder
    commitmentDate?: SortOrderInput | SortOrder
    eligibility?: SortOrderInput | SortOrder
    status?: SortOrder
    token?: SortOrderInput | SortOrder
    rewardAmount?: SortOrderInput | SortOrder
    rewards?: SortOrderInput | SortOrder
    maxBonusSpots?: SortOrder
    usdValue?: SortOrderInput | SortOrder
    sponsorId?: SortOrder
    pocId?: SortOrder
    source?: SortOrder
    isPublished?: SortOrder
    isFeatured?: SortOrder
    isActive?: SortOrder
    isArchived?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    applicationLink?: SortOrderInput | SortOrder
    skills?: SortOrderInput | SortOrder
    type?: SortOrder
    requirements?: SortOrderInput | SortOrder
    isWinnersAnnounced?: SortOrder
    templateId?: SortOrderInput | SortOrder
    region?: SortOrder
    pocSocials?: SortOrderInput | SortOrder
    hackathonprize?: SortOrder
    applicationType?: SortOrder
    timeToComplete?: SortOrderInput | SortOrder
    references?: SortOrderInput | SortOrder
    referredBy?: SortOrderInput | SortOrder
    publishedAt?: SortOrderInput | SortOrder
    isPrivate?: SortOrder
    hackathonId?: SortOrderInput | SortOrder
    compensationType?: SortOrder
    maxRewardAsk?: SortOrderInput | SortOrder
    minRewardAsk?: SortOrderInput | SortOrder
    language?: SortOrderInput | SortOrder
    shouldSendEmail?: SortOrder
    isFndnPaying?: SortOrder
    winnersAnnouncedAt?: SortOrderInput | SortOrder
    discordMessageIds?: SortOrderInput | SortOrder
    _count?: BountiesCountOrderByAggregateInput
    _avg?: BountiesAvgOrderByAggregateInput
    _max?: BountiesMaxOrderByAggregateInput
    _min?: BountiesMinOrderByAggregateInput
    _sum?: BountiesSumOrderByAggregateInput
  }

  export type BountiesScalarWhereWithAggregatesInput = {
    AND?: BountiesScalarWhereWithAggregatesInput | BountiesScalarWhereWithAggregatesInput[]
    OR?: BountiesScalarWhereWithAggregatesInput[]
    NOT?: BountiesScalarWhereWithAggregatesInput | BountiesScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Bounties"> | string
    title?: StringWithAggregatesFilter<"Bounties"> | string
    slug?: StringWithAggregatesFilter<"Bounties"> | string
    description?: StringNullableWithAggregatesFilter<"Bounties"> | string | null
    deadline?: DateTimeNullableWithAggregatesFilter<"Bounties"> | Date | string | null
    commitmentDate?: DateTimeNullableWithAggregatesFilter<"Bounties"> | Date | string | null
    eligibility?: JsonNullableWithAggregatesFilter<"Bounties">
    status?: EnumstatusWithAggregatesFilter<"Bounties"> | $Enums.status
    token?: StringNullableWithAggregatesFilter<"Bounties"> | string | null
    rewardAmount?: FloatNullableWithAggregatesFilter<"Bounties"> | number | null
    rewards?: JsonNullableWithAggregatesFilter<"Bounties">
    maxBonusSpots?: IntWithAggregatesFilter<"Bounties"> | number
    usdValue?: FloatNullableWithAggregatesFilter<"Bounties"> | number | null
    sponsorId?: StringWithAggregatesFilter<"Bounties"> | string
    pocId?: StringWithAggregatesFilter<"Bounties"> | string
    source?: EnumSourceWithAggregatesFilter<"Bounties"> | $Enums.Source
    isPublished?: BoolWithAggregatesFilter<"Bounties"> | boolean
    isFeatured?: BoolWithAggregatesFilter<"Bounties"> | boolean
    isActive?: BoolWithAggregatesFilter<"Bounties"> | boolean
    isArchived?: BoolWithAggregatesFilter<"Bounties"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"Bounties"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Bounties"> | Date | string
    applicationLink?: StringNullableWithAggregatesFilter<"Bounties"> | string | null
    skills?: JsonNullableWithAggregatesFilter<"Bounties">
    type?: EnumBountyTypeWithAggregatesFilter<"Bounties"> | $Enums.BountyType
    requirements?: StringNullableWithAggregatesFilter<"Bounties"> | string | null
    isWinnersAnnounced?: BoolWithAggregatesFilter<"Bounties"> | boolean
    templateId?: StringNullableWithAggregatesFilter<"Bounties"> | string | null
    region?: StringWithAggregatesFilter<"Bounties"> | string
    pocSocials?: StringNullableWithAggregatesFilter<"Bounties"> | string | null
    hackathonprize?: BoolWithAggregatesFilter<"Bounties"> | boolean
    applicationType?: EnumApplicationTypeWithAggregatesFilter<"Bounties"> | $Enums.ApplicationType
    timeToComplete?: StringNullableWithAggregatesFilter<"Bounties"> | string | null
    references?: JsonNullableWithAggregatesFilter<"Bounties">
    referredBy?: StringNullableWithAggregatesFilter<"Bounties"> | string | null
    publishedAt?: DateTimeNullableWithAggregatesFilter<"Bounties"> | Date | string | null
    isPrivate?: BoolWithAggregatesFilter<"Bounties"> | boolean
    hackathonId?: StringNullableWithAggregatesFilter<"Bounties"> | string | null
    compensationType?: EnumCompensationTypeWithAggregatesFilter<"Bounties"> | $Enums.CompensationType
    maxRewardAsk?: IntNullableWithAggregatesFilter<"Bounties"> | number | null
    minRewardAsk?: IntNullableWithAggregatesFilter<"Bounties"> | number | null
    language?: StringNullableWithAggregatesFilter<"Bounties"> | string | null
    shouldSendEmail?: BoolWithAggregatesFilter<"Bounties"> | boolean
    isFndnPaying?: BoolWithAggregatesFilter<"Bounties"> | boolean
    winnersAnnouncedAt?: DateTimeNullableWithAggregatesFilter<"Bounties"> | Date | string | null
    discordMessageIds?: JsonNullableWithAggregatesFilter<"Bounties">
  }

  export type BountiesTemplatesWhereInput = {
    AND?: BountiesTemplatesWhereInput | BountiesTemplatesWhereInput[]
    OR?: BountiesTemplatesWhereInput[]
    NOT?: BountiesTemplatesWhereInput | BountiesTemplatesWhereInput[]
    id?: StringFilter<"BountiesTemplates"> | string
    title?: StringNullableFilter<"BountiesTemplates"> | string | null
    deadline?: DateTimeNullableFilter<"BountiesTemplates"> | Date | string | null
    slug?: StringNullableFilter<"BountiesTemplates"> | string | null
    description?: StringNullableFilter<"BountiesTemplates"> | string | null
    color?: StringNullableFilter<"BountiesTemplates"> | string | null
    emoji?: StringNullableFilter<"BountiesTemplates"> | string | null
    isFeatured?: BoolFilter<"BountiesTemplates"> | boolean
    isActive?: BoolFilter<"BountiesTemplates"> | boolean
    isArchived?: BoolFilter<"BountiesTemplates"> | boolean
    createdAt?: DateTimeFilter<"BountiesTemplates"> | Date | string
    updatedAt?: DateTimeFilter<"BountiesTemplates"> | Date | string
    skills?: JsonNullableFilter<"BountiesTemplates">
    type?: EnumBountyTypeFilter<"BountiesTemplates"> | $Enums.BountyType
    requirements?: StringNullableFilter<"BountiesTemplates"> | string | null
    region?: StringFilter<"BountiesTemplates"> | string
    applicationType?: EnumApplicationTypeFilter<"BountiesTemplates"> | $Enums.ApplicationType
    status?: EnumstatusFilter<"BountiesTemplates"> | $Enums.status
    timeToComplete?: StringNullableFilter<"BountiesTemplates"> | string | null
    token?: StringNullableFilter<"BountiesTemplates"> | string | null
    references?: JsonNullableFilter<"BountiesTemplates">
    referredBy?: StringNullableFilter<"BountiesTemplates"> | string | null
    publishedAt?: DateTimeNullableFilter<"BountiesTemplates"> | Date | string | null
    compensationType?: EnumCompensationTypeFilter<"BountiesTemplates"> | $Enums.CompensationType
    maxRewardAsk?: IntNullableFilter<"BountiesTemplates"> | number | null
    minRewardAsk?: IntNullableFilter<"BountiesTemplates"> | number | null
    language?: StringNullableFilter<"BountiesTemplates"> | string | null
    rewardAmount?: FloatNullableFilter<"BountiesTemplates"> | number | null
    rewards?: JsonNullableFilter<"BountiesTemplates">
    maxBonusSpots?: IntFilter<"BountiesTemplates"> | number
    usdValue?: FloatNullableFilter<"BountiesTemplates"> | number | null
    sponsorId?: StringFilter<"BountiesTemplates"> | string
    pocId?: StringFilter<"BountiesTemplates"> | string
    pocSocials?: StringNullableFilter<"BountiesTemplates"> | string | null
    source?: EnumSourceFilter<"BountiesTemplates"> | $Enums.Source
    isPublished?: BoolFilter<"BountiesTemplates"> | boolean
    Bounties?: BountiesListRelationFilter
    sponsor?: XOR<SponsorsScalarRelationFilter, SponsorsWhereInput>
    poc?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type BountiesTemplatesOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrderInput | SortOrder
    deadline?: SortOrderInput | SortOrder
    slug?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    color?: SortOrderInput | SortOrder
    emoji?: SortOrderInput | SortOrder
    isFeatured?: SortOrder
    isActive?: SortOrder
    isArchived?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    skills?: SortOrderInput | SortOrder
    type?: SortOrder
    requirements?: SortOrderInput | SortOrder
    region?: SortOrder
    applicationType?: SortOrder
    status?: SortOrder
    timeToComplete?: SortOrderInput | SortOrder
    token?: SortOrderInput | SortOrder
    references?: SortOrderInput | SortOrder
    referredBy?: SortOrderInput | SortOrder
    publishedAt?: SortOrderInput | SortOrder
    compensationType?: SortOrder
    maxRewardAsk?: SortOrderInput | SortOrder
    minRewardAsk?: SortOrderInput | SortOrder
    language?: SortOrderInput | SortOrder
    rewardAmount?: SortOrderInput | SortOrder
    rewards?: SortOrderInput | SortOrder
    maxBonusSpots?: SortOrder
    usdValue?: SortOrderInput | SortOrder
    sponsorId?: SortOrder
    pocId?: SortOrder
    pocSocials?: SortOrderInput | SortOrder
    source?: SortOrder
    isPublished?: SortOrder
    Bounties?: BountiesOrderByRelationAggregateInput
    sponsor?: SponsorsOrderByWithRelationInput
    poc?: UserOrderByWithRelationInput
    _relevance?: BountiesTemplatesOrderByRelevanceInput
  }

  export type BountiesTemplatesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: BountiesTemplatesWhereInput | BountiesTemplatesWhereInput[]
    OR?: BountiesTemplatesWhereInput[]
    NOT?: BountiesTemplatesWhereInput | BountiesTemplatesWhereInput[]
    title?: StringNullableFilter<"BountiesTemplates"> | string | null
    deadline?: DateTimeNullableFilter<"BountiesTemplates"> | Date | string | null
    slug?: StringNullableFilter<"BountiesTemplates"> | string | null
    description?: StringNullableFilter<"BountiesTemplates"> | string | null
    color?: StringNullableFilter<"BountiesTemplates"> | string | null
    emoji?: StringNullableFilter<"BountiesTemplates"> | string | null
    isFeatured?: BoolFilter<"BountiesTemplates"> | boolean
    isActive?: BoolFilter<"BountiesTemplates"> | boolean
    isArchived?: BoolFilter<"BountiesTemplates"> | boolean
    createdAt?: DateTimeFilter<"BountiesTemplates"> | Date | string
    updatedAt?: DateTimeFilter<"BountiesTemplates"> | Date | string
    skills?: JsonNullableFilter<"BountiesTemplates">
    type?: EnumBountyTypeFilter<"BountiesTemplates"> | $Enums.BountyType
    requirements?: StringNullableFilter<"BountiesTemplates"> | string | null
    region?: StringFilter<"BountiesTemplates"> | string
    applicationType?: EnumApplicationTypeFilter<"BountiesTemplates"> | $Enums.ApplicationType
    status?: EnumstatusFilter<"BountiesTemplates"> | $Enums.status
    timeToComplete?: StringNullableFilter<"BountiesTemplates"> | string | null
    token?: StringNullableFilter<"BountiesTemplates"> | string | null
    references?: JsonNullableFilter<"BountiesTemplates">
    referredBy?: StringNullableFilter<"BountiesTemplates"> | string | null
    publishedAt?: DateTimeNullableFilter<"BountiesTemplates"> | Date | string | null
    compensationType?: EnumCompensationTypeFilter<"BountiesTemplates"> | $Enums.CompensationType
    maxRewardAsk?: IntNullableFilter<"BountiesTemplates"> | number | null
    minRewardAsk?: IntNullableFilter<"BountiesTemplates"> | number | null
    language?: StringNullableFilter<"BountiesTemplates"> | string | null
    rewardAmount?: FloatNullableFilter<"BountiesTemplates"> | number | null
    rewards?: JsonNullableFilter<"BountiesTemplates">
    maxBonusSpots?: IntFilter<"BountiesTemplates"> | number
    usdValue?: FloatNullableFilter<"BountiesTemplates"> | number | null
    sponsorId?: StringFilter<"BountiesTemplates"> | string
    pocId?: StringFilter<"BountiesTemplates"> | string
    pocSocials?: StringNullableFilter<"BountiesTemplates"> | string | null
    source?: EnumSourceFilter<"BountiesTemplates"> | $Enums.Source
    isPublished?: BoolFilter<"BountiesTemplates"> | boolean
    Bounties?: BountiesListRelationFilter
    sponsor?: XOR<SponsorsScalarRelationFilter, SponsorsWhereInput>
    poc?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type BountiesTemplatesOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrderInput | SortOrder
    deadline?: SortOrderInput | SortOrder
    slug?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    color?: SortOrderInput | SortOrder
    emoji?: SortOrderInput | SortOrder
    isFeatured?: SortOrder
    isActive?: SortOrder
    isArchived?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    skills?: SortOrderInput | SortOrder
    type?: SortOrder
    requirements?: SortOrderInput | SortOrder
    region?: SortOrder
    applicationType?: SortOrder
    status?: SortOrder
    timeToComplete?: SortOrderInput | SortOrder
    token?: SortOrderInput | SortOrder
    references?: SortOrderInput | SortOrder
    referredBy?: SortOrderInput | SortOrder
    publishedAt?: SortOrderInput | SortOrder
    compensationType?: SortOrder
    maxRewardAsk?: SortOrderInput | SortOrder
    minRewardAsk?: SortOrderInput | SortOrder
    language?: SortOrderInput | SortOrder
    rewardAmount?: SortOrderInput | SortOrder
    rewards?: SortOrderInput | SortOrder
    maxBonusSpots?: SortOrder
    usdValue?: SortOrderInput | SortOrder
    sponsorId?: SortOrder
    pocId?: SortOrder
    pocSocials?: SortOrderInput | SortOrder
    source?: SortOrder
    isPublished?: SortOrder
    _count?: BountiesTemplatesCountOrderByAggregateInput
    _avg?: BountiesTemplatesAvgOrderByAggregateInput
    _max?: BountiesTemplatesMaxOrderByAggregateInput
    _min?: BountiesTemplatesMinOrderByAggregateInput
    _sum?: BountiesTemplatesSumOrderByAggregateInput
  }

  export type BountiesTemplatesScalarWhereWithAggregatesInput = {
    AND?: BountiesTemplatesScalarWhereWithAggregatesInput | BountiesTemplatesScalarWhereWithAggregatesInput[]
    OR?: BountiesTemplatesScalarWhereWithAggregatesInput[]
    NOT?: BountiesTemplatesScalarWhereWithAggregatesInput | BountiesTemplatesScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"BountiesTemplates"> | string
    title?: StringNullableWithAggregatesFilter<"BountiesTemplates"> | string | null
    deadline?: DateTimeNullableWithAggregatesFilter<"BountiesTemplates"> | Date | string | null
    slug?: StringNullableWithAggregatesFilter<"BountiesTemplates"> | string | null
    description?: StringNullableWithAggregatesFilter<"BountiesTemplates"> | string | null
    color?: StringNullableWithAggregatesFilter<"BountiesTemplates"> | string | null
    emoji?: StringNullableWithAggregatesFilter<"BountiesTemplates"> | string | null
    isFeatured?: BoolWithAggregatesFilter<"BountiesTemplates"> | boolean
    isActive?: BoolWithAggregatesFilter<"BountiesTemplates"> | boolean
    isArchived?: BoolWithAggregatesFilter<"BountiesTemplates"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"BountiesTemplates"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"BountiesTemplates"> | Date | string
    skills?: JsonNullableWithAggregatesFilter<"BountiesTemplates">
    type?: EnumBountyTypeWithAggregatesFilter<"BountiesTemplates"> | $Enums.BountyType
    requirements?: StringNullableWithAggregatesFilter<"BountiesTemplates"> | string | null
    region?: StringWithAggregatesFilter<"BountiesTemplates"> | string
    applicationType?: EnumApplicationTypeWithAggregatesFilter<"BountiesTemplates"> | $Enums.ApplicationType
    status?: EnumstatusWithAggregatesFilter<"BountiesTemplates"> | $Enums.status
    timeToComplete?: StringNullableWithAggregatesFilter<"BountiesTemplates"> | string | null
    token?: StringNullableWithAggregatesFilter<"BountiesTemplates"> | string | null
    references?: JsonNullableWithAggregatesFilter<"BountiesTemplates">
    referredBy?: StringNullableWithAggregatesFilter<"BountiesTemplates"> | string | null
    publishedAt?: DateTimeNullableWithAggregatesFilter<"BountiesTemplates"> | Date | string | null
    compensationType?: EnumCompensationTypeWithAggregatesFilter<"BountiesTemplates"> | $Enums.CompensationType
    maxRewardAsk?: IntNullableWithAggregatesFilter<"BountiesTemplates"> | number | null
    minRewardAsk?: IntNullableWithAggregatesFilter<"BountiesTemplates"> | number | null
    language?: StringNullableWithAggregatesFilter<"BountiesTemplates"> | string | null
    rewardAmount?: FloatNullableWithAggregatesFilter<"BountiesTemplates"> | number | null
    rewards?: JsonNullableWithAggregatesFilter<"BountiesTemplates">
    maxBonusSpots?: IntWithAggregatesFilter<"BountiesTemplates"> | number
    usdValue?: FloatNullableWithAggregatesFilter<"BountiesTemplates"> | number | null
    sponsorId?: StringWithAggregatesFilter<"BountiesTemplates"> | string
    pocId?: StringWithAggregatesFilter<"BountiesTemplates"> | string
    pocSocials?: StringNullableWithAggregatesFilter<"BountiesTemplates"> | string | null
    source?: EnumSourceWithAggregatesFilter<"BountiesTemplates"> | $Enums.Source
    isPublished?: BoolWithAggregatesFilter<"BountiesTemplates"> | boolean
  }

  export type CommentWhereInput = {
    AND?: CommentWhereInput | CommentWhereInput[]
    OR?: CommentWhereInput[]
    NOT?: CommentWhereInput | CommentWhereInput[]
    id?: StringFilter<"Comment"> | string
    message?: StringFilter<"Comment"> | string
    authorId?: StringFilter<"Comment"> | string
    refType?: EnumCommentRefTypeFilter<"Comment"> | $Enums.CommentRefType
    refId?: StringFilter<"Comment"> | string
    isActive?: BoolFilter<"Comment"> | boolean
    isArchived?: BoolFilter<"Comment"> | boolean
    isPinned?: BoolFilter<"Comment"> | boolean
    createdAt?: DateTimeFilter<"Comment"> | Date | string
    updatedAt?: DateTimeFilter<"Comment"> | Date | string
    replyToId?: StringNullableFilter<"Comment"> | string | null
    submissionId?: StringNullableFilter<"Comment"> | string | null
    type?: EnumCommentTypeFilter<"Comment"> | $Enums.CommentType
    author?: XOR<UserScalarRelationFilter, UserWhereInput>
    repliedTo?: XOR<CommentNullableScalarRelationFilter, CommentWhereInput> | null
    replies?: CommentListRelationFilter
    listing?: XOR<BountiesNullableScalarRelationFilter, BountiesWhereInput> | null
    submission?: XOR<SubmissionNullableScalarRelationFilter, SubmissionWhereInput> | null
    pow?: XOR<PoWNullableScalarRelationFilter, PoWWhereInput> | null
    GrantApplication?: XOR<GrantApplicationNullableScalarRelationFilter, GrantApplicationWhereInput> | null
  }

  export type CommentOrderByWithRelationInput = {
    id?: SortOrder
    message?: SortOrder
    authorId?: SortOrder
    refType?: SortOrder
    refId?: SortOrder
    isActive?: SortOrder
    isArchived?: SortOrder
    isPinned?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    replyToId?: SortOrderInput | SortOrder
    submissionId?: SortOrderInput | SortOrder
    type?: SortOrder
    author?: UserOrderByWithRelationInput
    repliedTo?: CommentOrderByWithRelationInput
    replies?: CommentOrderByRelationAggregateInput
    listing?: BountiesOrderByWithRelationInput
    submission?: SubmissionOrderByWithRelationInput
    pow?: PoWOrderByWithRelationInput
    GrantApplication?: GrantApplicationOrderByWithRelationInput
    _relevance?: CommentOrderByRelevanceInput
  }

  export type CommentWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: CommentWhereInput | CommentWhereInput[]
    OR?: CommentWhereInput[]
    NOT?: CommentWhereInput | CommentWhereInput[]
    message?: StringFilter<"Comment"> | string
    authorId?: StringFilter<"Comment"> | string
    refType?: EnumCommentRefTypeFilter<"Comment"> | $Enums.CommentRefType
    refId?: StringFilter<"Comment"> | string
    isActive?: BoolFilter<"Comment"> | boolean
    isArchived?: BoolFilter<"Comment"> | boolean
    isPinned?: BoolFilter<"Comment"> | boolean
    createdAt?: DateTimeFilter<"Comment"> | Date | string
    updatedAt?: DateTimeFilter<"Comment"> | Date | string
    replyToId?: StringNullableFilter<"Comment"> | string | null
    submissionId?: StringNullableFilter<"Comment"> | string | null
    type?: EnumCommentTypeFilter<"Comment"> | $Enums.CommentType
    author?: XOR<UserScalarRelationFilter, UserWhereInput>
    repliedTo?: XOR<CommentNullableScalarRelationFilter, CommentWhereInput> | null
    replies?: CommentListRelationFilter
    listing?: XOR<BountiesNullableScalarRelationFilter, BountiesWhereInput> | null
    submission?: XOR<SubmissionNullableScalarRelationFilter, SubmissionWhereInput> | null
    pow?: XOR<PoWNullableScalarRelationFilter, PoWWhereInput> | null
    GrantApplication?: XOR<GrantApplicationNullableScalarRelationFilter, GrantApplicationWhereInput> | null
  }, "id">

  export type CommentOrderByWithAggregationInput = {
    id?: SortOrder
    message?: SortOrder
    authorId?: SortOrder
    refType?: SortOrder
    refId?: SortOrder
    isActive?: SortOrder
    isArchived?: SortOrder
    isPinned?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    replyToId?: SortOrderInput | SortOrder
    submissionId?: SortOrderInput | SortOrder
    type?: SortOrder
    _count?: CommentCountOrderByAggregateInput
    _max?: CommentMaxOrderByAggregateInput
    _min?: CommentMinOrderByAggregateInput
  }

  export type CommentScalarWhereWithAggregatesInput = {
    AND?: CommentScalarWhereWithAggregatesInput | CommentScalarWhereWithAggregatesInput[]
    OR?: CommentScalarWhereWithAggregatesInput[]
    NOT?: CommentScalarWhereWithAggregatesInput | CommentScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Comment"> | string
    message?: StringWithAggregatesFilter<"Comment"> | string
    authorId?: StringWithAggregatesFilter<"Comment"> | string
    refType?: EnumCommentRefTypeWithAggregatesFilter<"Comment"> | $Enums.CommentRefType
    refId?: StringWithAggregatesFilter<"Comment"> | string
    isActive?: BoolWithAggregatesFilter<"Comment"> | boolean
    isArchived?: BoolWithAggregatesFilter<"Comment"> | boolean
    isPinned?: BoolWithAggregatesFilter<"Comment"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"Comment"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Comment"> | Date | string
    replyToId?: StringNullableWithAggregatesFilter<"Comment"> | string | null
    submissionId?: StringNullableWithAggregatesFilter<"Comment"> | string | null
    type?: EnumCommentTypeWithAggregatesFilter<"Comment"> | $Enums.CommentType
  }

  export type GrantsWhereInput = {
    AND?: GrantsWhereInput | GrantsWhereInput[]
    OR?: GrantsWhereInput[]
    NOT?: GrantsWhereInput | GrantsWhereInput[]
    id?: StringFilter<"Grants"> | string
    title?: StringFilter<"Grants"> | string
    slug?: StringFilter<"Grants"> | string
    description?: StringNullableFilter<"Grants"> | string | null
    shortDescription?: StringNullableFilter<"Grants"> | string | null
    token?: StringNullableFilter<"Grants"> | string | null
    minReward?: FloatNullableFilter<"Grants"> | number | null
    maxReward?: FloatNullableFilter<"Grants"> | number | null
    totalPaid?: FloatFilter<"Grants"> | number
    totalApproved?: FloatFilter<"Grants"> | number
    historicalApplications?: IntFilter<"Grants"> | number
    historicalPaid?: FloatFilter<"Grants"> | number
    link?: StringNullableFilter<"Grants"> | string | null
    sponsorId?: StringFilter<"Grants"> | string
    pocId?: StringFilter<"Grants"> | string
    isPublished?: BoolFilter<"Grants"> | boolean
    isFeatured?: BoolFilter<"Grants"> | boolean
    isActive?: BoolFilter<"Grants"> | boolean
    isArchived?: BoolFilter<"Grants"> | boolean
    createdAt?: DateTimeFilter<"Grants"> | Date | string
    updatedAt?: DateTimeFilter<"Grants"> | Date | string
    skills?: JsonNullableFilter<"Grants">
    logo?: StringNullableFilter<"Grants"> | string | null
    region?: StringFilter<"Grants"> | string
    questions?: JsonNullableFilter<"Grants">
    pocSocials?: StringNullableFilter<"Grants"> | string | null
    status?: EnumGrantStatusFilter<"Grants"> | $Enums.GrantStatus
    airtableId?: StringNullableFilter<"Grants"> | string | null
    avgResponseTime?: StringNullableFilter<"Grants"> | string | null
    isNative?: BoolFilter<"Grants"> | boolean
    isPrivate?: BoolFilter<"Grants"> | boolean
    references?: JsonNullableFilter<"Grants">
    ai?: JsonNullableFilter<"Grants">
    approverRecordId?: StringNullableFilter<"Grants"> | string | null
    emailSender?: StringNullableFilter<"Grants"> | string | null
    replyToEmail?: StringNullableFilter<"Grants"> | string | null
    emailSalutation?: StringNullableFilter<"Grants"> | string | null
    communityLink?: StringNullableFilter<"Grants"> | string | null
    sponsor?: XOR<SponsorsScalarRelationFilter, SponsorsWhereInput>
    poc?: XOR<UserScalarRelationFilter, UserWhereInput>
    GrantApplication?: GrantApplicationListRelationFilter
    GrantTranche?: GrantTrancheListRelationFilter
  }

  export type GrantsOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    slug?: SortOrder
    description?: SortOrderInput | SortOrder
    shortDescription?: SortOrderInput | SortOrder
    token?: SortOrderInput | SortOrder
    minReward?: SortOrderInput | SortOrder
    maxReward?: SortOrderInput | SortOrder
    totalPaid?: SortOrder
    totalApproved?: SortOrder
    historicalApplications?: SortOrder
    historicalPaid?: SortOrder
    link?: SortOrderInput | SortOrder
    sponsorId?: SortOrder
    pocId?: SortOrder
    isPublished?: SortOrder
    isFeatured?: SortOrder
    isActive?: SortOrder
    isArchived?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    skills?: SortOrderInput | SortOrder
    logo?: SortOrderInput | SortOrder
    region?: SortOrder
    questions?: SortOrderInput | SortOrder
    pocSocials?: SortOrderInput | SortOrder
    status?: SortOrder
    airtableId?: SortOrderInput | SortOrder
    avgResponseTime?: SortOrderInput | SortOrder
    isNative?: SortOrder
    isPrivate?: SortOrder
    references?: SortOrderInput | SortOrder
    ai?: SortOrderInput | SortOrder
    approverRecordId?: SortOrderInput | SortOrder
    emailSender?: SortOrderInput | SortOrder
    replyToEmail?: SortOrderInput | SortOrder
    emailSalutation?: SortOrderInput | SortOrder
    communityLink?: SortOrderInput | SortOrder
    sponsor?: SponsorsOrderByWithRelationInput
    poc?: UserOrderByWithRelationInput
    GrantApplication?: GrantApplicationOrderByRelationAggregateInput
    GrantTranche?: GrantTrancheOrderByRelationAggregateInput
    _relevance?: GrantsOrderByRelevanceInput
  }

  export type GrantsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    slug?: string
    AND?: GrantsWhereInput | GrantsWhereInput[]
    OR?: GrantsWhereInput[]
    NOT?: GrantsWhereInput | GrantsWhereInput[]
    title?: StringFilter<"Grants"> | string
    description?: StringNullableFilter<"Grants"> | string | null
    shortDescription?: StringNullableFilter<"Grants"> | string | null
    token?: StringNullableFilter<"Grants"> | string | null
    minReward?: FloatNullableFilter<"Grants"> | number | null
    maxReward?: FloatNullableFilter<"Grants"> | number | null
    totalPaid?: FloatFilter<"Grants"> | number
    totalApproved?: FloatFilter<"Grants"> | number
    historicalApplications?: IntFilter<"Grants"> | number
    historicalPaid?: FloatFilter<"Grants"> | number
    link?: StringNullableFilter<"Grants"> | string | null
    sponsorId?: StringFilter<"Grants"> | string
    pocId?: StringFilter<"Grants"> | string
    isPublished?: BoolFilter<"Grants"> | boolean
    isFeatured?: BoolFilter<"Grants"> | boolean
    isActive?: BoolFilter<"Grants"> | boolean
    isArchived?: BoolFilter<"Grants"> | boolean
    createdAt?: DateTimeFilter<"Grants"> | Date | string
    updatedAt?: DateTimeFilter<"Grants"> | Date | string
    skills?: JsonNullableFilter<"Grants">
    logo?: StringNullableFilter<"Grants"> | string | null
    region?: StringFilter<"Grants"> | string
    questions?: JsonNullableFilter<"Grants">
    pocSocials?: StringNullableFilter<"Grants"> | string | null
    status?: EnumGrantStatusFilter<"Grants"> | $Enums.GrantStatus
    airtableId?: StringNullableFilter<"Grants"> | string | null
    avgResponseTime?: StringNullableFilter<"Grants"> | string | null
    isNative?: BoolFilter<"Grants"> | boolean
    isPrivate?: BoolFilter<"Grants"> | boolean
    references?: JsonNullableFilter<"Grants">
    ai?: JsonNullableFilter<"Grants">
    approverRecordId?: StringNullableFilter<"Grants"> | string | null
    emailSender?: StringNullableFilter<"Grants"> | string | null
    replyToEmail?: StringNullableFilter<"Grants"> | string | null
    emailSalutation?: StringNullableFilter<"Grants"> | string | null
    communityLink?: StringNullableFilter<"Grants"> | string | null
    sponsor?: XOR<SponsorsScalarRelationFilter, SponsorsWhereInput>
    poc?: XOR<UserScalarRelationFilter, UserWhereInput>
    GrantApplication?: GrantApplicationListRelationFilter
    GrantTranche?: GrantTrancheListRelationFilter
  }, "id" | "slug">

  export type GrantsOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    slug?: SortOrder
    description?: SortOrderInput | SortOrder
    shortDescription?: SortOrderInput | SortOrder
    token?: SortOrderInput | SortOrder
    minReward?: SortOrderInput | SortOrder
    maxReward?: SortOrderInput | SortOrder
    totalPaid?: SortOrder
    totalApproved?: SortOrder
    historicalApplications?: SortOrder
    historicalPaid?: SortOrder
    link?: SortOrderInput | SortOrder
    sponsorId?: SortOrder
    pocId?: SortOrder
    isPublished?: SortOrder
    isFeatured?: SortOrder
    isActive?: SortOrder
    isArchived?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    skills?: SortOrderInput | SortOrder
    logo?: SortOrderInput | SortOrder
    region?: SortOrder
    questions?: SortOrderInput | SortOrder
    pocSocials?: SortOrderInput | SortOrder
    status?: SortOrder
    airtableId?: SortOrderInput | SortOrder
    avgResponseTime?: SortOrderInput | SortOrder
    isNative?: SortOrder
    isPrivate?: SortOrder
    references?: SortOrderInput | SortOrder
    ai?: SortOrderInput | SortOrder
    approverRecordId?: SortOrderInput | SortOrder
    emailSender?: SortOrderInput | SortOrder
    replyToEmail?: SortOrderInput | SortOrder
    emailSalutation?: SortOrderInput | SortOrder
    communityLink?: SortOrderInput | SortOrder
    _count?: GrantsCountOrderByAggregateInput
    _avg?: GrantsAvgOrderByAggregateInput
    _max?: GrantsMaxOrderByAggregateInput
    _min?: GrantsMinOrderByAggregateInput
    _sum?: GrantsSumOrderByAggregateInput
  }

  export type GrantsScalarWhereWithAggregatesInput = {
    AND?: GrantsScalarWhereWithAggregatesInput | GrantsScalarWhereWithAggregatesInput[]
    OR?: GrantsScalarWhereWithAggregatesInput[]
    NOT?: GrantsScalarWhereWithAggregatesInput | GrantsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Grants"> | string
    title?: StringWithAggregatesFilter<"Grants"> | string
    slug?: StringWithAggregatesFilter<"Grants"> | string
    description?: StringNullableWithAggregatesFilter<"Grants"> | string | null
    shortDescription?: StringNullableWithAggregatesFilter<"Grants"> | string | null
    token?: StringNullableWithAggregatesFilter<"Grants"> | string | null
    minReward?: FloatNullableWithAggregatesFilter<"Grants"> | number | null
    maxReward?: FloatNullableWithAggregatesFilter<"Grants"> | number | null
    totalPaid?: FloatWithAggregatesFilter<"Grants"> | number
    totalApproved?: FloatWithAggregatesFilter<"Grants"> | number
    historicalApplications?: IntWithAggregatesFilter<"Grants"> | number
    historicalPaid?: FloatWithAggregatesFilter<"Grants"> | number
    link?: StringNullableWithAggregatesFilter<"Grants"> | string | null
    sponsorId?: StringWithAggregatesFilter<"Grants"> | string
    pocId?: StringWithAggregatesFilter<"Grants"> | string
    isPublished?: BoolWithAggregatesFilter<"Grants"> | boolean
    isFeatured?: BoolWithAggregatesFilter<"Grants"> | boolean
    isActive?: BoolWithAggregatesFilter<"Grants"> | boolean
    isArchived?: BoolWithAggregatesFilter<"Grants"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"Grants"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Grants"> | Date | string
    skills?: JsonNullableWithAggregatesFilter<"Grants">
    logo?: StringNullableWithAggregatesFilter<"Grants"> | string | null
    region?: StringWithAggregatesFilter<"Grants"> | string
    questions?: JsonNullableWithAggregatesFilter<"Grants">
    pocSocials?: StringNullableWithAggregatesFilter<"Grants"> | string | null
    status?: EnumGrantStatusWithAggregatesFilter<"Grants"> | $Enums.GrantStatus
    airtableId?: StringNullableWithAggregatesFilter<"Grants"> | string | null
    avgResponseTime?: StringNullableWithAggregatesFilter<"Grants"> | string | null
    isNative?: BoolWithAggregatesFilter<"Grants"> | boolean
    isPrivate?: BoolWithAggregatesFilter<"Grants"> | boolean
    references?: JsonNullableWithAggregatesFilter<"Grants">
    ai?: JsonNullableWithAggregatesFilter<"Grants">
    approverRecordId?: StringNullableWithAggregatesFilter<"Grants"> | string | null
    emailSender?: StringNullableWithAggregatesFilter<"Grants"> | string | null
    replyToEmail?: StringNullableWithAggregatesFilter<"Grants"> | string | null
    emailSalutation?: StringNullableWithAggregatesFilter<"Grants"> | string | null
    communityLink?: StringNullableWithAggregatesFilter<"Grants"> | string | null
  }

  export type GrantApplicationWhereInput = {
    AND?: GrantApplicationWhereInput | GrantApplicationWhereInput[]
    OR?: GrantApplicationWhereInput[]
    NOT?: GrantApplicationWhereInput | GrantApplicationWhereInput[]
    id?: StringFilter<"GrantApplication"> | string
    userId?: StringFilter<"GrantApplication"> | string
    grantId?: StringFilter<"GrantApplication"> | string
    applicationStatus?: EnumGrantApplicationStatusFilter<"GrantApplication"> | $Enums.GrantApplicationStatus
    projectTitle?: StringFilter<"GrantApplication"> | string
    projectOneLiner?: StringFilter<"GrantApplication"> | string
    projectDetails?: StringFilter<"GrantApplication"> | string
    projectTimeline?: StringFilter<"GrantApplication"> | string
    proofOfWork?: StringFilter<"GrantApplication"> | string
    walletAddress?: StringFilter<"GrantApplication"> | string
    twitter?: StringNullableFilter<"GrantApplication"> | string | null
    github?: StringNullableFilter<"GrantApplication"> | string | null
    milestones?: StringNullableFilter<"GrantApplication"> | string | null
    kpi?: StringNullableFilter<"GrantApplication"> | string | null
    answers?: JsonNullableFilter<"GrantApplication">
    createdAt?: DateTimeFilter<"GrantApplication"> | Date | string
    updatedAt?: DateTimeFilter<"GrantApplication"> | Date | string
    label?: EnumSubmissionLabelsFilter<"GrantApplication"> | $Enums.SubmissionLabels
    ask?: FloatFilter<"GrantApplication"> | number
    approvedAmount?: FloatFilter<"GrantApplication"> | number
    approvedAmountInUSD?: FloatFilter<"GrantApplication"> | number
    decidedAt?: DateTimeNullableFilter<"GrantApplication"> | Date | string | null
    totalPaid?: FloatFilter<"GrantApplication"> | number
    isShipped?: BoolFilter<"GrantApplication"> | boolean
    paymentDetails?: JsonNullableFilter<"GrantApplication">
    totalTranches?: IntFilter<"GrantApplication"> | number
    like?: JsonNullableFilter<"GrantApplication">
    likeCount?: IntFilter<"GrantApplication"> | number
    decidedBy?: StringNullableFilter<"GrantApplication"> | string | null
    notes?: StringNullableFilter<"GrantApplication"> | string | null
    ai?: JsonNullableFilter<"GrantApplication">
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    grant?: XOR<GrantsScalarRelationFilter, GrantsWhereInput>
    Comments?: CommentListRelationFilter
    GrantTranche?: GrantTrancheListRelationFilter
    CreditLedger?: CreditLedgerListRelationFilter
  }

  export type GrantApplicationOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    grantId?: SortOrder
    applicationStatus?: SortOrder
    projectTitle?: SortOrder
    projectOneLiner?: SortOrder
    projectDetails?: SortOrder
    projectTimeline?: SortOrder
    proofOfWork?: SortOrder
    walletAddress?: SortOrder
    twitter?: SortOrderInput | SortOrder
    github?: SortOrderInput | SortOrder
    milestones?: SortOrderInput | SortOrder
    kpi?: SortOrderInput | SortOrder
    answers?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    label?: SortOrder
    ask?: SortOrder
    approvedAmount?: SortOrder
    approvedAmountInUSD?: SortOrder
    decidedAt?: SortOrderInput | SortOrder
    totalPaid?: SortOrder
    isShipped?: SortOrder
    paymentDetails?: SortOrderInput | SortOrder
    totalTranches?: SortOrder
    like?: SortOrderInput | SortOrder
    likeCount?: SortOrder
    decidedBy?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    ai?: SortOrderInput | SortOrder
    user?: UserOrderByWithRelationInput
    grant?: GrantsOrderByWithRelationInput
    Comments?: CommentOrderByRelationAggregateInput
    GrantTranche?: GrantTrancheOrderByRelationAggregateInput
    CreditLedger?: CreditLedgerOrderByRelationAggregateInput
    _relevance?: GrantApplicationOrderByRelevanceInput
  }

  export type GrantApplicationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: GrantApplicationWhereInput | GrantApplicationWhereInput[]
    OR?: GrantApplicationWhereInput[]
    NOT?: GrantApplicationWhereInput | GrantApplicationWhereInput[]
    userId?: StringFilter<"GrantApplication"> | string
    grantId?: StringFilter<"GrantApplication"> | string
    applicationStatus?: EnumGrantApplicationStatusFilter<"GrantApplication"> | $Enums.GrantApplicationStatus
    projectTitle?: StringFilter<"GrantApplication"> | string
    projectOneLiner?: StringFilter<"GrantApplication"> | string
    projectDetails?: StringFilter<"GrantApplication"> | string
    projectTimeline?: StringFilter<"GrantApplication"> | string
    proofOfWork?: StringFilter<"GrantApplication"> | string
    walletAddress?: StringFilter<"GrantApplication"> | string
    twitter?: StringNullableFilter<"GrantApplication"> | string | null
    github?: StringNullableFilter<"GrantApplication"> | string | null
    milestones?: StringNullableFilter<"GrantApplication"> | string | null
    kpi?: StringNullableFilter<"GrantApplication"> | string | null
    answers?: JsonNullableFilter<"GrantApplication">
    createdAt?: DateTimeFilter<"GrantApplication"> | Date | string
    updatedAt?: DateTimeFilter<"GrantApplication"> | Date | string
    label?: EnumSubmissionLabelsFilter<"GrantApplication"> | $Enums.SubmissionLabels
    ask?: FloatFilter<"GrantApplication"> | number
    approvedAmount?: FloatFilter<"GrantApplication"> | number
    approvedAmountInUSD?: FloatFilter<"GrantApplication"> | number
    decidedAt?: DateTimeNullableFilter<"GrantApplication"> | Date | string | null
    totalPaid?: FloatFilter<"GrantApplication"> | number
    isShipped?: BoolFilter<"GrantApplication"> | boolean
    paymentDetails?: JsonNullableFilter<"GrantApplication">
    totalTranches?: IntFilter<"GrantApplication"> | number
    like?: JsonNullableFilter<"GrantApplication">
    likeCount?: IntFilter<"GrantApplication"> | number
    decidedBy?: StringNullableFilter<"GrantApplication"> | string | null
    notes?: StringNullableFilter<"GrantApplication"> | string | null
    ai?: JsonNullableFilter<"GrantApplication">
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    grant?: XOR<GrantsScalarRelationFilter, GrantsWhereInput>
    Comments?: CommentListRelationFilter
    GrantTranche?: GrantTrancheListRelationFilter
    CreditLedger?: CreditLedgerListRelationFilter
  }, "id">

  export type GrantApplicationOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    grantId?: SortOrder
    applicationStatus?: SortOrder
    projectTitle?: SortOrder
    projectOneLiner?: SortOrder
    projectDetails?: SortOrder
    projectTimeline?: SortOrder
    proofOfWork?: SortOrder
    walletAddress?: SortOrder
    twitter?: SortOrderInput | SortOrder
    github?: SortOrderInput | SortOrder
    milestones?: SortOrderInput | SortOrder
    kpi?: SortOrderInput | SortOrder
    answers?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    label?: SortOrder
    ask?: SortOrder
    approvedAmount?: SortOrder
    approvedAmountInUSD?: SortOrder
    decidedAt?: SortOrderInput | SortOrder
    totalPaid?: SortOrder
    isShipped?: SortOrder
    paymentDetails?: SortOrderInput | SortOrder
    totalTranches?: SortOrder
    like?: SortOrderInput | SortOrder
    likeCount?: SortOrder
    decidedBy?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    ai?: SortOrderInput | SortOrder
    _count?: GrantApplicationCountOrderByAggregateInput
    _avg?: GrantApplicationAvgOrderByAggregateInput
    _max?: GrantApplicationMaxOrderByAggregateInput
    _min?: GrantApplicationMinOrderByAggregateInput
    _sum?: GrantApplicationSumOrderByAggregateInput
  }

  export type GrantApplicationScalarWhereWithAggregatesInput = {
    AND?: GrantApplicationScalarWhereWithAggregatesInput | GrantApplicationScalarWhereWithAggregatesInput[]
    OR?: GrantApplicationScalarWhereWithAggregatesInput[]
    NOT?: GrantApplicationScalarWhereWithAggregatesInput | GrantApplicationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"GrantApplication"> | string
    userId?: StringWithAggregatesFilter<"GrantApplication"> | string
    grantId?: StringWithAggregatesFilter<"GrantApplication"> | string
    applicationStatus?: EnumGrantApplicationStatusWithAggregatesFilter<"GrantApplication"> | $Enums.GrantApplicationStatus
    projectTitle?: StringWithAggregatesFilter<"GrantApplication"> | string
    projectOneLiner?: StringWithAggregatesFilter<"GrantApplication"> | string
    projectDetails?: StringWithAggregatesFilter<"GrantApplication"> | string
    projectTimeline?: StringWithAggregatesFilter<"GrantApplication"> | string
    proofOfWork?: StringWithAggregatesFilter<"GrantApplication"> | string
    walletAddress?: StringWithAggregatesFilter<"GrantApplication"> | string
    twitter?: StringNullableWithAggregatesFilter<"GrantApplication"> | string | null
    github?: StringNullableWithAggregatesFilter<"GrantApplication"> | string | null
    milestones?: StringNullableWithAggregatesFilter<"GrantApplication"> | string | null
    kpi?: StringNullableWithAggregatesFilter<"GrantApplication"> | string | null
    answers?: JsonNullableWithAggregatesFilter<"GrantApplication">
    createdAt?: DateTimeWithAggregatesFilter<"GrantApplication"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"GrantApplication"> | Date | string
    label?: EnumSubmissionLabelsWithAggregatesFilter<"GrantApplication"> | $Enums.SubmissionLabels
    ask?: FloatWithAggregatesFilter<"GrantApplication"> | number
    approvedAmount?: FloatWithAggregatesFilter<"GrantApplication"> | number
    approvedAmountInUSD?: FloatWithAggregatesFilter<"GrantApplication"> | number
    decidedAt?: DateTimeNullableWithAggregatesFilter<"GrantApplication"> | Date | string | null
    totalPaid?: FloatWithAggregatesFilter<"GrantApplication"> | number
    isShipped?: BoolWithAggregatesFilter<"GrantApplication"> | boolean
    paymentDetails?: JsonNullableWithAggregatesFilter<"GrantApplication">
    totalTranches?: IntWithAggregatesFilter<"GrantApplication"> | number
    like?: JsonNullableWithAggregatesFilter<"GrantApplication">
    likeCount?: IntWithAggregatesFilter<"GrantApplication"> | number
    decidedBy?: StringNullableWithAggregatesFilter<"GrantApplication"> | string | null
    notes?: StringNullableWithAggregatesFilter<"GrantApplication"> | string | null
    ai?: JsonNullableWithAggregatesFilter<"GrantApplication">
  }

  export type GrantTrancheWhereInput = {
    AND?: GrantTrancheWhereInput | GrantTrancheWhereInput[]
    OR?: GrantTrancheWhereInput[]
    NOT?: GrantTrancheWhereInput | GrantTrancheWhereInput[]
    id?: StringFilter<"GrantTranche"> | string
    applicationId?: StringFilter<"GrantTranche"> | string
    grantId?: StringFilter<"GrantTranche"> | string
    ask?: FloatFilter<"GrantTranche"> | number
    update?: StringNullableFilter<"GrantTranche"> | string | null
    helpWanted?: StringNullableFilter<"GrantTranche"> | string | null
    status?: EnumGrantTrancheStatusFilter<"GrantTranche"> | $Enums.GrantTrancheStatus
    createdAt?: DateTimeFilter<"GrantTranche"> | Date | string
    updatedAt?: DateTimeFilter<"GrantTranche"> | Date | string
    approvedAmount?: FloatNullableFilter<"GrantTranche"> | number | null
    decidedAt?: DateTimeNullableFilter<"GrantTranche"> | Date | string | null
    trancheNumber?: IntFilter<"GrantTranche"> | number
    GrantApplication?: XOR<GrantApplicationScalarRelationFilter, GrantApplicationWhereInput>
    Grant?: XOR<GrantsScalarRelationFilter, GrantsWhereInput>
  }

  export type GrantTrancheOrderByWithRelationInput = {
    id?: SortOrder
    applicationId?: SortOrder
    grantId?: SortOrder
    ask?: SortOrder
    update?: SortOrderInput | SortOrder
    helpWanted?: SortOrderInput | SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    approvedAmount?: SortOrderInput | SortOrder
    decidedAt?: SortOrderInput | SortOrder
    trancheNumber?: SortOrder
    GrantApplication?: GrantApplicationOrderByWithRelationInput
    Grant?: GrantsOrderByWithRelationInput
    _relevance?: GrantTrancheOrderByRelevanceInput
  }

  export type GrantTrancheWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: GrantTrancheWhereInput | GrantTrancheWhereInput[]
    OR?: GrantTrancheWhereInput[]
    NOT?: GrantTrancheWhereInput | GrantTrancheWhereInput[]
    applicationId?: StringFilter<"GrantTranche"> | string
    grantId?: StringFilter<"GrantTranche"> | string
    ask?: FloatFilter<"GrantTranche"> | number
    update?: StringNullableFilter<"GrantTranche"> | string | null
    helpWanted?: StringNullableFilter<"GrantTranche"> | string | null
    status?: EnumGrantTrancheStatusFilter<"GrantTranche"> | $Enums.GrantTrancheStatus
    createdAt?: DateTimeFilter<"GrantTranche"> | Date | string
    updatedAt?: DateTimeFilter<"GrantTranche"> | Date | string
    approvedAmount?: FloatNullableFilter<"GrantTranche"> | number | null
    decidedAt?: DateTimeNullableFilter<"GrantTranche"> | Date | string | null
    trancheNumber?: IntFilter<"GrantTranche"> | number
    GrantApplication?: XOR<GrantApplicationScalarRelationFilter, GrantApplicationWhereInput>
    Grant?: XOR<GrantsScalarRelationFilter, GrantsWhereInput>
  }, "id">

  export type GrantTrancheOrderByWithAggregationInput = {
    id?: SortOrder
    applicationId?: SortOrder
    grantId?: SortOrder
    ask?: SortOrder
    update?: SortOrderInput | SortOrder
    helpWanted?: SortOrderInput | SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    approvedAmount?: SortOrderInput | SortOrder
    decidedAt?: SortOrderInput | SortOrder
    trancheNumber?: SortOrder
    _count?: GrantTrancheCountOrderByAggregateInput
    _avg?: GrantTrancheAvgOrderByAggregateInput
    _max?: GrantTrancheMaxOrderByAggregateInput
    _min?: GrantTrancheMinOrderByAggregateInput
    _sum?: GrantTrancheSumOrderByAggregateInput
  }

  export type GrantTrancheScalarWhereWithAggregatesInput = {
    AND?: GrantTrancheScalarWhereWithAggregatesInput | GrantTrancheScalarWhereWithAggregatesInput[]
    OR?: GrantTrancheScalarWhereWithAggregatesInput[]
    NOT?: GrantTrancheScalarWhereWithAggregatesInput | GrantTrancheScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"GrantTranche"> | string
    applicationId?: StringWithAggregatesFilter<"GrantTranche"> | string
    grantId?: StringWithAggregatesFilter<"GrantTranche"> | string
    ask?: FloatWithAggregatesFilter<"GrantTranche"> | number
    update?: StringNullableWithAggregatesFilter<"GrantTranche"> | string | null
    helpWanted?: StringNullableWithAggregatesFilter<"GrantTranche"> | string | null
    status?: EnumGrantTrancheStatusWithAggregatesFilter<"GrantTranche"> | $Enums.GrantTrancheStatus
    createdAt?: DateTimeWithAggregatesFilter<"GrantTranche"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"GrantTranche"> | Date | string
    approvedAmount?: FloatNullableWithAggregatesFilter<"GrantTranche"> | number | null
    decidedAt?: DateTimeNullableWithAggregatesFilter<"GrantTranche"> | Date | string | null
    trancheNumber?: IntWithAggregatesFilter<"GrantTranche"> | number
  }

  export type SubmissionWhereInput = {
    AND?: SubmissionWhereInput | SubmissionWhereInput[]
    OR?: SubmissionWhereInput[]
    NOT?: SubmissionWhereInput | SubmissionWhereInput[]
    id?: StringFilter<"Submission"> | string
    link?: StringNullableFilter<"Submission"> | string | null
    tweet?: StringNullableFilter<"Submission"> | string | null
    status?: EnumSubmissionStatusFilter<"Submission"> | $Enums.SubmissionStatus
    eligibilityAnswers?: JsonNullableFilter<"Submission">
    userId?: StringFilter<"Submission"> | string
    listingId?: StringFilter<"Submission"> | string
    isWinner?: BoolFilter<"Submission"> | boolean
    winnerPosition?: IntNullableFilter<"Submission"> | number | null
    isActive?: BoolFilter<"Submission"> | boolean
    isArchived?: BoolFilter<"Submission"> | boolean
    createdAt?: DateTimeFilter<"Submission"> | Date | string
    updatedAt?: DateTimeFilter<"Submission"> | Date | string
    like?: JsonNullableFilter<"Submission">
    likeCount?: IntFilter<"Submission"> | number
    isPaid?: BoolFilter<"Submission"> | boolean
    paymentDetails?: JsonNullableFilter<"Submission">
    otherInfo?: StringNullableFilter<"Submission"> | string | null
    ask?: IntNullableFilter<"Submission"> | number | null
    label?: EnumSubmissionLabelsFilter<"Submission"> | $Enums.SubmissionLabels
    rewardInUSD?: FloatFilter<"Submission"> | number
    ogImage?: StringNullableFilter<"Submission"> | string | null
    notes?: StringNullableFilter<"Submission"> | string | null
    listing?: XOR<BountiesScalarRelationFilter, BountiesWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    Comments?: CommentListRelationFilter
    CreditLedger?: CreditLedgerListRelationFilter
  }

  export type SubmissionOrderByWithRelationInput = {
    id?: SortOrder
    link?: SortOrderInput | SortOrder
    tweet?: SortOrderInput | SortOrder
    status?: SortOrder
    eligibilityAnswers?: SortOrderInput | SortOrder
    userId?: SortOrder
    listingId?: SortOrder
    isWinner?: SortOrder
    winnerPosition?: SortOrderInput | SortOrder
    isActive?: SortOrder
    isArchived?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    like?: SortOrderInput | SortOrder
    likeCount?: SortOrder
    isPaid?: SortOrder
    paymentDetails?: SortOrderInput | SortOrder
    otherInfo?: SortOrderInput | SortOrder
    ask?: SortOrderInput | SortOrder
    label?: SortOrder
    rewardInUSD?: SortOrder
    ogImage?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    listing?: BountiesOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
    Comments?: CommentOrderByRelationAggregateInput
    CreditLedger?: CreditLedgerOrderByRelationAggregateInput
    _relevance?: SubmissionOrderByRelevanceInput
  }

  export type SubmissionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: SubmissionWhereInput | SubmissionWhereInput[]
    OR?: SubmissionWhereInput[]
    NOT?: SubmissionWhereInput | SubmissionWhereInput[]
    link?: StringNullableFilter<"Submission"> | string | null
    tweet?: StringNullableFilter<"Submission"> | string | null
    status?: EnumSubmissionStatusFilter<"Submission"> | $Enums.SubmissionStatus
    eligibilityAnswers?: JsonNullableFilter<"Submission">
    userId?: StringFilter<"Submission"> | string
    listingId?: StringFilter<"Submission"> | string
    isWinner?: BoolFilter<"Submission"> | boolean
    winnerPosition?: IntNullableFilter<"Submission"> | number | null
    isActive?: BoolFilter<"Submission"> | boolean
    isArchived?: BoolFilter<"Submission"> | boolean
    createdAt?: DateTimeFilter<"Submission"> | Date | string
    updatedAt?: DateTimeFilter<"Submission"> | Date | string
    like?: JsonNullableFilter<"Submission">
    likeCount?: IntFilter<"Submission"> | number
    isPaid?: BoolFilter<"Submission"> | boolean
    paymentDetails?: JsonNullableFilter<"Submission">
    otherInfo?: StringNullableFilter<"Submission"> | string | null
    ask?: IntNullableFilter<"Submission"> | number | null
    label?: EnumSubmissionLabelsFilter<"Submission"> | $Enums.SubmissionLabels
    rewardInUSD?: FloatFilter<"Submission"> | number
    ogImage?: StringNullableFilter<"Submission"> | string | null
    notes?: StringNullableFilter<"Submission"> | string | null
    listing?: XOR<BountiesScalarRelationFilter, BountiesWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    Comments?: CommentListRelationFilter
    CreditLedger?: CreditLedgerListRelationFilter
  }, "id">

  export type SubmissionOrderByWithAggregationInput = {
    id?: SortOrder
    link?: SortOrderInput | SortOrder
    tweet?: SortOrderInput | SortOrder
    status?: SortOrder
    eligibilityAnswers?: SortOrderInput | SortOrder
    userId?: SortOrder
    listingId?: SortOrder
    isWinner?: SortOrder
    winnerPosition?: SortOrderInput | SortOrder
    isActive?: SortOrder
    isArchived?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    like?: SortOrderInput | SortOrder
    likeCount?: SortOrder
    isPaid?: SortOrder
    paymentDetails?: SortOrderInput | SortOrder
    otherInfo?: SortOrderInput | SortOrder
    ask?: SortOrderInput | SortOrder
    label?: SortOrder
    rewardInUSD?: SortOrder
    ogImage?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    _count?: SubmissionCountOrderByAggregateInput
    _avg?: SubmissionAvgOrderByAggregateInput
    _max?: SubmissionMaxOrderByAggregateInput
    _min?: SubmissionMinOrderByAggregateInput
    _sum?: SubmissionSumOrderByAggregateInput
  }

  export type SubmissionScalarWhereWithAggregatesInput = {
    AND?: SubmissionScalarWhereWithAggregatesInput | SubmissionScalarWhereWithAggregatesInput[]
    OR?: SubmissionScalarWhereWithAggregatesInput[]
    NOT?: SubmissionScalarWhereWithAggregatesInput | SubmissionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Submission"> | string
    link?: StringNullableWithAggregatesFilter<"Submission"> | string | null
    tweet?: StringNullableWithAggregatesFilter<"Submission"> | string | null
    status?: EnumSubmissionStatusWithAggregatesFilter<"Submission"> | $Enums.SubmissionStatus
    eligibilityAnswers?: JsonNullableWithAggregatesFilter<"Submission">
    userId?: StringWithAggregatesFilter<"Submission"> | string
    listingId?: StringWithAggregatesFilter<"Submission"> | string
    isWinner?: BoolWithAggregatesFilter<"Submission"> | boolean
    winnerPosition?: IntNullableWithAggregatesFilter<"Submission"> | number | null
    isActive?: BoolWithAggregatesFilter<"Submission"> | boolean
    isArchived?: BoolWithAggregatesFilter<"Submission"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"Submission"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Submission"> | Date | string
    like?: JsonNullableWithAggregatesFilter<"Submission">
    likeCount?: IntWithAggregatesFilter<"Submission"> | number
    isPaid?: BoolWithAggregatesFilter<"Submission"> | boolean
    paymentDetails?: JsonNullableWithAggregatesFilter<"Submission">
    otherInfo?: StringNullableWithAggregatesFilter<"Submission"> | string | null
    ask?: IntNullableWithAggregatesFilter<"Submission"> | number | null
    label?: EnumSubmissionLabelsWithAggregatesFilter<"Submission"> | $Enums.SubmissionLabels
    rewardInUSD?: FloatWithAggregatesFilter<"Submission"> | number
    ogImage?: StringNullableWithAggregatesFilter<"Submission"> | string | null
    notes?: StringNullableWithAggregatesFilter<"Submission"> | string | null
  }

  export type SponsorsWhereInput = {
    AND?: SponsorsWhereInput | SponsorsWhereInput[]
    OR?: SponsorsWhereInput[]
    NOT?: SponsorsWhereInput | SponsorsWhereInput[]
    id?: StringFilter<"Sponsors"> | string
    name?: StringFilter<"Sponsors"> | string
    slug?: StringFilter<"Sponsors"> | string
    logo?: StringNullableFilter<"Sponsors"> | string | null
    url?: StringNullableFilter<"Sponsors"> | string | null
    industry?: StringFilter<"Sponsors"> | string
    twitter?: StringNullableFilter<"Sponsors"> | string | null
    bio?: StringNullableFilter<"Sponsors"> | string | null
    createdAt?: DateTimeFilter<"Sponsors"> | Date | string
    updatedAt?: DateTimeFilter<"Sponsors"> | Date | string
    isArchived?: BoolFilter<"Sponsors"> | boolean
    isActive?: BoolFilter<"Sponsors"> | boolean
    entityName?: StringNullableFilter<"Sponsors"> | string | null
    isVerified?: BoolFilter<"Sponsors"> | boolean
    isCaution?: BoolFilter<"Sponsors"> | boolean
    st?: BoolFilter<"Sponsors"> | boolean
    verificationInfo?: JsonNullableFilter<"Sponsors">
    Hackathon?: XOR<HackathonNullableScalarRelationFilter, HackathonWhereInput> | null
    UserSponsors?: UserSponsorsListRelationFilter
    Bounties?: BountiesListRelationFilter
    Templates?: BountiesTemplatesListRelationFilter
    Grants?: GrantsListRelationFilter
    User?: UserListRelationFilter
    UserInvites?: UserInvitesListRelationFilter
  }

  export type SponsorsOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    logo?: SortOrderInput | SortOrder
    url?: SortOrderInput | SortOrder
    industry?: SortOrder
    twitter?: SortOrderInput | SortOrder
    bio?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isArchived?: SortOrder
    isActive?: SortOrder
    entityName?: SortOrderInput | SortOrder
    isVerified?: SortOrder
    isCaution?: SortOrder
    st?: SortOrder
    verificationInfo?: SortOrderInput | SortOrder
    Hackathon?: HackathonOrderByWithRelationInput
    UserSponsors?: UserSponsorsOrderByRelationAggregateInput
    Bounties?: BountiesOrderByRelationAggregateInput
    Templates?: BountiesTemplatesOrderByRelationAggregateInput
    Grants?: GrantsOrderByRelationAggregateInput
    User?: UserOrderByRelationAggregateInput
    UserInvites?: UserInvitesOrderByRelationAggregateInput
    _relevance?: SponsorsOrderByRelevanceInput
  }

  export type SponsorsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    name?: string
    slug?: string
    AND?: SponsorsWhereInput | SponsorsWhereInput[]
    OR?: SponsorsWhereInput[]
    NOT?: SponsorsWhereInput | SponsorsWhereInput[]
    logo?: StringNullableFilter<"Sponsors"> | string | null
    url?: StringNullableFilter<"Sponsors"> | string | null
    industry?: StringFilter<"Sponsors"> | string
    twitter?: StringNullableFilter<"Sponsors"> | string | null
    bio?: StringNullableFilter<"Sponsors"> | string | null
    createdAt?: DateTimeFilter<"Sponsors"> | Date | string
    updatedAt?: DateTimeFilter<"Sponsors"> | Date | string
    isArchived?: BoolFilter<"Sponsors"> | boolean
    isActive?: BoolFilter<"Sponsors"> | boolean
    entityName?: StringNullableFilter<"Sponsors"> | string | null
    isVerified?: BoolFilter<"Sponsors"> | boolean
    isCaution?: BoolFilter<"Sponsors"> | boolean
    st?: BoolFilter<"Sponsors"> | boolean
    verificationInfo?: JsonNullableFilter<"Sponsors">
    Hackathon?: XOR<HackathonNullableScalarRelationFilter, HackathonWhereInput> | null
    UserSponsors?: UserSponsorsListRelationFilter
    Bounties?: BountiesListRelationFilter
    Templates?: BountiesTemplatesListRelationFilter
    Grants?: GrantsListRelationFilter
    User?: UserListRelationFilter
    UserInvites?: UserInvitesListRelationFilter
  }, "id" | "name" | "slug">

  export type SponsorsOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    logo?: SortOrderInput | SortOrder
    url?: SortOrderInput | SortOrder
    industry?: SortOrder
    twitter?: SortOrderInput | SortOrder
    bio?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isArchived?: SortOrder
    isActive?: SortOrder
    entityName?: SortOrderInput | SortOrder
    isVerified?: SortOrder
    isCaution?: SortOrder
    st?: SortOrder
    verificationInfo?: SortOrderInput | SortOrder
    _count?: SponsorsCountOrderByAggregateInput
    _max?: SponsorsMaxOrderByAggregateInput
    _min?: SponsorsMinOrderByAggregateInput
  }

  export type SponsorsScalarWhereWithAggregatesInput = {
    AND?: SponsorsScalarWhereWithAggregatesInput | SponsorsScalarWhereWithAggregatesInput[]
    OR?: SponsorsScalarWhereWithAggregatesInput[]
    NOT?: SponsorsScalarWhereWithAggregatesInput | SponsorsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Sponsors"> | string
    name?: StringWithAggregatesFilter<"Sponsors"> | string
    slug?: StringWithAggregatesFilter<"Sponsors"> | string
    logo?: StringNullableWithAggregatesFilter<"Sponsors"> | string | null
    url?: StringNullableWithAggregatesFilter<"Sponsors"> | string | null
    industry?: StringWithAggregatesFilter<"Sponsors"> | string
    twitter?: StringNullableWithAggregatesFilter<"Sponsors"> | string | null
    bio?: StringNullableWithAggregatesFilter<"Sponsors"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Sponsors"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Sponsors"> | Date | string
    isArchived?: BoolWithAggregatesFilter<"Sponsors"> | boolean
    isActive?: BoolWithAggregatesFilter<"Sponsors"> | boolean
    entityName?: StringNullableWithAggregatesFilter<"Sponsors"> | string | null
    isVerified?: BoolWithAggregatesFilter<"Sponsors"> | boolean
    isCaution?: BoolWithAggregatesFilter<"Sponsors"> | boolean
    st?: BoolWithAggregatesFilter<"Sponsors"> | boolean
    verificationInfo?: JsonNullableWithAggregatesFilter<"Sponsors">
  }

  export type AccountWhereInput = {
    AND?: AccountWhereInput | AccountWhereInput[]
    OR?: AccountWhereInput[]
    NOT?: AccountWhereInput | AccountWhereInput[]
    id?: StringFilter<"Account"> | string
    userId?: StringFilter<"Account"> | string
    type?: StringFilter<"Account"> | string
    provider?: StringFilter<"Account"> | string
    providerAccountId?: StringFilter<"Account"> | string
    refresh_token?: StringNullableFilter<"Account"> | string | null
    access_token?: StringNullableFilter<"Account"> | string | null
    expires_at?: IntNullableFilter<"Account"> | number | null
    token_type?: StringNullableFilter<"Account"> | string | null
    scope?: StringNullableFilter<"Account"> | string | null
    id_token?: StringNullableFilter<"Account"> | string | null
    session_state?: StringNullableFilter<"Account"> | string | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type AccountOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    type?: SortOrder
    provider?: SortOrder
    providerAccountId?: SortOrder
    refresh_token?: SortOrderInput | SortOrder
    access_token?: SortOrderInput | SortOrder
    expires_at?: SortOrderInput | SortOrder
    token_type?: SortOrderInput | SortOrder
    scope?: SortOrderInput | SortOrder
    id_token?: SortOrderInput | SortOrder
    session_state?: SortOrderInput | SortOrder
    user?: UserOrderByWithRelationInput
    _relevance?: AccountOrderByRelevanceInput
  }

  export type AccountWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    provider_providerAccountId?: AccountProviderProviderAccountIdCompoundUniqueInput
    AND?: AccountWhereInput | AccountWhereInput[]
    OR?: AccountWhereInput[]
    NOT?: AccountWhereInput | AccountWhereInput[]
    userId?: StringFilter<"Account"> | string
    type?: StringFilter<"Account"> | string
    provider?: StringFilter<"Account"> | string
    providerAccountId?: StringFilter<"Account"> | string
    refresh_token?: StringNullableFilter<"Account"> | string | null
    access_token?: StringNullableFilter<"Account"> | string | null
    expires_at?: IntNullableFilter<"Account"> | number | null
    token_type?: StringNullableFilter<"Account"> | string | null
    scope?: StringNullableFilter<"Account"> | string | null
    id_token?: StringNullableFilter<"Account"> | string | null
    session_state?: StringNullableFilter<"Account"> | string | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id" | "provider_providerAccountId">

  export type AccountOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    type?: SortOrder
    provider?: SortOrder
    providerAccountId?: SortOrder
    refresh_token?: SortOrderInput | SortOrder
    access_token?: SortOrderInput | SortOrder
    expires_at?: SortOrderInput | SortOrder
    token_type?: SortOrderInput | SortOrder
    scope?: SortOrderInput | SortOrder
    id_token?: SortOrderInput | SortOrder
    session_state?: SortOrderInput | SortOrder
    _count?: AccountCountOrderByAggregateInput
    _avg?: AccountAvgOrderByAggregateInput
    _max?: AccountMaxOrderByAggregateInput
    _min?: AccountMinOrderByAggregateInput
    _sum?: AccountSumOrderByAggregateInput
  }

  export type AccountScalarWhereWithAggregatesInput = {
    AND?: AccountScalarWhereWithAggregatesInput | AccountScalarWhereWithAggregatesInput[]
    OR?: AccountScalarWhereWithAggregatesInput[]
    NOT?: AccountScalarWhereWithAggregatesInput | AccountScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Account"> | string
    userId?: StringWithAggregatesFilter<"Account"> | string
    type?: StringWithAggregatesFilter<"Account"> | string
    provider?: StringWithAggregatesFilter<"Account"> | string
    providerAccountId?: StringWithAggregatesFilter<"Account"> | string
    refresh_token?: StringNullableWithAggregatesFilter<"Account"> | string | null
    access_token?: StringNullableWithAggregatesFilter<"Account"> | string | null
    expires_at?: IntNullableWithAggregatesFilter<"Account"> | number | null
    token_type?: StringNullableWithAggregatesFilter<"Account"> | string | null
    scope?: StringNullableWithAggregatesFilter<"Account"> | string | null
    id_token?: StringNullableWithAggregatesFilter<"Account"> | string | null
    session_state?: StringNullableWithAggregatesFilter<"Account"> | string | null
  }

  export type SessionWhereInput = {
    AND?: SessionWhereInput | SessionWhereInput[]
    OR?: SessionWhereInput[]
    NOT?: SessionWhereInput | SessionWhereInput[]
    id?: StringFilter<"Session"> | string
    sessionToken?: StringFilter<"Session"> | string
    userId?: StringFilter<"Session"> | string
    expires?: DateTimeFilter<"Session"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type SessionOrderByWithRelationInput = {
    id?: SortOrder
    sessionToken?: SortOrder
    userId?: SortOrder
    expires?: SortOrder
    user?: UserOrderByWithRelationInput
    _relevance?: SessionOrderByRelevanceInput
  }

  export type SessionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    sessionToken?: string
    AND?: SessionWhereInput | SessionWhereInput[]
    OR?: SessionWhereInput[]
    NOT?: SessionWhereInput | SessionWhereInput[]
    userId?: StringFilter<"Session"> | string
    expires?: DateTimeFilter<"Session"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id" | "sessionToken">

  export type SessionOrderByWithAggregationInput = {
    id?: SortOrder
    sessionToken?: SortOrder
    userId?: SortOrder
    expires?: SortOrder
    _count?: SessionCountOrderByAggregateInput
    _max?: SessionMaxOrderByAggregateInput
    _min?: SessionMinOrderByAggregateInput
  }

  export type SessionScalarWhereWithAggregatesInput = {
    AND?: SessionScalarWhereWithAggregatesInput | SessionScalarWhereWithAggregatesInput[]
    OR?: SessionScalarWhereWithAggregatesInput[]
    NOT?: SessionScalarWhereWithAggregatesInput | SessionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Session"> | string
    sessionToken?: StringWithAggregatesFilter<"Session"> | string
    userId?: StringWithAggregatesFilter<"Session"> | string
    expires?: DateTimeWithAggregatesFilter<"Session"> | Date | string
  }

  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: StringFilter<"User"> | string
    publicKey?: StringNullableFilter<"User"> | string | null
    walletAddress?: StringNullableFilter<"User"> | string | null
    email?: StringFilter<"User"> | string
    username?: StringNullableFilter<"User"> | string | null
    photo?: StringNullableFilter<"User"> | string | null
    firstName?: StringNullableFilter<"User"> | string | null
    lastName?: StringNullableFilter<"User"> | string | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    isVerified?: BoolFilter<"User"> | boolean
    role?: StringFilter<"User"> | string
    isTalentFilled?: BoolFilter<"User"> | boolean
    interests?: StringNullableFilter<"User"> | string | null
    bio?: StringNullableFilter<"User"> | string | null
    twitter?: StringNullableFilter<"User"> | string | null
    discord?: StringNullableFilter<"User"> | string | null
    github?: StringNullableFilter<"User"> | string | null
    linkedin?: StringNullableFilter<"User"> | string | null
    website?: StringNullableFilter<"User"> | string | null
    telegram?: StringNullableFilter<"User"> | string | null
    community?: StringNullableFilter<"User"> | string | null
    experience?: StringNullableFilter<"User"> | string | null
    superteamLevel?: StringNullableFilter<"User"> | string | null
    location?: StringNullableFilter<"User"> | string | null
    cryptoExperience?: StringNullableFilter<"User"> | string | null
    workPrefernce?: StringNullableFilter<"User"> | string | null
    currentEmployer?: StringNullableFilter<"User"> | string | null
    notifications?: JsonNullableFilter<"User">
    private?: BoolFilter<"User"> | boolean
    skills?: JsonNullableFilter<"User">
    currentSponsorId?: StringNullableFilter<"User"> | string | null
    emailVerified?: DateTimeNullableFilter<"User"> | Date | string | null
    hackathonId?: StringNullableFilter<"User"> | string | null
    featureModalShown?: BoolFilter<"User"> | boolean
    surveysShown?: JsonNullableFilter<"User">
    stRecommended?: BoolFilter<"User"> | boolean
    acceptedTOS?: BoolFilter<"User"> | boolean
    stLead?: StringNullableFilter<"User"> | string | null
    isBlocked?: BoolFilter<"User"> | boolean
    privyDid?: StringFilter<"User"> | string
    isKYCVerified?: BoolFilter<"User"> | boolean
    kycName?: StringNullableFilter<"User"> | string | null
    kycCountry?: StringNullableFilter<"User"> | string | null
    kycAddress?: StringNullableFilter<"User"> | string | null
    kycDOB?: StringNullableFilter<"User"> | string | null
    kycIDNumber?: StringNullableFilter<"User"> | string | null
    kycIDType?: StringNullableFilter<"User"> | string | null
    currentSponsor?: XOR<SponsorsNullableScalarRelationFilter, SponsorsWhereInput> | null
    UserSponsors?: UserSponsorsListRelationFilter
    poc?: BountiesListRelationFilter
    templates?: BountiesTemplatesListRelationFilter
    Comment?: CommentListRelationFilter
    Submission?: SubmissionListRelationFilter
    Grants?: GrantsListRelationFilter
    UserInvites?: UserInvitesListRelationFilter
    SubscribeBounty?: SubscribeBountyListRelationFilter
    PoW?: PoWListRelationFilter
    accounts?: AccountListRelationFilter
    sessions?: SessionListRelationFilter
    Hackathon?: XOR<HackathonNullableScalarRelationFilter, HackathonWhereInput> | null
    emailSettings?: EmailSettingsListRelationFilter
    TalentRankings?: TalentRankingsListRelationFilter
    Scouts?: ScoutsListRelationFilter
    GrantApplication?: GrantApplicationListRelationFilter
    SubscribeHackathon?: SubscribeHackathonListRelationFilter
    CreditLedger?: CreditLedgerListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    publicKey?: SortOrderInput | SortOrder
    walletAddress?: SortOrderInput | SortOrder
    email?: SortOrder
    username?: SortOrderInput | SortOrder
    photo?: SortOrderInput | SortOrder
    firstName?: SortOrderInput | SortOrder
    lastName?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isVerified?: SortOrder
    role?: SortOrder
    isTalentFilled?: SortOrder
    interests?: SortOrderInput | SortOrder
    bio?: SortOrderInput | SortOrder
    twitter?: SortOrderInput | SortOrder
    discord?: SortOrderInput | SortOrder
    github?: SortOrderInput | SortOrder
    linkedin?: SortOrderInput | SortOrder
    website?: SortOrderInput | SortOrder
    telegram?: SortOrderInput | SortOrder
    community?: SortOrderInput | SortOrder
    experience?: SortOrderInput | SortOrder
    superteamLevel?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    cryptoExperience?: SortOrderInput | SortOrder
    workPrefernce?: SortOrderInput | SortOrder
    currentEmployer?: SortOrderInput | SortOrder
    notifications?: SortOrderInput | SortOrder
    private?: SortOrder
    skills?: SortOrderInput | SortOrder
    currentSponsorId?: SortOrderInput | SortOrder
    emailVerified?: SortOrderInput | SortOrder
    hackathonId?: SortOrderInput | SortOrder
    featureModalShown?: SortOrder
    surveysShown?: SortOrderInput | SortOrder
    stRecommended?: SortOrder
    acceptedTOS?: SortOrder
    stLead?: SortOrderInput | SortOrder
    isBlocked?: SortOrder
    privyDid?: SortOrder
    isKYCVerified?: SortOrder
    kycName?: SortOrderInput | SortOrder
    kycCountry?: SortOrderInput | SortOrder
    kycAddress?: SortOrderInput | SortOrder
    kycDOB?: SortOrderInput | SortOrder
    kycIDNumber?: SortOrderInput | SortOrder
    kycIDType?: SortOrderInput | SortOrder
    currentSponsor?: SponsorsOrderByWithRelationInput
    UserSponsors?: UserSponsorsOrderByRelationAggregateInput
    poc?: BountiesOrderByRelationAggregateInput
    templates?: BountiesTemplatesOrderByRelationAggregateInput
    Comment?: CommentOrderByRelationAggregateInput
    Submission?: SubmissionOrderByRelationAggregateInput
    Grants?: GrantsOrderByRelationAggregateInput
    UserInvites?: UserInvitesOrderByRelationAggregateInput
    SubscribeBounty?: SubscribeBountyOrderByRelationAggregateInput
    PoW?: PoWOrderByRelationAggregateInput
    accounts?: AccountOrderByRelationAggregateInput
    sessions?: SessionOrderByRelationAggregateInput
    Hackathon?: HackathonOrderByWithRelationInput
    emailSettings?: EmailSettingsOrderByRelationAggregateInput
    TalentRankings?: TalentRankingsOrderByRelationAggregateInput
    Scouts?: ScoutsOrderByRelationAggregateInput
    GrantApplication?: GrantApplicationOrderByRelationAggregateInput
    SubscribeHackathon?: SubscribeHackathonOrderByRelationAggregateInput
    CreditLedger?: CreditLedgerOrderByRelationAggregateInput
    _relevance?: UserOrderByRelevanceInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    username?: string
    privyDid?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    publicKey?: StringNullableFilter<"User"> | string | null
    walletAddress?: StringNullableFilter<"User"> | string | null
    photo?: StringNullableFilter<"User"> | string | null
    firstName?: StringNullableFilter<"User"> | string | null
    lastName?: StringNullableFilter<"User"> | string | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    isVerified?: BoolFilter<"User"> | boolean
    role?: StringFilter<"User"> | string
    isTalentFilled?: BoolFilter<"User"> | boolean
    interests?: StringNullableFilter<"User"> | string | null
    bio?: StringNullableFilter<"User"> | string | null
    twitter?: StringNullableFilter<"User"> | string | null
    discord?: StringNullableFilter<"User"> | string | null
    github?: StringNullableFilter<"User"> | string | null
    linkedin?: StringNullableFilter<"User"> | string | null
    website?: StringNullableFilter<"User"> | string | null
    telegram?: StringNullableFilter<"User"> | string | null
    community?: StringNullableFilter<"User"> | string | null
    experience?: StringNullableFilter<"User"> | string | null
    superteamLevel?: StringNullableFilter<"User"> | string | null
    location?: StringNullableFilter<"User"> | string | null
    cryptoExperience?: StringNullableFilter<"User"> | string | null
    workPrefernce?: StringNullableFilter<"User"> | string | null
    currentEmployer?: StringNullableFilter<"User"> | string | null
    notifications?: JsonNullableFilter<"User">
    private?: BoolFilter<"User"> | boolean
    skills?: JsonNullableFilter<"User">
    currentSponsorId?: StringNullableFilter<"User"> | string | null
    emailVerified?: DateTimeNullableFilter<"User"> | Date | string | null
    hackathonId?: StringNullableFilter<"User"> | string | null
    featureModalShown?: BoolFilter<"User"> | boolean
    surveysShown?: JsonNullableFilter<"User">
    stRecommended?: BoolFilter<"User"> | boolean
    acceptedTOS?: BoolFilter<"User"> | boolean
    stLead?: StringNullableFilter<"User"> | string | null
    isBlocked?: BoolFilter<"User"> | boolean
    isKYCVerified?: BoolFilter<"User"> | boolean
    kycName?: StringNullableFilter<"User"> | string | null
    kycCountry?: StringNullableFilter<"User"> | string | null
    kycAddress?: StringNullableFilter<"User"> | string | null
    kycDOB?: StringNullableFilter<"User"> | string | null
    kycIDNumber?: StringNullableFilter<"User"> | string | null
    kycIDType?: StringNullableFilter<"User"> | string | null
    currentSponsor?: XOR<SponsorsNullableScalarRelationFilter, SponsorsWhereInput> | null
    UserSponsors?: UserSponsorsListRelationFilter
    poc?: BountiesListRelationFilter
    templates?: BountiesTemplatesListRelationFilter
    Comment?: CommentListRelationFilter
    Submission?: SubmissionListRelationFilter
    Grants?: GrantsListRelationFilter
    UserInvites?: UserInvitesListRelationFilter
    SubscribeBounty?: SubscribeBountyListRelationFilter
    PoW?: PoWListRelationFilter
    accounts?: AccountListRelationFilter
    sessions?: SessionListRelationFilter
    Hackathon?: XOR<HackathonNullableScalarRelationFilter, HackathonWhereInput> | null
    emailSettings?: EmailSettingsListRelationFilter
    TalentRankings?: TalentRankingsListRelationFilter
    Scouts?: ScoutsListRelationFilter
    GrantApplication?: GrantApplicationListRelationFilter
    SubscribeHackathon?: SubscribeHackathonListRelationFilter
    CreditLedger?: CreditLedgerListRelationFilter
  }, "id" | "email" | "username" | "privyDid">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    publicKey?: SortOrderInput | SortOrder
    walletAddress?: SortOrderInput | SortOrder
    email?: SortOrder
    username?: SortOrderInput | SortOrder
    photo?: SortOrderInput | SortOrder
    firstName?: SortOrderInput | SortOrder
    lastName?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isVerified?: SortOrder
    role?: SortOrder
    isTalentFilled?: SortOrder
    interests?: SortOrderInput | SortOrder
    bio?: SortOrderInput | SortOrder
    twitter?: SortOrderInput | SortOrder
    discord?: SortOrderInput | SortOrder
    github?: SortOrderInput | SortOrder
    linkedin?: SortOrderInput | SortOrder
    website?: SortOrderInput | SortOrder
    telegram?: SortOrderInput | SortOrder
    community?: SortOrderInput | SortOrder
    experience?: SortOrderInput | SortOrder
    superteamLevel?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    cryptoExperience?: SortOrderInput | SortOrder
    workPrefernce?: SortOrderInput | SortOrder
    currentEmployer?: SortOrderInput | SortOrder
    notifications?: SortOrderInput | SortOrder
    private?: SortOrder
    skills?: SortOrderInput | SortOrder
    currentSponsorId?: SortOrderInput | SortOrder
    emailVerified?: SortOrderInput | SortOrder
    hackathonId?: SortOrderInput | SortOrder
    featureModalShown?: SortOrder
    surveysShown?: SortOrderInput | SortOrder
    stRecommended?: SortOrder
    acceptedTOS?: SortOrder
    stLead?: SortOrderInput | SortOrder
    isBlocked?: SortOrder
    privyDid?: SortOrder
    isKYCVerified?: SortOrder
    kycName?: SortOrderInput | SortOrder
    kycCountry?: SortOrderInput | SortOrder
    kycAddress?: SortOrderInput | SortOrder
    kycDOB?: SortOrderInput | SortOrder
    kycIDNumber?: SortOrderInput | SortOrder
    kycIDType?: SortOrderInput | SortOrder
    _count?: UserCountOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"User"> | string
    publicKey?: StringNullableWithAggregatesFilter<"User"> | string | null
    walletAddress?: StringNullableWithAggregatesFilter<"User"> | string | null
    email?: StringWithAggregatesFilter<"User"> | string
    username?: StringNullableWithAggregatesFilter<"User"> | string | null
    photo?: StringNullableWithAggregatesFilter<"User"> | string | null
    firstName?: StringNullableWithAggregatesFilter<"User"> | string | null
    lastName?: StringNullableWithAggregatesFilter<"User"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    isVerified?: BoolWithAggregatesFilter<"User"> | boolean
    role?: StringWithAggregatesFilter<"User"> | string
    isTalentFilled?: BoolWithAggregatesFilter<"User"> | boolean
    interests?: StringNullableWithAggregatesFilter<"User"> | string | null
    bio?: StringNullableWithAggregatesFilter<"User"> | string | null
    twitter?: StringNullableWithAggregatesFilter<"User"> | string | null
    discord?: StringNullableWithAggregatesFilter<"User"> | string | null
    github?: StringNullableWithAggregatesFilter<"User"> | string | null
    linkedin?: StringNullableWithAggregatesFilter<"User"> | string | null
    website?: StringNullableWithAggregatesFilter<"User"> | string | null
    telegram?: StringNullableWithAggregatesFilter<"User"> | string | null
    community?: StringNullableWithAggregatesFilter<"User"> | string | null
    experience?: StringNullableWithAggregatesFilter<"User"> | string | null
    superteamLevel?: StringNullableWithAggregatesFilter<"User"> | string | null
    location?: StringNullableWithAggregatesFilter<"User"> | string | null
    cryptoExperience?: StringNullableWithAggregatesFilter<"User"> | string | null
    workPrefernce?: StringNullableWithAggregatesFilter<"User"> | string | null
    currentEmployer?: StringNullableWithAggregatesFilter<"User"> | string | null
    notifications?: JsonNullableWithAggregatesFilter<"User">
    private?: BoolWithAggregatesFilter<"User"> | boolean
    skills?: JsonNullableWithAggregatesFilter<"User">
    currentSponsorId?: StringNullableWithAggregatesFilter<"User"> | string | null
    emailVerified?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    hackathonId?: StringNullableWithAggregatesFilter<"User"> | string | null
    featureModalShown?: BoolWithAggregatesFilter<"User"> | boolean
    surveysShown?: JsonNullableWithAggregatesFilter<"User">
    stRecommended?: BoolWithAggregatesFilter<"User"> | boolean
    acceptedTOS?: BoolWithAggregatesFilter<"User"> | boolean
    stLead?: StringNullableWithAggregatesFilter<"User"> | string | null
    isBlocked?: BoolWithAggregatesFilter<"User"> | boolean
    privyDid?: StringWithAggregatesFilter<"User"> | string
    isKYCVerified?: BoolWithAggregatesFilter<"User"> | boolean
    kycName?: StringNullableWithAggregatesFilter<"User"> | string | null
    kycCountry?: StringNullableWithAggregatesFilter<"User"> | string | null
    kycAddress?: StringNullableWithAggregatesFilter<"User"> | string | null
    kycDOB?: StringNullableWithAggregatesFilter<"User"> | string | null
    kycIDNumber?: StringNullableWithAggregatesFilter<"User"> | string | null
    kycIDType?: StringNullableWithAggregatesFilter<"User"> | string | null
  }

  export type ScoutsWhereInput = {
    AND?: ScoutsWhereInput | ScoutsWhereInput[]
    OR?: ScoutsWhereInput[]
    NOT?: ScoutsWhereInput | ScoutsWhereInput[]
    id?: StringFilter<"Scouts"> | string
    userId?: StringFilter<"Scouts"> | string
    listingId?: StringFilter<"Scouts"> | string
    dollarsEarned?: IntFilter<"Scouts"> | number
    score?: DecimalFilter<"Scouts"> | Decimal | DecimalJsLike | number | string
    invited?: BoolFilter<"Scouts"> | boolean
    skills?: JsonFilter<"Scouts">
    createdAt?: DateTimeFilter<"Scouts"> | Date | string
    listing?: XOR<BountiesScalarRelationFilter, BountiesWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type ScoutsOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    listingId?: SortOrder
    dollarsEarned?: SortOrder
    score?: SortOrder
    invited?: SortOrder
    skills?: SortOrder
    createdAt?: SortOrder
    listing?: BountiesOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
    _relevance?: ScoutsOrderByRelevanceInput
  }

  export type ScoutsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userId_listingId?: ScoutsUserIdListingIdCompoundUniqueInput
    AND?: ScoutsWhereInput | ScoutsWhereInput[]
    OR?: ScoutsWhereInput[]
    NOT?: ScoutsWhereInput | ScoutsWhereInput[]
    userId?: StringFilter<"Scouts"> | string
    listingId?: StringFilter<"Scouts"> | string
    dollarsEarned?: IntFilter<"Scouts"> | number
    score?: DecimalFilter<"Scouts"> | Decimal | DecimalJsLike | number | string
    invited?: BoolFilter<"Scouts"> | boolean
    skills?: JsonFilter<"Scouts">
    createdAt?: DateTimeFilter<"Scouts"> | Date | string
    listing?: XOR<BountiesScalarRelationFilter, BountiesWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id" | "userId_listingId">

  export type ScoutsOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    listingId?: SortOrder
    dollarsEarned?: SortOrder
    score?: SortOrder
    invited?: SortOrder
    skills?: SortOrder
    createdAt?: SortOrder
    _count?: ScoutsCountOrderByAggregateInput
    _avg?: ScoutsAvgOrderByAggregateInput
    _max?: ScoutsMaxOrderByAggregateInput
    _min?: ScoutsMinOrderByAggregateInput
    _sum?: ScoutsSumOrderByAggregateInput
  }

  export type ScoutsScalarWhereWithAggregatesInput = {
    AND?: ScoutsScalarWhereWithAggregatesInput | ScoutsScalarWhereWithAggregatesInput[]
    OR?: ScoutsScalarWhereWithAggregatesInput[]
    NOT?: ScoutsScalarWhereWithAggregatesInput | ScoutsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Scouts"> | string
    userId?: StringWithAggregatesFilter<"Scouts"> | string
    listingId?: StringWithAggregatesFilter<"Scouts"> | string
    dollarsEarned?: IntWithAggregatesFilter<"Scouts"> | number
    score?: DecimalWithAggregatesFilter<"Scouts"> | Decimal | DecimalJsLike | number | string
    invited?: BoolWithAggregatesFilter<"Scouts"> | boolean
    skills?: JsonWithAggregatesFilter<"Scouts">
    createdAt?: DateTimeWithAggregatesFilter<"Scouts"> | Date | string
  }

  export type TalentRankingsWhereInput = {
    AND?: TalentRankingsWhereInput | TalentRankingsWhereInput[]
    OR?: TalentRankingsWhereInput[]
    NOT?: TalentRankingsWhereInput | TalentRankingsWhereInput[]
    id?: StringFilter<"TalentRankings"> | string
    userId?: StringFilter<"TalentRankings"> | string
    skill?: EnumTalentRankingSkillsFilter<"TalentRankings"> | $Enums.TalentRankingSkills
    timeframe?: EnumTalentRankingTimeframeFilter<"TalentRankings"> | $Enums.TalentRankingTimeframe
    rank?: IntFilter<"TalentRankings"> | number
    submissions?: IntFilter<"TalentRankings"> | number
    winRate?: IntFilter<"TalentRankings"> | number
    wins?: IntFilter<"TalentRankings"> | number
    totalEarnedInUSD?: IntFilter<"TalentRankings"> | number
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type TalentRankingsOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    skill?: SortOrder
    timeframe?: SortOrder
    rank?: SortOrder
    submissions?: SortOrder
    winRate?: SortOrder
    wins?: SortOrder
    totalEarnedInUSD?: SortOrder
    user?: UserOrderByWithRelationInput
    _relevance?: TalentRankingsOrderByRelevanceInput
  }

  export type TalentRankingsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userId_skill_timeframe?: TalentRankingsUserIdSkillTimeframeCompoundUniqueInput
    AND?: TalentRankingsWhereInput | TalentRankingsWhereInput[]
    OR?: TalentRankingsWhereInput[]
    NOT?: TalentRankingsWhereInput | TalentRankingsWhereInput[]
    userId?: StringFilter<"TalentRankings"> | string
    skill?: EnumTalentRankingSkillsFilter<"TalentRankings"> | $Enums.TalentRankingSkills
    timeframe?: EnumTalentRankingTimeframeFilter<"TalentRankings"> | $Enums.TalentRankingTimeframe
    rank?: IntFilter<"TalentRankings"> | number
    submissions?: IntFilter<"TalentRankings"> | number
    winRate?: IntFilter<"TalentRankings"> | number
    wins?: IntFilter<"TalentRankings"> | number
    totalEarnedInUSD?: IntFilter<"TalentRankings"> | number
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id" | "userId_skill_timeframe">

  export type TalentRankingsOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    skill?: SortOrder
    timeframe?: SortOrder
    rank?: SortOrder
    submissions?: SortOrder
    winRate?: SortOrder
    wins?: SortOrder
    totalEarnedInUSD?: SortOrder
    _count?: TalentRankingsCountOrderByAggregateInput
    _avg?: TalentRankingsAvgOrderByAggregateInput
    _max?: TalentRankingsMaxOrderByAggregateInput
    _min?: TalentRankingsMinOrderByAggregateInput
    _sum?: TalentRankingsSumOrderByAggregateInput
  }

  export type TalentRankingsScalarWhereWithAggregatesInput = {
    AND?: TalentRankingsScalarWhereWithAggregatesInput | TalentRankingsScalarWhereWithAggregatesInput[]
    OR?: TalentRankingsScalarWhereWithAggregatesInput[]
    NOT?: TalentRankingsScalarWhereWithAggregatesInput | TalentRankingsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"TalentRankings"> | string
    userId?: StringWithAggregatesFilter<"TalentRankings"> | string
    skill?: EnumTalentRankingSkillsWithAggregatesFilter<"TalentRankings"> | $Enums.TalentRankingSkills
    timeframe?: EnumTalentRankingTimeframeWithAggregatesFilter<"TalentRankings"> | $Enums.TalentRankingTimeframe
    rank?: IntWithAggregatesFilter<"TalentRankings"> | number
    submissions?: IntWithAggregatesFilter<"TalentRankings"> | number
    winRate?: IntWithAggregatesFilter<"TalentRankings"> | number
    wins?: IntWithAggregatesFilter<"TalentRankings"> | number
    totalEarnedInUSD?: IntWithAggregatesFilter<"TalentRankings"> | number
  }

  export type PoWWhereInput = {
    AND?: PoWWhereInput | PoWWhereInput[]
    OR?: PoWWhereInput[]
    NOT?: PoWWhereInput | PoWWhereInput[]
    id?: StringFilter<"PoW"> | string
    userId?: StringFilter<"PoW"> | string
    title?: StringFilter<"PoW"> | string
    description?: StringFilter<"PoW"> | string
    skills?: JsonNullableFilter<"PoW">
    link?: StringFilter<"PoW"> | string
    createdAt?: DateTimeFilter<"PoW"> | Date | string
    subSkills?: JsonNullableFilter<"PoW">
    updatedAt?: DateTimeFilter<"PoW"> | Date | string
    like?: JsonNullableFilter<"PoW">
    likeCount?: IntFilter<"PoW"> | number
    ogImage?: StringNullableFilter<"PoW"> | string | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    Comments?: CommentListRelationFilter
  }

  export type PoWOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    title?: SortOrder
    description?: SortOrder
    skills?: SortOrderInput | SortOrder
    link?: SortOrder
    createdAt?: SortOrder
    subSkills?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    like?: SortOrderInput | SortOrder
    likeCount?: SortOrder
    ogImage?: SortOrderInput | SortOrder
    user?: UserOrderByWithRelationInput
    Comments?: CommentOrderByRelationAggregateInput
    _relevance?: PoWOrderByRelevanceInput
  }

  export type PoWWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: PoWWhereInput | PoWWhereInput[]
    OR?: PoWWhereInput[]
    NOT?: PoWWhereInput | PoWWhereInput[]
    userId?: StringFilter<"PoW"> | string
    title?: StringFilter<"PoW"> | string
    description?: StringFilter<"PoW"> | string
    skills?: JsonNullableFilter<"PoW">
    link?: StringFilter<"PoW"> | string
    createdAt?: DateTimeFilter<"PoW"> | Date | string
    subSkills?: JsonNullableFilter<"PoW">
    updatedAt?: DateTimeFilter<"PoW"> | Date | string
    like?: JsonNullableFilter<"PoW">
    likeCount?: IntFilter<"PoW"> | number
    ogImage?: StringNullableFilter<"PoW"> | string | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    Comments?: CommentListRelationFilter
  }, "id">

  export type PoWOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    title?: SortOrder
    description?: SortOrder
    skills?: SortOrderInput | SortOrder
    link?: SortOrder
    createdAt?: SortOrder
    subSkills?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    like?: SortOrderInput | SortOrder
    likeCount?: SortOrder
    ogImage?: SortOrderInput | SortOrder
    _count?: PoWCountOrderByAggregateInput
    _avg?: PoWAvgOrderByAggregateInput
    _max?: PoWMaxOrderByAggregateInput
    _min?: PoWMinOrderByAggregateInput
    _sum?: PoWSumOrderByAggregateInput
  }

  export type PoWScalarWhereWithAggregatesInput = {
    AND?: PoWScalarWhereWithAggregatesInput | PoWScalarWhereWithAggregatesInput[]
    OR?: PoWScalarWhereWithAggregatesInput[]
    NOT?: PoWScalarWhereWithAggregatesInput | PoWScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"PoW"> | string
    userId?: StringWithAggregatesFilter<"PoW"> | string
    title?: StringWithAggregatesFilter<"PoW"> | string
    description?: StringWithAggregatesFilter<"PoW"> | string
    skills?: JsonNullableWithAggregatesFilter<"PoW">
    link?: StringWithAggregatesFilter<"PoW"> | string
    createdAt?: DateTimeWithAggregatesFilter<"PoW"> | Date | string
    subSkills?: JsonNullableWithAggregatesFilter<"PoW">
    updatedAt?: DateTimeWithAggregatesFilter<"PoW"> | Date | string
    like?: JsonNullableWithAggregatesFilter<"PoW">
    likeCount?: IntWithAggregatesFilter<"PoW"> | number
    ogImage?: StringNullableWithAggregatesFilter<"PoW"> | string | null
  }

  export type EmailSettingsWhereInput = {
    AND?: EmailSettingsWhereInput | EmailSettingsWhereInput[]
    OR?: EmailSettingsWhereInput[]
    NOT?: EmailSettingsWhereInput | EmailSettingsWhereInput[]
    id?: IntFilter<"EmailSettings"> | number
    userId?: StringFilter<"EmailSettings"> | string
    category?: StringFilter<"EmailSettings"> | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type EmailSettingsOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    category?: SortOrder
    user?: UserOrderByWithRelationInput
    _relevance?: EmailSettingsOrderByRelevanceInput
  }

  export type EmailSettingsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: EmailSettingsWhereInput | EmailSettingsWhereInput[]
    OR?: EmailSettingsWhereInput[]
    NOT?: EmailSettingsWhereInput | EmailSettingsWhereInput[]
    userId?: StringFilter<"EmailSettings"> | string
    category?: StringFilter<"EmailSettings"> | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type EmailSettingsOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    category?: SortOrder
    _count?: EmailSettingsCountOrderByAggregateInput
    _avg?: EmailSettingsAvgOrderByAggregateInput
    _max?: EmailSettingsMaxOrderByAggregateInput
    _min?: EmailSettingsMinOrderByAggregateInput
    _sum?: EmailSettingsSumOrderByAggregateInput
  }

  export type EmailSettingsScalarWhereWithAggregatesInput = {
    AND?: EmailSettingsScalarWhereWithAggregatesInput | EmailSettingsScalarWhereWithAggregatesInput[]
    OR?: EmailSettingsScalarWhereWithAggregatesInput[]
    NOT?: EmailSettingsScalarWhereWithAggregatesInput | EmailSettingsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"EmailSettings"> | number
    userId?: StringWithAggregatesFilter<"EmailSettings"> | string
    category?: StringWithAggregatesFilter<"EmailSettings"> | string
  }

  export type UserSponsorsWhereInput = {
    AND?: UserSponsorsWhereInput | UserSponsorsWhereInput[]
    OR?: UserSponsorsWhereInput[]
    NOT?: UserSponsorsWhereInput | UserSponsorsWhereInput[]
    userId?: StringFilter<"UserSponsors"> | string
    sponsorId?: StringFilter<"UserSponsors"> | string
    role?: EnumRoleFilter<"UserSponsors"> | $Enums.Role
    createdAt?: DateTimeFilter<"UserSponsors"> | Date | string
    updatedAt?: DateTimeFilter<"UserSponsors"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    sponsor?: XOR<SponsorsScalarRelationFilter, SponsorsWhereInput>
  }

  export type UserSponsorsOrderByWithRelationInput = {
    userId?: SortOrder
    sponsorId?: SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
    sponsor?: SponsorsOrderByWithRelationInput
    _relevance?: UserSponsorsOrderByRelevanceInput
  }

  export type UserSponsorsWhereUniqueInput = Prisma.AtLeast<{
    userId_sponsorId?: UserSponsorsUserIdSponsorIdCompoundUniqueInput
    AND?: UserSponsorsWhereInput | UserSponsorsWhereInput[]
    OR?: UserSponsorsWhereInput[]
    NOT?: UserSponsorsWhereInput | UserSponsorsWhereInput[]
    userId?: StringFilter<"UserSponsors"> | string
    sponsorId?: StringFilter<"UserSponsors"> | string
    role?: EnumRoleFilter<"UserSponsors"> | $Enums.Role
    createdAt?: DateTimeFilter<"UserSponsors"> | Date | string
    updatedAt?: DateTimeFilter<"UserSponsors"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    sponsor?: XOR<SponsorsScalarRelationFilter, SponsorsWhereInput>
  }, "userId_sponsorId">

  export type UserSponsorsOrderByWithAggregationInput = {
    userId?: SortOrder
    sponsorId?: SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: UserSponsorsCountOrderByAggregateInput
    _max?: UserSponsorsMaxOrderByAggregateInput
    _min?: UserSponsorsMinOrderByAggregateInput
  }

  export type UserSponsorsScalarWhereWithAggregatesInput = {
    AND?: UserSponsorsScalarWhereWithAggregatesInput | UserSponsorsScalarWhereWithAggregatesInput[]
    OR?: UserSponsorsScalarWhereWithAggregatesInput[]
    NOT?: UserSponsorsScalarWhereWithAggregatesInput | UserSponsorsScalarWhereWithAggregatesInput[]
    userId?: StringWithAggregatesFilter<"UserSponsors"> | string
    sponsorId?: StringWithAggregatesFilter<"UserSponsors"> | string
    role?: EnumRoleWithAggregatesFilter<"UserSponsors"> | $Enums.Role
    createdAt?: DateTimeWithAggregatesFilter<"UserSponsors"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"UserSponsors"> | Date | string
  }

  export type UserInvitesWhereInput = {
    AND?: UserInvitesWhereInput | UserInvitesWhereInput[]
    OR?: UserInvitesWhereInput[]
    NOT?: UserInvitesWhereInput | UserInvitesWhereInput[]
    id?: StringFilter<"UserInvites"> | string
    email?: StringFilter<"UserInvites"> | string
    senderId?: StringFilter<"UserInvites"> | string
    createdAt?: DateTimeFilter<"UserInvites"> | Date | string
    updatedAt?: DateTimeFilter<"UserInvites"> | Date | string
    sponsorId?: StringFilter<"UserInvites"> | string
    memberType?: EnumRoleFilter<"UserInvites"> | $Enums.Role
    token?: StringFilter<"UserInvites"> | string
    expires?: DateTimeFilter<"UserInvites"> | Date | string
    sender?: XOR<UserScalarRelationFilter, UserWhereInput>
    sponsor?: XOR<SponsorsScalarRelationFilter, SponsorsWhereInput>
  }

  export type UserInvitesOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    senderId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    sponsorId?: SortOrder
    memberType?: SortOrder
    token?: SortOrder
    expires?: SortOrder
    sender?: UserOrderByWithRelationInput
    sponsor?: SponsorsOrderByWithRelationInput
    _relevance?: UserInvitesOrderByRelevanceInput
  }

  export type UserInvitesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    token?: string
    AND?: UserInvitesWhereInput | UserInvitesWhereInput[]
    OR?: UserInvitesWhereInput[]
    NOT?: UserInvitesWhereInput | UserInvitesWhereInput[]
    email?: StringFilter<"UserInvites"> | string
    senderId?: StringFilter<"UserInvites"> | string
    createdAt?: DateTimeFilter<"UserInvites"> | Date | string
    updatedAt?: DateTimeFilter<"UserInvites"> | Date | string
    sponsorId?: StringFilter<"UserInvites"> | string
    memberType?: EnumRoleFilter<"UserInvites"> | $Enums.Role
    expires?: DateTimeFilter<"UserInvites"> | Date | string
    sender?: XOR<UserScalarRelationFilter, UserWhereInput>
    sponsor?: XOR<SponsorsScalarRelationFilter, SponsorsWhereInput>
  }, "id" | "token">

  export type UserInvitesOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    senderId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    sponsorId?: SortOrder
    memberType?: SortOrder
    token?: SortOrder
    expires?: SortOrder
    _count?: UserInvitesCountOrderByAggregateInput
    _max?: UserInvitesMaxOrderByAggregateInput
    _min?: UserInvitesMinOrderByAggregateInput
  }

  export type UserInvitesScalarWhereWithAggregatesInput = {
    AND?: UserInvitesScalarWhereWithAggregatesInput | UserInvitesScalarWhereWithAggregatesInput[]
    OR?: UserInvitesScalarWhereWithAggregatesInput[]
    NOT?: UserInvitesScalarWhereWithAggregatesInput | UserInvitesScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"UserInvites"> | string
    email?: StringWithAggregatesFilter<"UserInvites"> | string
    senderId?: StringWithAggregatesFilter<"UserInvites"> | string
    createdAt?: DateTimeWithAggregatesFilter<"UserInvites"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"UserInvites"> | Date | string
    sponsorId?: StringWithAggregatesFilter<"UserInvites"> | string
    memberType?: EnumRoleWithAggregatesFilter<"UserInvites"> | $Enums.Role
    token?: StringWithAggregatesFilter<"UserInvites"> | string
    expires?: DateTimeWithAggregatesFilter<"UserInvites"> | Date | string
  }

  export type emailLogsWhereInput = {
    AND?: emailLogsWhereInput | emailLogsWhereInput[]
    OR?: emailLogsWhereInput[]
    NOT?: emailLogsWhereInput | emailLogsWhereInput[]
    id?: StringFilter<"emailLogs"> | string
    email?: StringNullableFilter<"emailLogs"> | string | null
    type?: EnumEmailTypeFilter<"emailLogs"> | $Enums.EmailType
    bountyId?: StringNullableFilter<"emailLogs"> | string | null
    userId?: StringNullableFilter<"emailLogs"> | string | null
    createdAt?: DateTimeFilter<"emailLogs"> | Date | string
    updatedAt?: DateTimeFilter<"emailLogs"> | Date | string
  }

  export type emailLogsOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrderInput | SortOrder
    type?: SortOrder
    bountyId?: SortOrderInput | SortOrder
    userId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _relevance?: emailLogsOrderByRelevanceInput
  }

  export type emailLogsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: emailLogsWhereInput | emailLogsWhereInput[]
    OR?: emailLogsWhereInput[]
    NOT?: emailLogsWhereInput | emailLogsWhereInput[]
    email?: StringNullableFilter<"emailLogs"> | string | null
    type?: EnumEmailTypeFilter<"emailLogs"> | $Enums.EmailType
    bountyId?: StringNullableFilter<"emailLogs"> | string | null
    userId?: StringNullableFilter<"emailLogs"> | string | null
    createdAt?: DateTimeFilter<"emailLogs"> | Date | string
    updatedAt?: DateTimeFilter<"emailLogs"> | Date | string
  }, "id">

  export type emailLogsOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrderInput | SortOrder
    type?: SortOrder
    bountyId?: SortOrderInput | SortOrder
    userId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: emailLogsCountOrderByAggregateInput
    _max?: emailLogsMaxOrderByAggregateInput
    _min?: emailLogsMinOrderByAggregateInput
  }

  export type emailLogsScalarWhereWithAggregatesInput = {
    AND?: emailLogsScalarWhereWithAggregatesInput | emailLogsScalarWhereWithAggregatesInput[]
    OR?: emailLogsScalarWhereWithAggregatesInput[]
    NOT?: emailLogsScalarWhereWithAggregatesInput | emailLogsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"emailLogs"> | string
    email?: StringNullableWithAggregatesFilter<"emailLogs"> | string | null
    type?: EnumEmailTypeWithAggregatesFilter<"emailLogs"> | $Enums.EmailType
    bountyId?: StringNullableWithAggregatesFilter<"emailLogs"> | string | null
    userId?: StringNullableWithAggregatesFilter<"emailLogs"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"emailLogs"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"emailLogs"> | Date | string
  }

  export type ResendLogsWhereInput = {
    AND?: ResendLogsWhereInput | ResendLogsWhereInput[]
    OR?: ResendLogsWhereInput[]
    NOT?: ResendLogsWhereInput | ResendLogsWhereInput[]
    id?: StringFilter<"ResendLogs"> | string
    email?: StringFilter<"ResendLogs"> | string
    subject?: StringFilter<"ResendLogs"> | string
    status?: StringFilter<"ResendLogs"> | string
    createdAt?: DateTimeFilter<"ResendLogs"> | Date | string
    updatedAt?: DateTimeFilter<"ResendLogs"> | Date | string
  }

  export type ResendLogsOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    subject?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _relevance?: ResendLogsOrderByRelevanceInput
  }

  export type ResendLogsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ResendLogsWhereInput | ResendLogsWhereInput[]
    OR?: ResendLogsWhereInput[]
    NOT?: ResendLogsWhereInput | ResendLogsWhereInput[]
    email?: StringFilter<"ResendLogs"> | string
    subject?: StringFilter<"ResendLogs"> | string
    status?: StringFilter<"ResendLogs"> | string
    createdAt?: DateTimeFilter<"ResendLogs"> | Date | string
    updatedAt?: DateTimeFilter<"ResendLogs"> | Date | string
  }, "id">

  export type ResendLogsOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    subject?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ResendLogsCountOrderByAggregateInput
    _max?: ResendLogsMaxOrderByAggregateInput
    _min?: ResendLogsMinOrderByAggregateInput
  }

  export type ResendLogsScalarWhereWithAggregatesInput = {
    AND?: ResendLogsScalarWhereWithAggregatesInput | ResendLogsScalarWhereWithAggregatesInput[]
    OR?: ResendLogsScalarWhereWithAggregatesInput[]
    NOT?: ResendLogsScalarWhereWithAggregatesInput | ResendLogsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ResendLogs"> | string
    email?: StringWithAggregatesFilter<"ResendLogs"> | string
    subject?: StringWithAggregatesFilter<"ResendLogs"> | string
    status?: StringWithAggregatesFilter<"ResendLogs"> | string
    createdAt?: DateTimeWithAggregatesFilter<"ResendLogs"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ResendLogs"> | Date | string
  }

  export type SubscribeBountyWhereInput = {
    AND?: SubscribeBountyWhereInput | SubscribeBountyWhereInput[]
    OR?: SubscribeBountyWhereInput[]
    NOT?: SubscribeBountyWhereInput | SubscribeBountyWhereInput[]
    id?: StringFilter<"SubscribeBounty"> | string
    userId?: StringFilter<"SubscribeBounty"> | string
    bountyId?: StringFilter<"SubscribeBounty"> | string
    isArchived?: BoolFilter<"SubscribeBounty"> | boolean
    createdAt?: DateTimeFilter<"SubscribeBounty"> | Date | string
    updatedAt?: DateTimeFilter<"SubscribeBounty"> | Date | string
    User?: XOR<UserScalarRelationFilter, UserWhereInput>
    Bounties?: XOR<BountiesNullableScalarRelationFilter, BountiesWhereInput> | null
  }

  export type SubscribeBountyOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    bountyId?: SortOrder
    isArchived?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    User?: UserOrderByWithRelationInput
    Bounties?: BountiesOrderByWithRelationInput
    _relevance?: SubscribeBountyOrderByRelevanceInput
  }

  export type SubscribeBountyWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userId_bountyId?: SubscribeBountyUserIdBountyIdCompoundUniqueInput
    AND?: SubscribeBountyWhereInput | SubscribeBountyWhereInput[]
    OR?: SubscribeBountyWhereInput[]
    NOT?: SubscribeBountyWhereInput | SubscribeBountyWhereInput[]
    userId?: StringFilter<"SubscribeBounty"> | string
    bountyId?: StringFilter<"SubscribeBounty"> | string
    isArchived?: BoolFilter<"SubscribeBounty"> | boolean
    createdAt?: DateTimeFilter<"SubscribeBounty"> | Date | string
    updatedAt?: DateTimeFilter<"SubscribeBounty"> | Date | string
    User?: XOR<UserScalarRelationFilter, UserWhereInput>
    Bounties?: XOR<BountiesNullableScalarRelationFilter, BountiesWhereInput> | null
  }, "id" | "userId_bountyId">

  export type SubscribeBountyOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    bountyId?: SortOrder
    isArchived?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: SubscribeBountyCountOrderByAggregateInput
    _max?: SubscribeBountyMaxOrderByAggregateInput
    _min?: SubscribeBountyMinOrderByAggregateInput
  }

  export type SubscribeBountyScalarWhereWithAggregatesInput = {
    AND?: SubscribeBountyScalarWhereWithAggregatesInput | SubscribeBountyScalarWhereWithAggregatesInput[]
    OR?: SubscribeBountyScalarWhereWithAggregatesInput[]
    NOT?: SubscribeBountyScalarWhereWithAggregatesInput | SubscribeBountyScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"SubscribeBounty"> | string
    userId?: StringWithAggregatesFilter<"SubscribeBounty"> | string
    bountyId?: StringWithAggregatesFilter<"SubscribeBounty"> | string
    isArchived?: BoolWithAggregatesFilter<"SubscribeBounty"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"SubscribeBounty"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"SubscribeBounty"> | Date | string
  }

  export type SubscribeHackathonWhereInput = {
    AND?: SubscribeHackathonWhereInput | SubscribeHackathonWhereInput[]
    OR?: SubscribeHackathonWhereInput[]
    NOT?: SubscribeHackathonWhereInput | SubscribeHackathonWhereInput[]
    id?: StringFilter<"SubscribeHackathon"> | string
    userId?: StringFilter<"SubscribeHackathon"> | string
    hackathonId?: StringFilter<"SubscribeHackathon"> | string
    isArchived?: BoolFilter<"SubscribeHackathon"> | boolean
    createdAt?: DateTimeFilter<"SubscribeHackathon"> | Date | string
    updatedAt?: DateTimeFilter<"SubscribeHackathon"> | Date | string
    User?: XOR<UserScalarRelationFilter, UserWhereInput>
    Hackthons?: XOR<HackathonNullableScalarRelationFilter, HackathonWhereInput> | null
  }

  export type SubscribeHackathonOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    hackathonId?: SortOrder
    isArchived?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    User?: UserOrderByWithRelationInput
    Hackthons?: HackathonOrderByWithRelationInput
    _relevance?: SubscribeHackathonOrderByRelevanceInput
  }

  export type SubscribeHackathonWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: SubscribeHackathonWhereInput | SubscribeHackathonWhereInput[]
    OR?: SubscribeHackathonWhereInput[]
    NOT?: SubscribeHackathonWhereInput | SubscribeHackathonWhereInput[]
    userId?: StringFilter<"SubscribeHackathon"> | string
    hackathonId?: StringFilter<"SubscribeHackathon"> | string
    isArchived?: BoolFilter<"SubscribeHackathon"> | boolean
    createdAt?: DateTimeFilter<"SubscribeHackathon"> | Date | string
    updatedAt?: DateTimeFilter<"SubscribeHackathon"> | Date | string
    User?: XOR<UserScalarRelationFilter, UserWhereInput>
    Hackthons?: XOR<HackathonNullableScalarRelationFilter, HackathonWhereInput> | null
  }, "id">

  export type SubscribeHackathonOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    hackathonId?: SortOrder
    isArchived?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: SubscribeHackathonCountOrderByAggregateInput
    _max?: SubscribeHackathonMaxOrderByAggregateInput
    _min?: SubscribeHackathonMinOrderByAggregateInput
  }

  export type SubscribeHackathonScalarWhereWithAggregatesInput = {
    AND?: SubscribeHackathonScalarWhereWithAggregatesInput | SubscribeHackathonScalarWhereWithAggregatesInput[]
    OR?: SubscribeHackathonScalarWhereWithAggregatesInput[]
    NOT?: SubscribeHackathonScalarWhereWithAggregatesInput | SubscribeHackathonScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"SubscribeHackathon"> | string
    userId?: StringWithAggregatesFilter<"SubscribeHackathon"> | string
    hackathonId?: StringWithAggregatesFilter<"SubscribeHackathon"> | string
    isArchived?: BoolWithAggregatesFilter<"SubscribeHackathon"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"SubscribeHackathon"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"SubscribeHackathon"> | Date | string
  }

  export type VerificationTokenWhereInput = {
    AND?: VerificationTokenWhereInput | VerificationTokenWhereInput[]
    OR?: VerificationTokenWhereInput[]
    NOT?: VerificationTokenWhereInput | VerificationTokenWhereInput[]
    identifier?: StringFilter<"VerificationToken"> | string
    token?: StringFilter<"VerificationToken"> | string
    expires?: DateTimeFilter<"VerificationToken"> | Date | string
  }

  export type VerificationTokenOrderByWithRelationInput = {
    identifier?: SortOrder
    token?: SortOrder
    expires?: SortOrder
    _relevance?: VerificationTokenOrderByRelevanceInput
  }

  export type VerificationTokenWhereUniqueInput = Prisma.AtLeast<{
    token?: string
    identifier_token?: VerificationTokenIdentifierTokenCompoundUniqueInput
    AND?: VerificationTokenWhereInput | VerificationTokenWhereInput[]
    OR?: VerificationTokenWhereInput[]
    NOT?: VerificationTokenWhereInput | VerificationTokenWhereInput[]
    identifier?: StringFilter<"VerificationToken"> | string
    expires?: DateTimeFilter<"VerificationToken"> | Date | string
  }, "token" | "identifier_token">

  export type VerificationTokenOrderByWithAggregationInput = {
    identifier?: SortOrder
    token?: SortOrder
    expires?: SortOrder
    _count?: VerificationTokenCountOrderByAggregateInput
    _max?: VerificationTokenMaxOrderByAggregateInput
    _min?: VerificationTokenMinOrderByAggregateInput
  }

  export type VerificationTokenScalarWhereWithAggregatesInput = {
    AND?: VerificationTokenScalarWhereWithAggregatesInput | VerificationTokenScalarWhereWithAggregatesInput[]
    OR?: VerificationTokenScalarWhereWithAggregatesInput[]
    NOT?: VerificationTokenScalarWhereWithAggregatesInput | VerificationTokenScalarWhereWithAggregatesInput[]
    identifier?: StringWithAggregatesFilter<"VerificationToken"> | string
    token?: StringWithAggregatesFilter<"VerificationToken"> | string
    expires?: DateTimeWithAggregatesFilter<"VerificationToken"> | Date | string
  }

  export type HackathonWhereInput = {
    AND?: HackathonWhereInput | HackathonWhereInput[]
    OR?: HackathonWhereInput[]
    NOT?: HackathonWhereInput | HackathonWhereInput[]
    id?: StringFilter<"Hackathon"> | string
    slug?: StringFilter<"Hackathon"> | string
    name?: StringFilter<"Hackathon"> | string
    logo?: StringFilter<"Hackathon"> | string
    sponsorId?: StringNullableFilter<"Hackathon"> | string | null
    deadline?: DateTimeNullableFilter<"Hackathon"> | Date | string | null
    startDate?: DateTimeNullableFilter<"Hackathon"> | Date | string | null
    description?: StringFilter<"Hackathon"> | string
    altLogo?: StringNullableFilter<"Hackathon"> | string | null
    announceDate?: DateTimeNullableFilter<"Hackathon"> | Date | string | null
    eligibility?: JsonNullableFilter<"Hackathon">
    listings?: BountiesListRelationFilter
    Sponsor?: XOR<SponsorsNullableScalarRelationFilter, SponsorsWhereInput> | null
    User?: UserListRelationFilter
    SubscribeHackathon?: SubscribeHackathonListRelationFilter
  }

  export type HackathonOrderByWithRelationInput = {
    id?: SortOrder
    slug?: SortOrder
    name?: SortOrder
    logo?: SortOrder
    sponsorId?: SortOrderInput | SortOrder
    deadline?: SortOrderInput | SortOrder
    startDate?: SortOrderInput | SortOrder
    description?: SortOrder
    altLogo?: SortOrderInput | SortOrder
    announceDate?: SortOrderInput | SortOrder
    eligibility?: SortOrderInput | SortOrder
    listings?: BountiesOrderByRelationAggregateInput
    Sponsor?: SponsorsOrderByWithRelationInput
    User?: UserOrderByRelationAggregateInput
    SubscribeHackathon?: SubscribeHackathonOrderByRelationAggregateInput
    _relevance?: HackathonOrderByRelevanceInput
  }

  export type HackathonWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    slug?: string
    sponsorId?: string
    AND?: HackathonWhereInput | HackathonWhereInput[]
    OR?: HackathonWhereInput[]
    NOT?: HackathonWhereInput | HackathonWhereInput[]
    name?: StringFilter<"Hackathon"> | string
    logo?: StringFilter<"Hackathon"> | string
    deadline?: DateTimeNullableFilter<"Hackathon"> | Date | string | null
    startDate?: DateTimeNullableFilter<"Hackathon"> | Date | string | null
    description?: StringFilter<"Hackathon"> | string
    altLogo?: StringNullableFilter<"Hackathon"> | string | null
    announceDate?: DateTimeNullableFilter<"Hackathon"> | Date | string | null
    eligibility?: JsonNullableFilter<"Hackathon">
    listings?: BountiesListRelationFilter
    Sponsor?: XOR<SponsorsNullableScalarRelationFilter, SponsorsWhereInput> | null
    User?: UserListRelationFilter
    SubscribeHackathon?: SubscribeHackathonListRelationFilter
  }, "id" | "slug" | "sponsorId">

  export type HackathonOrderByWithAggregationInput = {
    id?: SortOrder
    slug?: SortOrder
    name?: SortOrder
    logo?: SortOrder
    sponsorId?: SortOrderInput | SortOrder
    deadline?: SortOrderInput | SortOrder
    startDate?: SortOrderInput | SortOrder
    description?: SortOrder
    altLogo?: SortOrderInput | SortOrder
    announceDate?: SortOrderInput | SortOrder
    eligibility?: SortOrderInput | SortOrder
    _count?: HackathonCountOrderByAggregateInput
    _max?: HackathonMaxOrderByAggregateInput
    _min?: HackathonMinOrderByAggregateInput
  }

  export type HackathonScalarWhereWithAggregatesInput = {
    AND?: HackathonScalarWhereWithAggregatesInput | HackathonScalarWhereWithAggregatesInput[]
    OR?: HackathonScalarWhereWithAggregatesInput[]
    NOT?: HackathonScalarWhereWithAggregatesInput | HackathonScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Hackathon"> | string
    slug?: StringWithAggregatesFilter<"Hackathon"> | string
    name?: StringWithAggregatesFilter<"Hackathon"> | string
    logo?: StringWithAggregatesFilter<"Hackathon"> | string
    sponsorId?: StringNullableWithAggregatesFilter<"Hackathon"> | string | null
    deadline?: DateTimeNullableWithAggregatesFilter<"Hackathon"> | Date | string | null
    startDate?: DateTimeNullableWithAggregatesFilter<"Hackathon"> | Date | string | null
    description?: StringWithAggregatesFilter<"Hackathon"> | string
    altLogo?: StringNullableWithAggregatesFilter<"Hackathon"> | string | null
    announceDate?: DateTimeNullableWithAggregatesFilter<"Hackathon"> | Date | string | null
    eligibility?: JsonNullableWithAggregatesFilter<"Hackathon">
  }

  export type UnsubscribedEmailWhereInput = {
    AND?: UnsubscribedEmailWhereInput | UnsubscribedEmailWhereInput[]
    OR?: UnsubscribedEmailWhereInput[]
    NOT?: UnsubscribedEmailWhereInput | UnsubscribedEmailWhereInput[]
    id?: StringFilter<"UnsubscribedEmail"> | string
    email?: StringFilter<"UnsubscribedEmail"> | string
    createdAt?: DateTimeFilter<"UnsubscribedEmail"> | Date | string
  }

  export type UnsubscribedEmailOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    createdAt?: SortOrder
    _relevance?: UnsubscribedEmailOrderByRelevanceInput
  }

  export type UnsubscribedEmailWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    AND?: UnsubscribedEmailWhereInput | UnsubscribedEmailWhereInput[]
    OR?: UnsubscribedEmailWhereInput[]
    NOT?: UnsubscribedEmailWhereInput | UnsubscribedEmailWhereInput[]
    createdAt?: DateTimeFilter<"UnsubscribedEmail"> | Date | string
  }, "id" | "email">

  export type UnsubscribedEmailOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    createdAt?: SortOrder
    _count?: UnsubscribedEmailCountOrderByAggregateInput
    _max?: UnsubscribedEmailMaxOrderByAggregateInput
    _min?: UnsubscribedEmailMinOrderByAggregateInput
  }

  export type UnsubscribedEmailScalarWhereWithAggregatesInput = {
    AND?: UnsubscribedEmailScalarWhereWithAggregatesInput | UnsubscribedEmailScalarWhereWithAggregatesInput[]
    OR?: UnsubscribedEmailScalarWhereWithAggregatesInput[]
    NOT?: UnsubscribedEmailScalarWhereWithAggregatesInput | UnsubscribedEmailScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"UnsubscribedEmail"> | string
    email?: StringWithAggregatesFilter<"UnsubscribedEmail"> | string
    createdAt?: DateTimeWithAggregatesFilter<"UnsubscribedEmail"> | Date | string
  }

  export type BlockedEmailWhereInput = {
    AND?: BlockedEmailWhereInput | BlockedEmailWhereInput[]
    OR?: BlockedEmailWhereInput[]
    NOT?: BlockedEmailWhereInput | BlockedEmailWhereInput[]
    id?: StringFilter<"BlockedEmail"> | string
    email?: StringFilter<"BlockedEmail"> | string
    createdAt?: DateTimeFilter<"BlockedEmail"> | Date | string
  }

  export type BlockedEmailOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    createdAt?: SortOrder
    _relevance?: BlockedEmailOrderByRelevanceInput
  }

  export type BlockedEmailWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    AND?: BlockedEmailWhereInput | BlockedEmailWhereInput[]
    OR?: BlockedEmailWhereInput[]
    NOT?: BlockedEmailWhereInput | BlockedEmailWhereInput[]
    createdAt?: DateTimeFilter<"BlockedEmail"> | Date | string
  }, "id" | "email">

  export type BlockedEmailOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    createdAt?: SortOrder
    _count?: BlockedEmailCountOrderByAggregateInput
    _max?: BlockedEmailMaxOrderByAggregateInput
    _min?: BlockedEmailMinOrderByAggregateInput
  }

  export type BlockedEmailScalarWhereWithAggregatesInput = {
    AND?: BlockedEmailScalarWhereWithAggregatesInput | BlockedEmailScalarWhereWithAggregatesInput[]
    OR?: BlockedEmailScalarWhereWithAggregatesInput[]
    NOT?: BlockedEmailScalarWhereWithAggregatesInput | BlockedEmailScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"BlockedEmail"> | string
    email?: StringWithAggregatesFilter<"BlockedEmail"> | string
    createdAt?: DateTimeWithAggregatesFilter<"BlockedEmail"> | Date | string
  }

  export type CreditLedgerWhereInput = {
    AND?: CreditLedgerWhereInput | CreditLedgerWhereInput[]
    OR?: CreditLedgerWhereInput[]
    NOT?: CreditLedgerWhereInput | CreditLedgerWhereInput[]
    id?: StringFilter<"CreditLedger"> | string
    userId?: StringFilter<"CreditLedger"> | string
    submissionId?: StringNullableFilter<"CreditLedger"> | string | null
    applicationId?: StringNullableFilter<"CreditLedger"> | string | null
    type?: EnumCreditEventTypeFilter<"CreditLedger"> | $Enums.CreditEventType
    change?: IntFilter<"CreditLedger"> | number
    effectiveMonth?: DateTimeFilter<"CreditLedger"> | Date | string
    createdAt?: DateTimeFilter<"CreditLedger"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    submission?: XOR<SubmissionNullableScalarRelationFilter, SubmissionWhereInput> | null
    application?: XOR<GrantApplicationNullableScalarRelationFilter, GrantApplicationWhereInput> | null
  }

  export type CreditLedgerOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    submissionId?: SortOrderInput | SortOrder
    applicationId?: SortOrderInput | SortOrder
    type?: SortOrder
    change?: SortOrder
    effectiveMonth?: SortOrder
    createdAt?: SortOrder
    user?: UserOrderByWithRelationInput
    submission?: SubmissionOrderByWithRelationInput
    application?: GrantApplicationOrderByWithRelationInput
    _relevance?: CreditLedgerOrderByRelevanceInput
  }

  export type CreditLedgerWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: CreditLedgerWhereInput | CreditLedgerWhereInput[]
    OR?: CreditLedgerWhereInput[]
    NOT?: CreditLedgerWhereInput | CreditLedgerWhereInput[]
    userId?: StringFilter<"CreditLedger"> | string
    submissionId?: StringNullableFilter<"CreditLedger"> | string | null
    applicationId?: StringNullableFilter<"CreditLedger"> | string | null
    type?: EnumCreditEventTypeFilter<"CreditLedger"> | $Enums.CreditEventType
    change?: IntFilter<"CreditLedger"> | number
    effectiveMonth?: DateTimeFilter<"CreditLedger"> | Date | string
    createdAt?: DateTimeFilter<"CreditLedger"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    submission?: XOR<SubmissionNullableScalarRelationFilter, SubmissionWhereInput> | null
    application?: XOR<GrantApplicationNullableScalarRelationFilter, GrantApplicationWhereInput> | null
  }, "id">

  export type CreditLedgerOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    submissionId?: SortOrderInput | SortOrder
    applicationId?: SortOrderInput | SortOrder
    type?: SortOrder
    change?: SortOrder
    effectiveMonth?: SortOrder
    createdAt?: SortOrder
    _count?: CreditLedgerCountOrderByAggregateInput
    _avg?: CreditLedgerAvgOrderByAggregateInput
    _max?: CreditLedgerMaxOrderByAggregateInput
    _min?: CreditLedgerMinOrderByAggregateInput
    _sum?: CreditLedgerSumOrderByAggregateInput
  }

  export type CreditLedgerScalarWhereWithAggregatesInput = {
    AND?: CreditLedgerScalarWhereWithAggregatesInput | CreditLedgerScalarWhereWithAggregatesInput[]
    OR?: CreditLedgerScalarWhereWithAggregatesInput[]
    NOT?: CreditLedgerScalarWhereWithAggregatesInput | CreditLedgerScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"CreditLedger"> | string
    userId?: StringWithAggregatesFilter<"CreditLedger"> | string
    submissionId?: StringNullableWithAggregatesFilter<"CreditLedger"> | string | null
    applicationId?: StringNullableWithAggregatesFilter<"CreditLedger"> | string | null
    type?: EnumCreditEventTypeWithAggregatesFilter<"CreditLedger"> | $Enums.CreditEventType
    change?: IntWithAggregatesFilter<"CreditLedger"> | number
    effectiveMonth?: DateTimeWithAggregatesFilter<"CreditLedger"> | Date | string
    createdAt?: DateTimeWithAggregatesFilter<"CreditLedger"> | Date | string
  }

  export type BountiesCreateInput = {
    id?: string
    title: string
    slug: string
    description?: string | null
    deadline?: Date | string | null
    commitmentDate?: Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.status
    token?: string | null
    rewardAmount?: number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: number
    usdValue?: number | null
    source?: $Enums.Source
    isPublished?: boolean
    isFeatured?: boolean
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    applicationLink?: string | null
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: $Enums.BountyType
    requirements?: string | null
    isWinnersAnnounced?: boolean
    region?: string
    pocSocials?: string | null
    hackathonprize?: boolean
    applicationType?: $Enums.ApplicationType
    timeToComplete?: string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: string | null
    publishedAt?: Date | string | null
    isPrivate?: boolean
    compensationType?: $Enums.CompensationType
    maxRewardAsk?: number | null
    minRewardAsk?: number | null
    language?: string | null
    shouldSendEmail?: boolean
    isFndnPaying?: boolean
    winnersAnnouncedAt?: Date | string | null
    discordMessageIds?: NullableJsonNullValueInput | InputJsonValue
    template?: BountiesTemplatesCreateNestedOneWithoutBountiesInput
    sponsor: SponsorsCreateNestedOneWithoutBountiesInput
    poc: UserCreateNestedOneWithoutPocInput
    Submission?: SubmissionCreateNestedManyWithoutListingInput
    SubscribeBounty?: SubscribeBountyCreateNestedManyWithoutBountiesInput
    Hackathon?: HackathonCreateNestedOneWithoutListingsInput
    Scouts?: ScoutsCreateNestedManyWithoutListingInput
    Comments?: CommentCreateNestedManyWithoutListingInput
  }

  export type BountiesUncheckedCreateInput = {
    id?: string
    title: string
    slug: string
    description?: string | null
    deadline?: Date | string | null
    commitmentDate?: Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.status
    token?: string | null
    rewardAmount?: number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: number
    usdValue?: number | null
    sponsorId: string
    pocId: string
    source?: $Enums.Source
    isPublished?: boolean
    isFeatured?: boolean
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    applicationLink?: string | null
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: $Enums.BountyType
    requirements?: string | null
    isWinnersAnnounced?: boolean
    templateId?: string | null
    region?: string
    pocSocials?: string | null
    hackathonprize?: boolean
    applicationType?: $Enums.ApplicationType
    timeToComplete?: string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: string | null
    publishedAt?: Date | string | null
    isPrivate?: boolean
    hackathonId?: string | null
    compensationType?: $Enums.CompensationType
    maxRewardAsk?: number | null
    minRewardAsk?: number | null
    language?: string | null
    shouldSendEmail?: boolean
    isFndnPaying?: boolean
    winnersAnnouncedAt?: Date | string | null
    discordMessageIds?: NullableJsonNullValueInput | InputJsonValue
    Submission?: SubmissionUncheckedCreateNestedManyWithoutListingInput
    SubscribeBounty?: SubscribeBountyUncheckedCreateNestedManyWithoutBountiesInput
    Scouts?: ScoutsUncheckedCreateNestedManyWithoutListingInput
    Comments?: CommentUncheckedCreateNestedManyWithoutListingInput
  }

  export type BountiesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    commitmentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    token?: NullableStringFieldUpdateOperationsInput | string | null
    rewardAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: IntFieldUpdateOperationsInput | number
    usdValue?: NullableFloatFieldUpdateOperationsInput | number | null
    source?: EnumSourceFieldUpdateOperationsInput | $Enums.Source
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationLink?: NullableStringFieldUpdateOperationsInput | string | null
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: EnumBountyTypeFieldUpdateOperationsInput | $Enums.BountyType
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    isWinnersAnnounced?: BoolFieldUpdateOperationsInput | boolean
    region?: StringFieldUpdateOperationsInput | string
    pocSocials?: NullableStringFieldUpdateOperationsInput | string | null
    hackathonprize?: BoolFieldUpdateOperationsInput | boolean
    applicationType?: EnumApplicationTypeFieldUpdateOperationsInput | $Enums.ApplicationType
    timeToComplete?: NullableStringFieldUpdateOperationsInput | string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    compensationType?: EnumCompensationTypeFieldUpdateOperationsInput | $Enums.CompensationType
    maxRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    minRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    shouldSendEmail?: BoolFieldUpdateOperationsInput | boolean
    isFndnPaying?: BoolFieldUpdateOperationsInput | boolean
    winnersAnnouncedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discordMessageIds?: NullableJsonNullValueInput | InputJsonValue
    template?: BountiesTemplatesUpdateOneWithoutBountiesNestedInput
    sponsor?: SponsorsUpdateOneRequiredWithoutBountiesNestedInput
    poc?: UserUpdateOneRequiredWithoutPocNestedInput
    Submission?: SubmissionUpdateManyWithoutListingNestedInput
    SubscribeBounty?: SubscribeBountyUpdateManyWithoutBountiesNestedInput
    Hackathon?: HackathonUpdateOneWithoutListingsNestedInput
    Scouts?: ScoutsUpdateManyWithoutListingNestedInput
    Comments?: CommentUpdateManyWithoutListingNestedInput
  }

  export type BountiesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    commitmentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    token?: NullableStringFieldUpdateOperationsInput | string | null
    rewardAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: IntFieldUpdateOperationsInput | number
    usdValue?: NullableFloatFieldUpdateOperationsInput | number | null
    sponsorId?: StringFieldUpdateOperationsInput | string
    pocId?: StringFieldUpdateOperationsInput | string
    source?: EnumSourceFieldUpdateOperationsInput | $Enums.Source
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationLink?: NullableStringFieldUpdateOperationsInput | string | null
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: EnumBountyTypeFieldUpdateOperationsInput | $Enums.BountyType
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    isWinnersAnnounced?: BoolFieldUpdateOperationsInput | boolean
    templateId?: NullableStringFieldUpdateOperationsInput | string | null
    region?: StringFieldUpdateOperationsInput | string
    pocSocials?: NullableStringFieldUpdateOperationsInput | string | null
    hackathonprize?: BoolFieldUpdateOperationsInput | boolean
    applicationType?: EnumApplicationTypeFieldUpdateOperationsInput | $Enums.ApplicationType
    timeToComplete?: NullableStringFieldUpdateOperationsInput | string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    hackathonId?: NullableStringFieldUpdateOperationsInput | string | null
    compensationType?: EnumCompensationTypeFieldUpdateOperationsInput | $Enums.CompensationType
    maxRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    minRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    shouldSendEmail?: BoolFieldUpdateOperationsInput | boolean
    isFndnPaying?: BoolFieldUpdateOperationsInput | boolean
    winnersAnnouncedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discordMessageIds?: NullableJsonNullValueInput | InputJsonValue
    Submission?: SubmissionUncheckedUpdateManyWithoutListingNestedInput
    SubscribeBounty?: SubscribeBountyUncheckedUpdateManyWithoutBountiesNestedInput
    Scouts?: ScoutsUncheckedUpdateManyWithoutListingNestedInput
    Comments?: CommentUncheckedUpdateManyWithoutListingNestedInput
  }

  export type BountiesCreateManyInput = {
    id?: string
    title: string
    slug: string
    description?: string | null
    deadline?: Date | string | null
    commitmentDate?: Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.status
    token?: string | null
    rewardAmount?: number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: number
    usdValue?: number | null
    sponsorId: string
    pocId: string
    source?: $Enums.Source
    isPublished?: boolean
    isFeatured?: boolean
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    applicationLink?: string | null
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: $Enums.BountyType
    requirements?: string | null
    isWinnersAnnounced?: boolean
    templateId?: string | null
    region?: string
    pocSocials?: string | null
    hackathonprize?: boolean
    applicationType?: $Enums.ApplicationType
    timeToComplete?: string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: string | null
    publishedAt?: Date | string | null
    isPrivate?: boolean
    hackathonId?: string | null
    compensationType?: $Enums.CompensationType
    maxRewardAsk?: number | null
    minRewardAsk?: number | null
    language?: string | null
    shouldSendEmail?: boolean
    isFndnPaying?: boolean
    winnersAnnouncedAt?: Date | string | null
    discordMessageIds?: NullableJsonNullValueInput | InputJsonValue
  }

  export type BountiesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    commitmentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    token?: NullableStringFieldUpdateOperationsInput | string | null
    rewardAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: IntFieldUpdateOperationsInput | number
    usdValue?: NullableFloatFieldUpdateOperationsInput | number | null
    source?: EnumSourceFieldUpdateOperationsInput | $Enums.Source
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationLink?: NullableStringFieldUpdateOperationsInput | string | null
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: EnumBountyTypeFieldUpdateOperationsInput | $Enums.BountyType
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    isWinnersAnnounced?: BoolFieldUpdateOperationsInput | boolean
    region?: StringFieldUpdateOperationsInput | string
    pocSocials?: NullableStringFieldUpdateOperationsInput | string | null
    hackathonprize?: BoolFieldUpdateOperationsInput | boolean
    applicationType?: EnumApplicationTypeFieldUpdateOperationsInput | $Enums.ApplicationType
    timeToComplete?: NullableStringFieldUpdateOperationsInput | string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    compensationType?: EnumCompensationTypeFieldUpdateOperationsInput | $Enums.CompensationType
    maxRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    minRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    shouldSendEmail?: BoolFieldUpdateOperationsInput | boolean
    isFndnPaying?: BoolFieldUpdateOperationsInput | boolean
    winnersAnnouncedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discordMessageIds?: NullableJsonNullValueInput | InputJsonValue
  }

  export type BountiesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    commitmentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    token?: NullableStringFieldUpdateOperationsInput | string | null
    rewardAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: IntFieldUpdateOperationsInput | number
    usdValue?: NullableFloatFieldUpdateOperationsInput | number | null
    sponsorId?: StringFieldUpdateOperationsInput | string
    pocId?: StringFieldUpdateOperationsInput | string
    source?: EnumSourceFieldUpdateOperationsInput | $Enums.Source
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationLink?: NullableStringFieldUpdateOperationsInput | string | null
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: EnumBountyTypeFieldUpdateOperationsInput | $Enums.BountyType
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    isWinnersAnnounced?: BoolFieldUpdateOperationsInput | boolean
    templateId?: NullableStringFieldUpdateOperationsInput | string | null
    region?: StringFieldUpdateOperationsInput | string
    pocSocials?: NullableStringFieldUpdateOperationsInput | string | null
    hackathonprize?: BoolFieldUpdateOperationsInput | boolean
    applicationType?: EnumApplicationTypeFieldUpdateOperationsInput | $Enums.ApplicationType
    timeToComplete?: NullableStringFieldUpdateOperationsInput | string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    hackathonId?: NullableStringFieldUpdateOperationsInput | string | null
    compensationType?: EnumCompensationTypeFieldUpdateOperationsInput | $Enums.CompensationType
    maxRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    minRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    shouldSendEmail?: BoolFieldUpdateOperationsInput | boolean
    isFndnPaying?: BoolFieldUpdateOperationsInput | boolean
    winnersAnnouncedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discordMessageIds?: NullableJsonNullValueInput | InputJsonValue
  }

  export type BountiesTemplatesCreateInput = {
    id?: string
    title?: string | null
    deadline?: Date | string | null
    slug?: string | null
    description?: string | null
    color?: string | null
    emoji?: string | null
    isFeatured?: boolean
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: $Enums.BountyType
    requirements?: string | null
    region?: string
    applicationType?: $Enums.ApplicationType
    status?: $Enums.status
    timeToComplete?: string | null
    token?: string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: string | null
    publishedAt?: Date | string | null
    compensationType?: $Enums.CompensationType
    maxRewardAsk?: number | null
    minRewardAsk?: number | null
    language?: string | null
    rewardAmount?: number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: number
    usdValue?: number | null
    pocSocials?: string | null
    source?: $Enums.Source
    isPublished?: boolean
    Bounties?: BountiesCreateNestedManyWithoutTemplateInput
    sponsor: SponsorsCreateNestedOneWithoutTemplatesInput
    poc: UserCreateNestedOneWithoutTemplatesInput
  }

  export type BountiesTemplatesUncheckedCreateInput = {
    id?: string
    title?: string | null
    deadline?: Date | string | null
    slug?: string | null
    description?: string | null
    color?: string | null
    emoji?: string | null
    isFeatured?: boolean
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: $Enums.BountyType
    requirements?: string | null
    region?: string
    applicationType?: $Enums.ApplicationType
    status?: $Enums.status
    timeToComplete?: string | null
    token?: string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: string | null
    publishedAt?: Date | string | null
    compensationType?: $Enums.CompensationType
    maxRewardAsk?: number | null
    minRewardAsk?: number | null
    language?: string | null
    rewardAmount?: number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: number
    usdValue?: number | null
    sponsorId: string
    pocId: string
    pocSocials?: string | null
    source?: $Enums.Source
    isPublished?: boolean
    Bounties?: BountiesUncheckedCreateNestedManyWithoutTemplateInput
  }

  export type BountiesTemplatesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    emoji?: NullableStringFieldUpdateOperationsInput | string | null
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: EnumBountyTypeFieldUpdateOperationsInput | $Enums.BountyType
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    region?: StringFieldUpdateOperationsInput | string
    applicationType?: EnumApplicationTypeFieldUpdateOperationsInput | $Enums.ApplicationType
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    timeToComplete?: NullableStringFieldUpdateOperationsInput | string | null
    token?: NullableStringFieldUpdateOperationsInput | string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    compensationType?: EnumCompensationTypeFieldUpdateOperationsInput | $Enums.CompensationType
    maxRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    minRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    rewardAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: IntFieldUpdateOperationsInput | number
    usdValue?: NullableFloatFieldUpdateOperationsInput | number | null
    pocSocials?: NullableStringFieldUpdateOperationsInput | string | null
    source?: EnumSourceFieldUpdateOperationsInput | $Enums.Source
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    Bounties?: BountiesUpdateManyWithoutTemplateNestedInput
    sponsor?: SponsorsUpdateOneRequiredWithoutTemplatesNestedInput
    poc?: UserUpdateOneRequiredWithoutTemplatesNestedInput
  }

  export type BountiesTemplatesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    emoji?: NullableStringFieldUpdateOperationsInput | string | null
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: EnumBountyTypeFieldUpdateOperationsInput | $Enums.BountyType
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    region?: StringFieldUpdateOperationsInput | string
    applicationType?: EnumApplicationTypeFieldUpdateOperationsInput | $Enums.ApplicationType
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    timeToComplete?: NullableStringFieldUpdateOperationsInput | string | null
    token?: NullableStringFieldUpdateOperationsInput | string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    compensationType?: EnumCompensationTypeFieldUpdateOperationsInput | $Enums.CompensationType
    maxRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    minRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    rewardAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: IntFieldUpdateOperationsInput | number
    usdValue?: NullableFloatFieldUpdateOperationsInput | number | null
    sponsorId?: StringFieldUpdateOperationsInput | string
    pocId?: StringFieldUpdateOperationsInput | string
    pocSocials?: NullableStringFieldUpdateOperationsInput | string | null
    source?: EnumSourceFieldUpdateOperationsInput | $Enums.Source
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    Bounties?: BountiesUncheckedUpdateManyWithoutTemplateNestedInput
  }

  export type BountiesTemplatesCreateManyInput = {
    id?: string
    title?: string | null
    deadline?: Date | string | null
    slug?: string | null
    description?: string | null
    color?: string | null
    emoji?: string | null
    isFeatured?: boolean
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: $Enums.BountyType
    requirements?: string | null
    region?: string
    applicationType?: $Enums.ApplicationType
    status?: $Enums.status
    timeToComplete?: string | null
    token?: string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: string | null
    publishedAt?: Date | string | null
    compensationType?: $Enums.CompensationType
    maxRewardAsk?: number | null
    minRewardAsk?: number | null
    language?: string | null
    rewardAmount?: number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: number
    usdValue?: number | null
    sponsorId: string
    pocId: string
    pocSocials?: string | null
    source?: $Enums.Source
    isPublished?: boolean
  }

  export type BountiesTemplatesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    emoji?: NullableStringFieldUpdateOperationsInput | string | null
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: EnumBountyTypeFieldUpdateOperationsInput | $Enums.BountyType
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    region?: StringFieldUpdateOperationsInput | string
    applicationType?: EnumApplicationTypeFieldUpdateOperationsInput | $Enums.ApplicationType
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    timeToComplete?: NullableStringFieldUpdateOperationsInput | string | null
    token?: NullableStringFieldUpdateOperationsInput | string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    compensationType?: EnumCompensationTypeFieldUpdateOperationsInput | $Enums.CompensationType
    maxRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    minRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    rewardAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: IntFieldUpdateOperationsInput | number
    usdValue?: NullableFloatFieldUpdateOperationsInput | number | null
    pocSocials?: NullableStringFieldUpdateOperationsInput | string | null
    source?: EnumSourceFieldUpdateOperationsInput | $Enums.Source
    isPublished?: BoolFieldUpdateOperationsInput | boolean
  }

  export type BountiesTemplatesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    emoji?: NullableStringFieldUpdateOperationsInput | string | null
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: EnumBountyTypeFieldUpdateOperationsInput | $Enums.BountyType
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    region?: StringFieldUpdateOperationsInput | string
    applicationType?: EnumApplicationTypeFieldUpdateOperationsInput | $Enums.ApplicationType
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    timeToComplete?: NullableStringFieldUpdateOperationsInput | string | null
    token?: NullableStringFieldUpdateOperationsInput | string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    compensationType?: EnumCompensationTypeFieldUpdateOperationsInput | $Enums.CompensationType
    maxRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    minRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    rewardAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: IntFieldUpdateOperationsInput | number
    usdValue?: NullableFloatFieldUpdateOperationsInput | number | null
    sponsorId?: StringFieldUpdateOperationsInput | string
    pocId?: StringFieldUpdateOperationsInput | string
    pocSocials?: NullableStringFieldUpdateOperationsInput | string | null
    source?: EnumSourceFieldUpdateOperationsInput | $Enums.Source
    isPublished?: BoolFieldUpdateOperationsInput | boolean
  }

  export type CommentCreateInput = {
    id?: string
    message: string
    refType?: $Enums.CommentRefType
    isActive?: boolean
    isArchived?: boolean
    isPinned?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    submissionId?: string | null
    type?: $Enums.CommentType
    author: UserCreateNestedOneWithoutCommentInput
    repliedTo?: CommentCreateNestedOneWithoutRepliesInput
    replies?: CommentCreateNestedManyWithoutRepliedToInput
    listing?: BountiesCreateNestedOneWithoutCommentsInput
    submission?: SubmissionCreateNestedOneWithoutCommentsInput
    pow?: PoWCreateNestedOneWithoutCommentsInput
    GrantApplication?: GrantApplicationCreateNestedOneWithoutCommentsInput
  }

  export type CommentUncheckedCreateInput = {
    id?: string
    message: string
    authorId: string
    refType?: $Enums.CommentRefType
    refId: string
    isActive?: boolean
    isArchived?: boolean
    isPinned?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    replyToId?: string | null
    submissionId?: string | null
    type?: $Enums.CommentType
    replies?: CommentUncheckedCreateNestedManyWithoutRepliedToInput
  }

  export type CommentUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    refType?: EnumCommentRefTypeFieldUpdateOperationsInput | $Enums.CommentRefType
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    isPinned?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    submissionId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCommentTypeFieldUpdateOperationsInput | $Enums.CommentType
    author?: UserUpdateOneRequiredWithoutCommentNestedInput
    repliedTo?: CommentUpdateOneWithoutRepliesNestedInput
    replies?: CommentUpdateManyWithoutRepliedToNestedInput
    listing?: BountiesUpdateOneWithoutCommentsNestedInput
    submission?: SubmissionUpdateOneWithoutCommentsNestedInput
    pow?: PoWUpdateOneWithoutCommentsNestedInput
    GrantApplication?: GrantApplicationUpdateOneWithoutCommentsNestedInput
  }

  export type CommentUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    authorId?: StringFieldUpdateOperationsInput | string
    refType?: EnumCommentRefTypeFieldUpdateOperationsInput | $Enums.CommentRefType
    refId?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    isPinned?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    replyToId?: NullableStringFieldUpdateOperationsInput | string | null
    submissionId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCommentTypeFieldUpdateOperationsInput | $Enums.CommentType
    replies?: CommentUncheckedUpdateManyWithoutRepliedToNestedInput
  }

  export type CommentCreateManyInput = {
    id?: string
    message: string
    authorId: string
    refType?: $Enums.CommentRefType
    refId: string
    isActive?: boolean
    isArchived?: boolean
    isPinned?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    replyToId?: string | null
    submissionId?: string | null
    type?: $Enums.CommentType
  }

  export type CommentUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    refType?: EnumCommentRefTypeFieldUpdateOperationsInput | $Enums.CommentRefType
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    isPinned?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    submissionId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCommentTypeFieldUpdateOperationsInput | $Enums.CommentType
  }

  export type CommentUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    authorId?: StringFieldUpdateOperationsInput | string
    refType?: EnumCommentRefTypeFieldUpdateOperationsInput | $Enums.CommentRefType
    refId?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    isPinned?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    replyToId?: NullableStringFieldUpdateOperationsInput | string | null
    submissionId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCommentTypeFieldUpdateOperationsInput | $Enums.CommentType
  }

  export type GrantsCreateInput = {
    id?: string
    title: string
    slug: string
    description?: string | null
    shortDescription?: string | null
    token?: string | null
    minReward?: number | null
    maxReward?: number | null
    totalPaid?: number
    totalApproved?: number
    historicalApplications?: number
    historicalPaid?: number
    link?: string | null
    isPublished?: boolean
    isFeatured?: boolean
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    skills?: NullableJsonNullValueInput | InputJsonValue
    logo?: string | null
    region?: string
    questions?: NullableJsonNullValueInput | InputJsonValue
    pocSocials?: string | null
    status?: $Enums.GrantStatus
    airtableId?: string | null
    avgResponseTime?: string | null
    isNative?: boolean
    isPrivate?: boolean
    references?: NullableJsonNullValueInput | InputJsonValue
    ai?: NullableJsonNullValueInput | InputJsonValue
    approverRecordId?: string | null
    emailSender?: string | null
    replyToEmail?: string | null
    emailSalutation?: string | null
    communityLink?: string | null
    sponsor: SponsorsCreateNestedOneWithoutGrantsInput
    poc: UserCreateNestedOneWithoutGrantsInput
    GrantApplication?: GrantApplicationCreateNestedManyWithoutGrantInput
    GrantTranche?: GrantTrancheCreateNestedManyWithoutGrantInput
  }

  export type GrantsUncheckedCreateInput = {
    id?: string
    title: string
    slug: string
    description?: string | null
    shortDescription?: string | null
    token?: string | null
    minReward?: number | null
    maxReward?: number | null
    totalPaid?: number
    totalApproved?: number
    historicalApplications?: number
    historicalPaid?: number
    link?: string | null
    sponsorId: string
    pocId: string
    isPublished?: boolean
    isFeatured?: boolean
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    skills?: NullableJsonNullValueInput | InputJsonValue
    logo?: string | null
    region?: string
    questions?: NullableJsonNullValueInput | InputJsonValue
    pocSocials?: string | null
    status?: $Enums.GrantStatus
    airtableId?: string | null
    avgResponseTime?: string | null
    isNative?: boolean
    isPrivate?: boolean
    references?: NullableJsonNullValueInput | InputJsonValue
    ai?: NullableJsonNullValueInput | InputJsonValue
    approverRecordId?: string | null
    emailSender?: string | null
    replyToEmail?: string | null
    emailSalutation?: string | null
    communityLink?: string | null
    GrantApplication?: GrantApplicationUncheckedCreateNestedManyWithoutGrantInput
    GrantTranche?: GrantTrancheUncheckedCreateNestedManyWithoutGrantInput
  }

  export type GrantsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    token?: NullableStringFieldUpdateOperationsInput | string | null
    minReward?: NullableFloatFieldUpdateOperationsInput | number | null
    maxReward?: NullableFloatFieldUpdateOperationsInput | number | null
    totalPaid?: FloatFieldUpdateOperationsInput | number
    totalApproved?: FloatFieldUpdateOperationsInput | number
    historicalApplications?: IntFieldUpdateOperationsInput | number
    historicalPaid?: FloatFieldUpdateOperationsInput | number
    link?: NullableStringFieldUpdateOperationsInput | string | null
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    skills?: NullableJsonNullValueInput | InputJsonValue
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    region?: StringFieldUpdateOperationsInput | string
    questions?: NullableJsonNullValueInput | InputJsonValue
    pocSocials?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumGrantStatusFieldUpdateOperationsInput | $Enums.GrantStatus
    airtableId?: NullableStringFieldUpdateOperationsInput | string | null
    avgResponseTime?: NullableStringFieldUpdateOperationsInput | string | null
    isNative?: BoolFieldUpdateOperationsInput | boolean
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    references?: NullableJsonNullValueInput | InputJsonValue
    ai?: NullableJsonNullValueInput | InputJsonValue
    approverRecordId?: NullableStringFieldUpdateOperationsInput | string | null
    emailSender?: NullableStringFieldUpdateOperationsInput | string | null
    replyToEmail?: NullableStringFieldUpdateOperationsInput | string | null
    emailSalutation?: NullableStringFieldUpdateOperationsInput | string | null
    communityLink?: NullableStringFieldUpdateOperationsInput | string | null
    sponsor?: SponsorsUpdateOneRequiredWithoutGrantsNestedInput
    poc?: UserUpdateOneRequiredWithoutGrantsNestedInput
    GrantApplication?: GrantApplicationUpdateManyWithoutGrantNestedInput
    GrantTranche?: GrantTrancheUpdateManyWithoutGrantNestedInput
  }

  export type GrantsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    token?: NullableStringFieldUpdateOperationsInput | string | null
    minReward?: NullableFloatFieldUpdateOperationsInput | number | null
    maxReward?: NullableFloatFieldUpdateOperationsInput | number | null
    totalPaid?: FloatFieldUpdateOperationsInput | number
    totalApproved?: FloatFieldUpdateOperationsInput | number
    historicalApplications?: IntFieldUpdateOperationsInput | number
    historicalPaid?: FloatFieldUpdateOperationsInput | number
    link?: NullableStringFieldUpdateOperationsInput | string | null
    sponsorId?: StringFieldUpdateOperationsInput | string
    pocId?: StringFieldUpdateOperationsInput | string
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    skills?: NullableJsonNullValueInput | InputJsonValue
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    region?: StringFieldUpdateOperationsInput | string
    questions?: NullableJsonNullValueInput | InputJsonValue
    pocSocials?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumGrantStatusFieldUpdateOperationsInput | $Enums.GrantStatus
    airtableId?: NullableStringFieldUpdateOperationsInput | string | null
    avgResponseTime?: NullableStringFieldUpdateOperationsInput | string | null
    isNative?: BoolFieldUpdateOperationsInput | boolean
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    references?: NullableJsonNullValueInput | InputJsonValue
    ai?: NullableJsonNullValueInput | InputJsonValue
    approverRecordId?: NullableStringFieldUpdateOperationsInput | string | null
    emailSender?: NullableStringFieldUpdateOperationsInput | string | null
    replyToEmail?: NullableStringFieldUpdateOperationsInput | string | null
    emailSalutation?: NullableStringFieldUpdateOperationsInput | string | null
    communityLink?: NullableStringFieldUpdateOperationsInput | string | null
    GrantApplication?: GrantApplicationUncheckedUpdateManyWithoutGrantNestedInput
    GrantTranche?: GrantTrancheUncheckedUpdateManyWithoutGrantNestedInput
  }

  export type GrantsCreateManyInput = {
    id?: string
    title: string
    slug: string
    description?: string | null
    shortDescription?: string | null
    token?: string | null
    minReward?: number | null
    maxReward?: number | null
    totalPaid?: number
    totalApproved?: number
    historicalApplications?: number
    historicalPaid?: number
    link?: string | null
    sponsorId: string
    pocId: string
    isPublished?: boolean
    isFeatured?: boolean
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    skills?: NullableJsonNullValueInput | InputJsonValue
    logo?: string | null
    region?: string
    questions?: NullableJsonNullValueInput | InputJsonValue
    pocSocials?: string | null
    status?: $Enums.GrantStatus
    airtableId?: string | null
    avgResponseTime?: string | null
    isNative?: boolean
    isPrivate?: boolean
    references?: NullableJsonNullValueInput | InputJsonValue
    ai?: NullableJsonNullValueInput | InputJsonValue
    approverRecordId?: string | null
    emailSender?: string | null
    replyToEmail?: string | null
    emailSalutation?: string | null
    communityLink?: string | null
  }

  export type GrantsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    token?: NullableStringFieldUpdateOperationsInput | string | null
    minReward?: NullableFloatFieldUpdateOperationsInput | number | null
    maxReward?: NullableFloatFieldUpdateOperationsInput | number | null
    totalPaid?: FloatFieldUpdateOperationsInput | number
    totalApproved?: FloatFieldUpdateOperationsInput | number
    historicalApplications?: IntFieldUpdateOperationsInput | number
    historicalPaid?: FloatFieldUpdateOperationsInput | number
    link?: NullableStringFieldUpdateOperationsInput | string | null
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    skills?: NullableJsonNullValueInput | InputJsonValue
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    region?: StringFieldUpdateOperationsInput | string
    questions?: NullableJsonNullValueInput | InputJsonValue
    pocSocials?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumGrantStatusFieldUpdateOperationsInput | $Enums.GrantStatus
    airtableId?: NullableStringFieldUpdateOperationsInput | string | null
    avgResponseTime?: NullableStringFieldUpdateOperationsInput | string | null
    isNative?: BoolFieldUpdateOperationsInput | boolean
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    references?: NullableJsonNullValueInput | InputJsonValue
    ai?: NullableJsonNullValueInput | InputJsonValue
    approverRecordId?: NullableStringFieldUpdateOperationsInput | string | null
    emailSender?: NullableStringFieldUpdateOperationsInput | string | null
    replyToEmail?: NullableStringFieldUpdateOperationsInput | string | null
    emailSalutation?: NullableStringFieldUpdateOperationsInput | string | null
    communityLink?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type GrantsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    token?: NullableStringFieldUpdateOperationsInput | string | null
    minReward?: NullableFloatFieldUpdateOperationsInput | number | null
    maxReward?: NullableFloatFieldUpdateOperationsInput | number | null
    totalPaid?: FloatFieldUpdateOperationsInput | number
    totalApproved?: FloatFieldUpdateOperationsInput | number
    historicalApplications?: IntFieldUpdateOperationsInput | number
    historicalPaid?: FloatFieldUpdateOperationsInput | number
    link?: NullableStringFieldUpdateOperationsInput | string | null
    sponsorId?: StringFieldUpdateOperationsInput | string
    pocId?: StringFieldUpdateOperationsInput | string
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    skills?: NullableJsonNullValueInput | InputJsonValue
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    region?: StringFieldUpdateOperationsInput | string
    questions?: NullableJsonNullValueInput | InputJsonValue
    pocSocials?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumGrantStatusFieldUpdateOperationsInput | $Enums.GrantStatus
    airtableId?: NullableStringFieldUpdateOperationsInput | string | null
    avgResponseTime?: NullableStringFieldUpdateOperationsInput | string | null
    isNative?: BoolFieldUpdateOperationsInput | boolean
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    references?: NullableJsonNullValueInput | InputJsonValue
    ai?: NullableJsonNullValueInput | InputJsonValue
    approverRecordId?: NullableStringFieldUpdateOperationsInput | string | null
    emailSender?: NullableStringFieldUpdateOperationsInput | string | null
    replyToEmail?: NullableStringFieldUpdateOperationsInput | string | null
    emailSalutation?: NullableStringFieldUpdateOperationsInput | string | null
    communityLink?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type GrantApplicationCreateInput = {
    id?: string
    applicationStatus?: $Enums.GrantApplicationStatus
    projectTitle: string
    projectOneLiner: string
    projectDetails: string
    projectTimeline: string
    proofOfWork: string
    walletAddress: string
    twitter?: string | null
    github?: string | null
    milestones?: string | null
    kpi?: string | null
    answers?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    label?: $Enums.SubmissionLabels
    ask?: number
    approvedAmount?: number
    approvedAmountInUSD?: number
    decidedAt?: Date | string | null
    totalPaid?: number
    isShipped?: boolean
    paymentDetails?: NullableJsonNullValueInput | InputJsonValue
    totalTranches?: number
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: number
    decidedBy?: string | null
    notes?: string | null
    ai?: NullableJsonNullValueInput | InputJsonValue
    user: UserCreateNestedOneWithoutGrantApplicationInput
    grant: GrantsCreateNestedOneWithoutGrantApplicationInput
    Comments?: CommentCreateNestedManyWithoutGrantApplicationInput
    GrantTranche?: GrantTrancheCreateNestedManyWithoutGrantApplicationInput
    CreditLedger?: CreditLedgerCreateNestedManyWithoutApplicationInput
  }

  export type GrantApplicationUncheckedCreateInput = {
    id?: string
    userId: string
    grantId: string
    applicationStatus?: $Enums.GrantApplicationStatus
    projectTitle: string
    projectOneLiner: string
    projectDetails: string
    projectTimeline: string
    proofOfWork: string
    walletAddress: string
    twitter?: string | null
    github?: string | null
    milestones?: string | null
    kpi?: string | null
    answers?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    label?: $Enums.SubmissionLabels
    ask?: number
    approvedAmount?: number
    approvedAmountInUSD?: number
    decidedAt?: Date | string | null
    totalPaid?: number
    isShipped?: boolean
    paymentDetails?: NullableJsonNullValueInput | InputJsonValue
    totalTranches?: number
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: number
    decidedBy?: string | null
    notes?: string | null
    ai?: NullableJsonNullValueInput | InputJsonValue
    Comments?: CommentUncheckedCreateNestedManyWithoutGrantApplicationInput
    GrantTranche?: GrantTrancheUncheckedCreateNestedManyWithoutGrantApplicationInput
    CreditLedger?: CreditLedgerUncheckedCreateNestedManyWithoutApplicationInput
  }

  export type GrantApplicationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    applicationStatus?: EnumGrantApplicationStatusFieldUpdateOperationsInput | $Enums.GrantApplicationStatus
    projectTitle?: StringFieldUpdateOperationsInput | string
    projectOneLiner?: StringFieldUpdateOperationsInput | string
    projectDetails?: StringFieldUpdateOperationsInput | string
    projectTimeline?: StringFieldUpdateOperationsInput | string
    proofOfWork?: StringFieldUpdateOperationsInput | string
    walletAddress?: StringFieldUpdateOperationsInput | string
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    milestones?: NullableStringFieldUpdateOperationsInput | string | null
    kpi?: NullableStringFieldUpdateOperationsInput | string | null
    answers?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    label?: EnumSubmissionLabelsFieldUpdateOperationsInput | $Enums.SubmissionLabels
    ask?: FloatFieldUpdateOperationsInput | number
    approvedAmount?: FloatFieldUpdateOperationsInput | number
    approvedAmountInUSD?: FloatFieldUpdateOperationsInput | number
    decidedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalPaid?: FloatFieldUpdateOperationsInput | number
    isShipped?: BoolFieldUpdateOperationsInput | boolean
    paymentDetails?: NullableJsonNullValueInput | InputJsonValue
    totalTranches?: IntFieldUpdateOperationsInput | number
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: IntFieldUpdateOperationsInput | number
    decidedBy?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    ai?: NullableJsonNullValueInput | InputJsonValue
    user?: UserUpdateOneRequiredWithoutGrantApplicationNestedInput
    grant?: GrantsUpdateOneRequiredWithoutGrantApplicationNestedInput
    Comments?: CommentUpdateManyWithoutGrantApplicationNestedInput
    GrantTranche?: GrantTrancheUpdateManyWithoutGrantApplicationNestedInput
    CreditLedger?: CreditLedgerUpdateManyWithoutApplicationNestedInput
  }

  export type GrantApplicationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    grantId?: StringFieldUpdateOperationsInput | string
    applicationStatus?: EnumGrantApplicationStatusFieldUpdateOperationsInput | $Enums.GrantApplicationStatus
    projectTitle?: StringFieldUpdateOperationsInput | string
    projectOneLiner?: StringFieldUpdateOperationsInput | string
    projectDetails?: StringFieldUpdateOperationsInput | string
    projectTimeline?: StringFieldUpdateOperationsInput | string
    proofOfWork?: StringFieldUpdateOperationsInput | string
    walletAddress?: StringFieldUpdateOperationsInput | string
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    milestones?: NullableStringFieldUpdateOperationsInput | string | null
    kpi?: NullableStringFieldUpdateOperationsInput | string | null
    answers?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    label?: EnumSubmissionLabelsFieldUpdateOperationsInput | $Enums.SubmissionLabels
    ask?: FloatFieldUpdateOperationsInput | number
    approvedAmount?: FloatFieldUpdateOperationsInput | number
    approvedAmountInUSD?: FloatFieldUpdateOperationsInput | number
    decidedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalPaid?: FloatFieldUpdateOperationsInput | number
    isShipped?: BoolFieldUpdateOperationsInput | boolean
    paymentDetails?: NullableJsonNullValueInput | InputJsonValue
    totalTranches?: IntFieldUpdateOperationsInput | number
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: IntFieldUpdateOperationsInput | number
    decidedBy?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    ai?: NullableJsonNullValueInput | InputJsonValue
    Comments?: CommentUncheckedUpdateManyWithoutGrantApplicationNestedInput
    GrantTranche?: GrantTrancheUncheckedUpdateManyWithoutGrantApplicationNestedInput
    CreditLedger?: CreditLedgerUncheckedUpdateManyWithoutApplicationNestedInput
  }

  export type GrantApplicationCreateManyInput = {
    id?: string
    userId: string
    grantId: string
    applicationStatus?: $Enums.GrantApplicationStatus
    projectTitle: string
    projectOneLiner: string
    projectDetails: string
    projectTimeline: string
    proofOfWork: string
    walletAddress: string
    twitter?: string | null
    github?: string | null
    milestones?: string | null
    kpi?: string | null
    answers?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    label?: $Enums.SubmissionLabels
    ask?: number
    approvedAmount?: number
    approvedAmountInUSD?: number
    decidedAt?: Date | string | null
    totalPaid?: number
    isShipped?: boolean
    paymentDetails?: NullableJsonNullValueInput | InputJsonValue
    totalTranches?: number
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: number
    decidedBy?: string | null
    notes?: string | null
    ai?: NullableJsonNullValueInput | InputJsonValue
  }

  export type GrantApplicationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    applicationStatus?: EnumGrantApplicationStatusFieldUpdateOperationsInput | $Enums.GrantApplicationStatus
    projectTitle?: StringFieldUpdateOperationsInput | string
    projectOneLiner?: StringFieldUpdateOperationsInput | string
    projectDetails?: StringFieldUpdateOperationsInput | string
    projectTimeline?: StringFieldUpdateOperationsInput | string
    proofOfWork?: StringFieldUpdateOperationsInput | string
    walletAddress?: StringFieldUpdateOperationsInput | string
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    milestones?: NullableStringFieldUpdateOperationsInput | string | null
    kpi?: NullableStringFieldUpdateOperationsInput | string | null
    answers?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    label?: EnumSubmissionLabelsFieldUpdateOperationsInput | $Enums.SubmissionLabels
    ask?: FloatFieldUpdateOperationsInput | number
    approvedAmount?: FloatFieldUpdateOperationsInput | number
    approvedAmountInUSD?: FloatFieldUpdateOperationsInput | number
    decidedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalPaid?: FloatFieldUpdateOperationsInput | number
    isShipped?: BoolFieldUpdateOperationsInput | boolean
    paymentDetails?: NullableJsonNullValueInput | InputJsonValue
    totalTranches?: IntFieldUpdateOperationsInput | number
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: IntFieldUpdateOperationsInput | number
    decidedBy?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    ai?: NullableJsonNullValueInput | InputJsonValue
  }

  export type GrantApplicationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    grantId?: StringFieldUpdateOperationsInput | string
    applicationStatus?: EnumGrantApplicationStatusFieldUpdateOperationsInput | $Enums.GrantApplicationStatus
    projectTitle?: StringFieldUpdateOperationsInput | string
    projectOneLiner?: StringFieldUpdateOperationsInput | string
    projectDetails?: StringFieldUpdateOperationsInput | string
    projectTimeline?: StringFieldUpdateOperationsInput | string
    proofOfWork?: StringFieldUpdateOperationsInput | string
    walletAddress?: StringFieldUpdateOperationsInput | string
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    milestones?: NullableStringFieldUpdateOperationsInput | string | null
    kpi?: NullableStringFieldUpdateOperationsInput | string | null
    answers?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    label?: EnumSubmissionLabelsFieldUpdateOperationsInput | $Enums.SubmissionLabels
    ask?: FloatFieldUpdateOperationsInput | number
    approvedAmount?: FloatFieldUpdateOperationsInput | number
    approvedAmountInUSD?: FloatFieldUpdateOperationsInput | number
    decidedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalPaid?: FloatFieldUpdateOperationsInput | number
    isShipped?: BoolFieldUpdateOperationsInput | boolean
    paymentDetails?: NullableJsonNullValueInput | InputJsonValue
    totalTranches?: IntFieldUpdateOperationsInput | number
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: IntFieldUpdateOperationsInput | number
    decidedBy?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    ai?: NullableJsonNullValueInput | InputJsonValue
  }

  export type GrantTrancheCreateInput = {
    id?: string
    ask: number
    update?: string | null
    helpWanted?: string | null
    status?: $Enums.GrantTrancheStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    approvedAmount?: number | null
    decidedAt?: Date | string | null
    trancheNumber: number
    GrantApplication: GrantApplicationCreateNestedOneWithoutGrantTrancheInput
    Grant: GrantsCreateNestedOneWithoutGrantTrancheInput
  }

  export type GrantTrancheUncheckedCreateInput = {
    id?: string
    applicationId: string
    grantId: string
    ask: number
    update?: string | null
    helpWanted?: string | null
    status?: $Enums.GrantTrancheStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    approvedAmount?: number | null
    decidedAt?: Date | string | null
    trancheNumber: number
  }

  export type GrantTrancheUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    ask?: FloatFieldUpdateOperationsInput | number
    update?: NullableStringFieldUpdateOperationsInput | string | null
    helpWanted?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumGrantTrancheStatusFieldUpdateOperationsInput | $Enums.GrantTrancheStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    approvedAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    decidedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trancheNumber?: IntFieldUpdateOperationsInput | number
    GrantApplication?: GrantApplicationUpdateOneRequiredWithoutGrantTrancheNestedInput
    Grant?: GrantsUpdateOneRequiredWithoutGrantTrancheNestedInput
  }

  export type GrantTrancheUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    applicationId?: StringFieldUpdateOperationsInput | string
    grantId?: StringFieldUpdateOperationsInput | string
    ask?: FloatFieldUpdateOperationsInput | number
    update?: NullableStringFieldUpdateOperationsInput | string | null
    helpWanted?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumGrantTrancheStatusFieldUpdateOperationsInput | $Enums.GrantTrancheStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    approvedAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    decidedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trancheNumber?: IntFieldUpdateOperationsInput | number
  }

  export type GrantTrancheCreateManyInput = {
    id?: string
    applicationId: string
    grantId: string
    ask: number
    update?: string | null
    helpWanted?: string | null
    status?: $Enums.GrantTrancheStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    approvedAmount?: number | null
    decidedAt?: Date | string | null
    trancheNumber: number
  }

  export type GrantTrancheUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    ask?: FloatFieldUpdateOperationsInput | number
    update?: NullableStringFieldUpdateOperationsInput | string | null
    helpWanted?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumGrantTrancheStatusFieldUpdateOperationsInput | $Enums.GrantTrancheStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    approvedAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    decidedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trancheNumber?: IntFieldUpdateOperationsInput | number
  }

  export type GrantTrancheUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    applicationId?: StringFieldUpdateOperationsInput | string
    grantId?: StringFieldUpdateOperationsInput | string
    ask?: FloatFieldUpdateOperationsInput | number
    update?: NullableStringFieldUpdateOperationsInput | string | null
    helpWanted?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumGrantTrancheStatusFieldUpdateOperationsInput | $Enums.GrantTrancheStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    approvedAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    decidedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trancheNumber?: IntFieldUpdateOperationsInput | number
  }

  export type SubmissionCreateInput = {
    id?: string
    link?: string | null
    tweet?: string | null
    status?: $Enums.SubmissionStatus
    eligibilityAnswers?: NullableJsonNullValueInput | InputJsonValue
    isWinner?: boolean
    winnerPosition?: number | null
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: number
    isPaid?: boolean
    paymentDetails?: NullableJsonNullValueInput | InputJsonValue
    otherInfo?: string | null
    ask?: number | null
    label?: $Enums.SubmissionLabels
    rewardInUSD?: number
    ogImage?: string | null
    notes?: string | null
    listing: BountiesCreateNestedOneWithoutSubmissionInput
    user: UserCreateNestedOneWithoutSubmissionInput
    Comments?: CommentCreateNestedManyWithoutSubmissionInput
    CreditLedger?: CreditLedgerCreateNestedManyWithoutSubmissionInput
  }

  export type SubmissionUncheckedCreateInput = {
    id?: string
    link?: string | null
    tweet?: string | null
    status?: $Enums.SubmissionStatus
    eligibilityAnswers?: NullableJsonNullValueInput | InputJsonValue
    userId: string
    listingId: string
    isWinner?: boolean
    winnerPosition?: number | null
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: number
    isPaid?: boolean
    paymentDetails?: NullableJsonNullValueInput | InputJsonValue
    otherInfo?: string | null
    ask?: number | null
    label?: $Enums.SubmissionLabels
    rewardInUSD?: number
    ogImage?: string | null
    notes?: string | null
    Comments?: CommentUncheckedCreateNestedManyWithoutSubmissionInput
    CreditLedger?: CreditLedgerUncheckedCreateNestedManyWithoutSubmissionInput
  }

  export type SubmissionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    link?: NullableStringFieldUpdateOperationsInput | string | null
    tweet?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumSubmissionStatusFieldUpdateOperationsInput | $Enums.SubmissionStatus
    eligibilityAnswers?: NullableJsonNullValueInput | InputJsonValue
    isWinner?: BoolFieldUpdateOperationsInput | boolean
    winnerPosition?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: IntFieldUpdateOperationsInput | number
    isPaid?: BoolFieldUpdateOperationsInput | boolean
    paymentDetails?: NullableJsonNullValueInput | InputJsonValue
    otherInfo?: NullableStringFieldUpdateOperationsInput | string | null
    ask?: NullableIntFieldUpdateOperationsInput | number | null
    label?: EnumSubmissionLabelsFieldUpdateOperationsInput | $Enums.SubmissionLabels
    rewardInUSD?: FloatFieldUpdateOperationsInput | number
    ogImage?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    listing?: BountiesUpdateOneRequiredWithoutSubmissionNestedInput
    user?: UserUpdateOneRequiredWithoutSubmissionNestedInput
    Comments?: CommentUpdateManyWithoutSubmissionNestedInput
    CreditLedger?: CreditLedgerUpdateManyWithoutSubmissionNestedInput
  }

  export type SubmissionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    link?: NullableStringFieldUpdateOperationsInput | string | null
    tweet?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumSubmissionStatusFieldUpdateOperationsInput | $Enums.SubmissionStatus
    eligibilityAnswers?: NullableJsonNullValueInput | InputJsonValue
    userId?: StringFieldUpdateOperationsInput | string
    listingId?: StringFieldUpdateOperationsInput | string
    isWinner?: BoolFieldUpdateOperationsInput | boolean
    winnerPosition?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: IntFieldUpdateOperationsInput | number
    isPaid?: BoolFieldUpdateOperationsInput | boolean
    paymentDetails?: NullableJsonNullValueInput | InputJsonValue
    otherInfo?: NullableStringFieldUpdateOperationsInput | string | null
    ask?: NullableIntFieldUpdateOperationsInput | number | null
    label?: EnumSubmissionLabelsFieldUpdateOperationsInput | $Enums.SubmissionLabels
    rewardInUSD?: FloatFieldUpdateOperationsInput | number
    ogImage?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    Comments?: CommentUncheckedUpdateManyWithoutSubmissionNestedInput
    CreditLedger?: CreditLedgerUncheckedUpdateManyWithoutSubmissionNestedInput
  }

  export type SubmissionCreateManyInput = {
    id?: string
    link?: string | null
    tweet?: string | null
    status?: $Enums.SubmissionStatus
    eligibilityAnswers?: NullableJsonNullValueInput | InputJsonValue
    userId: string
    listingId: string
    isWinner?: boolean
    winnerPosition?: number | null
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: number
    isPaid?: boolean
    paymentDetails?: NullableJsonNullValueInput | InputJsonValue
    otherInfo?: string | null
    ask?: number | null
    label?: $Enums.SubmissionLabels
    rewardInUSD?: number
    ogImage?: string | null
    notes?: string | null
  }

  export type SubmissionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    link?: NullableStringFieldUpdateOperationsInput | string | null
    tweet?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumSubmissionStatusFieldUpdateOperationsInput | $Enums.SubmissionStatus
    eligibilityAnswers?: NullableJsonNullValueInput | InputJsonValue
    isWinner?: BoolFieldUpdateOperationsInput | boolean
    winnerPosition?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: IntFieldUpdateOperationsInput | number
    isPaid?: BoolFieldUpdateOperationsInput | boolean
    paymentDetails?: NullableJsonNullValueInput | InputJsonValue
    otherInfo?: NullableStringFieldUpdateOperationsInput | string | null
    ask?: NullableIntFieldUpdateOperationsInput | number | null
    label?: EnumSubmissionLabelsFieldUpdateOperationsInput | $Enums.SubmissionLabels
    rewardInUSD?: FloatFieldUpdateOperationsInput | number
    ogImage?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SubmissionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    link?: NullableStringFieldUpdateOperationsInput | string | null
    tweet?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumSubmissionStatusFieldUpdateOperationsInput | $Enums.SubmissionStatus
    eligibilityAnswers?: NullableJsonNullValueInput | InputJsonValue
    userId?: StringFieldUpdateOperationsInput | string
    listingId?: StringFieldUpdateOperationsInput | string
    isWinner?: BoolFieldUpdateOperationsInput | boolean
    winnerPosition?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: IntFieldUpdateOperationsInput | number
    isPaid?: BoolFieldUpdateOperationsInput | boolean
    paymentDetails?: NullableJsonNullValueInput | InputJsonValue
    otherInfo?: NullableStringFieldUpdateOperationsInput | string | null
    ask?: NullableIntFieldUpdateOperationsInput | number | null
    label?: EnumSubmissionLabelsFieldUpdateOperationsInput | $Enums.SubmissionLabels
    rewardInUSD?: FloatFieldUpdateOperationsInput | number
    ogImage?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SponsorsCreateInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    url?: string | null
    industry: string
    twitter?: string | null
    bio?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    isActive?: boolean
    entityName?: string | null
    isVerified?: boolean
    isCaution?: boolean
    st?: boolean
    verificationInfo?: NullableJsonNullValueInput | InputJsonValue
    Hackathon?: HackathonCreateNestedOneWithoutSponsorInput
    UserSponsors?: UserSponsorsCreateNestedManyWithoutSponsorInput
    Bounties?: BountiesCreateNestedManyWithoutSponsorInput
    Templates?: BountiesTemplatesCreateNestedManyWithoutSponsorInput
    Grants?: GrantsCreateNestedManyWithoutSponsorInput
    User?: UserCreateNestedManyWithoutCurrentSponsorInput
    UserInvites?: UserInvitesCreateNestedManyWithoutSponsorInput
  }

  export type SponsorsUncheckedCreateInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    url?: string | null
    industry: string
    twitter?: string | null
    bio?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    isActive?: boolean
    entityName?: string | null
    isVerified?: boolean
    isCaution?: boolean
    st?: boolean
    verificationInfo?: NullableJsonNullValueInput | InputJsonValue
    Hackathon?: HackathonUncheckedCreateNestedOneWithoutSponsorInput
    UserSponsors?: UserSponsorsUncheckedCreateNestedManyWithoutSponsorInput
    Bounties?: BountiesUncheckedCreateNestedManyWithoutSponsorInput
    Templates?: BountiesTemplatesUncheckedCreateNestedManyWithoutSponsorInput
    Grants?: GrantsUncheckedCreateNestedManyWithoutSponsorInput
    User?: UserUncheckedCreateNestedManyWithoutCurrentSponsorInput
    UserInvites?: UserInvitesUncheckedCreateNestedManyWithoutSponsorInput
  }

  export type SponsorsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    industry?: StringFieldUpdateOperationsInput | string
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCaution?: BoolFieldUpdateOperationsInput | boolean
    st?: BoolFieldUpdateOperationsInput | boolean
    verificationInfo?: NullableJsonNullValueInput | InputJsonValue
    Hackathon?: HackathonUpdateOneWithoutSponsorNestedInput
    UserSponsors?: UserSponsorsUpdateManyWithoutSponsorNestedInput
    Bounties?: BountiesUpdateManyWithoutSponsorNestedInput
    Templates?: BountiesTemplatesUpdateManyWithoutSponsorNestedInput
    Grants?: GrantsUpdateManyWithoutSponsorNestedInput
    User?: UserUpdateManyWithoutCurrentSponsorNestedInput
    UserInvites?: UserInvitesUpdateManyWithoutSponsorNestedInput
  }

  export type SponsorsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    industry?: StringFieldUpdateOperationsInput | string
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCaution?: BoolFieldUpdateOperationsInput | boolean
    st?: BoolFieldUpdateOperationsInput | boolean
    verificationInfo?: NullableJsonNullValueInput | InputJsonValue
    Hackathon?: HackathonUncheckedUpdateOneWithoutSponsorNestedInput
    UserSponsors?: UserSponsorsUncheckedUpdateManyWithoutSponsorNestedInput
    Bounties?: BountiesUncheckedUpdateManyWithoutSponsorNestedInput
    Templates?: BountiesTemplatesUncheckedUpdateManyWithoutSponsorNestedInput
    Grants?: GrantsUncheckedUpdateManyWithoutSponsorNestedInput
    User?: UserUncheckedUpdateManyWithoutCurrentSponsorNestedInput
    UserInvites?: UserInvitesUncheckedUpdateManyWithoutSponsorNestedInput
  }

  export type SponsorsCreateManyInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    url?: string | null
    industry: string
    twitter?: string | null
    bio?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    isActive?: boolean
    entityName?: string | null
    isVerified?: boolean
    isCaution?: boolean
    st?: boolean
    verificationInfo?: NullableJsonNullValueInput | InputJsonValue
  }

  export type SponsorsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    industry?: StringFieldUpdateOperationsInput | string
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCaution?: BoolFieldUpdateOperationsInput | boolean
    st?: BoolFieldUpdateOperationsInput | boolean
    verificationInfo?: NullableJsonNullValueInput | InputJsonValue
  }

  export type SponsorsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    industry?: StringFieldUpdateOperationsInput | string
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCaution?: BoolFieldUpdateOperationsInput | boolean
    st?: BoolFieldUpdateOperationsInput | boolean
    verificationInfo?: NullableJsonNullValueInput | InputJsonValue
  }

  export type AccountCreateInput = {
    id?: string
    type: string
    provider: string
    providerAccountId: string
    refresh_token?: string | null
    access_token?: string | null
    expires_at?: number | null
    token_type?: string | null
    scope?: string | null
    id_token?: string | null
    session_state?: string | null
    user: UserCreateNestedOneWithoutAccountsInput
  }

  export type AccountUncheckedCreateInput = {
    id?: string
    userId: string
    type: string
    provider: string
    providerAccountId: string
    refresh_token?: string | null
    access_token?: string | null
    expires_at?: number | null
    token_type?: string | null
    scope?: string | null
    id_token?: string | null
    session_state?: string | null
  }

  export type AccountUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    expires_at?: NullableIntFieldUpdateOperationsInput | number | null
    token_type?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    id_token?: NullableStringFieldUpdateOperationsInput | string | null
    session_state?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneRequiredWithoutAccountsNestedInput
  }

  export type AccountUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    expires_at?: NullableIntFieldUpdateOperationsInput | number | null
    token_type?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    id_token?: NullableStringFieldUpdateOperationsInput | string | null
    session_state?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AccountCreateManyInput = {
    id?: string
    userId: string
    type: string
    provider: string
    providerAccountId: string
    refresh_token?: string | null
    access_token?: string | null
    expires_at?: number | null
    token_type?: string | null
    scope?: string | null
    id_token?: string | null
    session_state?: string | null
  }

  export type AccountUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    expires_at?: NullableIntFieldUpdateOperationsInput | number | null
    token_type?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    id_token?: NullableStringFieldUpdateOperationsInput | string | null
    session_state?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AccountUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    expires_at?: NullableIntFieldUpdateOperationsInput | number | null
    token_type?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    id_token?: NullableStringFieldUpdateOperationsInput | string | null
    session_state?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SessionCreateInput = {
    id?: string
    sessionToken: string
    expires: Date | string
    user: UserCreateNestedOneWithoutSessionsInput
  }

  export type SessionUncheckedCreateInput = {
    id?: string
    sessionToken: string
    userId: string
    expires: Date | string
  }

  export type SessionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutSessionsNestedInput
  }

  export type SessionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SessionCreateManyInput = {
    id?: string
    sessionToken: string
    userId: string
    expires: Date | string
  }

  export type SessionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SessionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserCreateInput = {
    id?: string
    publicKey?: string | null
    walletAddress?: string | null
    email: string
    username?: string | null
    photo?: string | null
    firstName?: string | null
    lastName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    role?: string
    isTalentFilled?: boolean
    interests?: string | null
    bio?: string | null
    twitter?: string | null
    discord?: string | null
    github?: string | null
    linkedin?: string | null
    website?: string | null
    telegram?: string | null
    community?: string | null
    experience?: string | null
    superteamLevel?: string | null
    location?: string | null
    cryptoExperience?: string | null
    workPrefernce?: string | null
    currentEmployer?: string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    emailVerified?: Date | string | null
    featureModalShown?: boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: boolean
    acceptedTOS?: boolean
    stLead?: string | null
    isBlocked?: boolean
    privyDid: string
    isKYCVerified?: boolean
    kycName?: string | null
    kycCountry?: string | null
    kycAddress?: string | null
    kycDOB?: string | null
    kycIDNumber?: string | null
    kycIDType?: string | null
    currentSponsor?: SponsorsCreateNestedOneWithoutUserInput
    UserSponsors?: UserSponsorsCreateNestedManyWithoutUserInput
    poc?: BountiesCreateNestedManyWithoutPocInput
    templates?: BountiesTemplatesCreateNestedManyWithoutPocInput
    Comment?: CommentCreateNestedManyWithoutAuthorInput
    Submission?: SubmissionCreateNestedManyWithoutUserInput
    Grants?: GrantsCreateNestedManyWithoutPocInput
    UserInvites?: UserInvitesCreateNestedManyWithoutSenderInput
    SubscribeBounty?: SubscribeBountyCreateNestedManyWithoutUserInput
    PoW?: PoWCreateNestedManyWithoutUserInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    Hackathon?: HackathonCreateNestedOneWithoutUserInput
    emailSettings?: EmailSettingsCreateNestedManyWithoutUserInput
    TalentRankings?: TalentRankingsCreateNestedManyWithoutUserInput
    Scouts?: ScoutsCreateNestedManyWithoutUserInput
    GrantApplication?: GrantApplicationCreateNestedManyWithoutUserInput
    SubscribeHackathon?: SubscribeHackathonCreateNestedManyWithoutUserInput
    CreditLedger?: CreditLedgerCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateInput = {
    id?: string
    publicKey?: string | null
    walletAddress?: string | null
    email: string
    username?: string | null
    photo?: string | null
    firstName?: string | null
    lastName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    role?: string
    isTalentFilled?: boolean
    interests?: string | null
    bio?: string | null
    twitter?: string | null
    discord?: string | null
    github?: string | null
    linkedin?: string | null
    website?: string | null
    telegram?: string | null
    community?: string | null
    experience?: string | null
    superteamLevel?: string | null
    location?: string | null
    cryptoExperience?: string | null
    workPrefernce?: string | null
    currentEmployer?: string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    currentSponsorId?: string | null
    emailVerified?: Date | string | null
    hackathonId?: string | null
    featureModalShown?: boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: boolean
    acceptedTOS?: boolean
    stLead?: string | null
    isBlocked?: boolean
    privyDid: string
    isKYCVerified?: boolean
    kycName?: string | null
    kycCountry?: string | null
    kycAddress?: string | null
    kycDOB?: string | null
    kycIDNumber?: string | null
    kycIDType?: string | null
    UserSponsors?: UserSponsorsUncheckedCreateNestedManyWithoutUserInput
    poc?: BountiesUncheckedCreateNestedManyWithoutPocInput
    templates?: BountiesTemplatesUncheckedCreateNestedManyWithoutPocInput
    Comment?: CommentUncheckedCreateNestedManyWithoutAuthorInput
    Submission?: SubmissionUncheckedCreateNestedManyWithoutUserInput
    Grants?: GrantsUncheckedCreateNestedManyWithoutPocInput
    UserInvites?: UserInvitesUncheckedCreateNestedManyWithoutSenderInput
    SubscribeBounty?: SubscribeBountyUncheckedCreateNestedManyWithoutUserInput
    PoW?: PoWUncheckedCreateNestedManyWithoutUserInput
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    emailSettings?: EmailSettingsUncheckedCreateNestedManyWithoutUserInput
    TalentRankings?: TalentRankingsUncheckedCreateNestedManyWithoutUserInput
    Scouts?: ScoutsUncheckedCreateNestedManyWithoutUserInput
    GrantApplication?: GrantApplicationUncheckedCreateNestedManyWithoutUserInput
    SubscribeHackathon?: SubscribeHackathonUncheckedCreateNestedManyWithoutUserInput
    CreditLedger?: CreditLedgerUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    publicKey?: NullableStringFieldUpdateOperationsInput | string | null
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    isTalentFilled?: BoolFieldUpdateOperationsInput | boolean
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    discord?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    community?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    superteamLevel?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    cryptoExperience?: NullableStringFieldUpdateOperationsInput | string | null
    workPrefernce?: NullableStringFieldUpdateOperationsInput | string | null
    currentEmployer?: NullableStringFieldUpdateOperationsInput | string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: BoolFieldUpdateOperationsInput | boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    featureModalShown?: BoolFieldUpdateOperationsInput | boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: BoolFieldUpdateOperationsInput | boolean
    acceptedTOS?: BoolFieldUpdateOperationsInput | boolean
    stLead?: NullableStringFieldUpdateOperationsInput | string | null
    isBlocked?: BoolFieldUpdateOperationsInput | boolean
    privyDid?: StringFieldUpdateOperationsInput | string
    isKYCVerified?: BoolFieldUpdateOperationsInput | boolean
    kycName?: NullableStringFieldUpdateOperationsInput | string | null
    kycCountry?: NullableStringFieldUpdateOperationsInput | string | null
    kycAddress?: NullableStringFieldUpdateOperationsInput | string | null
    kycDOB?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDNumber?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDType?: NullableStringFieldUpdateOperationsInput | string | null
    currentSponsor?: SponsorsUpdateOneWithoutUserNestedInput
    UserSponsors?: UserSponsorsUpdateManyWithoutUserNestedInput
    poc?: BountiesUpdateManyWithoutPocNestedInput
    templates?: BountiesTemplatesUpdateManyWithoutPocNestedInput
    Comment?: CommentUpdateManyWithoutAuthorNestedInput
    Submission?: SubmissionUpdateManyWithoutUserNestedInput
    Grants?: GrantsUpdateManyWithoutPocNestedInput
    UserInvites?: UserInvitesUpdateManyWithoutSenderNestedInput
    SubscribeBounty?: SubscribeBountyUpdateManyWithoutUserNestedInput
    PoW?: PoWUpdateManyWithoutUserNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    Hackathon?: HackathonUpdateOneWithoutUserNestedInput
    emailSettings?: EmailSettingsUpdateManyWithoutUserNestedInput
    TalentRankings?: TalentRankingsUpdateManyWithoutUserNestedInput
    Scouts?: ScoutsUpdateManyWithoutUserNestedInput
    GrantApplication?: GrantApplicationUpdateManyWithoutUserNestedInput
    SubscribeHackathon?: SubscribeHackathonUpdateManyWithoutUserNestedInput
    CreditLedger?: CreditLedgerUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    publicKey?: NullableStringFieldUpdateOperationsInput | string | null
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    isTalentFilled?: BoolFieldUpdateOperationsInput | boolean
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    discord?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    community?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    superteamLevel?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    cryptoExperience?: NullableStringFieldUpdateOperationsInput | string | null
    workPrefernce?: NullableStringFieldUpdateOperationsInput | string | null
    currentEmployer?: NullableStringFieldUpdateOperationsInput | string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: BoolFieldUpdateOperationsInput | boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    currentSponsorId?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hackathonId?: NullableStringFieldUpdateOperationsInput | string | null
    featureModalShown?: BoolFieldUpdateOperationsInput | boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: BoolFieldUpdateOperationsInput | boolean
    acceptedTOS?: BoolFieldUpdateOperationsInput | boolean
    stLead?: NullableStringFieldUpdateOperationsInput | string | null
    isBlocked?: BoolFieldUpdateOperationsInput | boolean
    privyDid?: StringFieldUpdateOperationsInput | string
    isKYCVerified?: BoolFieldUpdateOperationsInput | boolean
    kycName?: NullableStringFieldUpdateOperationsInput | string | null
    kycCountry?: NullableStringFieldUpdateOperationsInput | string | null
    kycAddress?: NullableStringFieldUpdateOperationsInput | string | null
    kycDOB?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDNumber?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDType?: NullableStringFieldUpdateOperationsInput | string | null
    UserSponsors?: UserSponsorsUncheckedUpdateManyWithoutUserNestedInput
    poc?: BountiesUncheckedUpdateManyWithoutPocNestedInput
    templates?: BountiesTemplatesUncheckedUpdateManyWithoutPocNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutAuthorNestedInput
    Submission?: SubmissionUncheckedUpdateManyWithoutUserNestedInput
    Grants?: GrantsUncheckedUpdateManyWithoutPocNestedInput
    UserInvites?: UserInvitesUncheckedUpdateManyWithoutSenderNestedInput
    SubscribeBounty?: SubscribeBountyUncheckedUpdateManyWithoutUserNestedInput
    PoW?: PoWUncheckedUpdateManyWithoutUserNestedInput
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    emailSettings?: EmailSettingsUncheckedUpdateManyWithoutUserNestedInput
    TalentRankings?: TalentRankingsUncheckedUpdateManyWithoutUserNestedInput
    Scouts?: ScoutsUncheckedUpdateManyWithoutUserNestedInput
    GrantApplication?: GrantApplicationUncheckedUpdateManyWithoutUserNestedInput
    SubscribeHackathon?: SubscribeHackathonUncheckedUpdateManyWithoutUserNestedInput
    CreditLedger?: CreditLedgerUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateManyInput = {
    id?: string
    publicKey?: string | null
    walletAddress?: string | null
    email: string
    username?: string | null
    photo?: string | null
    firstName?: string | null
    lastName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    role?: string
    isTalentFilled?: boolean
    interests?: string | null
    bio?: string | null
    twitter?: string | null
    discord?: string | null
    github?: string | null
    linkedin?: string | null
    website?: string | null
    telegram?: string | null
    community?: string | null
    experience?: string | null
    superteamLevel?: string | null
    location?: string | null
    cryptoExperience?: string | null
    workPrefernce?: string | null
    currentEmployer?: string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    currentSponsorId?: string | null
    emailVerified?: Date | string | null
    hackathonId?: string | null
    featureModalShown?: boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: boolean
    acceptedTOS?: boolean
    stLead?: string | null
    isBlocked?: boolean
    privyDid: string
    isKYCVerified?: boolean
    kycName?: string | null
    kycCountry?: string | null
    kycAddress?: string | null
    kycDOB?: string | null
    kycIDNumber?: string | null
    kycIDType?: string | null
  }

  export type UserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    publicKey?: NullableStringFieldUpdateOperationsInput | string | null
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    isTalentFilled?: BoolFieldUpdateOperationsInput | boolean
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    discord?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    community?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    superteamLevel?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    cryptoExperience?: NullableStringFieldUpdateOperationsInput | string | null
    workPrefernce?: NullableStringFieldUpdateOperationsInput | string | null
    currentEmployer?: NullableStringFieldUpdateOperationsInput | string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: BoolFieldUpdateOperationsInput | boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    featureModalShown?: BoolFieldUpdateOperationsInput | boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: BoolFieldUpdateOperationsInput | boolean
    acceptedTOS?: BoolFieldUpdateOperationsInput | boolean
    stLead?: NullableStringFieldUpdateOperationsInput | string | null
    isBlocked?: BoolFieldUpdateOperationsInput | boolean
    privyDid?: StringFieldUpdateOperationsInput | string
    isKYCVerified?: BoolFieldUpdateOperationsInput | boolean
    kycName?: NullableStringFieldUpdateOperationsInput | string | null
    kycCountry?: NullableStringFieldUpdateOperationsInput | string | null
    kycAddress?: NullableStringFieldUpdateOperationsInput | string | null
    kycDOB?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDNumber?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDType?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    publicKey?: NullableStringFieldUpdateOperationsInput | string | null
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    isTalentFilled?: BoolFieldUpdateOperationsInput | boolean
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    discord?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    community?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    superteamLevel?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    cryptoExperience?: NullableStringFieldUpdateOperationsInput | string | null
    workPrefernce?: NullableStringFieldUpdateOperationsInput | string | null
    currentEmployer?: NullableStringFieldUpdateOperationsInput | string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: BoolFieldUpdateOperationsInput | boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    currentSponsorId?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hackathonId?: NullableStringFieldUpdateOperationsInput | string | null
    featureModalShown?: BoolFieldUpdateOperationsInput | boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: BoolFieldUpdateOperationsInput | boolean
    acceptedTOS?: BoolFieldUpdateOperationsInput | boolean
    stLead?: NullableStringFieldUpdateOperationsInput | string | null
    isBlocked?: BoolFieldUpdateOperationsInput | boolean
    privyDid?: StringFieldUpdateOperationsInput | string
    isKYCVerified?: BoolFieldUpdateOperationsInput | boolean
    kycName?: NullableStringFieldUpdateOperationsInput | string | null
    kycCountry?: NullableStringFieldUpdateOperationsInput | string | null
    kycAddress?: NullableStringFieldUpdateOperationsInput | string | null
    kycDOB?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDNumber?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDType?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ScoutsCreateInput = {
    id?: string
    dollarsEarned: number
    score: Decimal | DecimalJsLike | number | string
    invited: boolean
    skills: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    listing: BountiesCreateNestedOneWithoutScoutsInput
    user: UserCreateNestedOneWithoutScoutsInput
  }

  export type ScoutsUncheckedCreateInput = {
    id?: string
    userId: string
    listingId: string
    dollarsEarned: number
    score: Decimal | DecimalJsLike | number | string
    invited: boolean
    skills: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
  }

  export type ScoutsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    dollarsEarned?: IntFieldUpdateOperationsInput | number
    score?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    invited?: BoolFieldUpdateOperationsInput | boolean
    skills?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listing?: BountiesUpdateOneRequiredWithoutScoutsNestedInput
    user?: UserUpdateOneRequiredWithoutScoutsNestedInput
  }

  export type ScoutsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    listingId?: StringFieldUpdateOperationsInput | string
    dollarsEarned?: IntFieldUpdateOperationsInput | number
    score?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    invited?: BoolFieldUpdateOperationsInput | boolean
    skills?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ScoutsCreateManyInput = {
    id?: string
    userId: string
    listingId: string
    dollarsEarned: number
    score: Decimal | DecimalJsLike | number | string
    invited: boolean
    skills: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
  }

  export type ScoutsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    dollarsEarned?: IntFieldUpdateOperationsInput | number
    score?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    invited?: BoolFieldUpdateOperationsInput | boolean
    skills?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ScoutsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    listingId?: StringFieldUpdateOperationsInput | string
    dollarsEarned?: IntFieldUpdateOperationsInput | number
    score?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    invited?: BoolFieldUpdateOperationsInput | boolean
    skills?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TalentRankingsCreateInput = {
    id?: string
    skill?: $Enums.TalentRankingSkills
    timeframe?: $Enums.TalentRankingTimeframe
    rank: number
    submissions?: number
    winRate?: number
    wins?: number
    totalEarnedInUSD: number
    user: UserCreateNestedOneWithoutTalentRankingsInput
  }

  export type TalentRankingsUncheckedCreateInput = {
    id?: string
    userId: string
    skill?: $Enums.TalentRankingSkills
    timeframe?: $Enums.TalentRankingTimeframe
    rank: number
    submissions?: number
    winRate?: number
    wins?: number
    totalEarnedInUSD: number
  }

  export type TalentRankingsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    skill?: EnumTalentRankingSkillsFieldUpdateOperationsInput | $Enums.TalentRankingSkills
    timeframe?: EnumTalentRankingTimeframeFieldUpdateOperationsInput | $Enums.TalentRankingTimeframe
    rank?: IntFieldUpdateOperationsInput | number
    submissions?: IntFieldUpdateOperationsInput | number
    winRate?: IntFieldUpdateOperationsInput | number
    wins?: IntFieldUpdateOperationsInput | number
    totalEarnedInUSD?: IntFieldUpdateOperationsInput | number
    user?: UserUpdateOneRequiredWithoutTalentRankingsNestedInput
  }

  export type TalentRankingsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    skill?: EnumTalentRankingSkillsFieldUpdateOperationsInput | $Enums.TalentRankingSkills
    timeframe?: EnumTalentRankingTimeframeFieldUpdateOperationsInput | $Enums.TalentRankingTimeframe
    rank?: IntFieldUpdateOperationsInput | number
    submissions?: IntFieldUpdateOperationsInput | number
    winRate?: IntFieldUpdateOperationsInput | number
    wins?: IntFieldUpdateOperationsInput | number
    totalEarnedInUSD?: IntFieldUpdateOperationsInput | number
  }

  export type TalentRankingsCreateManyInput = {
    id?: string
    userId: string
    skill?: $Enums.TalentRankingSkills
    timeframe?: $Enums.TalentRankingTimeframe
    rank: number
    submissions?: number
    winRate?: number
    wins?: number
    totalEarnedInUSD: number
  }

  export type TalentRankingsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    skill?: EnumTalentRankingSkillsFieldUpdateOperationsInput | $Enums.TalentRankingSkills
    timeframe?: EnumTalentRankingTimeframeFieldUpdateOperationsInput | $Enums.TalentRankingTimeframe
    rank?: IntFieldUpdateOperationsInput | number
    submissions?: IntFieldUpdateOperationsInput | number
    winRate?: IntFieldUpdateOperationsInput | number
    wins?: IntFieldUpdateOperationsInput | number
    totalEarnedInUSD?: IntFieldUpdateOperationsInput | number
  }

  export type TalentRankingsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    skill?: EnumTalentRankingSkillsFieldUpdateOperationsInput | $Enums.TalentRankingSkills
    timeframe?: EnumTalentRankingTimeframeFieldUpdateOperationsInput | $Enums.TalentRankingTimeframe
    rank?: IntFieldUpdateOperationsInput | number
    submissions?: IntFieldUpdateOperationsInput | number
    winRate?: IntFieldUpdateOperationsInput | number
    wins?: IntFieldUpdateOperationsInput | number
    totalEarnedInUSD?: IntFieldUpdateOperationsInput | number
  }

  export type PoWCreateInput = {
    id?: string
    title: string
    description: string
    skills?: NullableJsonNullValueInput | InputJsonValue
    link: string
    createdAt?: Date | string
    subSkills?: NullableJsonNullValueInput | InputJsonValue
    updatedAt?: Date | string
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: number
    ogImage?: string | null
    user: UserCreateNestedOneWithoutPoWInput
    Comments?: CommentCreateNestedManyWithoutPowInput
  }

  export type PoWUncheckedCreateInput = {
    id?: string
    userId: string
    title: string
    description: string
    skills?: NullableJsonNullValueInput | InputJsonValue
    link: string
    createdAt?: Date | string
    subSkills?: NullableJsonNullValueInput | InputJsonValue
    updatedAt?: Date | string
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: number
    ogImage?: string | null
    Comments?: CommentUncheckedCreateNestedManyWithoutPowInput
  }

  export type PoWUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    skills?: NullableJsonNullValueInput | InputJsonValue
    link?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    subSkills?: NullableJsonNullValueInput | InputJsonValue
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: IntFieldUpdateOperationsInput | number
    ogImage?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneRequiredWithoutPoWNestedInput
    Comments?: CommentUpdateManyWithoutPowNestedInput
  }

  export type PoWUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    skills?: NullableJsonNullValueInput | InputJsonValue
    link?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    subSkills?: NullableJsonNullValueInput | InputJsonValue
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: IntFieldUpdateOperationsInput | number
    ogImage?: NullableStringFieldUpdateOperationsInput | string | null
    Comments?: CommentUncheckedUpdateManyWithoutPowNestedInput
  }

  export type PoWCreateManyInput = {
    id?: string
    userId: string
    title: string
    description: string
    skills?: NullableJsonNullValueInput | InputJsonValue
    link: string
    createdAt?: Date | string
    subSkills?: NullableJsonNullValueInput | InputJsonValue
    updatedAt?: Date | string
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: number
    ogImage?: string | null
  }

  export type PoWUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    skills?: NullableJsonNullValueInput | InputJsonValue
    link?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    subSkills?: NullableJsonNullValueInput | InputJsonValue
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: IntFieldUpdateOperationsInput | number
    ogImage?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PoWUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    skills?: NullableJsonNullValueInput | InputJsonValue
    link?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    subSkills?: NullableJsonNullValueInput | InputJsonValue
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: IntFieldUpdateOperationsInput | number
    ogImage?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EmailSettingsCreateInput = {
    category: string
    user: UserCreateNestedOneWithoutEmailSettingsInput
  }

  export type EmailSettingsUncheckedCreateInput = {
    id?: number
    userId: string
    category: string
  }

  export type EmailSettingsUpdateInput = {
    category?: StringFieldUpdateOperationsInput | string
    user?: UserUpdateOneRequiredWithoutEmailSettingsNestedInput
  }

  export type EmailSettingsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
  }

  export type EmailSettingsCreateManyInput = {
    id?: number
    userId: string
    category: string
  }

  export type EmailSettingsUpdateManyMutationInput = {
    category?: StringFieldUpdateOperationsInput | string
  }

  export type EmailSettingsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
  }

  export type UserSponsorsCreateInput = {
    role?: $Enums.Role
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutUserSponsorsInput
    sponsor: SponsorsCreateNestedOneWithoutUserSponsorsInput
  }

  export type UserSponsorsUncheckedCreateInput = {
    userId: string
    sponsorId: string
    role?: $Enums.Role
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserSponsorsUpdateInput = {
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutUserSponsorsNestedInput
    sponsor?: SponsorsUpdateOneRequiredWithoutUserSponsorsNestedInput
  }

  export type UserSponsorsUncheckedUpdateInput = {
    userId?: StringFieldUpdateOperationsInput | string
    sponsorId?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserSponsorsCreateManyInput = {
    userId: string
    sponsorId: string
    role?: $Enums.Role
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserSponsorsUpdateManyMutationInput = {
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserSponsorsUncheckedUpdateManyInput = {
    userId?: StringFieldUpdateOperationsInput | string
    sponsorId?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserInvitesCreateInput = {
    id?: string
    email: string
    createdAt?: Date | string
    updatedAt?: Date | string
    memberType?: $Enums.Role
    token: string
    expires: Date | string
    sender: UserCreateNestedOneWithoutUserInvitesInput
    sponsor: SponsorsCreateNestedOneWithoutUserInvitesInput
  }

  export type UserInvitesUncheckedCreateInput = {
    id?: string
    email: string
    senderId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    sponsorId: string
    memberType?: $Enums.Role
    token: string
    expires: Date | string
  }

  export type UserInvitesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    memberType?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    token?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
    sender?: UserUpdateOneRequiredWithoutUserInvitesNestedInput
    sponsor?: SponsorsUpdateOneRequiredWithoutUserInvitesNestedInput
  }

  export type UserInvitesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senderId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sponsorId?: StringFieldUpdateOperationsInput | string
    memberType?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    token?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserInvitesCreateManyInput = {
    id?: string
    email: string
    senderId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    sponsorId: string
    memberType?: $Enums.Role
    token: string
    expires: Date | string
  }

  export type UserInvitesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    memberType?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    token?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserInvitesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senderId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sponsorId?: StringFieldUpdateOperationsInput | string
    memberType?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    token?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type emailLogsCreateInput = {
    id?: string
    email?: string | null
    type: $Enums.EmailType
    bountyId?: string | null
    userId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type emailLogsUncheckedCreateInput = {
    id?: string
    email?: string | null
    type: $Enums.EmailType
    bountyId?: string | null
    userId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type emailLogsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumEmailTypeFieldUpdateOperationsInput | $Enums.EmailType
    bountyId?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type emailLogsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumEmailTypeFieldUpdateOperationsInput | $Enums.EmailType
    bountyId?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type emailLogsCreateManyInput = {
    id?: string
    email?: string | null
    type: $Enums.EmailType
    bountyId?: string | null
    userId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type emailLogsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumEmailTypeFieldUpdateOperationsInput | $Enums.EmailType
    bountyId?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type emailLogsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumEmailTypeFieldUpdateOperationsInput | $Enums.EmailType
    bountyId?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ResendLogsCreateInput = {
    id?: string
    email: string
    subject: string
    status: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ResendLogsUncheckedCreateInput = {
    id?: string
    email: string
    subject: string
    status: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ResendLogsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    subject?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ResendLogsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    subject?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ResendLogsCreateManyInput = {
    id?: string
    email: string
    subject: string
    status: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ResendLogsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    subject?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ResendLogsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    subject?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SubscribeBountyCreateInput = {
    id?: string
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    User: UserCreateNestedOneWithoutSubscribeBountyInput
    Bounties?: BountiesCreateNestedOneWithoutSubscribeBountyInput
  }

  export type SubscribeBountyUncheckedCreateInput = {
    id?: string
    userId: string
    bountyId: string
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SubscribeBountyUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    User?: UserUpdateOneRequiredWithoutSubscribeBountyNestedInput
    Bounties?: BountiesUpdateOneWithoutSubscribeBountyNestedInput
  }

  export type SubscribeBountyUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    bountyId?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SubscribeBountyCreateManyInput = {
    id?: string
    userId: string
    bountyId: string
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SubscribeBountyUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SubscribeBountyUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    bountyId?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SubscribeHackathonCreateInput = {
    id?: string
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    User: UserCreateNestedOneWithoutSubscribeHackathonInput
    Hackthons?: HackathonCreateNestedOneWithoutSubscribeHackathonInput
  }

  export type SubscribeHackathonUncheckedCreateInput = {
    id?: string
    userId: string
    hackathonId: string
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SubscribeHackathonUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    User?: UserUpdateOneRequiredWithoutSubscribeHackathonNestedInput
    Hackthons?: HackathonUpdateOneWithoutSubscribeHackathonNestedInput
  }

  export type SubscribeHackathonUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    hackathonId?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SubscribeHackathonCreateManyInput = {
    id?: string
    userId: string
    hackathonId: string
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SubscribeHackathonUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SubscribeHackathonUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    hackathonId?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VerificationTokenCreateInput = {
    identifier: string
    token: string
    expires: Date | string
  }

  export type VerificationTokenUncheckedCreateInput = {
    identifier: string
    token: string
    expires: Date | string
  }

  export type VerificationTokenUpdateInput = {
    identifier?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VerificationTokenUncheckedUpdateInput = {
    identifier?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VerificationTokenCreateManyInput = {
    identifier: string
    token: string
    expires: Date | string
  }

  export type VerificationTokenUpdateManyMutationInput = {
    identifier?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VerificationTokenUncheckedUpdateManyInput = {
    identifier?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HackathonCreateInput = {
    id?: string
    slug: string
    name: string
    logo: string
    deadline?: Date | string | null
    startDate?: Date | string | null
    description: string
    altLogo?: string | null
    announceDate?: Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    listings?: BountiesCreateNestedManyWithoutHackathonInput
    Sponsor?: SponsorsCreateNestedOneWithoutHackathonInput
    User?: UserCreateNestedManyWithoutHackathonInput
    SubscribeHackathon?: SubscribeHackathonCreateNestedManyWithoutHackthonsInput
  }

  export type HackathonUncheckedCreateInput = {
    id?: string
    slug: string
    name: string
    logo: string
    sponsorId?: string | null
    deadline?: Date | string | null
    startDate?: Date | string | null
    description: string
    altLogo?: string | null
    announceDate?: Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    listings?: BountiesUncheckedCreateNestedManyWithoutHackathonInput
    User?: UserUncheckedCreateNestedManyWithoutHackathonInput
    SubscribeHackathon?: SubscribeHackathonUncheckedCreateNestedManyWithoutHackthonsInput
  }

  export type HackathonUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    logo?: StringFieldUpdateOperationsInput | string
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    altLogo?: NullableStringFieldUpdateOperationsInput | string | null
    announceDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    listings?: BountiesUpdateManyWithoutHackathonNestedInput
    Sponsor?: SponsorsUpdateOneWithoutHackathonNestedInput
    User?: UserUpdateManyWithoutHackathonNestedInput
    SubscribeHackathon?: SubscribeHackathonUpdateManyWithoutHackthonsNestedInput
  }

  export type HackathonUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    logo?: StringFieldUpdateOperationsInput | string
    sponsorId?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    altLogo?: NullableStringFieldUpdateOperationsInput | string | null
    announceDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    listings?: BountiesUncheckedUpdateManyWithoutHackathonNestedInput
    User?: UserUncheckedUpdateManyWithoutHackathonNestedInput
    SubscribeHackathon?: SubscribeHackathonUncheckedUpdateManyWithoutHackthonsNestedInput
  }

  export type HackathonCreateManyInput = {
    id?: string
    slug: string
    name: string
    logo: string
    sponsorId?: string | null
    deadline?: Date | string | null
    startDate?: Date | string | null
    description: string
    altLogo?: string | null
    announceDate?: Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
  }

  export type HackathonUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    logo?: StringFieldUpdateOperationsInput | string
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    altLogo?: NullableStringFieldUpdateOperationsInput | string | null
    announceDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
  }

  export type HackathonUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    logo?: StringFieldUpdateOperationsInput | string
    sponsorId?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    altLogo?: NullableStringFieldUpdateOperationsInput | string | null
    announceDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
  }

  export type UnsubscribedEmailCreateInput = {
    id?: string
    email: string
    createdAt?: Date | string
  }

  export type UnsubscribedEmailUncheckedCreateInput = {
    id?: string
    email: string
    createdAt?: Date | string
  }

  export type UnsubscribedEmailUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UnsubscribedEmailUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UnsubscribedEmailCreateManyInput = {
    id?: string
    email: string
    createdAt?: Date | string
  }

  export type UnsubscribedEmailUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UnsubscribedEmailUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BlockedEmailCreateInput = {
    id?: string
    email: string
    createdAt?: Date | string
  }

  export type BlockedEmailUncheckedCreateInput = {
    id?: string
    email: string
    createdAt?: Date | string
  }

  export type BlockedEmailUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BlockedEmailUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BlockedEmailCreateManyInput = {
    id?: string
    email: string
    createdAt?: Date | string
  }

  export type BlockedEmailUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BlockedEmailUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CreditLedgerCreateInput = {
    id?: string
    type: $Enums.CreditEventType
    change: number
    effectiveMonth: Date | string
    createdAt?: Date | string
    user: UserCreateNestedOneWithoutCreditLedgerInput
    submission?: SubmissionCreateNestedOneWithoutCreditLedgerInput
    application?: GrantApplicationCreateNestedOneWithoutCreditLedgerInput
  }

  export type CreditLedgerUncheckedCreateInput = {
    id?: string
    userId: string
    submissionId?: string | null
    applicationId?: string | null
    type: $Enums.CreditEventType
    change: number
    effectiveMonth: Date | string
    createdAt?: Date | string
  }

  export type CreditLedgerUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumCreditEventTypeFieldUpdateOperationsInput | $Enums.CreditEventType
    change?: IntFieldUpdateOperationsInput | number
    effectiveMonth?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutCreditLedgerNestedInput
    submission?: SubmissionUpdateOneWithoutCreditLedgerNestedInput
    application?: GrantApplicationUpdateOneWithoutCreditLedgerNestedInput
  }

  export type CreditLedgerUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    submissionId?: NullableStringFieldUpdateOperationsInput | string | null
    applicationId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCreditEventTypeFieldUpdateOperationsInput | $Enums.CreditEventType
    change?: IntFieldUpdateOperationsInput | number
    effectiveMonth?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CreditLedgerCreateManyInput = {
    id?: string
    userId: string
    submissionId?: string | null
    applicationId?: string | null
    type: $Enums.CreditEventType
    change: number
    effectiveMonth: Date | string
    createdAt?: Date | string
  }

  export type CreditLedgerUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumCreditEventTypeFieldUpdateOperationsInput | $Enums.CreditEventType
    change?: IntFieldUpdateOperationsInput | number
    effectiveMonth?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CreditLedgerUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    submissionId?: NullableStringFieldUpdateOperationsInput | string | null
    applicationId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCreditEventTypeFieldUpdateOperationsInput | $Enums.CreditEventType
    change?: IntFieldUpdateOperationsInput | number
    effectiveMonth?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }
  export type JsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type EnumstatusFilter<$PrismaModel = never> = {
    equals?: $Enums.status | EnumstatusFieldRefInput<$PrismaModel>
    in?: $Enums.status[]
    notIn?: $Enums.status[]
    not?: NestedEnumstatusFilter<$PrismaModel> | $Enums.status
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type EnumSourceFilter<$PrismaModel = never> = {
    equals?: $Enums.Source | EnumSourceFieldRefInput<$PrismaModel>
    in?: $Enums.Source[]
    notIn?: $Enums.Source[]
    not?: NestedEnumSourceFilter<$PrismaModel> | $Enums.Source
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type EnumBountyTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.BountyType | EnumBountyTypeFieldRefInput<$PrismaModel>
    in?: $Enums.BountyType[]
    notIn?: $Enums.BountyType[]
    not?: NestedEnumBountyTypeFilter<$PrismaModel> | $Enums.BountyType
  }

  export type EnumApplicationTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.ApplicationType | EnumApplicationTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ApplicationType[]
    notIn?: $Enums.ApplicationType[]
    not?: NestedEnumApplicationTypeFilter<$PrismaModel> | $Enums.ApplicationType
  }

  export type EnumCompensationTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.CompensationType | EnumCompensationTypeFieldRefInput<$PrismaModel>
    in?: $Enums.CompensationType[]
    notIn?: $Enums.CompensationType[]
    not?: NestedEnumCompensationTypeFilter<$PrismaModel> | $Enums.CompensationType
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type BountiesTemplatesNullableScalarRelationFilter = {
    is?: BountiesTemplatesWhereInput | null
    isNot?: BountiesTemplatesWhereInput | null
  }

  export type SponsorsScalarRelationFilter = {
    is?: SponsorsWhereInput
    isNot?: SponsorsWhereInput
  }

  export type UserScalarRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type SubmissionListRelationFilter = {
    every?: SubmissionWhereInput
    some?: SubmissionWhereInput
    none?: SubmissionWhereInput
  }

  export type SubscribeBountyListRelationFilter = {
    every?: SubscribeBountyWhereInput
    some?: SubscribeBountyWhereInput
    none?: SubscribeBountyWhereInput
  }

  export type HackathonNullableScalarRelationFilter = {
    is?: HackathonWhereInput | null
    isNot?: HackathonWhereInput | null
  }

  export type ScoutsListRelationFilter = {
    every?: ScoutsWhereInput
    some?: ScoutsWhereInput
    none?: ScoutsWhereInput
  }

  export type CommentListRelationFilter = {
    every?: CommentWhereInput
    some?: CommentWhereInput
    none?: CommentWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type SubmissionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SubscribeBountyOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ScoutsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CommentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type BountiesOrderByRelevanceInput = {
    fields: BountiesOrderByRelevanceFieldEnum | BountiesOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type BountiesCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    slug?: SortOrder
    description?: SortOrder
    deadline?: SortOrder
    commitmentDate?: SortOrder
    eligibility?: SortOrder
    status?: SortOrder
    token?: SortOrder
    rewardAmount?: SortOrder
    rewards?: SortOrder
    maxBonusSpots?: SortOrder
    usdValue?: SortOrder
    sponsorId?: SortOrder
    pocId?: SortOrder
    source?: SortOrder
    isPublished?: SortOrder
    isFeatured?: SortOrder
    isActive?: SortOrder
    isArchived?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    applicationLink?: SortOrder
    skills?: SortOrder
    type?: SortOrder
    requirements?: SortOrder
    isWinnersAnnounced?: SortOrder
    templateId?: SortOrder
    region?: SortOrder
    pocSocials?: SortOrder
    hackathonprize?: SortOrder
    applicationType?: SortOrder
    timeToComplete?: SortOrder
    references?: SortOrder
    referredBy?: SortOrder
    publishedAt?: SortOrder
    isPrivate?: SortOrder
    hackathonId?: SortOrder
    compensationType?: SortOrder
    maxRewardAsk?: SortOrder
    minRewardAsk?: SortOrder
    language?: SortOrder
    shouldSendEmail?: SortOrder
    isFndnPaying?: SortOrder
    winnersAnnouncedAt?: SortOrder
    discordMessageIds?: SortOrder
  }

  export type BountiesAvgOrderByAggregateInput = {
    rewardAmount?: SortOrder
    maxBonusSpots?: SortOrder
    usdValue?: SortOrder
    maxRewardAsk?: SortOrder
    minRewardAsk?: SortOrder
  }

  export type BountiesMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    slug?: SortOrder
    description?: SortOrder
    deadline?: SortOrder
    commitmentDate?: SortOrder
    status?: SortOrder
    token?: SortOrder
    rewardAmount?: SortOrder
    maxBonusSpots?: SortOrder
    usdValue?: SortOrder
    sponsorId?: SortOrder
    pocId?: SortOrder
    source?: SortOrder
    isPublished?: SortOrder
    isFeatured?: SortOrder
    isActive?: SortOrder
    isArchived?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    applicationLink?: SortOrder
    type?: SortOrder
    requirements?: SortOrder
    isWinnersAnnounced?: SortOrder
    templateId?: SortOrder
    region?: SortOrder
    pocSocials?: SortOrder
    hackathonprize?: SortOrder
    applicationType?: SortOrder
    timeToComplete?: SortOrder
    referredBy?: SortOrder
    publishedAt?: SortOrder
    isPrivate?: SortOrder
    hackathonId?: SortOrder
    compensationType?: SortOrder
    maxRewardAsk?: SortOrder
    minRewardAsk?: SortOrder
    language?: SortOrder
    shouldSendEmail?: SortOrder
    isFndnPaying?: SortOrder
    winnersAnnouncedAt?: SortOrder
  }

  export type BountiesMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    slug?: SortOrder
    description?: SortOrder
    deadline?: SortOrder
    commitmentDate?: SortOrder
    status?: SortOrder
    token?: SortOrder
    rewardAmount?: SortOrder
    maxBonusSpots?: SortOrder
    usdValue?: SortOrder
    sponsorId?: SortOrder
    pocId?: SortOrder
    source?: SortOrder
    isPublished?: SortOrder
    isFeatured?: SortOrder
    isActive?: SortOrder
    isArchived?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    applicationLink?: SortOrder
    type?: SortOrder
    requirements?: SortOrder
    isWinnersAnnounced?: SortOrder
    templateId?: SortOrder
    region?: SortOrder
    pocSocials?: SortOrder
    hackathonprize?: SortOrder
    applicationType?: SortOrder
    timeToComplete?: SortOrder
    referredBy?: SortOrder
    publishedAt?: SortOrder
    isPrivate?: SortOrder
    hackathonId?: SortOrder
    compensationType?: SortOrder
    maxRewardAsk?: SortOrder
    minRewardAsk?: SortOrder
    language?: SortOrder
    shouldSendEmail?: SortOrder
    isFndnPaying?: SortOrder
    winnersAnnouncedAt?: SortOrder
  }

  export type BountiesSumOrderByAggregateInput = {
    rewardAmount?: SortOrder
    maxBonusSpots?: SortOrder
    usdValue?: SortOrder
    maxRewardAsk?: SortOrder
    minRewardAsk?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type EnumstatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.status | EnumstatusFieldRefInput<$PrismaModel>
    in?: $Enums.status[]
    notIn?: $Enums.status[]
    not?: NestedEnumstatusWithAggregatesFilter<$PrismaModel> | $Enums.status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumstatusFilter<$PrismaModel>
    _max?: NestedEnumstatusFilter<$PrismaModel>
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type EnumSourceWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Source | EnumSourceFieldRefInput<$PrismaModel>
    in?: $Enums.Source[]
    notIn?: $Enums.Source[]
    not?: NestedEnumSourceWithAggregatesFilter<$PrismaModel> | $Enums.Source
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSourceFilter<$PrismaModel>
    _max?: NestedEnumSourceFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type EnumBountyTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.BountyType | EnumBountyTypeFieldRefInput<$PrismaModel>
    in?: $Enums.BountyType[]
    notIn?: $Enums.BountyType[]
    not?: NestedEnumBountyTypeWithAggregatesFilter<$PrismaModel> | $Enums.BountyType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumBountyTypeFilter<$PrismaModel>
    _max?: NestedEnumBountyTypeFilter<$PrismaModel>
  }

  export type EnumApplicationTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ApplicationType | EnumApplicationTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ApplicationType[]
    notIn?: $Enums.ApplicationType[]
    not?: NestedEnumApplicationTypeWithAggregatesFilter<$PrismaModel> | $Enums.ApplicationType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumApplicationTypeFilter<$PrismaModel>
    _max?: NestedEnumApplicationTypeFilter<$PrismaModel>
  }

  export type EnumCompensationTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CompensationType | EnumCompensationTypeFieldRefInput<$PrismaModel>
    in?: $Enums.CompensationType[]
    notIn?: $Enums.CompensationType[]
    not?: NestedEnumCompensationTypeWithAggregatesFilter<$PrismaModel> | $Enums.CompensationType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCompensationTypeFilter<$PrismaModel>
    _max?: NestedEnumCompensationTypeFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type BountiesListRelationFilter = {
    every?: BountiesWhereInput
    some?: BountiesWhereInput
    none?: BountiesWhereInput
  }

  export type BountiesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type BountiesTemplatesOrderByRelevanceInput = {
    fields: BountiesTemplatesOrderByRelevanceFieldEnum | BountiesTemplatesOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type BountiesTemplatesCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    deadline?: SortOrder
    slug?: SortOrder
    description?: SortOrder
    color?: SortOrder
    emoji?: SortOrder
    isFeatured?: SortOrder
    isActive?: SortOrder
    isArchived?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    skills?: SortOrder
    type?: SortOrder
    requirements?: SortOrder
    region?: SortOrder
    applicationType?: SortOrder
    status?: SortOrder
    timeToComplete?: SortOrder
    token?: SortOrder
    references?: SortOrder
    referredBy?: SortOrder
    publishedAt?: SortOrder
    compensationType?: SortOrder
    maxRewardAsk?: SortOrder
    minRewardAsk?: SortOrder
    language?: SortOrder
    rewardAmount?: SortOrder
    rewards?: SortOrder
    maxBonusSpots?: SortOrder
    usdValue?: SortOrder
    sponsorId?: SortOrder
    pocId?: SortOrder
    pocSocials?: SortOrder
    source?: SortOrder
    isPublished?: SortOrder
  }

  export type BountiesTemplatesAvgOrderByAggregateInput = {
    maxRewardAsk?: SortOrder
    minRewardAsk?: SortOrder
    rewardAmount?: SortOrder
    maxBonusSpots?: SortOrder
    usdValue?: SortOrder
  }

  export type BountiesTemplatesMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    deadline?: SortOrder
    slug?: SortOrder
    description?: SortOrder
    color?: SortOrder
    emoji?: SortOrder
    isFeatured?: SortOrder
    isActive?: SortOrder
    isArchived?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    type?: SortOrder
    requirements?: SortOrder
    region?: SortOrder
    applicationType?: SortOrder
    status?: SortOrder
    timeToComplete?: SortOrder
    token?: SortOrder
    referredBy?: SortOrder
    publishedAt?: SortOrder
    compensationType?: SortOrder
    maxRewardAsk?: SortOrder
    minRewardAsk?: SortOrder
    language?: SortOrder
    rewardAmount?: SortOrder
    maxBonusSpots?: SortOrder
    usdValue?: SortOrder
    sponsorId?: SortOrder
    pocId?: SortOrder
    pocSocials?: SortOrder
    source?: SortOrder
    isPublished?: SortOrder
  }

  export type BountiesTemplatesMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    deadline?: SortOrder
    slug?: SortOrder
    description?: SortOrder
    color?: SortOrder
    emoji?: SortOrder
    isFeatured?: SortOrder
    isActive?: SortOrder
    isArchived?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    type?: SortOrder
    requirements?: SortOrder
    region?: SortOrder
    applicationType?: SortOrder
    status?: SortOrder
    timeToComplete?: SortOrder
    token?: SortOrder
    referredBy?: SortOrder
    publishedAt?: SortOrder
    compensationType?: SortOrder
    maxRewardAsk?: SortOrder
    minRewardAsk?: SortOrder
    language?: SortOrder
    rewardAmount?: SortOrder
    maxBonusSpots?: SortOrder
    usdValue?: SortOrder
    sponsorId?: SortOrder
    pocId?: SortOrder
    pocSocials?: SortOrder
    source?: SortOrder
    isPublished?: SortOrder
  }

  export type BountiesTemplatesSumOrderByAggregateInput = {
    maxRewardAsk?: SortOrder
    minRewardAsk?: SortOrder
    rewardAmount?: SortOrder
    maxBonusSpots?: SortOrder
    usdValue?: SortOrder
  }

  export type EnumCommentRefTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.CommentRefType | EnumCommentRefTypeFieldRefInput<$PrismaModel>
    in?: $Enums.CommentRefType[]
    notIn?: $Enums.CommentRefType[]
    not?: NestedEnumCommentRefTypeFilter<$PrismaModel> | $Enums.CommentRefType
  }

  export type EnumCommentTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.CommentType | EnumCommentTypeFieldRefInput<$PrismaModel>
    in?: $Enums.CommentType[]
    notIn?: $Enums.CommentType[]
    not?: NestedEnumCommentTypeFilter<$PrismaModel> | $Enums.CommentType
  }

  export type CommentNullableScalarRelationFilter = {
    is?: CommentWhereInput | null
    isNot?: CommentWhereInput | null
  }

  export type BountiesNullableScalarRelationFilter = {
    is?: BountiesWhereInput | null
    isNot?: BountiesWhereInput | null
  }

  export type SubmissionNullableScalarRelationFilter = {
    is?: SubmissionWhereInput | null
    isNot?: SubmissionWhereInput | null
  }

  export type PoWNullableScalarRelationFilter = {
    is?: PoWWhereInput | null
    isNot?: PoWWhereInput | null
  }

  export type GrantApplicationNullableScalarRelationFilter = {
    is?: GrantApplicationWhereInput | null
    isNot?: GrantApplicationWhereInput | null
  }

  export type CommentOrderByRelevanceInput = {
    fields: CommentOrderByRelevanceFieldEnum | CommentOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type CommentCountOrderByAggregateInput = {
    id?: SortOrder
    message?: SortOrder
    authorId?: SortOrder
    refType?: SortOrder
    refId?: SortOrder
    isActive?: SortOrder
    isArchived?: SortOrder
    isPinned?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    replyToId?: SortOrder
    submissionId?: SortOrder
    type?: SortOrder
  }

  export type CommentMaxOrderByAggregateInput = {
    id?: SortOrder
    message?: SortOrder
    authorId?: SortOrder
    refType?: SortOrder
    refId?: SortOrder
    isActive?: SortOrder
    isArchived?: SortOrder
    isPinned?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    replyToId?: SortOrder
    submissionId?: SortOrder
    type?: SortOrder
  }

  export type CommentMinOrderByAggregateInput = {
    id?: SortOrder
    message?: SortOrder
    authorId?: SortOrder
    refType?: SortOrder
    refId?: SortOrder
    isActive?: SortOrder
    isArchived?: SortOrder
    isPinned?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    replyToId?: SortOrder
    submissionId?: SortOrder
    type?: SortOrder
  }

  export type EnumCommentRefTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CommentRefType | EnumCommentRefTypeFieldRefInput<$PrismaModel>
    in?: $Enums.CommentRefType[]
    notIn?: $Enums.CommentRefType[]
    not?: NestedEnumCommentRefTypeWithAggregatesFilter<$PrismaModel> | $Enums.CommentRefType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCommentRefTypeFilter<$PrismaModel>
    _max?: NestedEnumCommentRefTypeFilter<$PrismaModel>
  }

  export type EnumCommentTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CommentType | EnumCommentTypeFieldRefInput<$PrismaModel>
    in?: $Enums.CommentType[]
    notIn?: $Enums.CommentType[]
    not?: NestedEnumCommentTypeWithAggregatesFilter<$PrismaModel> | $Enums.CommentType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCommentTypeFilter<$PrismaModel>
    _max?: NestedEnumCommentTypeFilter<$PrismaModel>
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type EnumGrantStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.GrantStatus | EnumGrantStatusFieldRefInput<$PrismaModel>
    in?: $Enums.GrantStatus[]
    notIn?: $Enums.GrantStatus[]
    not?: NestedEnumGrantStatusFilter<$PrismaModel> | $Enums.GrantStatus
  }

  export type GrantApplicationListRelationFilter = {
    every?: GrantApplicationWhereInput
    some?: GrantApplicationWhereInput
    none?: GrantApplicationWhereInput
  }

  export type GrantTrancheListRelationFilter = {
    every?: GrantTrancheWhereInput
    some?: GrantTrancheWhereInput
    none?: GrantTrancheWhereInput
  }

  export type GrantApplicationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type GrantTrancheOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type GrantsOrderByRelevanceInput = {
    fields: GrantsOrderByRelevanceFieldEnum | GrantsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type GrantsCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    slug?: SortOrder
    description?: SortOrder
    shortDescription?: SortOrder
    token?: SortOrder
    minReward?: SortOrder
    maxReward?: SortOrder
    totalPaid?: SortOrder
    totalApproved?: SortOrder
    historicalApplications?: SortOrder
    historicalPaid?: SortOrder
    link?: SortOrder
    sponsorId?: SortOrder
    pocId?: SortOrder
    isPublished?: SortOrder
    isFeatured?: SortOrder
    isActive?: SortOrder
    isArchived?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    skills?: SortOrder
    logo?: SortOrder
    region?: SortOrder
    questions?: SortOrder
    pocSocials?: SortOrder
    status?: SortOrder
    airtableId?: SortOrder
    avgResponseTime?: SortOrder
    isNative?: SortOrder
    isPrivate?: SortOrder
    references?: SortOrder
    ai?: SortOrder
    approverRecordId?: SortOrder
    emailSender?: SortOrder
    replyToEmail?: SortOrder
    emailSalutation?: SortOrder
    communityLink?: SortOrder
  }

  export type GrantsAvgOrderByAggregateInput = {
    minReward?: SortOrder
    maxReward?: SortOrder
    totalPaid?: SortOrder
    totalApproved?: SortOrder
    historicalApplications?: SortOrder
    historicalPaid?: SortOrder
  }

  export type GrantsMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    slug?: SortOrder
    description?: SortOrder
    shortDescription?: SortOrder
    token?: SortOrder
    minReward?: SortOrder
    maxReward?: SortOrder
    totalPaid?: SortOrder
    totalApproved?: SortOrder
    historicalApplications?: SortOrder
    historicalPaid?: SortOrder
    link?: SortOrder
    sponsorId?: SortOrder
    pocId?: SortOrder
    isPublished?: SortOrder
    isFeatured?: SortOrder
    isActive?: SortOrder
    isArchived?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    logo?: SortOrder
    region?: SortOrder
    pocSocials?: SortOrder
    status?: SortOrder
    airtableId?: SortOrder
    avgResponseTime?: SortOrder
    isNative?: SortOrder
    isPrivate?: SortOrder
    approverRecordId?: SortOrder
    emailSender?: SortOrder
    replyToEmail?: SortOrder
    emailSalutation?: SortOrder
    communityLink?: SortOrder
  }

  export type GrantsMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    slug?: SortOrder
    description?: SortOrder
    shortDescription?: SortOrder
    token?: SortOrder
    minReward?: SortOrder
    maxReward?: SortOrder
    totalPaid?: SortOrder
    totalApproved?: SortOrder
    historicalApplications?: SortOrder
    historicalPaid?: SortOrder
    link?: SortOrder
    sponsorId?: SortOrder
    pocId?: SortOrder
    isPublished?: SortOrder
    isFeatured?: SortOrder
    isActive?: SortOrder
    isArchived?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    logo?: SortOrder
    region?: SortOrder
    pocSocials?: SortOrder
    status?: SortOrder
    airtableId?: SortOrder
    avgResponseTime?: SortOrder
    isNative?: SortOrder
    isPrivate?: SortOrder
    approverRecordId?: SortOrder
    emailSender?: SortOrder
    replyToEmail?: SortOrder
    emailSalutation?: SortOrder
    communityLink?: SortOrder
  }

  export type GrantsSumOrderByAggregateInput = {
    minReward?: SortOrder
    maxReward?: SortOrder
    totalPaid?: SortOrder
    totalApproved?: SortOrder
    historicalApplications?: SortOrder
    historicalPaid?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type EnumGrantStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.GrantStatus | EnumGrantStatusFieldRefInput<$PrismaModel>
    in?: $Enums.GrantStatus[]
    notIn?: $Enums.GrantStatus[]
    not?: NestedEnumGrantStatusWithAggregatesFilter<$PrismaModel> | $Enums.GrantStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumGrantStatusFilter<$PrismaModel>
    _max?: NestedEnumGrantStatusFilter<$PrismaModel>
  }

  export type EnumGrantApplicationStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.GrantApplicationStatus | EnumGrantApplicationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.GrantApplicationStatus[]
    notIn?: $Enums.GrantApplicationStatus[]
    not?: NestedEnumGrantApplicationStatusFilter<$PrismaModel> | $Enums.GrantApplicationStatus
  }

  export type EnumSubmissionLabelsFilter<$PrismaModel = never> = {
    equals?: $Enums.SubmissionLabels | EnumSubmissionLabelsFieldRefInput<$PrismaModel>
    in?: $Enums.SubmissionLabels[]
    notIn?: $Enums.SubmissionLabels[]
    not?: NestedEnumSubmissionLabelsFilter<$PrismaModel> | $Enums.SubmissionLabels
  }

  export type GrantsScalarRelationFilter = {
    is?: GrantsWhereInput
    isNot?: GrantsWhereInput
  }

  export type CreditLedgerListRelationFilter = {
    every?: CreditLedgerWhereInput
    some?: CreditLedgerWhereInput
    none?: CreditLedgerWhereInput
  }

  export type CreditLedgerOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type GrantApplicationOrderByRelevanceInput = {
    fields: GrantApplicationOrderByRelevanceFieldEnum | GrantApplicationOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type GrantApplicationCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    grantId?: SortOrder
    applicationStatus?: SortOrder
    projectTitle?: SortOrder
    projectOneLiner?: SortOrder
    projectDetails?: SortOrder
    projectTimeline?: SortOrder
    proofOfWork?: SortOrder
    walletAddress?: SortOrder
    twitter?: SortOrder
    github?: SortOrder
    milestones?: SortOrder
    kpi?: SortOrder
    answers?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    label?: SortOrder
    ask?: SortOrder
    approvedAmount?: SortOrder
    approvedAmountInUSD?: SortOrder
    decidedAt?: SortOrder
    totalPaid?: SortOrder
    isShipped?: SortOrder
    paymentDetails?: SortOrder
    totalTranches?: SortOrder
    like?: SortOrder
    likeCount?: SortOrder
    decidedBy?: SortOrder
    notes?: SortOrder
    ai?: SortOrder
  }

  export type GrantApplicationAvgOrderByAggregateInput = {
    ask?: SortOrder
    approvedAmount?: SortOrder
    approvedAmountInUSD?: SortOrder
    totalPaid?: SortOrder
    totalTranches?: SortOrder
    likeCount?: SortOrder
  }

  export type GrantApplicationMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    grantId?: SortOrder
    applicationStatus?: SortOrder
    projectTitle?: SortOrder
    projectOneLiner?: SortOrder
    projectDetails?: SortOrder
    projectTimeline?: SortOrder
    proofOfWork?: SortOrder
    walletAddress?: SortOrder
    twitter?: SortOrder
    github?: SortOrder
    milestones?: SortOrder
    kpi?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    label?: SortOrder
    ask?: SortOrder
    approvedAmount?: SortOrder
    approvedAmountInUSD?: SortOrder
    decidedAt?: SortOrder
    totalPaid?: SortOrder
    isShipped?: SortOrder
    totalTranches?: SortOrder
    likeCount?: SortOrder
    decidedBy?: SortOrder
    notes?: SortOrder
  }

  export type GrantApplicationMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    grantId?: SortOrder
    applicationStatus?: SortOrder
    projectTitle?: SortOrder
    projectOneLiner?: SortOrder
    projectDetails?: SortOrder
    projectTimeline?: SortOrder
    proofOfWork?: SortOrder
    walletAddress?: SortOrder
    twitter?: SortOrder
    github?: SortOrder
    milestones?: SortOrder
    kpi?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    label?: SortOrder
    ask?: SortOrder
    approvedAmount?: SortOrder
    approvedAmountInUSD?: SortOrder
    decidedAt?: SortOrder
    totalPaid?: SortOrder
    isShipped?: SortOrder
    totalTranches?: SortOrder
    likeCount?: SortOrder
    decidedBy?: SortOrder
    notes?: SortOrder
  }

  export type GrantApplicationSumOrderByAggregateInput = {
    ask?: SortOrder
    approvedAmount?: SortOrder
    approvedAmountInUSD?: SortOrder
    totalPaid?: SortOrder
    totalTranches?: SortOrder
    likeCount?: SortOrder
  }

  export type EnumGrantApplicationStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.GrantApplicationStatus | EnumGrantApplicationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.GrantApplicationStatus[]
    notIn?: $Enums.GrantApplicationStatus[]
    not?: NestedEnumGrantApplicationStatusWithAggregatesFilter<$PrismaModel> | $Enums.GrantApplicationStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumGrantApplicationStatusFilter<$PrismaModel>
    _max?: NestedEnumGrantApplicationStatusFilter<$PrismaModel>
  }

  export type EnumSubmissionLabelsWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SubmissionLabels | EnumSubmissionLabelsFieldRefInput<$PrismaModel>
    in?: $Enums.SubmissionLabels[]
    notIn?: $Enums.SubmissionLabels[]
    not?: NestedEnumSubmissionLabelsWithAggregatesFilter<$PrismaModel> | $Enums.SubmissionLabels
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSubmissionLabelsFilter<$PrismaModel>
    _max?: NestedEnumSubmissionLabelsFilter<$PrismaModel>
  }

  export type EnumGrantTrancheStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.GrantTrancheStatus | EnumGrantTrancheStatusFieldRefInput<$PrismaModel>
    in?: $Enums.GrantTrancheStatus[]
    notIn?: $Enums.GrantTrancheStatus[]
    not?: NestedEnumGrantTrancheStatusFilter<$PrismaModel> | $Enums.GrantTrancheStatus
  }

  export type GrantApplicationScalarRelationFilter = {
    is?: GrantApplicationWhereInput
    isNot?: GrantApplicationWhereInput
  }

  export type GrantTrancheOrderByRelevanceInput = {
    fields: GrantTrancheOrderByRelevanceFieldEnum | GrantTrancheOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type GrantTrancheCountOrderByAggregateInput = {
    id?: SortOrder
    applicationId?: SortOrder
    grantId?: SortOrder
    ask?: SortOrder
    update?: SortOrder
    helpWanted?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    approvedAmount?: SortOrder
    decidedAt?: SortOrder
    trancheNumber?: SortOrder
  }

  export type GrantTrancheAvgOrderByAggregateInput = {
    ask?: SortOrder
    approvedAmount?: SortOrder
    trancheNumber?: SortOrder
  }

  export type GrantTrancheMaxOrderByAggregateInput = {
    id?: SortOrder
    applicationId?: SortOrder
    grantId?: SortOrder
    ask?: SortOrder
    update?: SortOrder
    helpWanted?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    approvedAmount?: SortOrder
    decidedAt?: SortOrder
    trancheNumber?: SortOrder
  }

  export type GrantTrancheMinOrderByAggregateInput = {
    id?: SortOrder
    applicationId?: SortOrder
    grantId?: SortOrder
    ask?: SortOrder
    update?: SortOrder
    helpWanted?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    approvedAmount?: SortOrder
    decidedAt?: SortOrder
    trancheNumber?: SortOrder
  }

  export type GrantTrancheSumOrderByAggregateInput = {
    ask?: SortOrder
    approvedAmount?: SortOrder
    trancheNumber?: SortOrder
  }

  export type EnumGrantTrancheStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.GrantTrancheStatus | EnumGrantTrancheStatusFieldRefInput<$PrismaModel>
    in?: $Enums.GrantTrancheStatus[]
    notIn?: $Enums.GrantTrancheStatus[]
    not?: NestedEnumGrantTrancheStatusWithAggregatesFilter<$PrismaModel> | $Enums.GrantTrancheStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumGrantTrancheStatusFilter<$PrismaModel>
    _max?: NestedEnumGrantTrancheStatusFilter<$PrismaModel>
  }

  export type EnumSubmissionStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.SubmissionStatus | EnumSubmissionStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SubmissionStatus[]
    notIn?: $Enums.SubmissionStatus[]
    not?: NestedEnumSubmissionStatusFilter<$PrismaModel> | $Enums.SubmissionStatus
  }

  export type BountiesScalarRelationFilter = {
    is?: BountiesWhereInput
    isNot?: BountiesWhereInput
  }

  export type SubmissionOrderByRelevanceInput = {
    fields: SubmissionOrderByRelevanceFieldEnum | SubmissionOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type SubmissionCountOrderByAggregateInput = {
    id?: SortOrder
    link?: SortOrder
    tweet?: SortOrder
    status?: SortOrder
    eligibilityAnswers?: SortOrder
    userId?: SortOrder
    listingId?: SortOrder
    isWinner?: SortOrder
    winnerPosition?: SortOrder
    isActive?: SortOrder
    isArchived?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    like?: SortOrder
    likeCount?: SortOrder
    isPaid?: SortOrder
    paymentDetails?: SortOrder
    otherInfo?: SortOrder
    ask?: SortOrder
    label?: SortOrder
    rewardInUSD?: SortOrder
    ogImage?: SortOrder
    notes?: SortOrder
  }

  export type SubmissionAvgOrderByAggregateInput = {
    winnerPosition?: SortOrder
    likeCount?: SortOrder
    ask?: SortOrder
    rewardInUSD?: SortOrder
  }

  export type SubmissionMaxOrderByAggregateInput = {
    id?: SortOrder
    link?: SortOrder
    tweet?: SortOrder
    status?: SortOrder
    userId?: SortOrder
    listingId?: SortOrder
    isWinner?: SortOrder
    winnerPosition?: SortOrder
    isActive?: SortOrder
    isArchived?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    likeCount?: SortOrder
    isPaid?: SortOrder
    otherInfo?: SortOrder
    ask?: SortOrder
    label?: SortOrder
    rewardInUSD?: SortOrder
    ogImage?: SortOrder
    notes?: SortOrder
  }

  export type SubmissionMinOrderByAggregateInput = {
    id?: SortOrder
    link?: SortOrder
    tweet?: SortOrder
    status?: SortOrder
    userId?: SortOrder
    listingId?: SortOrder
    isWinner?: SortOrder
    winnerPosition?: SortOrder
    isActive?: SortOrder
    isArchived?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    likeCount?: SortOrder
    isPaid?: SortOrder
    otherInfo?: SortOrder
    ask?: SortOrder
    label?: SortOrder
    rewardInUSD?: SortOrder
    ogImage?: SortOrder
    notes?: SortOrder
  }

  export type SubmissionSumOrderByAggregateInput = {
    winnerPosition?: SortOrder
    likeCount?: SortOrder
    ask?: SortOrder
    rewardInUSD?: SortOrder
  }

  export type EnumSubmissionStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SubmissionStatus | EnumSubmissionStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SubmissionStatus[]
    notIn?: $Enums.SubmissionStatus[]
    not?: NestedEnumSubmissionStatusWithAggregatesFilter<$PrismaModel> | $Enums.SubmissionStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSubmissionStatusFilter<$PrismaModel>
    _max?: NestedEnumSubmissionStatusFilter<$PrismaModel>
  }

  export type UserSponsorsListRelationFilter = {
    every?: UserSponsorsWhereInput
    some?: UserSponsorsWhereInput
    none?: UserSponsorsWhereInput
  }

  export type BountiesTemplatesListRelationFilter = {
    every?: BountiesTemplatesWhereInput
    some?: BountiesTemplatesWhereInput
    none?: BountiesTemplatesWhereInput
  }

  export type GrantsListRelationFilter = {
    every?: GrantsWhereInput
    some?: GrantsWhereInput
    none?: GrantsWhereInput
  }

  export type UserListRelationFilter = {
    every?: UserWhereInput
    some?: UserWhereInput
    none?: UserWhereInput
  }

  export type UserInvitesListRelationFilter = {
    every?: UserInvitesWhereInput
    some?: UserInvitesWhereInput
    none?: UserInvitesWhereInput
  }

  export type UserSponsorsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type BountiesTemplatesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type GrantsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserInvitesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SponsorsOrderByRelevanceInput = {
    fields: SponsorsOrderByRelevanceFieldEnum | SponsorsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type SponsorsCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    logo?: SortOrder
    url?: SortOrder
    industry?: SortOrder
    twitter?: SortOrder
    bio?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isArchived?: SortOrder
    isActive?: SortOrder
    entityName?: SortOrder
    isVerified?: SortOrder
    isCaution?: SortOrder
    st?: SortOrder
    verificationInfo?: SortOrder
  }

  export type SponsorsMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    logo?: SortOrder
    url?: SortOrder
    industry?: SortOrder
    twitter?: SortOrder
    bio?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isArchived?: SortOrder
    isActive?: SortOrder
    entityName?: SortOrder
    isVerified?: SortOrder
    isCaution?: SortOrder
    st?: SortOrder
  }

  export type SponsorsMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    logo?: SortOrder
    url?: SortOrder
    industry?: SortOrder
    twitter?: SortOrder
    bio?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isArchived?: SortOrder
    isActive?: SortOrder
    entityName?: SortOrder
    isVerified?: SortOrder
    isCaution?: SortOrder
    st?: SortOrder
  }

  export type AccountOrderByRelevanceInput = {
    fields: AccountOrderByRelevanceFieldEnum | AccountOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type AccountProviderProviderAccountIdCompoundUniqueInput = {
    provider: string
    providerAccountId: string
  }

  export type AccountCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    type?: SortOrder
    provider?: SortOrder
    providerAccountId?: SortOrder
    refresh_token?: SortOrder
    access_token?: SortOrder
    expires_at?: SortOrder
    token_type?: SortOrder
    scope?: SortOrder
    id_token?: SortOrder
    session_state?: SortOrder
  }

  export type AccountAvgOrderByAggregateInput = {
    expires_at?: SortOrder
  }

  export type AccountMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    type?: SortOrder
    provider?: SortOrder
    providerAccountId?: SortOrder
    refresh_token?: SortOrder
    access_token?: SortOrder
    expires_at?: SortOrder
    token_type?: SortOrder
    scope?: SortOrder
    id_token?: SortOrder
    session_state?: SortOrder
  }

  export type AccountMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    type?: SortOrder
    provider?: SortOrder
    providerAccountId?: SortOrder
    refresh_token?: SortOrder
    access_token?: SortOrder
    expires_at?: SortOrder
    token_type?: SortOrder
    scope?: SortOrder
    id_token?: SortOrder
    session_state?: SortOrder
  }

  export type AccountSumOrderByAggregateInput = {
    expires_at?: SortOrder
  }

  export type SessionOrderByRelevanceInput = {
    fields: SessionOrderByRelevanceFieldEnum | SessionOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type SessionCountOrderByAggregateInput = {
    id?: SortOrder
    sessionToken?: SortOrder
    userId?: SortOrder
    expires?: SortOrder
  }

  export type SessionMaxOrderByAggregateInput = {
    id?: SortOrder
    sessionToken?: SortOrder
    userId?: SortOrder
    expires?: SortOrder
  }

  export type SessionMinOrderByAggregateInput = {
    id?: SortOrder
    sessionToken?: SortOrder
    userId?: SortOrder
    expires?: SortOrder
  }

  export type SponsorsNullableScalarRelationFilter = {
    is?: SponsorsWhereInput | null
    isNot?: SponsorsWhereInput | null
  }

  export type PoWListRelationFilter = {
    every?: PoWWhereInput
    some?: PoWWhereInput
    none?: PoWWhereInput
  }

  export type AccountListRelationFilter = {
    every?: AccountWhereInput
    some?: AccountWhereInput
    none?: AccountWhereInput
  }

  export type SessionListRelationFilter = {
    every?: SessionWhereInput
    some?: SessionWhereInput
    none?: SessionWhereInput
  }

  export type EmailSettingsListRelationFilter = {
    every?: EmailSettingsWhereInput
    some?: EmailSettingsWhereInput
    none?: EmailSettingsWhereInput
  }

  export type TalentRankingsListRelationFilter = {
    every?: TalentRankingsWhereInput
    some?: TalentRankingsWhereInput
    none?: TalentRankingsWhereInput
  }

  export type SubscribeHackathonListRelationFilter = {
    every?: SubscribeHackathonWhereInput
    some?: SubscribeHackathonWhereInput
    none?: SubscribeHackathonWhereInput
  }

  export type PoWOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AccountOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SessionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EmailSettingsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TalentRankingsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SubscribeHackathonOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserOrderByRelevanceInput = {
    fields: UserOrderByRelevanceFieldEnum | UserOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    publicKey?: SortOrder
    walletAddress?: SortOrder
    email?: SortOrder
    username?: SortOrder
    photo?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isVerified?: SortOrder
    role?: SortOrder
    isTalentFilled?: SortOrder
    interests?: SortOrder
    bio?: SortOrder
    twitter?: SortOrder
    discord?: SortOrder
    github?: SortOrder
    linkedin?: SortOrder
    website?: SortOrder
    telegram?: SortOrder
    community?: SortOrder
    experience?: SortOrder
    superteamLevel?: SortOrder
    location?: SortOrder
    cryptoExperience?: SortOrder
    workPrefernce?: SortOrder
    currentEmployer?: SortOrder
    notifications?: SortOrder
    private?: SortOrder
    skills?: SortOrder
    currentSponsorId?: SortOrder
    emailVerified?: SortOrder
    hackathonId?: SortOrder
    featureModalShown?: SortOrder
    surveysShown?: SortOrder
    stRecommended?: SortOrder
    acceptedTOS?: SortOrder
    stLead?: SortOrder
    isBlocked?: SortOrder
    privyDid?: SortOrder
    isKYCVerified?: SortOrder
    kycName?: SortOrder
    kycCountry?: SortOrder
    kycAddress?: SortOrder
    kycDOB?: SortOrder
    kycIDNumber?: SortOrder
    kycIDType?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    publicKey?: SortOrder
    walletAddress?: SortOrder
    email?: SortOrder
    username?: SortOrder
    photo?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isVerified?: SortOrder
    role?: SortOrder
    isTalentFilled?: SortOrder
    interests?: SortOrder
    bio?: SortOrder
    twitter?: SortOrder
    discord?: SortOrder
    github?: SortOrder
    linkedin?: SortOrder
    website?: SortOrder
    telegram?: SortOrder
    community?: SortOrder
    experience?: SortOrder
    superteamLevel?: SortOrder
    location?: SortOrder
    cryptoExperience?: SortOrder
    workPrefernce?: SortOrder
    currentEmployer?: SortOrder
    private?: SortOrder
    currentSponsorId?: SortOrder
    emailVerified?: SortOrder
    hackathonId?: SortOrder
    featureModalShown?: SortOrder
    stRecommended?: SortOrder
    acceptedTOS?: SortOrder
    stLead?: SortOrder
    isBlocked?: SortOrder
    privyDid?: SortOrder
    isKYCVerified?: SortOrder
    kycName?: SortOrder
    kycCountry?: SortOrder
    kycAddress?: SortOrder
    kycDOB?: SortOrder
    kycIDNumber?: SortOrder
    kycIDType?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    publicKey?: SortOrder
    walletAddress?: SortOrder
    email?: SortOrder
    username?: SortOrder
    photo?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isVerified?: SortOrder
    role?: SortOrder
    isTalentFilled?: SortOrder
    interests?: SortOrder
    bio?: SortOrder
    twitter?: SortOrder
    discord?: SortOrder
    github?: SortOrder
    linkedin?: SortOrder
    website?: SortOrder
    telegram?: SortOrder
    community?: SortOrder
    experience?: SortOrder
    superteamLevel?: SortOrder
    location?: SortOrder
    cryptoExperience?: SortOrder
    workPrefernce?: SortOrder
    currentEmployer?: SortOrder
    private?: SortOrder
    currentSponsorId?: SortOrder
    emailVerified?: SortOrder
    hackathonId?: SortOrder
    featureModalShown?: SortOrder
    stRecommended?: SortOrder
    acceptedTOS?: SortOrder
    stLead?: SortOrder
    isBlocked?: SortOrder
    privyDid?: SortOrder
    isKYCVerified?: SortOrder
    kycName?: SortOrder
    kycCountry?: SortOrder
    kycAddress?: SortOrder
    kycDOB?: SortOrder
    kycIDNumber?: SortOrder
    kycIDType?: SortOrder
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }
  export type JsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonFilterBase<$PrismaModel>>, 'path'>>

  export type JsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type ScoutsOrderByRelevanceInput = {
    fields: ScoutsOrderByRelevanceFieldEnum | ScoutsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type ScoutsUserIdListingIdCompoundUniqueInput = {
    userId: string
    listingId: string
  }

  export type ScoutsCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    listingId?: SortOrder
    dollarsEarned?: SortOrder
    score?: SortOrder
    invited?: SortOrder
    skills?: SortOrder
    createdAt?: SortOrder
  }

  export type ScoutsAvgOrderByAggregateInput = {
    dollarsEarned?: SortOrder
    score?: SortOrder
  }

  export type ScoutsMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    listingId?: SortOrder
    dollarsEarned?: SortOrder
    score?: SortOrder
    invited?: SortOrder
    createdAt?: SortOrder
  }

  export type ScoutsMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    listingId?: SortOrder
    dollarsEarned?: SortOrder
    score?: SortOrder
    invited?: SortOrder
    createdAt?: SortOrder
  }

  export type ScoutsSumOrderByAggregateInput = {
    dollarsEarned?: SortOrder
    score?: SortOrder
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }
  export type JsonWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedJsonFilter<$PrismaModel>
    _max?: NestedJsonFilter<$PrismaModel>
  }

  export type EnumTalentRankingSkillsFilter<$PrismaModel = never> = {
    equals?: $Enums.TalentRankingSkills | EnumTalentRankingSkillsFieldRefInput<$PrismaModel>
    in?: $Enums.TalentRankingSkills[]
    notIn?: $Enums.TalentRankingSkills[]
    not?: NestedEnumTalentRankingSkillsFilter<$PrismaModel> | $Enums.TalentRankingSkills
  }

  export type EnumTalentRankingTimeframeFilter<$PrismaModel = never> = {
    equals?: $Enums.TalentRankingTimeframe | EnumTalentRankingTimeframeFieldRefInput<$PrismaModel>
    in?: $Enums.TalentRankingTimeframe[]
    notIn?: $Enums.TalentRankingTimeframe[]
    not?: NestedEnumTalentRankingTimeframeFilter<$PrismaModel> | $Enums.TalentRankingTimeframe
  }

  export type TalentRankingsOrderByRelevanceInput = {
    fields: TalentRankingsOrderByRelevanceFieldEnum | TalentRankingsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type TalentRankingsUserIdSkillTimeframeCompoundUniqueInput = {
    userId: string
    skill: $Enums.TalentRankingSkills
    timeframe: $Enums.TalentRankingTimeframe
  }

  export type TalentRankingsCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    skill?: SortOrder
    timeframe?: SortOrder
    rank?: SortOrder
    submissions?: SortOrder
    winRate?: SortOrder
    wins?: SortOrder
    totalEarnedInUSD?: SortOrder
  }

  export type TalentRankingsAvgOrderByAggregateInput = {
    rank?: SortOrder
    submissions?: SortOrder
    winRate?: SortOrder
    wins?: SortOrder
    totalEarnedInUSD?: SortOrder
  }

  export type TalentRankingsMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    skill?: SortOrder
    timeframe?: SortOrder
    rank?: SortOrder
    submissions?: SortOrder
    winRate?: SortOrder
    wins?: SortOrder
    totalEarnedInUSD?: SortOrder
  }

  export type TalentRankingsMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    skill?: SortOrder
    timeframe?: SortOrder
    rank?: SortOrder
    submissions?: SortOrder
    winRate?: SortOrder
    wins?: SortOrder
    totalEarnedInUSD?: SortOrder
  }

  export type TalentRankingsSumOrderByAggregateInput = {
    rank?: SortOrder
    submissions?: SortOrder
    winRate?: SortOrder
    wins?: SortOrder
    totalEarnedInUSD?: SortOrder
  }

  export type EnumTalentRankingSkillsWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TalentRankingSkills | EnumTalentRankingSkillsFieldRefInput<$PrismaModel>
    in?: $Enums.TalentRankingSkills[]
    notIn?: $Enums.TalentRankingSkills[]
    not?: NestedEnumTalentRankingSkillsWithAggregatesFilter<$PrismaModel> | $Enums.TalentRankingSkills
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTalentRankingSkillsFilter<$PrismaModel>
    _max?: NestedEnumTalentRankingSkillsFilter<$PrismaModel>
  }

  export type EnumTalentRankingTimeframeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TalentRankingTimeframe | EnumTalentRankingTimeframeFieldRefInput<$PrismaModel>
    in?: $Enums.TalentRankingTimeframe[]
    notIn?: $Enums.TalentRankingTimeframe[]
    not?: NestedEnumTalentRankingTimeframeWithAggregatesFilter<$PrismaModel> | $Enums.TalentRankingTimeframe
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTalentRankingTimeframeFilter<$PrismaModel>
    _max?: NestedEnumTalentRankingTimeframeFilter<$PrismaModel>
  }

  export type PoWOrderByRelevanceInput = {
    fields: PoWOrderByRelevanceFieldEnum | PoWOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type PoWCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    title?: SortOrder
    description?: SortOrder
    skills?: SortOrder
    link?: SortOrder
    createdAt?: SortOrder
    subSkills?: SortOrder
    updatedAt?: SortOrder
    like?: SortOrder
    likeCount?: SortOrder
    ogImage?: SortOrder
  }

  export type PoWAvgOrderByAggregateInput = {
    likeCount?: SortOrder
  }

  export type PoWMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    title?: SortOrder
    description?: SortOrder
    link?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    likeCount?: SortOrder
    ogImage?: SortOrder
  }

  export type PoWMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    title?: SortOrder
    description?: SortOrder
    link?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    likeCount?: SortOrder
    ogImage?: SortOrder
  }

  export type PoWSumOrderByAggregateInput = {
    likeCount?: SortOrder
  }

  export type EmailSettingsOrderByRelevanceInput = {
    fields: EmailSettingsOrderByRelevanceFieldEnum | EmailSettingsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type EmailSettingsCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    category?: SortOrder
  }

  export type EmailSettingsAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type EmailSettingsMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    category?: SortOrder
  }

  export type EmailSettingsMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    category?: SortOrder
  }

  export type EmailSettingsSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type EnumRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.Role | EnumRoleFieldRefInput<$PrismaModel>
    in?: $Enums.Role[]
    notIn?: $Enums.Role[]
    not?: NestedEnumRoleFilter<$PrismaModel> | $Enums.Role
  }

  export type UserSponsorsOrderByRelevanceInput = {
    fields: UserSponsorsOrderByRelevanceFieldEnum | UserSponsorsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type UserSponsorsUserIdSponsorIdCompoundUniqueInput = {
    userId: string
    sponsorId: string
  }

  export type UserSponsorsCountOrderByAggregateInput = {
    userId?: SortOrder
    sponsorId?: SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserSponsorsMaxOrderByAggregateInput = {
    userId?: SortOrder
    sponsorId?: SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserSponsorsMinOrderByAggregateInput = {
    userId?: SortOrder
    sponsorId?: SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EnumRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Role | EnumRoleFieldRefInput<$PrismaModel>
    in?: $Enums.Role[]
    notIn?: $Enums.Role[]
    not?: NestedEnumRoleWithAggregatesFilter<$PrismaModel> | $Enums.Role
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRoleFilter<$PrismaModel>
    _max?: NestedEnumRoleFilter<$PrismaModel>
  }

  export type UserInvitesOrderByRelevanceInput = {
    fields: UserInvitesOrderByRelevanceFieldEnum | UserInvitesOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type UserInvitesCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    senderId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    sponsorId?: SortOrder
    memberType?: SortOrder
    token?: SortOrder
    expires?: SortOrder
  }

  export type UserInvitesMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    senderId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    sponsorId?: SortOrder
    memberType?: SortOrder
    token?: SortOrder
    expires?: SortOrder
  }

  export type UserInvitesMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    senderId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    sponsorId?: SortOrder
    memberType?: SortOrder
    token?: SortOrder
    expires?: SortOrder
  }

  export type EnumEmailTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.EmailType | EnumEmailTypeFieldRefInput<$PrismaModel>
    in?: $Enums.EmailType[]
    notIn?: $Enums.EmailType[]
    not?: NestedEnumEmailTypeFilter<$PrismaModel> | $Enums.EmailType
  }

  export type emailLogsOrderByRelevanceInput = {
    fields: emailLogsOrderByRelevanceFieldEnum | emailLogsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type emailLogsCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    type?: SortOrder
    bountyId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type emailLogsMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    type?: SortOrder
    bountyId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type emailLogsMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    type?: SortOrder
    bountyId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EnumEmailTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EmailType | EnumEmailTypeFieldRefInput<$PrismaModel>
    in?: $Enums.EmailType[]
    notIn?: $Enums.EmailType[]
    not?: NestedEnumEmailTypeWithAggregatesFilter<$PrismaModel> | $Enums.EmailType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEmailTypeFilter<$PrismaModel>
    _max?: NestedEnumEmailTypeFilter<$PrismaModel>
  }

  export type ResendLogsOrderByRelevanceInput = {
    fields: ResendLogsOrderByRelevanceFieldEnum | ResendLogsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type ResendLogsCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    subject?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ResendLogsMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    subject?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ResendLogsMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    subject?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SubscribeBountyOrderByRelevanceInput = {
    fields: SubscribeBountyOrderByRelevanceFieldEnum | SubscribeBountyOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type SubscribeBountyUserIdBountyIdCompoundUniqueInput = {
    userId: string
    bountyId: string
  }

  export type SubscribeBountyCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    bountyId?: SortOrder
    isArchived?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SubscribeBountyMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    bountyId?: SortOrder
    isArchived?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SubscribeBountyMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    bountyId?: SortOrder
    isArchived?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SubscribeHackathonOrderByRelevanceInput = {
    fields: SubscribeHackathonOrderByRelevanceFieldEnum | SubscribeHackathonOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type SubscribeHackathonCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    hackathonId?: SortOrder
    isArchived?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SubscribeHackathonMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    hackathonId?: SortOrder
    isArchived?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SubscribeHackathonMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    hackathonId?: SortOrder
    isArchived?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type VerificationTokenOrderByRelevanceInput = {
    fields: VerificationTokenOrderByRelevanceFieldEnum | VerificationTokenOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type VerificationTokenIdentifierTokenCompoundUniqueInput = {
    identifier: string
    token: string
  }

  export type VerificationTokenCountOrderByAggregateInput = {
    identifier?: SortOrder
    token?: SortOrder
    expires?: SortOrder
  }

  export type VerificationTokenMaxOrderByAggregateInput = {
    identifier?: SortOrder
    token?: SortOrder
    expires?: SortOrder
  }

  export type VerificationTokenMinOrderByAggregateInput = {
    identifier?: SortOrder
    token?: SortOrder
    expires?: SortOrder
  }

  export type HackathonOrderByRelevanceInput = {
    fields: HackathonOrderByRelevanceFieldEnum | HackathonOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type HackathonCountOrderByAggregateInput = {
    id?: SortOrder
    slug?: SortOrder
    name?: SortOrder
    logo?: SortOrder
    sponsorId?: SortOrder
    deadline?: SortOrder
    startDate?: SortOrder
    description?: SortOrder
    altLogo?: SortOrder
    announceDate?: SortOrder
    eligibility?: SortOrder
  }

  export type HackathonMaxOrderByAggregateInput = {
    id?: SortOrder
    slug?: SortOrder
    name?: SortOrder
    logo?: SortOrder
    sponsorId?: SortOrder
    deadline?: SortOrder
    startDate?: SortOrder
    description?: SortOrder
    altLogo?: SortOrder
    announceDate?: SortOrder
  }

  export type HackathonMinOrderByAggregateInput = {
    id?: SortOrder
    slug?: SortOrder
    name?: SortOrder
    logo?: SortOrder
    sponsorId?: SortOrder
    deadline?: SortOrder
    startDate?: SortOrder
    description?: SortOrder
    altLogo?: SortOrder
    announceDate?: SortOrder
  }

  export type UnsubscribedEmailOrderByRelevanceInput = {
    fields: UnsubscribedEmailOrderByRelevanceFieldEnum | UnsubscribedEmailOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type UnsubscribedEmailCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    createdAt?: SortOrder
  }

  export type UnsubscribedEmailMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    createdAt?: SortOrder
  }

  export type UnsubscribedEmailMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    createdAt?: SortOrder
  }

  export type BlockedEmailOrderByRelevanceInput = {
    fields: BlockedEmailOrderByRelevanceFieldEnum | BlockedEmailOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type BlockedEmailCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    createdAt?: SortOrder
  }

  export type BlockedEmailMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    createdAt?: SortOrder
  }

  export type BlockedEmailMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    createdAt?: SortOrder
  }

  export type EnumCreditEventTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.CreditEventType | EnumCreditEventTypeFieldRefInput<$PrismaModel>
    in?: $Enums.CreditEventType[]
    notIn?: $Enums.CreditEventType[]
    not?: NestedEnumCreditEventTypeFilter<$PrismaModel> | $Enums.CreditEventType
  }

  export type CreditLedgerOrderByRelevanceInput = {
    fields: CreditLedgerOrderByRelevanceFieldEnum | CreditLedgerOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type CreditLedgerCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    submissionId?: SortOrder
    applicationId?: SortOrder
    type?: SortOrder
    change?: SortOrder
    effectiveMonth?: SortOrder
    createdAt?: SortOrder
  }

  export type CreditLedgerAvgOrderByAggregateInput = {
    change?: SortOrder
  }

  export type CreditLedgerMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    submissionId?: SortOrder
    applicationId?: SortOrder
    type?: SortOrder
    change?: SortOrder
    effectiveMonth?: SortOrder
    createdAt?: SortOrder
  }

  export type CreditLedgerMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    submissionId?: SortOrder
    applicationId?: SortOrder
    type?: SortOrder
    change?: SortOrder
    effectiveMonth?: SortOrder
    createdAt?: SortOrder
  }

  export type CreditLedgerSumOrderByAggregateInput = {
    change?: SortOrder
  }

  export type EnumCreditEventTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CreditEventType | EnumCreditEventTypeFieldRefInput<$PrismaModel>
    in?: $Enums.CreditEventType[]
    notIn?: $Enums.CreditEventType[]
    not?: NestedEnumCreditEventTypeWithAggregatesFilter<$PrismaModel> | $Enums.CreditEventType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCreditEventTypeFilter<$PrismaModel>
    _max?: NestedEnumCreditEventTypeFilter<$PrismaModel>
  }

  export type BountiesTemplatesCreateNestedOneWithoutBountiesInput = {
    create?: XOR<BountiesTemplatesCreateWithoutBountiesInput, BountiesTemplatesUncheckedCreateWithoutBountiesInput>
    connectOrCreate?: BountiesTemplatesCreateOrConnectWithoutBountiesInput
    connect?: BountiesTemplatesWhereUniqueInput
  }

  export type SponsorsCreateNestedOneWithoutBountiesInput = {
    create?: XOR<SponsorsCreateWithoutBountiesInput, SponsorsUncheckedCreateWithoutBountiesInput>
    connectOrCreate?: SponsorsCreateOrConnectWithoutBountiesInput
    connect?: SponsorsWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutPocInput = {
    create?: XOR<UserCreateWithoutPocInput, UserUncheckedCreateWithoutPocInput>
    connectOrCreate?: UserCreateOrConnectWithoutPocInput
    connect?: UserWhereUniqueInput
  }

  export type SubmissionCreateNestedManyWithoutListingInput = {
    create?: XOR<SubmissionCreateWithoutListingInput, SubmissionUncheckedCreateWithoutListingInput> | SubmissionCreateWithoutListingInput[] | SubmissionUncheckedCreateWithoutListingInput[]
    connectOrCreate?: SubmissionCreateOrConnectWithoutListingInput | SubmissionCreateOrConnectWithoutListingInput[]
    createMany?: SubmissionCreateManyListingInputEnvelope
    connect?: SubmissionWhereUniqueInput | SubmissionWhereUniqueInput[]
  }

  export type SubscribeBountyCreateNestedManyWithoutBountiesInput = {
    create?: XOR<SubscribeBountyCreateWithoutBountiesInput, SubscribeBountyUncheckedCreateWithoutBountiesInput> | SubscribeBountyCreateWithoutBountiesInput[] | SubscribeBountyUncheckedCreateWithoutBountiesInput[]
    connectOrCreate?: SubscribeBountyCreateOrConnectWithoutBountiesInput | SubscribeBountyCreateOrConnectWithoutBountiesInput[]
    createMany?: SubscribeBountyCreateManyBountiesInputEnvelope
    connect?: SubscribeBountyWhereUniqueInput | SubscribeBountyWhereUniqueInput[]
  }

  export type HackathonCreateNestedOneWithoutListingsInput = {
    create?: XOR<HackathonCreateWithoutListingsInput, HackathonUncheckedCreateWithoutListingsInput>
    connectOrCreate?: HackathonCreateOrConnectWithoutListingsInput
    connect?: HackathonWhereUniqueInput
  }

  export type ScoutsCreateNestedManyWithoutListingInput = {
    create?: XOR<ScoutsCreateWithoutListingInput, ScoutsUncheckedCreateWithoutListingInput> | ScoutsCreateWithoutListingInput[] | ScoutsUncheckedCreateWithoutListingInput[]
    connectOrCreate?: ScoutsCreateOrConnectWithoutListingInput | ScoutsCreateOrConnectWithoutListingInput[]
    createMany?: ScoutsCreateManyListingInputEnvelope
    connect?: ScoutsWhereUniqueInput | ScoutsWhereUniqueInput[]
  }

  export type CommentCreateNestedManyWithoutListingInput = {
    create?: XOR<CommentCreateWithoutListingInput, CommentUncheckedCreateWithoutListingInput> | CommentCreateWithoutListingInput[] | CommentUncheckedCreateWithoutListingInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutListingInput | CommentCreateOrConnectWithoutListingInput[]
    createMany?: CommentCreateManyListingInputEnvelope
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
  }

  export type SubmissionUncheckedCreateNestedManyWithoutListingInput = {
    create?: XOR<SubmissionCreateWithoutListingInput, SubmissionUncheckedCreateWithoutListingInput> | SubmissionCreateWithoutListingInput[] | SubmissionUncheckedCreateWithoutListingInput[]
    connectOrCreate?: SubmissionCreateOrConnectWithoutListingInput | SubmissionCreateOrConnectWithoutListingInput[]
    createMany?: SubmissionCreateManyListingInputEnvelope
    connect?: SubmissionWhereUniqueInput | SubmissionWhereUniqueInput[]
  }

  export type SubscribeBountyUncheckedCreateNestedManyWithoutBountiesInput = {
    create?: XOR<SubscribeBountyCreateWithoutBountiesInput, SubscribeBountyUncheckedCreateWithoutBountiesInput> | SubscribeBountyCreateWithoutBountiesInput[] | SubscribeBountyUncheckedCreateWithoutBountiesInput[]
    connectOrCreate?: SubscribeBountyCreateOrConnectWithoutBountiesInput | SubscribeBountyCreateOrConnectWithoutBountiesInput[]
    createMany?: SubscribeBountyCreateManyBountiesInputEnvelope
    connect?: SubscribeBountyWhereUniqueInput | SubscribeBountyWhereUniqueInput[]
  }

  export type ScoutsUncheckedCreateNestedManyWithoutListingInput = {
    create?: XOR<ScoutsCreateWithoutListingInput, ScoutsUncheckedCreateWithoutListingInput> | ScoutsCreateWithoutListingInput[] | ScoutsUncheckedCreateWithoutListingInput[]
    connectOrCreate?: ScoutsCreateOrConnectWithoutListingInput | ScoutsCreateOrConnectWithoutListingInput[]
    createMany?: ScoutsCreateManyListingInputEnvelope
    connect?: ScoutsWhereUniqueInput | ScoutsWhereUniqueInput[]
  }

  export type CommentUncheckedCreateNestedManyWithoutListingInput = {
    create?: XOR<CommentCreateWithoutListingInput, CommentUncheckedCreateWithoutListingInput> | CommentCreateWithoutListingInput[] | CommentUncheckedCreateWithoutListingInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutListingInput | CommentCreateOrConnectWithoutListingInput[]
    createMany?: CommentCreateManyListingInputEnvelope
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type EnumstatusFieldUpdateOperationsInput = {
    set?: $Enums.status
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type EnumSourceFieldUpdateOperationsInput = {
    set?: $Enums.Source
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type EnumBountyTypeFieldUpdateOperationsInput = {
    set?: $Enums.BountyType
  }

  export type EnumApplicationTypeFieldUpdateOperationsInput = {
    set?: $Enums.ApplicationType
  }

  export type EnumCompensationTypeFieldUpdateOperationsInput = {
    set?: $Enums.CompensationType
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type BountiesTemplatesUpdateOneWithoutBountiesNestedInput = {
    create?: XOR<BountiesTemplatesCreateWithoutBountiesInput, BountiesTemplatesUncheckedCreateWithoutBountiesInput>
    connectOrCreate?: BountiesTemplatesCreateOrConnectWithoutBountiesInput
    upsert?: BountiesTemplatesUpsertWithoutBountiesInput
    disconnect?: BountiesTemplatesWhereInput | boolean
    delete?: BountiesTemplatesWhereInput | boolean
    connect?: BountiesTemplatesWhereUniqueInput
    update?: XOR<XOR<BountiesTemplatesUpdateToOneWithWhereWithoutBountiesInput, BountiesTemplatesUpdateWithoutBountiesInput>, BountiesTemplatesUncheckedUpdateWithoutBountiesInput>
  }

  export type SponsorsUpdateOneRequiredWithoutBountiesNestedInput = {
    create?: XOR<SponsorsCreateWithoutBountiesInput, SponsorsUncheckedCreateWithoutBountiesInput>
    connectOrCreate?: SponsorsCreateOrConnectWithoutBountiesInput
    upsert?: SponsorsUpsertWithoutBountiesInput
    connect?: SponsorsWhereUniqueInput
    update?: XOR<XOR<SponsorsUpdateToOneWithWhereWithoutBountiesInput, SponsorsUpdateWithoutBountiesInput>, SponsorsUncheckedUpdateWithoutBountiesInput>
  }

  export type UserUpdateOneRequiredWithoutPocNestedInput = {
    create?: XOR<UserCreateWithoutPocInput, UserUncheckedCreateWithoutPocInput>
    connectOrCreate?: UserCreateOrConnectWithoutPocInput
    upsert?: UserUpsertWithoutPocInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutPocInput, UserUpdateWithoutPocInput>, UserUncheckedUpdateWithoutPocInput>
  }

  export type SubmissionUpdateManyWithoutListingNestedInput = {
    create?: XOR<SubmissionCreateWithoutListingInput, SubmissionUncheckedCreateWithoutListingInput> | SubmissionCreateWithoutListingInput[] | SubmissionUncheckedCreateWithoutListingInput[]
    connectOrCreate?: SubmissionCreateOrConnectWithoutListingInput | SubmissionCreateOrConnectWithoutListingInput[]
    upsert?: SubmissionUpsertWithWhereUniqueWithoutListingInput | SubmissionUpsertWithWhereUniqueWithoutListingInput[]
    createMany?: SubmissionCreateManyListingInputEnvelope
    set?: SubmissionWhereUniqueInput | SubmissionWhereUniqueInput[]
    disconnect?: SubmissionWhereUniqueInput | SubmissionWhereUniqueInput[]
    delete?: SubmissionWhereUniqueInput | SubmissionWhereUniqueInput[]
    connect?: SubmissionWhereUniqueInput | SubmissionWhereUniqueInput[]
    update?: SubmissionUpdateWithWhereUniqueWithoutListingInput | SubmissionUpdateWithWhereUniqueWithoutListingInput[]
    updateMany?: SubmissionUpdateManyWithWhereWithoutListingInput | SubmissionUpdateManyWithWhereWithoutListingInput[]
    deleteMany?: SubmissionScalarWhereInput | SubmissionScalarWhereInput[]
  }

  export type SubscribeBountyUpdateManyWithoutBountiesNestedInput = {
    create?: XOR<SubscribeBountyCreateWithoutBountiesInput, SubscribeBountyUncheckedCreateWithoutBountiesInput> | SubscribeBountyCreateWithoutBountiesInput[] | SubscribeBountyUncheckedCreateWithoutBountiesInput[]
    connectOrCreate?: SubscribeBountyCreateOrConnectWithoutBountiesInput | SubscribeBountyCreateOrConnectWithoutBountiesInput[]
    upsert?: SubscribeBountyUpsertWithWhereUniqueWithoutBountiesInput | SubscribeBountyUpsertWithWhereUniqueWithoutBountiesInput[]
    createMany?: SubscribeBountyCreateManyBountiesInputEnvelope
    set?: SubscribeBountyWhereUniqueInput | SubscribeBountyWhereUniqueInput[]
    disconnect?: SubscribeBountyWhereUniqueInput | SubscribeBountyWhereUniqueInput[]
    delete?: SubscribeBountyWhereUniqueInput | SubscribeBountyWhereUniqueInput[]
    connect?: SubscribeBountyWhereUniqueInput | SubscribeBountyWhereUniqueInput[]
    update?: SubscribeBountyUpdateWithWhereUniqueWithoutBountiesInput | SubscribeBountyUpdateWithWhereUniqueWithoutBountiesInput[]
    updateMany?: SubscribeBountyUpdateManyWithWhereWithoutBountiesInput | SubscribeBountyUpdateManyWithWhereWithoutBountiesInput[]
    deleteMany?: SubscribeBountyScalarWhereInput | SubscribeBountyScalarWhereInput[]
  }

  export type HackathonUpdateOneWithoutListingsNestedInput = {
    create?: XOR<HackathonCreateWithoutListingsInput, HackathonUncheckedCreateWithoutListingsInput>
    connectOrCreate?: HackathonCreateOrConnectWithoutListingsInput
    upsert?: HackathonUpsertWithoutListingsInput
    disconnect?: HackathonWhereInput | boolean
    delete?: HackathonWhereInput | boolean
    connect?: HackathonWhereUniqueInput
    update?: XOR<XOR<HackathonUpdateToOneWithWhereWithoutListingsInput, HackathonUpdateWithoutListingsInput>, HackathonUncheckedUpdateWithoutListingsInput>
  }

  export type ScoutsUpdateManyWithoutListingNestedInput = {
    create?: XOR<ScoutsCreateWithoutListingInput, ScoutsUncheckedCreateWithoutListingInput> | ScoutsCreateWithoutListingInput[] | ScoutsUncheckedCreateWithoutListingInput[]
    connectOrCreate?: ScoutsCreateOrConnectWithoutListingInput | ScoutsCreateOrConnectWithoutListingInput[]
    upsert?: ScoutsUpsertWithWhereUniqueWithoutListingInput | ScoutsUpsertWithWhereUniqueWithoutListingInput[]
    createMany?: ScoutsCreateManyListingInputEnvelope
    set?: ScoutsWhereUniqueInput | ScoutsWhereUniqueInput[]
    disconnect?: ScoutsWhereUniqueInput | ScoutsWhereUniqueInput[]
    delete?: ScoutsWhereUniqueInput | ScoutsWhereUniqueInput[]
    connect?: ScoutsWhereUniqueInput | ScoutsWhereUniqueInput[]
    update?: ScoutsUpdateWithWhereUniqueWithoutListingInput | ScoutsUpdateWithWhereUniqueWithoutListingInput[]
    updateMany?: ScoutsUpdateManyWithWhereWithoutListingInput | ScoutsUpdateManyWithWhereWithoutListingInput[]
    deleteMany?: ScoutsScalarWhereInput | ScoutsScalarWhereInput[]
  }

  export type CommentUpdateManyWithoutListingNestedInput = {
    create?: XOR<CommentCreateWithoutListingInput, CommentUncheckedCreateWithoutListingInput> | CommentCreateWithoutListingInput[] | CommentUncheckedCreateWithoutListingInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutListingInput | CommentCreateOrConnectWithoutListingInput[]
    upsert?: CommentUpsertWithWhereUniqueWithoutListingInput | CommentUpsertWithWhereUniqueWithoutListingInput[]
    createMany?: CommentCreateManyListingInputEnvelope
    set?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    disconnect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    delete?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    update?: CommentUpdateWithWhereUniqueWithoutListingInput | CommentUpdateWithWhereUniqueWithoutListingInput[]
    updateMany?: CommentUpdateManyWithWhereWithoutListingInput | CommentUpdateManyWithWhereWithoutListingInput[]
    deleteMany?: CommentScalarWhereInput | CommentScalarWhereInput[]
  }

  export type SubmissionUncheckedUpdateManyWithoutListingNestedInput = {
    create?: XOR<SubmissionCreateWithoutListingInput, SubmissionUncheckedCreateWithoutListingInput> | SubmissionCreateWithoutListingInput[] | SubmissionUncheckedCreateWithoutListingInput[]
    connectOrCreate?: SubmissionCreateOrConnectWithoutListingInput | SubmissionCreateOrConnectWithoutListingInput[]
    upsert?: SubmissionUpsertWithWhereUniqueWithoutListingInput | SubmissionUpsertWithWhereUniqueWithoutListingInput[]
    createMany?: SubmissionCreateManyListingInputEnvelope
    set?: SubmissionWhereUniqueInput | SubmissionWhereUniqueInput[]
    disconnect?: SubmissionWhereUniqueInput | SubmissionWhereUniqueInput[]
    delete?: SubmissionWhereUniqueInput | SubmissionWhereUniqueInput[]
    connect?: SubmissionWhereUniqueInput | SubmissionWhereUniqueInput[]
    update?: SubmissionUpdateWithWhereUniqueWithoutListingInput | SubmissionUpdateWithWhereUniqueWithoutListingInput[]
    updateMany?: SubmissionUpdateManyWithWhereWithoutListingInput | SubmissionUpdateManyWithWhereWithoutListingInput[]
    deleteMany?: SubmissionScalarWhereInput | SubmissionScalarWhereInput[]
  }

  export type SubscribeBountyUncheckedUpdateManyWithoutBountiesNestedInput = {
    create?: XOR<SubscribeBountyCreateWithoutBountiesInput, SubscribeBountyUncheckedCreateWithoutBountiesInput> | SubscribeBountyCreateWithoutBountiesInput[] | SubscribeBountyUncheckedCreateWithoutBountiesInput[]
    connectOrCreate?: SubscribeBountyCreateOrConnectWithoutBountiesInput | SubscribeBountyCreateOrConnectWithoutBountiesInput[]
    upsert?: SubscribeBountyUpsertWithWhereUniqueWithoutBountiesInput | SubscribeBountyUpsertWithWhereUniqueWithoutBountiesInput[]
    createMany?: SubscribeBountyCreateManyBountiesInputEnvelope
    set?: SubscribeBountyWhereUniqueInput | SubscribeBountyWhereUniqueInput[]
    disconnect?: SubscribeBountyWhereUniqueInput | SubscribeBountyWhereUniqueInput[]
    delete?: SubscribeBountyWhereUniqueInput | SubscribeBountyWhereUniqueInput[]
    connect?: SubscribeBountyWhereUniqueInput | SubscribeBountyWhereUniqueInput[]
    update?: SubscribeBountyUpdateWithWhereUniqueWithoutBountiesInput | SubscribeBountyUpdateWithWhereUniqueWithoutBountiesInput[]
    updateMany?: SubscribeBountyUpdateManyWithWhereWithoutBountiesInput | SubscribeBountyUpdateManyWithWhereWithoutBountiesInput[]
    deleteMany?: SubscribeBountyScalarWhereInput | SubscribeBountyScalarWhereInput[]
  }

  export type ScoutsUncheckedUpdateManyWithoutListingNestedInput = {
    create?: XOR<ScoutsCreateWithoutListingInput, ScoutsUncheckedCreateWithoutListingInput> | ScoutsCreateWithoutListingInput[] | ScoutsUncheckedCreateWithoutListingInput[]
    connectOrCreate?: ScoutsCreateOrConnectWithoutListingInput | ScoutsCreateOrConnectWithoutListingInput[]
    upsert?: ScoutsUpsertWithWhereUniqueWithoutListingInput | ScoutsUpsertWithWhereUniqueWithoutListingInput[]
    createMany?: ScoutsCreateManyListingInputEnvelope
    set?: ScoutsWhereUniqueInput | ScoutsWhereUniqueInput[]
    disconnect?: ScoutsWhereUniqueInput | ScoutsWhereUniqueInput[]
    delete?: ScoutsWhereUniqueInput | ScoutsWhereUniqueInput[]
    connect?: ScoutsWhereUniqueInput | ScoutsWhereUniqueInput[]
    update?: ScoutsUpdateWithWhereUniqueWithoutListingInput | ScoutsUpdateWithWhereUniqueWithoutListingInput[]
    updateMany?: ScoutsUpdateManyWithWhereWithoutListingInput | ScoutsUpdateManyWithWhereWithoutListingInput[]
    deleteMany?: ScoutsScalarWhereInput | ScoutsScalarWhereInput[]
  }

  export type CommentUncheckedUpdateManyWithoutListingNestedInput = {
    create?: XOR<CommentCreateWithoutListingInput, CommentUncheckedCreateWithoutListingInput> | CommentCreateWithoutListingInput[] | CommentUncheckedCreateWithoutListingInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutListingInput | CommentCreateOrConnectWithoutListingInput[]
    upsert?: CommentUpsertWithWhereUniqueWithoutListingInput | CommentUpsertWithWhereUniqueWithoutListingInput[]
    createMany?: CommentCreateManyListingInputEnvelope
    set?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    disconnect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    delete?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    update?: CommentUpdateWithWhereUniqueWithoutListingInput | CommentUpdateWithWhereUniqueWithoutListingInput[]
    updateMany?: CommentUpdateManyWithWhereWithoutListingInput | CommentUpdateManyWithWhereWithoutListingInput[]
    deleteMany?: CommentScalarWhereInput | CommentScalarWhereInput[]
  }

  export type BountiesCreateNestedManyWithoutTemplateInput = {
    create?: XOR<BountiesCreateWithoutTemplateInput, BountiesUncheckedCreateWithoutTemplateInput> | BountiesCreateWithoutTemplateInput[] | BountiesUncheckedCreateWithoutTemplateInput[]
    connectOrCreate?: BountiesCreateOrConnectWithoutTemplateInput | BountiesCreateOrConnectWithoutTemplateInput[]
    createMany?: BountiesCreateManyTemplateInputEnvelope
    connect?: BountiesWhereUniqueInput | BountiesWhereUniqueInput[]
  }

  export type SponsorsCreateNestedOneWithoutTemplatesInput = {
    create?: XOR<SponsorsCreateWithoutTemplatesInput, SponsorsUncheckedCreateWithoutTemplatesInput>
    connectOrCreate?: SponsorsCreateOrConnectWithoutTemplatesInput
    connect?: SponsorsWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutTemplatesInput = {
    create?: XOR<UserCreateWithoutTemplatesInput, UserUncheckedCreateWithoutTemplatesInput>
    connectOrCreate?: UserCreateOrConnectWithoutTemplatesInput
    connect?: UserWhereUniqueInput
  }

  export type BountiesUncheckedCreateNestedManyWithoutTemplateInput = {
    create?: XOR<BountiesCreateWithoutTemplateInput, BountiesUncheckedCreateWithoutTemplateInput> | BountiesCreateWithoutTemplateInput[] | BountiesUncheckedCreateWithoutTemplateInput[]
    connectOrCreate?: BountiesCreateOrConnectWithoutTemplateInput | BountiesCreateOrConnectWithoutTemplateInput[]
    createMany?: BountiesCreateManyTemplateInputEnvelope
    connect?: BountiesWhereUniqueInput | BountiesWhereUniqueInput[]
  }

  export type BountiesUpdateManyWithoutTemplateNestedInput = {
    create?: XOR<BountiesCreateWithoutTemplateInput, BountiesUncheckedCreateWithoutTemplateInput> | BountiesCreateWithoutTemplateInput[] | BountiesUncheckedCreateWithoutTemplateInput[]
    connectOrCreate?: BountiesCreateOrConnectWithoutTemplateInput | BountiesCreateOrConnectWithoutTemplateInput[]
    upsert?: BountiesUpsertWithWhereUniqueWithoutTemplateInput | BountiesUpsertWithWhereUniqueWithoutTemplateInput[]
    createMany?: BountiesCreateManyTemplateInputEnvelope
    set?: BountiesWhereUniqueInput | BountiesWhereUniqueInput[]
    disconnect?: BountiesWhereUniqueInput | BountiesWhereUniqueInput[]
    delete?: BountiesWhereUniqueInput | BountiesWhereUniqueInput[]
    connect?: BountiesWhereUniqueInput | BountiesWhereUniqueInput[]
    update?: BountiesUpdateWithWhereUniqueWithoutTemplateInput | BountiesUpdateWithWhereUniqueWithoutTemplateInput[]
    updateMany?: BountiesUpdateManyWithWhereWithoutTemplateInput | BountiesUpdateManyWithWhereWithoutTemplateInput[]
    deleteMany?: BountiesScalarWhereInput | BountiesScalarWhereInput[]
  }

  export type SponsorsUpdateOneRequiredWithoutTemplatesNestedInput = {
    create?: XOR<SponsorsCreateWithoutTemplatesInput, SponsorsUncheckedCreateWithoutTemplatesInput>
    connectOrCreate?: SponsorsCreateOrConnectWithoutTemplatesInput
    upsert?: SponsorsUpsertWithoutTemplatesInput
    connect?: SponsorsWhereUniqueInput
    update?: XOR<XOR<SponsorsUpdateToOneWithWhereWithoutTemplatesInput, SponsorsUpdateWithoutTemplatesInput>, SponsorsUncheckedUpdateWithoutTemplatesInput>
  }

  export type UserUpdateOneRequiredWithoutTemplatesNestedInput = {
    create?: XOR<UserCreateWithoutTemplatesInput, UserUncheckedCreateWithoutTemplatesInput>
    connectOrCreate?: UserCreateOrConnectWithoutTemplatesInput
    upsert?: UserUpsertWithoutTemplatesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutTemplatesInput, UserUpdateWithoutTemplatesInput>, UserUncheckedUpdateWithoutTemplatesInput>
  }

  export type BountiesUncheckedUpdateManyWithoutTemplateNestedInput = {
    create?: XOR<BountiesCreateWithoutTemplateInput, BountiesUncheckedCreateWithoutTemplateInput> | BountiesCreateWithoutTemplateInput[] | BountiesUncheckedCreateWithoutTemplateInput[]
    connectOrCreate?: BountiesCreateOrConnectWithoutTemplateInput | BountiesCreateOrConnectWithoutTemplateInput[]
    upsert?: BountiesUpsertWithWhereUniqueWithoutTemplateInput | BountiesUpsertWithWhereUniqueWithoutTemplateInput[]
    createMany?: BountiesCreateManyTemplateInputEnvelope
    set?: BountiesWhereUniqueInput | BountiesWhereUniqueInput[]
    disconnect?: BountiesWhereUniqueInput | BountiesWhereUniqueInput[]
    delete?: BountiesWhereUniqueInput | BountiesWhereUniqueInput[]
    connect?: BountiesWhereUniqueInput | BountiesWhereUniqueInput[]
    update?: BountiesUpdateWithWhereUniqueWithoutTemplateInput | BountiesUpdateWithWhereUniqueWithoutTemplateInput[]
    updateMany?: BountiesUpdateManyWithWhereWithoutTemplateInput | BountiesUpdateManyWithWhereWithoutTemplateInput[]
    deleteMany?: BountiesScalarWhereInput | BountiesScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutCommentInput = {
    create?: XOR<UserCreateWithoutCommentInput, UserUncheckedCreateWithoutCommentInput>
    connectOrCreate?: UserCreateOrConnectWithoutCommentInput
    connect?: UserWhereUniqueInput
  }

  export type CommentCreateNestedOneWithoutRepliesInput = {
    create?: XOR<CommentCreateWithoutRepliesInput, CommentUncheckedCreateWithoutRepliesInput>
    connectOrCreate?: CommentCreateOrConnectWithoutRepliesInput
    connect?: CommentWhereUniqueInput
  }

  export type CommentCreateNestedManyWithoutRepliedToInput = {
    create?: XOR<CommentCreateWithoutRepliedToInput, CommentUncheckedCreateWithoutRepliedToInput> | CommentCreateWithoutRepliedToInput[] | CommentUncheckedCreateWithoutRepliedToInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutRepliedToInput | CommentCreateOrConnectWithoutRepliedToInput[]
    createMany?: CommentCreateManyRepliedToInputEnvelope
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
  }

  export type BountiesCreateNestedOneWithoutCommentsInput = {
    create?: XOR<BountiesCreateWithoutCommentsInput, BountiesUncheckedCreateWithoutCommentsInput>
    connectOrCreate?: BountiesCreateOrConnectWithoutCommentsInput
    connect?: BountiesWhereUniqueInput
  }

  export type SubmissionCreateNestedOneWithoutCommentsInput = {
    create?: XOR<SubmissionCreateWithoutCommentsInput, SubmissionUncheckedCreateWithoutCommentsInput>
    connectOrCreate?: SubmissionCreateOrConnectWithoutCommentsInput
    connect?: SubmissionWhereUniqueInput
  }

  export type PoWCreateNestedOneWithoutCommentsInput = {
    create?: XOR<PoWCreateWithoutCommentsInput, PoWUncheckedCreateWithoutCommentsInput>
    connectOrCreate?: PoWCreateOrConnectWithoutCommentsInput
    connect?: PoWWhereUniqueInput
  }

  export type GrantApplicationCreateNestedOneWithoutCommentsInput = {
    create?: XOR<GrantApplicationCreateWithoutCommentsInput, GrantApplicationUncheckedCreateWithoutCommentsInput>
    connectOrCreate?: GrantApplicationCreateOrConnectWithoutCommentsInput
    connect?: GrantApplicationWhereUniqueInput
  }

  export type CommentUncheckedCreateNestedManyWithoutRepliedToInput = {
    create?: XOR<CommentCreateWithoutRepliedToInput, CommentUncheckedCreateWithoutRepliedToInput> | CommentCreateWithoutRepliedToInput[] | CommentUncheckedCreateWithoutRepliedToInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutRepliedToInput | CommentCreateOrConnectWithoutRepliedToInput[]
    createMany?: CommentCreateManyRepliedToInputEnvelope
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
  }

  export type EnumCommentRefTypeFieldUpdateOperationsInput = {
    set?: $Enums.CommentRefType
  }

  export type EnumCommentTypeFieldUpdateOperationsInput = {
    set?: $Enums.CommentType
  }

  export type UserUpdateOneRequiredWithoutCommentNestedInput = {
    create?: XOR<UserCreateWithoutCommentInput, UserUncheckedCreateWithoutCommentInput>
    connectOrCreate?: UserCreateOrConnectWithoutCommentInput
    upsert?: UserUpsertWithoutCommentInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCommentInput, UserUpdateWithoutCommentInput>, UserUncheckedUpdateWithoutCommentInput>
  }

  export type CommentUpdateOneWithoutRepliesNestedInput = {
    create?: XOR<CommentCreateWithoutRepliesInput, CommentUncheckedCreateWithoutRepliesInput>
    connectOrCreate?: CommentCreateOrConnectWithoutRepliesInput
    upsert?: CommentUpsertWithoutRepliesInput
    disconnect?: CommentWhereInput | boolean
    delete?: CommentWhereInput | boolean
    connect?: CommentWhereUniqueInput
    update?: XOR<XOR<CommentUpdateToOneWithWhereWithoutRepliesInput, CommentUpdateWithoutRepliesInput>, CommentUncheckedUpdateWithoutRepliesInput>
  }

  export type CommentUpdateManyWithoutRepliedToNestedInput = {
    create?: XOR<CommentCreateWithoutRepliedToInput, CommentUncheckedCreateWithoutRepliedToInput> | CommentCreateWithoutRepliedToInput[] | CommentUncheckedCreateWithoutRepliedToInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutRepliedToInput | CommentCreateOrConnectWithoutRepliedToInput[]
    upsert?: CommentUpsertWithWhereUniqueWithoutRepliedToInput | CommentUpsertWithWhereUniqueWithoutRepliedToInput[]
    createMany?: CommentCreateManyRepliedToInputEnvelope
    set?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    disconnect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    delete?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    update?: CommentUpdateWithWhereUniqueWithoutRepliedToInput | CommentUpdateWithWhereUniqueWithoutRepliedToInput[]
    updateMany?: CommentUpdateManyWithWhereWithoutRepliedToInput | CommentUpdateManyWithWhereWithoutRepliedToInput[]
    deleteMany?: CommentScalarWhereInput | CommentScalarWhereInput[]
  }

  export type BountiesUpdateOneWithoutCommentsNestedInput = {
    create?: XOR<BountiesCreateWithoutCommentsInput, BountiesUncheckedCreateWithoutCommentsInput>
    connectOrCreate?: BountiesCreateOrConnectWithoutCommentsInput
    upsert?: BountiesUpsertWithoutCommentsInput
    disconnect?: BountiesWhereInput | boolean
    delete?: BountiesWhereInput | boolean
    connect?: BountiesWhereUniqueInput
    update?: XOR<XOR<BountiesUpdateToOneWithWhereWithoutCommentsInput, BountiesUpdateWithoutCommentsInput>, BountiesUncheckedUpdateWithoutCommentsInput>
  }

  export type SubmissionUpdateOneWithoutCommentsNestedInput = {
    create?: XOR<SubmissionCreateWithoutCommentsInput, SubmissionUncheckedCreateWithoutCommentsInput>
    connectOrCreate?: SubmissionCreateOrConnectWithoutCommentsInput
    upsert?: SubmissionUpsertWithoutCommentsInput
    disconnect?: SubmissionWhereInput | boolean
    delete?: SubmissionWhereInput | boolean
    connect?: SubmissionWhereUniqueInput
    update?: XOR<XOR<SubmissionUpdateToOneWithWhereWithoutCommentsInput, SubmissionUpdateWithoutCommentsInput>, SubmissionUncheckedUpdateWithoutCommentsInput>
  }

  export type PoWUpdateOneWithoutCommentsNestedInput = {
    create?: XOR<PoWCreateWithoutCommentsInput, PoWUncheckedCreateWithoutCommentsInput>
    connectOrCreate?: PoWCreateOrConnectWithoutCommentsInput
    upsert?: PoWUpsertWithoutCommentsInput
    disconnect?: PoWWhereInput | boolean
    delete?: PoWWhereInput | boolean
    connect?: PoWWhereUniqueInput
    update?: XOR<XOR<PoWUpdateToOneWithWhereWithoutCommentsInput, PoWUpdateWithoutCommentsInput>, PoWUncheckedUpdateWithoutCommentsInput>
  }

  export type GrantApplicationUpdateOneWithoutCommentsNestedInput = {
    create?: XOR<GrantApplicationCreateWithoutCommentsInput, GrantApplicationUncheckedCreateWithoutCommentsInput>
    connectOrCreate?: GrantApplicationCreateOrConnectWithoutCommentsInput
    upsert?: GrantApplicationUpsertWithoutCommentsInput
    disconnect?: GrantApplicationWhereInput | boolean
    delete?: GrantApplicationWhereInput | boolean
    connect?: GrantApplicationWhereUniqueInput
    update?: XOR<XOR<GrantApplicationUpdateToOneWithWhereWithoutCommentsInput, GrantApplicationUpdateWithoutCommentsInput>, GrantApplicationUncheckedUpdateWithoutCommentsInput>
  }

  export type CommentUncheckedUpdateManyWithoutRepliedToNestedInput = {
    create?: XOR<CommentCreateWithoutRepliedToInput, CommentUncheckedCreateWithoutRepliedToInput> | CommentCreateWithoutRepliedToInput[] | CommentUncheckedCreateWithoutRepliedToInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutRepliedToInput | CommentCreateOrConnectWithoutRepliedToInput[]
    upsert?: CommentUpsertWithWhereUniqueWithoutRepliedToInput | CommentUpsertWithWhereUniqueWithoutRepliedToInput[]
    createMany?: CommentCreateManyRepliedToInputEnvelope
    set?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    disconnect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    delete?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    update?: CommentUpdateWithWhereUniqueWithoutRepliedToInput | CommentUpdateWithWhereUniqueWithoutRepliedToInput[]
    updateMany?: CommentUpdateManyWithWhereWithoutRepliedToInput | CommentUpdateManyWithWhereWithoutRepliedToInput[]
    deleteMany?: CommentScalarWhereInput | CommentScalarWhereInput[]
  }

  export type SponsorsCreateNestedOneWithoutGrantsInput = {
    create?: XOR<SponsorsCreateWithoutGrantsInput, SponsorsUncheckedCreateWithoutGrantsInput>
    connectOrCreate?: SponsorsCreateOrConnectWithoutGrantsInput
    connect?: SponsorsWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutGrantsInput = {
    create?: XOR<UserCreateWithoutGrantsInput, UserUncheckedCreateWithoutGrantsInput>
    connectOrCreate?: UserCreateOrConnectWithoutGrantsInput
    connect?: UserWhereUniqueInput
  }

  export type GrantApplicationCreateNestedManyWithoutGrantInput = {
    create?: XOR<GrantApplicationCreateWithoutGrantInput, GrantApplicationUncheckedCreateWithoutGrantInput> | GrantApplicationCreateWithoutGrantInput[] | GrantApplicationUncheckedCreateWithoutGrantInput[]
    connectOrCreate?: GrantApplicationCreateOrConnectWithoutGrantInput | GrantApplicationCreateOrConnectWithoutGrantInput[]
    createMany?: GrantApplicationCreateManyGrantInputEnvelope
    connect?: GrantApplicationWhereUniqueInput | GrantApplicationWhereUniqueInput[]
  }

  export type GrantTrancheCreateNestedManyWithoutGrantInput = {
    create?: XOR<GrantTrancheCreateWithoutGrantInput, GrantTrancheUncheckedCreateWithoutGrantInput> | GrantTrancheCreateWithoutGrantInput[] | GrantTrancheUncheckedCreateWithoutGrantInput[]
    connectOrCreate?: GrantTrancheCreateOrConnectWithoutGrantInput | GrantTrancheCreateOrConnectWithoutGrantInput[]
    createMany?: GrantTrancheCreateManyGrantInputEnvelope
    connect?: GrantTrancheWhereUniqueInput | GrantTrancheWhereUniqueInput[]
  }

  export type GrantApplicationUncheckedCreateNestedManyWithoutGrantInput = {
    create?: XOR<GrantApplicationCreateWithoutGrantInput, GrantApplicationUncheckedCreateWithoutGrantInput> | GrantApplicationCreateWithoutGrantInput[] | GrantApplicationUncheckedCreateWithoutGrantInput[]
    connectOrCreate?: GrantApplicationCreateOrConnectWithoutGrantInput | GrantApplicationCreateOrConnectWithoutGrantInput[]
    createMany?: GrantApplicationCreateManyGrantInputEnvelope
    connect?: GrantApplicationWhereUniqueInput | GrantApplicationWhereUniqueInput[]
  }

  export type GrantTrancheUncheckedCreateNestedManyWithoutGrantInput = {
    create?: XOR<GrantTrancheCreateWithoutGrantInput, GrantTrancheUncheckedCreateWithoutGrantInput> | GrantTrancheCreateWithoutGrantInput[] | GrantTrancheUncheckedCreateWithoutGrantInput[]
    connectOrCreate?: GrantTrancheCreateOrConnectWithoutGrantInput | GrantTrancheCreateOrConnectWithoutGrantInput[]
    createMany?: GrantTrancheCreateManyGrantInputEnvelope
    connect?: GrantTrancheWhereUniqueInput | GrantTrancheWhereUniqueInput[]
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type EnumGrantStatusFieldUpdateOperationsInput = {
    set?: $Enums.GrantStatus
  }

  export type SponsorsUpdateOneRequiredWithoutGrantsNestedInput = {
    create?: XOR<SponsorsCreateWithoutGrantsInput, SponsorsUncheckedCreateWithoutGrantsInput>
    connectOrCreate?: SponsorsCreateOrConnectWithoutGrantsInput
    upsert?: SponsorsUpsertWithoutGrantsInput
    connect?: SponsorsWhereUniqueInput
    update?: XOR<XOR<SponsorsUpdateToOneWithWhereWithoutGrantsInput, SponsorsUpdateWithoutGrantsInput>, SponsorsUncheckedUpdateWithoutGrantsInput>
  }

  export type UserUpdateOneRequiredWithoutGrantsNestedInput = {
    create?: XOR<UserCreateWithoutGrantsInput, UserUncheckedCreateWithoutGrantsInput>
    connectOrCreate?: UserCreateOrConnectWithoutGrantsInput
    upsert?: UserUpsertWithoutGrantsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutGrantsInput, UserUpdateWithoutGrantsInput>, UserUncheckedUpdateWithoutGrantsInput>
  }

  export type GrantApplicationUpdateManyWithoutGrantNestedInput = {
    create?: XOR<GrantApplicationCreateWithoutGrantInput, GrantApplicationUncheckedCreateWithoutGrantInput> | GrantApplicationCreateWithoutGrantInput[] | GrantApplicationUncheckedCreateWithoutGrantInput[]
    connectOrCreate?: GrantApplicationCreateOrConnectWithoutGrantInput | GrantApplicationCreateOrConnectWithoutGrantInput[]
    upsert?: GrantApplicationUpsertWithWhereUniqueWithoutGrantInput | GrantApplicationUpsertWithWhereUniqueWithoutGrantInput[]
    createMany?: GrantApplicationCreateManyGrantInputEnvelope
    set?: GrantApplicationWhereUniqueInput | GrantApplicationWhereUniqueInput[]
    disconnect?: GrantApplicationWhereUniqueInput | GrantApplicationWhereUniqueInput[]
    delete?: GrantApplicationWhereUniqueInput | GrantApplicationWhereUniqueInput[]
    connect?: GrantApplicationWhereUniqueInput | GrantApplicationWhereUniqueInput[]
    update?: GrantApplicationUpdateWithWhereUniqueWithoutGrantInput | GrantApplicationUpdateWithWhereUniqueWithoutGrantInput[]
    updateMany?: GrantApplicationUpdateManyWithWhereWithoutGrantInput | GrantApplicationUpdateManyWithWhereWithoutGrantInput[]
    deleteMany?: GrantApplicationScalarWhereInput | GrantApplicationScalarWhereInput[]
  }

  export type GrantTrancheUpdateManyWithoutGrantNestedInput = {
    create?: XOR<GrantTrancheCreateWithoutGrantInput, GrantTrancheUncheckedCreateWithoutGrantInput> | GrantTrancheCreateWithoutGrantInput[] | GrantTrancheUncheckedCreateWithoutGrantInput[]
    connectOrCreate?: GrantTrancheCreateOrConnectWithoutGrantInput | GrantTrancheCreateOrConnectWithoutGrantInput[]
    upsert?: GrantTrancheUpsertWithWhereUniqueWithoutGrantInput | GrantTrancheUpsertWithWhereUniqueWithoutGrantInput[]
    createMany?: GrantTrancheCreateManyGrantInputEnvelope
    set?: GrantTrancheWhereUniqueInput | GrantTrancheWhereUniqueInput[]
    disconnect?: GrantTrancheWhereUniqueInput | GrantTrancheWhereUniqueInput[]
    delete?: GrantTrancheWhereUniqueInput | GrantTrancheWhereUniqueInput[]
    connect?: GrantTrancheWhereUniqueInput | GrantTrancheWhereUniqueInput[]
    update?: GrantTrancheUpdateWithWhereUniqueWithoutGrantInput | GrantTrancheUpdateWithWhereUniqueWithoutGrantInput[]
    updateMany?: GrantTrancheUpdateManyWithWhereWithoutGrantInput | GrantTrancheUpdateManyWithWhereWithoutGrantInput[]
    deleteMany?: GrantTrancheScalarWhereInput | GrantTrancheScalarWhereInput[]
  }

  export type GrantApplicationUncheckedUpdateManyWithoutGrantNestedInput = {
    create?: XOR<GrantApplicationCreateWithoutGrantInput, GrantApplicationUncheckedCreateWithoutGrantInput> | GrantApplicationCreateWithoutGrantInput[] | GrantApplicationUncheckedCreateWithoutGrantInput[]
    connectOrCreate?: GrantApplicationCreateOrConnectWithoutGrantInput | GrantApplicationCreateOrConnectWithoutGrantInput[]
    upsert?: GrantApplicationUpsertWithWhereUniqueWithoutGrantInput | GrantApplicationUpsertWithWhereUniqueWithoutGrantInput[]
    createMany?: GrantApplicationCreateManyGrantInputEnvelope
    set?: GrantApplicationWhereUniqueInput | GrantApplicationWhereUniqueInput[]
    disconnect?: GrantApplicationWhereUniqueInput | GrantApplicationWhereUniqueInput[]
    delete?: GrantApplicationWhereUniqueInput | GrantApplicationWhereUniqueInput[]
    connect?: GrantApplicationWhereUniqueInput | GrantApplicationWhereUniqueInput[]
    update?: GrantApplicationUpdateWithWhereUniqueWithoutGrantInput | GrantApplicationUpdateWithWhereUniqueWithoutGrantInput[]
    updateMany?: GrantApplicationUpdateManyWithWhereWithoutGrantInput | GrantApplicationUpdateManyWithWhereWithoutGrantInput[]
    deleteMany?: GrantApplicationScalarWhereInput | GrantApplicationScalarWhereInput[]
  }

  export type GrantTrancheUncheckedUpdateManyWithoutGrantNestedInput = {
    create?: XOR<GrantTrancheCreateWithoutGrantInput, GrantTrancheUncheckedCreateWithoutGrantInput> | GrantTrancheCreateWithoutGrantInput[] | GrantTrancheUncheckedCreateWithoutGrantInput[]
    connectOrCreate?: GrantTrancheCreateOrConnectWithoutGrantInput | GrantTrancheCreateOrConnectWithoutGrantInput[]
    upsert?: GrantTrancheUpsertWithWhereUniqueWithoutGrantInput | GrantTrancheUpsertWithWhereUniqueWithoutGrantInput[]
    createMany?: GrantTrancheCreateManyGrantInputEnvelope
    set?: GrantTrancheWhereUniqueInput | GrantTrancheWhereUniqueInput[]
    disconnect?: GrantTrancheWhereUniqueInput | GrantTrancheWhereUniqueInput[]
    delete?: GrantTrancheWhereUniqueInput | GrantTrancheWhereUniqueInput[]
    connect?: GrantTrancheWhereUniqueInput | GrantTrancheWhereUniqueInput[]
    update?: GrantTrancheUpdateWithWhereUniqueWithoutGrantInput | GrantTrancheUpdateWithWhereUniqueWithoutGrantInput[]
    updateMany?: GrantTrancheUpdateManyWithWhereWithoutGrantInput | GrantTrancheUpdateManyWithWhereWithoutGrantInput[]
    deleteMany?: GrantTrancheScalarWhereInput | GrantTrancheScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutGrantApplicationInput = {
    create?: XOR<UserCreateWithoutGrantApplicationInput, UserUncheckedCreateWithoutGrantApplicationInput>
    connectOrCreate?: UserCreateOrConnectWithoutGrantApplicationInput
    connect?: UserWhereUniqueInput
  }

  export type GrantsCreateNestedOneWithoutGrantApplicationInput = {
    create?: XOR<GrantsCreateWithoutGrantApplicationInput, GrantsUncheckedCreateWithoutGrantApplicationInput>
    connectOrCreate?: GrantsCreateOrConnectWithoutGrantApplicationInput
    connect?: GrantsWhereUniqueInput
  }

  export type CommentCreateNestedManyWithoutGrantApplicationInput = {
    create?: XOR<CommentCreateWithoutGrantApplicationInput, CommentUncheckedCreateWithoutGrantApplicationInput> | CommentCreateWithoutGrantApplicationInput[] | CommentUncheckedCreateWithoutGrantApplicationInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutGrantApplicationInput | CommentCreateOrConnectWithoutGrantApplicationInput[]
    createMany?: CommentCreateManyGrantApplicationInputEnvelope
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
  }

  export type GrantTrancheCreateNestedManyWithoutGrantApplicationInput = {
    create?: XOR<GrantTrancheCreateWithoutGrantApplicationInput, GrantTrancheUncheckedCreateWithoutGrantApplicationInput> | GrantTrancheCreateWithoutGrantApplicationInput[] | GrantTrancheUncheckedCreateWithoutGrantApplicationInput[]
    connectOrCreate?: GrantTrancheCreateOrConnectWithoutGrantApplicationInput | GrantTrancheCreateOrConnectWithoutGrantApplicationInput[]
    createMany?: GrantTrancheCreateManyGrantApplicationInputEnvelope
    connect?: GrantTrancheWhereUniqueInput | GrantTrancheWhereUniqueInput[]
  }

  export type CreditLedgerCreateNestedManyWithoutApplicationInput = {
    create?: XOR<CreditLedgerCreateWithoutApplicationInput, CreditLedgerUncheckedCreateWithoutApplicationInput> | CreditLedgerCreateWithoutApplicationInput[] | CreditLedgerUncheckedCreateWithoutApplicationInput[]
    connectOrCreate?: CreditLedgerCreateOrConnectWithoutApplicationInput | CreditLedgerCreateOrConnectWithoutApplicationInput[]
    createMany?: CreditLedgerCreateManyApplicationInputEnvelope
    connect?: CreditLedgerWhereUniqueInput | CreditLedgerWhereUniqueInput[]
  }

  export type CommentUncheckedCreateNestedManyWithoutGrantApplicationInput = {
    create?: XOR<CommentCreateWithoutGrantApplicationInput, CommentUncheckedCreateWithoutGrantApplicationInput> | CommentCreateWithoutGrantApplicationInput[] | CommentUncheckedCreateWithoutGrantApplicationInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutGrantApplicationInput | CommentCreateOrConnectWithoutGrantApplicationInput[]
    createMany?: CommentCreateManyGrantApplicationInputEnvelope
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
  }

  export type GrantTrancheUncheckedCreateNestedManyWithoutGrantApplicationInput = {
    create?: XOR<GrantTrancheCreateWithoutGrantApplicationInput, GrantTrancheUncheckedCreateWithoutGrantApplicationInput> | GrantTrancheCreateWithoutGrantApplicationInput[] | GrantTrancheUncheckedCreateWithoutGrantApplicationInput[]
    connectOrCreate?: GrantTrancheCreateOrConnectWithoutGrantApplicationInput | GrantTrancheCreateOrConnectWithoutGrantApplicationInput[]
    createMany?: GrantTrancheCreateManyGrantApplicationInputEnvelope
    connect?: GrantTrancheWhereUniqueInput | GrantTrancheWhereUniqueInput[]
  }

  export type CreditLedgerUncheckedCreateNestedManyWithoutApplicationInput = {
    create?: XOR<CreditLedgerCreateWithoutApplicationInput, CreditLedgerUncheckedCreateWithoutApplicationInput> | CreditLedgerCreateWithoutApplicationInput[] | CreditLedgerUncheckedCreateWithoutApplicationInput[]
    connectOrCreate?: CreditLedgerCreateOrConnectWithoutApplicationInput | CreditLedgerCreateOrConnectWithoutApplicationInput[]
    createMany?: CreditLedgerCreateManyApplicationInputEnvelope
    connect?: CreditLedgerWhereUniqueInput | CreditLedgerWhereUniqueInput[]
  }

  export type EnumGrantApplicationStatusFieldUpdateOperationsInput = {
    set?: $Enums.GrantApplicationStatus
  }

  export type EnumSubmissionLabelsFieldUpdateOperationsInput = {
    set?: $Enums.SubmissionLabels
  }

  export type UserUpdateOneRequiredWithoutGrantApplicationNestedInput = {
    create?: XOR<UserCreateWithoutGrantApplicationInput, UserUncheckedCreateWithoutGrantApplicationInput>
    connectOrCreate?: UserCreateOrConnectWithoutGrantApplicationInput
    upsert?: UserUpsertWithoutGrantApplicationInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutGrantApplicationInput, UserUpdateWithoutGrantApplicationInput>, UserUncheckedUpdateWithoutGrantApplicationInput>
  }

  export type GrantsUpdateOneRequiredWithoutGrantApplicationNestedInput = {
    create?: XOR<GrantsCreateWithoutGrantApplicationInput, GrantsUncheckedCreateWithoutGrantApplicationInput>
    connectOrCreate?: GrantsCreateOrConnectWithoutGrantApplicationInput
    upsert?: GrantsUpsertWithoutGrantApplicationInput
    connect?: GrantsWhereUniqueInput
    update?: XOR<XOR<GrantsUpdateToOneWithWhereWithoutGrantApplicationInput, GrantsUpdateWithoutGrantApplicationInput>, GrantsUncheckedUpdateWithoutGrantApplicationInput>
  }

  export type CommentUpdateManyWithoutGrantApplicationNestedInput = {
    create?: XOR<CommentCreateWithoutGrantApplicationInput, CommentUncheckedCreateWithoutGrantApplicationInput> | CommentCreateWithoutGrantApplicationInput[] | CommentUncheckedCreateWithoutGrantApplicationInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutGrantApplicationInput | CommentCreateOrConnectWithoutGrantApplicationInput[]
    upsert?: CommentUpsertWithWhereUniqueWithoutGrantApplicationInput | CommentUpsertWithWhereUniqueWithoutGrantApplicationInput[]
    createMany?: CommentCreateManyGrantApplicationInputEnvelope
    set?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    disconnect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    delete?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    update?: CommentUpdateWithWhereUniqueWithoutGrantApplicationInput | CommentUpdateWithWhereUniqueWithoutGrantApplicationInput[]
    updateMany?: CommentUpdateManyWithWhereWithoutGrantApplicationInput | CommentUpdateManyWithWhereWithoutGrantApplicationInput[]
    deleteMany?: CommentScalarWhereInput | CommentScalarWhereInput[]
  }

  export type GrantTrancheUpdateManyWithoutGrantApplicationNestedInput = {
    create?: XOR<GrantTrancheCreateWithoutGrantApplicationInput, GrantTrancheUncheckedCreateWithoutGrantApplicationInput> | GrantTrancheCreateWithoutGrantApplicationInput[] | GrantTrancheUncheckedCreateWithoutGrantApplicationInput[]
    connectOrCreate?: GrantTrancheCreateOrConnectWithoutGrantApplicationInput | GrantTrancheCreateOrConnectWithoutGrantApplicationInput[]
    upsert?: GrantTrancheUpsertWithWhereUniqueWithoutGrantApplicationInput | GrantTrancheUpsertWithWhereUniqueWithoutGrantApplicationInput[]
    createMany?: GrantTrancheCreateManyGrantApplicationInputEnvelope
    set?: GrantTrancheWhereUniqueInput | GrantTrancheWhereUniqueInput[]
    disconnect?: GrantTrancheWhereUniqueInput | GrantTrancheWhereUniqueInput[]
    delete?: GrantTrancheWhereUniqueInput | GrantTrancheWhereUniqueInput[]
    connect?: GrantTrancheWhereUniqueInput | GrantTrancheWhereUniqueInput[]
    update?: GrantTrancheUpdateWithWhereUniqueWithoutGrantApplicationInput | GrantTrancheUpdateWithWhereUniqueWithoutGrantApplicationInput[]
    updateMany?: GrantTrancheUpdateManyWithWhereWithoutGrantApplicationInput | GrantTrancheUpdateManyWithWhereWithoutGrantApplicationInput[]
    deleteMany?: GrantTrancheScalarWhereInput | GrantTrancheScalarWhereInput[]
  }

  export type CreditLedgerUpdateManyWithoutApplicationNestedInput = {
    create?: XOR<CreditLedgerCreateWithoutApplicationInput, CreditLedgerUncheckedCreateWithoutApplicationInput> | CreditLedgerCreateWithoutApplicationInput[] | CreditLedgerUncheckedCreateWithoutApplicationInput[]
    connectOrCreate?: CreditLedgerCreateOrConnectWithoutApplicationInput | CreditLedgerCreateOrConnectWithoutApplicationInput[]
    upsert?: CreditLedgerUpsertWithWhereUniqueWithoutApplicationInput | CreditLedgerUpsertWithWhereUniqueWithoutApplicationInput[]
    createMany?: CreditLedgerCreateManyApplicationInputEnvelope
    set?: CreditLedgerWhereUniqueInput | CreditLedgerWhereUniqueInput[]
    disconnect?: CreditLedgerWhereUniqueInput | CreditLedgerWhereUniqueInput[]
    delete?: CreditLedgerWhereUniqueInput | CreditLedgerWhereUniqueInput[]
    connect?: CreditLedgerWhereUniqueInput | CreditLedgerWhereUniqueInput[]
    update?: CreditLedgerUpdateWithWhereUniqueWithoutApplicationInput | CreditLedgerUpdateWithWhereUniqueWithoutApplicationInput[]
    updateMany?: CreditLedgerUpdateManyWithWhereWithoutApplicationInput | CreditLedgerUpdateManyWithWhereWithoutApplicationInput[]
    deleteMany?: CreditLedgerScalarWhereInput | CreditLedgerScalarWhereInput[]
  }

  export type CommentUncheckedUpdateManyWithoutGrantApplicationNestedInput = {
    create?: XOR<CommentCreateWithoutGrantApplicationInput, CommentUncheckedCreateWithoutGrantApplicationInput> | CommentCreateWithoutGrantApplicationInput[] | CommentUncheckedCreateWithoutGrantApplicationInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutGrantApplicationInput | CommentCreateOrConnectWithoutGrantApplicationInput[]
    upsert?: CommentUpsertWithWhereUniqueWithoutGrantApplicationInput | CommentUpsertWithWhereUniqueWithoutGrantApplicationInput[]
    createMany?: CommentCreateManyGrantApplicationInputEnvelope
    set?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    disconnect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    delete?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    update?: CommentUpdateWithWhereUniqueWithoutGrantApplicationInput | CommentUpdateWithWhereUniqueWithoutGrantApplicationInput[]
    updateMany?: CommentUpdateManyWithWhereWithoutGrantApplicationInput | CommentUpdateManyWithWhereWithoutGrantApplicationInput[]
    deleteMany?: CommentScalarWhereInput | CommentScalarWhereInput[]
  }

  export type GrantTrancheUncheckedUpdateManyWithoutGrantApplicationNestedInput = {
    create?: XOR<GrantTrancheCreateWithoutGrantApplicationInput, GrantTrancheUncheckedCreateWithoutGrantApplicationInput> | GrantTrancheCreateWithoutGrantApplicationInput[] | GrantTrancheUncheckedCreateWithoutGrantApplicationInput[]
    connectOrCreate?: GrantTrancheCreateOrConnectWithoutGrantApplicationInput | GrantTrancheCreateOrConnectWithoutGrantApplicationInput[]
    upsert?: GrantTrancheUpsertWithWhereUniqueWithoutGrantApplicationInput | GrantTrancheUpsertWithWhereUniqueWithoutGrantApplicationInput[]
    createMany?: GrantTrancheCreateManyGrantApplicationInputEnvelope
    set?: GrantTrancheWhereUniqueInput | GrantTrancheWhereUniqueInput[]
    disconnect?: GrantTrancheWhereUniqueInput | GrantTrancheWhereUniqueInput[]
    delete?: GrantTrancheWhereUniqueInput | GrantTrancheWhereUniqueInput[]
    connect?: GrantTrancheWhereUniqueInput | GrantTrancheWhereUniqueInput[]
    update?: GrantTrancheUpdateWithWhereUniqueWithoutGrantApplicationInput | GrantTrancheUpdateWithWhereUniqueWithoutGrantApplicationInput[]
    updateMany?: GrantTrancheUpdateManyWithWhereWithoutGrantApplicationInput | GrantTrancheUpdateManyWithWhereWithoutGrantApplicationInput[]
    deleteMany?: GrantTrancheScalarWhereInput | GrantTrancheScalarWhereInput[]
  }

  export type CreditLedgerUncheckedUpdateManyWithoutApplicationNestedInput = {
    create?: XOR<CreditLedgerCreateWithoutApplicationInput, CreditLedgerUncheckedCreateWithoutApplicationInput> | CreditLedgerCreateWithoutApplicationInput[] | CreditLedgerUncheckedCreateWithoutApplicationInput[]
    connectOrCreate?: CreditLedgerCreateOrConnectWithoutApplicationInput | CreditLedgerCreateOrConnectWithoutApplicationInput[]
    upsert?: CreditLedgerUpsertWithWhereUniqueWithoutApplicationInput | CreditLedgerUpsertWithWhereUniqueWithoutApplicationInput[]
    createMany?: CreditLedgerCreateManyApplicationInputEnvelope
    set?: CreditLedgerWhereUniqueInput | CreditLedgerWhereUniqueInput[]
    disconnect?: CreditLedgerWhereUniqueInput | CreditLedgerWhereUniqueInput[]
    delete?: CreditLedgerWhereUniqueInput | CreditLedgerWhereUniqueInput[]
    connect?: CreditLedgerWhereUniqueInput | CreditLedgerWhereUniqueInput[]
    update?: CreditLedgerUpdateWithWhereUniqueWithoutApplicationInput | CreditLedgerUpdateWithWhereUniqueWithoutApplicationInput[]
    updateMany?: CreditLedgerUpdateManyWithWhereWithoutApplicationInput | CreditLedgerUpdateManyWithWhereWithoutApplicationInput[]
    deleteMany?: CreditLedgerScalarWhereInput | CreditLedgerScalarWhereInput[]
  }

  export type GrantApplicationCreateNestedOneWithoutGrantTrancheInput = {
    create?: XOR<GrantApplicationCreateWithoutGrantTrancheInput, GrantApplicationUncheckedCreateWithoutGrantTrancheInput>
    connectOrCreate?: GrantApplicationCreateOrConnectWithoutGrantTrancheInput
    connect?: GrantApplicationWhereUniqueInput
  }

  export type GrantsCreateNestedOneWithoutGrantTrancheInput = {
    create?: XOR<GrantsCreateWithoutGrantTrancheInput, GrantsUncheckedCreateWithoutGrantTrancheInput>
    connectOrCreate?: GrantsCreateOrConnectWithoutGrantTrancheInput
    connect?: GrantsWhereUniqueInput
  }

  export type EnumGrantTrancheStatusFieldUpdateOperationsInput = {
    set?: $Enums.GrantTrancheStatus
  }

  export type GrantApplicationUpdateOneRequiredWithoutGrantTrancheNestedInput = {
    create?: XOR<GrantApplicationCreateWithoutGrantTrancheInput, GrantApplicationUncheckedCreateWithoutGrantTrancheInput>
    connectOrCreate?: GrantApplicationCreateOrConnectWithoutGrantTrancheInput
    upsert?: GrantApplicationUpsertWithoutGrantTrancheInput
    connect?: GrantApplicationWhereUniqueInput
    update?: XOR<XOR<GrantApplicationUpdateToOneWithWhereWithoutGrantTrancheInput, GrantApplicationUpdateWithoutGrantTrancheInput>, GrantApplicationUncheckedUpdateWithoutGrantTrancheInput>
  }

  export type GrantsUpdateOneRequiredWithoutGrantTrancheNestedInput = {
    create?: XOR<GrantsCreateWithoutGrantTrancheInput, GrantsUncheckedCreateWithoutGrantTrancheInput>
    connectOrCreate?: GrantsCreateOrConnectWithoutGrantTrancheInput
    upsert?: GrantsUpsertWithoutGrantTrancheInput
    connect?: GrantsWhereUniqueInput
    update?: XOR<XOR<GrantsUpdateToOneWithWhereWithoutGrantTrancheInput, GrantsUpdateWithoutGrantTrancheInput>, GrantsUncheckedUpdateWithoutGrantTrancheInput>
  }

  export type BountiesCreateNestedOneWithoutSubmissionInput = {
    create?: XOR<BountiesCreateWithoutSubmissionInput, BountiesUncheckedCreateWithoutSubmissionInput>
    connectOrCreate?: BountiesCreateOrConnectWithoutSubmissionInput
    connect?: BountiesWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutSubmissionInput = {
    create?: XOR<UserCreateWithoutSubmissionInput, UserUncheckedCreateWithoutSubmissionInput>
    connectOrCreate?: UserCreateOrConnectWithoutSubmissionInput
    connect?: UserWhereUniqueInput
  }

  export type CommentCreateNestedManyWithoutSubmissionInput = {
    create?: XOR<CommentCreateWithoutSubmissionInput, CommentUncheckedCreateWithoutSubmissionInput> | CommentCreateWithoutSubmissionInput[] | CommentUncheckedCreateWithoutSubmissionInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutSubmissionInput | CommentCreateOrConnectWithoutSubmissionInput[]
    createMany?: CommentCreateManySubmissionInputEnvelope
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
  }

  export type CreditLedgerCreateNestedManyWithoutSubmissionInput = {
    create?: XOR<CreditLedgerCreateWithoutSubmissionInput, CreditLedgerUncheckedCreateWithoutSubmissionInput> | CreditLedgerCreateWithoutSubmissionInput[] | CreditLedgerUncheckedCreateWithoutSubmissionInput[]
    connectOrCreate?: CreditLedgerCreateOrConnectWithoutSubmissionInput | CreditLedgerCreateOrConnectWithoutSubmissionInput[]
    createMany?: CreditLedgerCreateManySubmissionInputEnvelope
    connect?: CreditLedgerWhereUniqueInput | CreditLedgerWhereUniqueInput[]
  }

  export type CommentUncheckedCreateNestedManyWithoutSubmissionInput = {
    create?: XOR<CommentCreateWithoutSubmissionInput, CommentUncheckedCreateWithoutSubmissionInput> | CommentCreateWithoutSubmissionInput[] | CommentUncheckedCreateWithoutSubmissionInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutSubmissionInput | CommentCreateOrConnectWithoutSubmissionInput[]
    createMany?: CommentCreateManySubmissionInputEnvelope
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
  }

  export type CreditLedgerUncheckedCreateNestedManyWithoutSubmissionInput = {
    create?: XOR<CreditLedgerCreateWithoutSubmissionInput, CreditLedgerUncheckedCreateWithoutSubmissionInput> | CreditLedgerCreateWithoutSubmissionInput[] | CreditLedgerUncheckedCreateWithoutSubmissionInput[]
    connectOrCreate?: CreditLedgerCreateOrConnectWithoutSubmissionInput | CreditLedgerCreateOrConnectWithoutSubmissionInput[]
    createMany?: CreditLedgerCreateManySubmissionInputEnvelope
    connect?: CreditLedgerWhereUniqueInput | CreditLedgerWhereUniqueInput[]
  }

  export type EnumSubmissionStatusFieldUpdateOperationsInput = {
    set?: $Enums.SubmissionStatus
  }

  export type BountiesUpdateOneRequiredWithoutSubmissionNestedInput = {
    create?: XOR<BountiesCreateWithoutSubmissionInput, BountiesUncheckedCreateWithoutSubmissionInput>
    connectOrCreate?: BountiesCreateOrConnectWithoutSubmissionInput
    upsert?: BountiesUpsertWithoutSubmissionInput
    connect?: BountiesWhereUniqueInput
    update?: XOR<XOR<BountiesUpdateToOneWithWhereWithoutSubmissionInput, BountiesUpdateWithoutSubmissionInput>, BountiesUncheckedUpdateWithoutSubmissionInput>
  }

  export type UserUpdateOneRequiredWithoutSubmissionNestedInput = {
    create?: XOR<UserCreateWithoutSubmissionInput, UserUncheckedCreateWithoutSubmissionInput>
    connectOrCreate?: UserCreateOrConnectWithoutSubmissionInput
    upsert?: UserUpsertWithoutSubmissionInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSubmissionInput, UserUpdateWithoutSubmissionInput>, UserUncheckedUpdateWithoutSubmissionInput>
  }

  export type CommentUpdateManyWithoutSubmissionNestedInput = {
    create?: XOR<CommentCreateWithoutSubmissionInput, CommentUncheckedCreateWithoutSubmissionInput> | CommentCreateWithoutSubmissionInput[] | CommentUncheckedCreateWithoutSubmissionInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutSubmissionInput | CommentCreateOrConnectWithoutSubmissionInput[]
    upsert?: CommentUpsertWithWhereUniqueWithoutSubmissionInput | CommentUpsertWithWhereUniqueWithoutSubmissionInput[]
    createMany?: CommentCreateManySubmissionInputEnvelope
    set?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    disconnect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    delete?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    update?: CommentUpdateWithWhereUniqueWithoutSubmissionInput | CommentUpdateWithWhereUniqueWithoutSubmissionInput[]
    updateMany?: CommentUpdateManyWithWhereWithoutSubmissionInput | CommentUpdateManyWithWhereWithoutSubmissionInput[]
    deleteMany?: CommentScalarWhereInput | CommentScalarWhereInput[]
  }

  export type CreditLedgerUpdateManyWithoutSubmissionNestedInput = {
    create?: XOR<CreditLedgerCreateWithoutSubmissionInput, CreditLedgerUncheckedCreateWithoutSubmissionInput> | CreditLedgerCreateWithoutSubmissionInput[] | CreditLedgerUncheckedCreateWithoutSubmissionInput[]
    connectOrCreate?: CreditLedgerCreateOrConnectWithoutSubmissionInput | CreditLedgerCreateOrConnectWithoutSubmissionInput[]
    upsert?: CreditLedgerUpsertWithWhereUniqueWithoutSubmissionInput | CreditLedgerUpsertWithWhereUniqueWithoutSubmissionInput[]
    createMany?: CreditLedgerCreateManySubmissionInputEnvelope
    set?: CreditLedgerWhereUniqueInput | CreditLedgerWhereUniqueInput[]
    disconnect?: CreditLedgerWhereUniqueInput | CreditLedgerWhereUniqueInput[]
    delete?: CreditLedgerWhereUniqueInput | CreditLedgerWhereUniqueInput[]
    connect?: CreditLedgerWhereUniqueInput | CreditLedgerWhereUniqueInput[]
    update?: CreditLedgerUpdateWithWhereUniqueWithoutSubmissionInput | CreditLedgerUpdateWithWhereUniqueWithoutSubmissionInput[]
    updateMany?: CreditLedgerUpdateManyWithWhereWithoutSubmissionInput | CreditLedgerUpdateManyWithWhereWithoutSubmissionInput[]
    deleteMany?: CreditLedgerScalarWhereInput | CreditLedgerScalarWhereInput[]
  }

  export type CommentUncheckedUpdateManyWithoutSubmissionNestedInput = {
    create?: XOR<CommentCreateWithoutSubmissionInput, CommentUncheckedCreateWithoutSubmissionInput> | CommentCreateWithoutSubmissionInput[] | CommentUncheckedCreateWithoutSubmissionInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutSubmissionInput | CommentCreateOrConnectWithoutSubmissionInput[]
    upsert?: CommentUpsertWithWhereUniqueWithoutSubmissionInput | CommentUpsertWithWhereUniqueWithoutSubmissionInput[]
    createMany?: CommentCreateManySubmissionInputEnvelope
    set?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    disconnect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    delete?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    update?: CommentUpdateWithWhereUniqueWithoutSubmissionInput | CommentUpdateWithWhereUniqueWithoutSubmissionInput[]
    updateMany?: CommentUpdateManyWithWhereWithoutSubmissionInput | CommentUpdateManyWithWhereWithoutSubmissionInput[]
    deleteMany?: CommentScalarWhereInput | CommentScalarWhereInput[]
  }

  export type CreditLedgerUncheckedUpdateManyWithoutSubmissionNestedInput = {
    create?: XOR<CreditLedgerCreateWithoutSubmissionInput, CreditLedgerUncheckedCreateWithoutSubmissionInput> | CreditLedgerCreateWithoutSubmissionInput[] | CreditLedgerUncheckedCreateWithoutSubmissionInput[]
    connectOrCreate?: CreditLedgerCreateOrConnectWithoutSubmissionInput | CreditLedgerCreateOrConnectWithoutSubmissionInput[]
    upsert?: CreditLedgerUpsertWithWhereUniqueWithoutSubmissionInput | CreditLedgerUpsertWithWhereUniqueWithoutSubmissionInput[]
    createMany?: CreditLedgerCreateManySubmissionInputEnvelope
    set?: CreditLedgerWhereUniqueInput | CreditLedgerWhereUniqueInput[]
    disconnect?: CreditLedgerWhereUniqueInput | CreditLedgerWhereUniqueInput[]
    delete?: CreditLedgerWhereUniqueInput | CreditLedgerWhereUniqueInput[]
    connect?: CreditLedgerWhereUniqueInput | CreditLedgerWhereUniqueInput[]
    update?: CreditLedgerUpdateWithWhereUniqueWithoutSubmissionInput | CreditLedgerUpdateWithWhereUniqueWithoutSubmissionInput[]
    updateMany?: CreditLedgerUpdateManyWithWhereWithoutSubmissionInput | CreditLedgerUpdateManyWithWhereWithoutSubmissionInput[]
    deleteMany?: CreditLedgerScalarWhereInput | CreditLedgerScalarWhereInput[]
  }

  export type HackathonCreateNestedOneWithoutSponsorInput = {
    create?: XOR<HackathonCreateWithoutSponsorInput, HackathonUncheckedCreateWithoutSponsorInput>
    connectOrCreate?: HackathonCreateOrConnectWithoutSponsorInput
    connect?: HackathonWhereUniqueInput
  }

  export type UserSponsorsCreateNestedManyWithoutSponsorInput = {
    create?: XOR<UserSponsorsCreateWithoutSponsorInput, UserSponsorsUncheckedCreateWithoutSponsorInput> | UserSponsorsCreateWithoutSponsorInput[] | UserSponsorsUncheckedCreateWithoutSponsorInput[]
    connectOrCreate?: UserSponsorsCreateOrConnectWithoutSponsorInput | UserSponsorsCreateOrConnectWithoutSponsorInput[]
    createMany?: UserSponsorsCreateManySponsorInputEnvelope
    connect?: UserSponsorsWhereUniqueInput | UserSponsorsWhereUniqueInput[]
  }

  export type BountiesCreateNestedManyWithoutSponsorInput = {
    create?: XOR<BountiesCreateWithoutSponsorInput, BountiesUncheckedCreateWithoutSponsorInput> | BountiesCreateWithoutSponsorInput[] | BountiesUncheckedCreateWithoutSponsorInput[]
    connectOrCreate?: BountiesCreateOrConnectWithoutSponsorInput | BountiesCreateOrConnectWithoutSponsorInput[]
    createMany?: BountiesCreateManySponsorInputEnvelope
    connect?: BountiesWhereUniqueInput | BountiesWhereUniqueInput[]
  }

  export type BountiesTemplatesCreateNestedManyWithoutSponsorInput = {
    create?: XOR<BountiesTemplatesCreateWithoutSponsorInput, BountiesTemplatesUncheckedCreateWithoutSponsorInput> | BountiesTemplatesCreateWithoutSponsorInput[] | BountiesTemplatesUncheckedCreateWithoutSponsorInput[]
    connectOrCreate?: BountiesTemplatesCreateOrConnectWithoutSponsorInput | BountiesTemplatesCreateOrConnectWithoutSponsorInput[]
    createMany?: BountiesTemplatesCreateManySponsorInputEnvelope
    connect?: BountiesTemplatesWhereUniqueInput | BountiesTemplatesWhereUniqueInput[]
  }

  export type GrantsCreateNestedManyWithoutSponsorInput = {
    create?: XOR<GrantsCreateWithoutSponsorInput, GrantsUncheckedCreateWithoutSponsorInput> | GrantsCreateWithoutSponsorInput[] | GrantsUncheckedCreateWithoutSponsorInput[]
    connectOrCreate?: GrantsCreateOrConnectWithoutSponsorInput | GrantsCreateOrConnectWithoutSponsorInput[]
    createMany?: GrantsCreateManySponsorInputEnvelope
    connect?: GrantsWhereUniqueInput | GrantsWhereUniqueInput[]
  }

  export type UserCreateNestedManyWithoutCurrentSponsorInput = {
    create?: XOR<UserCreateWithoutCurrentSponsorInput, UserUncheckedCreateWithoutCurrentSponsorInput> | UserCreateWithoutCurrentSponsorInput[] | UserUncheckedCreateWithoutCurrentSponsorInput[]
    connectOrCreate?: UserCreateOrConnectWithoutCurrentSponsorInput | UserCreateOrConnectWithoutCurrentSponsorInput[]
    createMany?: UserCreateManyCurrentSponsorInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type UserInvitesCreateNestedManyWithoutSponsorInput = {
    create?: XOR<UserInvitesCreateWithoutSponsorInput, UserInvitesUncheckedCreateWithoutSponsorInput> | UserInvitesCreateWithoutSponsorInput[] | UserInvitesUncheckedCreateWithoutSponsorInput[]
    connectOrCreate?: UserInvitesCreateOrConnectWithoutSponsorInput | UserInvitesCreateOrConnectWithoutSponsorInput[]
    createMany?: UserInvitesCreateManySponsorInputEnvelope
    connect?: UserInvitesWhereUniqueInput | UserInvitesWhereUniqueInput[]
  }

  export type HackathonUncheckedCreateNestedOneWithoutSponsorInput = {
    create?: XOR<HackathonCreateWithoutSponsorInput, HackathonUncheckedCreateWithoutSponsorInput>
    connectOrCreate?: HackathonCreateOrConnectWithoutSponsorInput
    connect?: HackathonWhereUniqueInput
  }

  export type UserSponsorsUncheckedCreateNestedManyWithoutSponsorInput = {
    create?: XOR<UserSponsorsCreateWithoutSponsorInput, UserSponsorsUncheckedCreateWithoutSponsorInput> | UserSponsorsCreateWithoutSponsorInput[] | UserSponsorsUncheckedCreateWithoutSponsorInput[]
    connectOrCreate?: UserSponsorsCreateOrConnectWithoutSponsorInput | UserSponsorsCreateOrConnectWithoutSponsorInput[]
    createMany?: UserSponsorsCreateManySponsorInputEnvelope
    connect?: UserSponsorsWhereUniqueInput | UserSponsorsWhereUniqueInput[]
  }

  export type BountiesUncheckedCreateNestedManyWithoutSponsorInput = {
    create?: XOR<BountiesCreateWithoutSponsorInput, BountiesUncheckedCreateWithoutSponsorInput> | BountiesCreateWithoutSponsorInput[] | BountiesUncheckedCreateWithoutSponsorInput[]
    connectOrCreate?: BountiesCreateOrConnectWithoutSponsorInput | BountiesCreateOrConnectWithoutSponsorInput[]
    createMany?: BountiesCreateManySponsorInputEnvelope
    connect?: BountiesWhereUniqueInput | BountiesWhereUniqueInput[]
  }

  export type BountiesTemplatesUncheckedCreateNestedManyWithoutSponsorInput = {
    create?: XOR<BountiesTemplatesCreateWithoutSponsorInput, BountiesTemplatesUncheckedCreateWithoutSponsorInput> | BountiesTemplatesCreateWithoutSponsorInput[] | BountiesTemplatesUncheckedCreateWithoutSponsorInput[]
    connectOrCreate?: BountiesTemplatesCreateOrConnectWithoutSponsorInput | BountiesTemplatesCreateOrConnectWithoutSponsorInput[]
    createMany?: BountiesTemplatesCreateManySponsorInputEnvelope
    connect?: BountiesTemplatesWhereUniqueInput | BountiesTemplatesWhereUniqueInput[]
  }

  export type GrantsUncheckedCreateNestedManyWithoutSponsorInput = {
    create?: XOR<GrantsCreateWithoutSponsorInput, GrantsUncheckedCreateWithoutSponsorInput> | GrantsCreateWithoutSponsorInput[] | GrantsUncheckedCreateWithoutSponsorInput[]
    connectOrCreate?: GrantsCreateOrConnectWithoutSponsorInput | GrantsCreateOrConnectWithoutSponsorInput[]
    createMany?: GrantsCreateManySponsorInputEnvelope
    connect?: GrantsWhereUniqueInput | GrantsWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutCurrentSponsorInput = {
    create?: XOR<UserCreateWithoutCurrentSponsorInput, UserUncheckedCreateWithoutCurrentSponsorInput> | UserCreateWithoutCurrentSponsorInput[] | UserUncheckedCreateWithoutCurrentSponsorInput[]
    connectOrCreate?: UserCreateOrConnectWithoutCurrentSponsorInput | UserCreateOrConnectWithoutCurrentSponsorInput[]
    createMany?: UserCreateManyCurrentSponsorInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type UserInvitesUncheckedCreateNestedManyWithoutSponsorInput = {
    create?: XOR<UserInvitesCreateWithoutSponsorInput, UserInvitesUncheckedCreateWithoutSponsorInput> | UserInvitesCreateWithoutSponsorInput[] | UserInvitesUncheckedCreateWithoutSponsorInput[]
    connectOrCreate?: UserInvitesCreateOrConnectWithoutSponsorInput | UserInvitesCreateOrConnectWithoutSponsorInput[]
    createMany?: UserInvitesCreateManySponsorInputEnvelope
    connect?: UserInvitesWhereUniqueInput | UserInvitesWhereUniqueInput[]
  }

  export type HackathonUpdateOneWithoutSponsorNestedInput = {
    create?: XOR<HackathonCreateWithoutSponsorInput, HackathonUncheckedCreateWithoutSponsorInput>
    connectOrCreate?: HackathonCreateOrConnectWithoutSponsorInput
    upsert?: HackathonUpsertWithoutSponsorInput
    disconnect?: HackathonWhereInput | boolean
    delete?: HackathonWhereInput | boolean
    connect?: HackathonWhereUniqueInput
    update?: XOR<XOR<HackathonUpdateToOneWithWhereWithoutSponsorInput, HackathonUpdateWithoutSponsorInput>, HackathonUncheckedUpdateWithoutSponsorInput>
  }

  export type UserSponsorsUpdateManyWithoutSponsorNestedInput = {
    create?: XOR<UserSponsorsCreateWithoutSponsorInput, UserSponsorsUncheckedCreateWithoutSponsorInput> | UserSponsorsCreateWithoutSponsorInput[] | UserSponsorsUncheckedCreateWithoutSponsorInput[]
    connectOrCreate?: UserSponsorsCreateOrConnectWithoutSponsorInput | UserSponsorsCreateOrConnectWithoutSponsorInput[]
    upsert?: UserSponsorsUpsertWithWhereUniqueWithoutSponsorInput | UserSponsorsUpsertWithWhereUniqueWithoutSponsorInput[]
    createMany?: UserSponsorsCreateManySponsorInputEnvelope
    set?: UserSponsorsWhereUniqueInput | UserSponsorsWhereUniqueInput[]
    disconnect?: UserSponsorsWhereUniqueInput | UserSponsorsWhereUniqueInput[]
    delete?: UserSponsorsWhereUniqueInput | UserSponsorsWhereUniqueInput[]
    connect?: UserSponsorsWhereUniqueInput | UserSponsorsWhereUniqueInput[]
    update?: UserSponsorsUpdateWithWhereUniqueWithoutSponsorInput | UserSponsorsUpdateWithWhereUniqueWithoutSponsorInput[]
    updateMany?: UserSponsorsUpdateManyWithWhereWithoutSponsorInput | UserSponsorsUpdateManyWithWhereWithoutSponsorInput[]
    deleteMany?: UserSponsorsScalarWhereInput | UserSponsorsScalarWhereInput[]
  }

  export type BountiesUpdateManyWithoutSponsorNestedInput = {
    create?: XOR<BountiesCreateWithoutSponsorInput, BountiesUncheckedCreateWithoutSponsorInput> | BountiesCreateWithoutSponsorInput[] | BountiesUncheckedCreateWithoutSponsorInput[]
    connectOrCreate?: BountiesCreateOrConnectWithoutSponsorInput | BountiesCreateOrConnectWithoutSponsorInput[]
    upsert?: BountiesUpsertWithWhereUniqueWithoutSponsorInput | BountiesUpsertWithWhereUniqueWithoutSponsorInput[]
    createMany?: BountiesCreateManySponsorInputEnvelope
    set?: BountiesWhereUniqueInput | BountiesWhereUniqueInput[]
    disconnect?: BountiesWhereUniqueInput | BountiesWhereUniqueInput[]
    delete?: BountiesWhereUniqueInput | BountiesWhereUniqueInput[]
    connect?: BountiesWhereUniqueInput | BountiesWhereUniqueInput[]
    update?: BountiesUpdateWithWhereUniqueWithoutSponsorInput | BountiesUpdateWithWhereUniqueWithoutSponsorInput[]
    updateMany?: BountiesUpdateManyWithWhereWithoutSponsorInput | BountiesUpdateManyWithWhereWithoutSponsorInput[]
    deleteMany?: BountiesScalarWhereInput | BountiesScalarWhereInput[]
  }

  export type BountiesTemplatesUpdateManyWithoutSponsorNestedInput = {
    create?: XOR<BountiesTemplatesCreateWithoutSponsorInput, BountiesTemplatesUncheckedCreateWithoutSponsorInput> | BountiesTemplatesCreateWithoutSponsorInput[] | BountiesTemplatesUncheckedCreateWithoutSponsorInput[]
    connectOrCreate?: BountiesTemplatesCreateOrConnectWithoutSponsorInput | BountiesTemplatesCreateOrConnectWithoutSponsorInput[]
    upsert?: BountiesTemplatesUpsertWithWhereUniqueWithoutSponsorInput | BountiesTemplatesUpsertWithWhereUniqueWithoutSponsorInput[]
    createMany?: BountiesTemplatesCreateManySponsorInputEnvelope
    set?: BountiesTemplatesWhereUniqueInput | BountiesTemplatesWhereUniqueInput[]
    disconnect?: BountiesTemplatesWhereUniqueInput | BountiesTemplatesWhereUniqueInput[]
    delete?: BountiesTemplatesWhereUniqueInput | BountiesTemplatesWhereUniqueInput[]
    connect?: BountiesTemplatesWhereUniqueInput | BountiesTemplatesWhereUniqueInput[]
    update?: BountiesTemplatesUpdateWithWhereUniqueWithoutSponsorInput | BountiesTemplatesUpdateWithWhereUniqueWithoutSponsorInput[]
    updateMany?: BountiesTemplatesUpdateManyWithWhereWithoutSponsorInput | BountiesTemplatesUpdateManyWithWhereWithoutSponsorInput[]
    deleteMany?: BountiesTemplatesScalarWhereInput | BountiesTemplatesScalarWhereInput[]
  }

  export type GrantsUpdateManyWithoutSponsorNestedInput = {
    create?: XOR<GrantsCreateWithoutSponsorInput, GrantsUncheckedCreateWithoutSponsorInput> | GrantsCreateWithoutSponsorInput[] | GrantsUncheckedCreateWithoutSponsorInput[]
    connectOrCreate?: GrantsCreateOrConnectWithoutSponsorInput | GrantsCreateOrConnectWithoutSponsorInput[]
    upsert?: GrantsUpsertWithWhereUniqueWithoutSponsorInput | GrantsUpsertWithWhereUniqueWithoutSponsorInput[]
    createMany?: GrantsCreateManySponsorInputEnvelope
    set?: GrantsWhereUniqueInput | GrantsWhereUniqueInput[]
    disconnect?: GrantsWhereUniqueInput | GrantsWhereUniqueInput[]
    delete?: GrantsWhereUniqueInput | GrantsWhereUniqueInput[]
    connect?: GrantsWhereUniqueInput | GrantsWhereUniqueInput[]
    update?: GrantsUpdateWithWhereUniqueWithoutSponsorInput | GrantsUpdateWithWhereUniqueWithoutSponsorInput[]
    updateMany?: GrantsUpdateManyWithWhereWithoutSponsorInput | GrantsUpdateManyWithWhereWithoutSponsorInput[]
    deleteMany?: GrantsScalarWhereInput | GrantsScalarWhereInput[]
  }

  export type UserUpdateManyWithoutCurrentSponsorNestedInput = {
    create?: XOR<UserCreateWithoutCurrentSponsorInput, UserUncheckedCreateWithoutCurrentSponsorInput> | UserCreateWithoutCurrentSponsorInput[] | UserUncheckedCreateWithoutCurrentSponsorInput[]
    connectOrCreate?: UserCreateOrConnectWithoutCurrentSponsorInput | UserCreateOrConnectWithoutCurrentSponsorInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutCurrentSponsorInput | UserUpsertWithWhereUniqueWithoutCurrentSponsorInput[]
    createMany?: UserCreateManyCurrentSponsorInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutCurrentSponsorInput | UserUpdateWithWhereUniqueWithoutCurrentSponsorInput[]
    updateMany?: UserUpdateManyWithWhereWithoutCurrentSponsorInput | UserUpdateManyWithWhereWithoutCurrentSponsorInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type UserInvitesUpdateManyWithoutSponsorNestedInput = {
    create?: XOR<UserInvitesCreateWithoutSponsorInput, UserInvitesUncheckedCreateWithoutSponsorInput> | UserInvitesCreateWithoutSponsorInput[] | UserInvitesUncheckedCreateWithoutSponsorInput[]
    connectOrCreate?: UserInvitesCreateOrConnectWithoutSponsorInput | UserInvitesCreateOrConnectWithoutSponsorInput[]
    upsert?: UserInvitesUpsertWithWhereUniqueWithoutSponsorInput | UserInvitesUpsertWithWhereUniqueWithoutSponsorInput[]
    createMany?: UserInvitesCreateManySponsorInputEnvelope
    set?: UserInvitesWhereUniqueInput | UserInvitesWhereUniqueInput[]
    disconnect?: UserInvitesWhereUniqueInput | UserInvitesWhereUniqueInput[]
    delete?: UserInvitesWhereUniqueInput | UserInvitesWhereUniqueInput[]
    connect?: UserInvitesWhereUniqueInput | UserInvitesWhereUniqueInput[]
    update?: UserInvitesUpdateWithWhereUniqueWithoutSponsorInput | UserInvitesUpdateWithWhereUniqueWithoutSponsorInput[]
    updateMany?: UserInvitesUpdateManyWithWhereWithoutSponsorInput | UserInvitesUpdateManyWithWhereWithoutSponsorInput[]
    deleteMany?: UserInvitesScalarWhereInput | UserInvitesScalarWhereInput[]
  }

  export type HackathonUncheckedUpdateOneWithoutSponsorNestedInput = {
    create?: XOR<HackathonCreateWithoutSponsorInput, HackathonUncheckedCreateWithoutSponsorInput>
    connectOrCreate?: HackathonCreateOrConnectWithoutSponsorInput
    upsert?: HackathonUpsertWithoutSponsorInput
    disconnect?: HackathonWhereInput | boolean
    delete?: HackathonWhereInput | boolean
    connect?: HackathonWhereUniqueInput
    update?: XOR<XOR<HackathonUpdateToOneWithWhereWithoutSponsorInput, HackathonUpdateWithoutSponsorInput>, HackathonUncheckedUpdateWithoutSponsorInput>
  }

  export type UserSponsorsUncheckedUpdateManyWithoutSponsorNestedInput = {
    create?: XOR<UserSponsorsCreateWithoutSponsorInput, UserSponsorsUncheckedCreateWithoutSponsorInput> | UserSponsorsCreateWithoutSponsorInput[] | UserSponsorsUncheckedCreateWithoutSponsorInput[]
    connectOrCreate?: UserSponsorsCreateOrConnectWithoutSponsorInput | UserSponsorsCreateOrConnectWithoutSponsorInput[]
    upsert?: UserSponsorsUpsertWithWhereUniqueWithoutSponsorInput | UserSponsorsUpsertWithWhereUniqueWithoutSponsorInput[]
    createMany?: UserSponsorsCreateManySponsorInputEnvelope
    set?: UserSponsorsWhereUniqueInput | UserSponsorsWhereUniqueInput[]
    disconnect?: UserSponsorsWhereUniqueInput | UserSponsorsWhereUniqueInput[]
    delete?: UserSponsorsWhereUniqueInput | UserSponsorsWhereUniqueInput[]
    connect?: UserSponsorsWhereUniqueInput | UserSponsorsWhereUniqueInput[]
    update?: UserSponsorsUpdateWithWhereUniqueWithoutSponsorInput | UserSponsorsUpdateWithWhereUniqueWithoutSponsorInput[]
    updateMany?: UserSponsorsUpdateManyWithWhereWithoutSponsorInput | UserSponsorsUpdateManyWithWhereWithoutSponsorInput[]
    deleteMany?: UserSponsorsScalarWhereInput | UserSponsorsScalarWhereInput[]
  }

  export type BountiesUncheckedUpdateManyWithoutSponsorNestedInput = {
    create?: XOR<BountiesCreateWithoutSponsorInput, BountiesUncheckedCreateWithoutSponsorInput> | BountiesCreateWithoutSponsorInput[] | BountiesUncheckedCreateWithoutSponsorInput[]
    connectOrCreate?: BountiesCreateOrConnectWithoutSponsorInput | BountiesCreateOrConnectWithoutSponsorInput[]
    upsert?: BountiesUpsertWithWhereUniqueWithoutSponsorInput | BountiesUpsertWithWhereUniqueWithoutSponsorInput[]
    createMany?: BountiesCreateManySponsorInputEnvelope
    set?: BountiesWhereUniqueInput | BountiesWhereUniqueInput[]
    disconnect?: BountiesWhereUniqueInput | BountiesWhereUniqueInput[]
    delete?: BountiesWhereUniqueInput | BountiesWhereUniqueInput[]
    connect?: BountiesWhereUniqueInput | BountiesWhereUniqueInput[]
    update?: BountiesUpdateWithWhereUniqueWithoutSponsorInput | BountiesUpdateWithWhereUniqueWithoutSponsorInput[]
    updateMany?: BountiesUpdateManyWithWhereWithoutSponsorInput | BountiesUpdateManyWithWhereWithoutSponsorInput[]
    deleteMany?: BountiesScalarWhereInput | BountiesScalarWhereInput[]
  }

  export type BountiesTemplatesUncheckedUpdateManyWithoutSponsorNestedInput = {
    create?: XOR<BountiesTemplatesCreateWithoutSponsorInput, BountiesTemplatesUncheckedCreateWithoutSponsorInput> | BountiesTemplatesCreateWithoutSponsorInput[] | BountiesTemplatesUncheckedCreateWithoutSponsorInput[]
    connectOrCreate?: BountiesTemplatesCreateOrConnectWithoutSponsorInput | BountiesTemplatesCreateOrConnectWithoutSponsorInput[]
    upsert?: BountiesTemplatesUpsertWithWhereUniqueWithoutSponsorInput | BountiesTemplatesUpsertWithWhereUniqueWithoutSponsorInput[]
    createMany?: BountiesTemplatesCreateManySponsorInputEnvelope
    set?: BountiesTemplatesWhereUniqueInput | BountiesTemplatesWhereUniqueInput[]
    disconnect?: BountiesTemplatesWhereUniqueInput | BountiesTemplatesWhereUniqueInput[]
    delete?: BountiesTemplatesWhereUniqueInput | BountiesTemplatesWhereUniqueInput[]
    connect?: BountiesTemplatesWhereUniqueInput | BountiesTemplatesWhereUniqueInput[]
    update?: BountiesTemplatesUpdateWithWhereUniqueWithoutSponsorInput | BountiesTemplatesUpdateWithWhereUniqueWithoutSponsorInput[]
    updateMany?: BountiesTemplatesUpdateManyWithWhereWithoutSponsorInput | BountiesTemplatesUpdateManyWithWhereWithoutSponsorInput[]
    deleteMany?: BountiesTemplatesScalarWhereInput | BountiesTemplatesScalarWhereInput[]
  }

  export type GrantsUncheckedUpdateManyWithoutSponsorNestedInput = {
    create?: XOR<GrantsCreateWithoutSponsorInput, GrantsUncheckedCreateWithoutSponsorInput> | GrantsCreateWithoutSponsorInput[] | GrantsUncheckedCreateWithoutSponsorInput[]
    connectOrCreate?: GrantsCreateOrConnectWithoutSponsorInput | GrantsCreateOrConnectWithoutSponsorInput[]
    upsert?: GrantsUpsertWithWhereUniqueWithoutSponsorInput | GrantsUpsertWithWhereUniqueWithoutSponsorInput[]
    createMany?: GrantsCreateManySponsorInputEnvelope
    set?: GrantsWhereUniqueInput | GrantsWhereUniqueInput[]
    disconnect?: GrantsWhereUniqueInput | GrantsWhereUniqueInput[]
    delete?: GrantsWhereUniqueInput | GrantsWhereUniqueInput[]
    connect?: GrantsWhereUniqueInput | GrantsWhereUniqueInput[]
    update?: GrantsUpdateWithWhereUniqueWithoutSponsorInput | GrantsUpdateWithWhereUniqueWithoutSponsorInput[]
    updateMany?: GrantsUpdateManyWithWhereWithoutSponsorInput | GrantsUpdateManyWithWhereWithoutSponsorInput[]
    deleteMany?: GrantsScalarWhereInput | GrantsScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutCurrentSponsorNestedInput = {
    create?: XOR<UserCreateWithoutCurrentSponsorInput, UserUncheckedCreateWithoutCurrentSponsorInput> | UserCreateWithoutCurrentSponsorInput[] | UserUncheckedCreateWithoutCurrentSponsorInput[]
    connectOrCreate?: UserCreateOrConnectWithoutCurrentSponsorInput | UserCreateOrConnectWithoutCurrentSponsorInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutCurrentSponsorInput | UserUpsertWithWhereUniqueWithoutCurrentSponsorInput[]
    createMany?: UserCreateManyCurrentSponsorInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutCurrentSponsorInput | UserUpdateWithWhereUniqueWithoutCurrentSponsorInput[]
    updateMany?: UserUpdateManyWithWhereWithoutCurrentSponsorInput | UserUpdateManyWithWhereWithoutCurrentSponsorInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type UserInvitesUncheckedUpdateManyWithoutSponsorNestedInput = {
    create?: XOR<UserInvitesCreateWithoutSponsorInput, UserInvitesUncheckedCreateWithoutSponsorInput> | UserInvitesCreateWithoutSponsorInput[] | UserInvitesUncheckedCreateWithoutSponsorInput[]
    connectOrCreate?: UserInvitesCreateOrConnectWithoutSponsorInput | UserInvitesCreateOrConnectWithoutSponsorInput[]
    upsert?: UserInvitesUpsertWithWhereUniqueWithoutSponsorInput | UserInvitesUpsertWithWhereUniqueWithoutSponsorInput[]
    createMany?: UserInvitesCreateManySponsorInputEnvelope
    set?: UserInvitesWhereUniqueInput | UserInvitesWhereUniqueInput[]
    disconnect?: UserInvitesWhereUniqueInput | UserInvitesWhereUniqueInput[]
    delete?: UserInvitesWhereUniqueInput | UserInvitesWhereUniqueInput[]
    connect?: UserInvitesWhereUniqueInput | UserInvitesWhereUniqueInput[]
    update?: UserInvitesUpdateWithWhereUniqueWithoutSponsorInput | UserInvitesUpdateWithWhereUniqueWithoutSponsorInput[]
    updateMany?: UserInvitesUpdateManyWithWhereWithoutSponsorInput | UserInvitesUpdateManyWithWhereWithoutSponsorInput[]
    deleteMany?: UserInvitesScalarWhereInput | UserInvitesScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutAccountsInput = {
    create?: XOR<UserCreateWithoutAccountsInput, UserUncheckedCreateWithoutAccountsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAccountsInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutAccountsNestedInput = {
    create?: XOR<UserCreateWithoutAccountsInput, UserUncheckedCreateWithoutAccountsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAccountsInput
    upsert?: UserUpsertWithoutAccountsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAccountsInput, UserUpdateWithoutAccountsInput>, UserUncheckedUpdateWithoutAccountsInput>
  }

  export type UserCreateNestedOneWithoutSessionsInput = {
    create?: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSessionsInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutSessionsNestedInput = {
    create?: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSessionsInput
    upsert?: UserUpsertWithoutSessionsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSessionsInput, UserUpdateWithoutSessionsInput>, UserUncheckedUpdateWithoutSessionsInput>
  }

  export type SponsorsCreateNestedOneWithoutUserInput = {
    create?: XOR<SponsorsCreateWithoutUserInput, SponsorsUncheckedCreateWithoutUserInput>
    connectOrCreate?: SponsorsCreateOrConnectWithoutUserInput
    connect?: SponsorsWhereUniqueInput
  }

  export type UserSponsorsCreateNestedManyWithoutUserInput = {
    create?: XOR<UserSponsorsCreateWithoutUserInput, UserSponsorsUncheckedCreateWithoutUserInput> | UserSponsorsCreateWithoutUserInput[] | UserSponsorsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserSponsorsCreateOrConnectWithoutUserInput | UserSponsorsCreateOrConnectWithoutUserInput[]
    createMany?: UserSponsorsCreateManyUserInputEnvelope
    connect?: UserSponsorsWhereUniqueInput | UserSponsorsWhereUniqueInput[]
  }

  export type BountiesCreateNestedManyWithoutPocInput = {
    create?: XOR<BountiesCreateWithoutPocInput, BountiesUncheckedCreateWithoutPocInput> | BountiesCreateWithoutPocInput[] | BountiesUncheckedCreateWithoutPocInput[]
    connectOrCreate?: BountiesCreateOrConnectWithoutPocInput | BountiesCreateOrConnectWithoutPocInput[]
    createMany?: BountiesCreateManyPocInputEnvelope
    connect?: BountiesWhereUniqueInput | BountiesWhereUniqueInput[]
  }

  export type BountiesTemplatesCreateNestedManyWithoutPocInput = {
    create?: XOR<BountiesTemplatesCreateWithoutPocInput, BountiesTemplatesUncheckedCreateWithoutPocInput> | BountiesTemplatesCreateWithoutPocInput[] | BountiesTemplatesUncheckedCreateWithoutPocInput[]
    connectOrCreate?: BountiesTemplatesCreateOrConnectWithoutPocInput | BountiesTemplatesCreateOrConnectWithoutPocInput[]
    createMany?: BountiesTemplatesCreateManyPocInputEnvelope
    connect?: BountiesTemplatesWhereUniqueInput | BountiesTemplatesWhereUniqueInput[]
  }

  export type CommentCreateNestedManyWithoutAuthorInput = {
    create?: XOR<CommentCreateWithoutAuthorInput, CommentUncheckedCreateWithoutAuthorInput> | CommentCreateWithoutAuthorInput[] | CommentUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutAuthorInput | CommentCreateOrConnectWithoutAuthorInput[]
    createMany?: CommentCreateManyAuthorInputEnvelope
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
  }

  export type SubmissionCreateNestedManyWithoutUserInput = {
    create?: XOR<SubmissionCreateWithoutUserInput, SubmissionUncheckedCreateWithoutUserInput> | SubmissionCreateWithoutUserInput[] | SubmissionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SubmissionCreateOrConnectWithoutUserInput | SubmissionCreateOrConnectWithoutUserInput[]
    createMany?: SubmissionCreateManyUserInputEnvelope
    connect?: SubmissionWhereUniqueInput | SubmissionWhereUniqueInput[]
  }

  export type GrantsCreateNestedManyWithoutPocInput = {
    create?: XOR<GrantsCreateWithoutPocInput, GrantsUncheckedCreateWithoutPocInput> | GrantsCreateWithoutPocInput[] | GrantsUncheckedCreateWithoutPocInput[]
    connectOrCreate?: GrantsCreateOrConnectWithoutPocInput | GrantsCreateOrConnectWithoutPocInput[]
    createMany?: GrantsCreateManyPocInputEnvelope
    connect?: GrantsWhereUniqueInput | GrantsWhereUniqueInput[]
  }

  export type UserInvitesCreateNestedManyWithoutSenderInput = {
    create?: XOR<UserInvitesCreateWithoutSenderInput, UserInvitesUncheckedCreateWithoutSenderInput> | UserInvitesCreateWithoutSenderInput[] | UserInvitesUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: UserInvitesCreateOrConnectWithoutSenderInput | UserInvitesCreateOrConnectWithoutSenderInput[]
    createMany?: UserInvitesCreateManySenderInputEnvelope
    connect?: UserInvitesWhereUniqueInput | UserInvitesWhereUniqueInput[]
  }

  export type SubscribeBountyCreateNestedManyWithoutUserInput = {
    create?: XOR<SubscribeBountyCreateWithoutUserInput, SubscribeBountyUncheckedCreateWithoutUserInput> | SubscribeBountyCreateWithoutUserInput[] | SubscribeBountyUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SubscribeBountyCreateOrConnectWithoutUserInput | SubscribeBountyCreateOrConnectWithoutUserInput[]
    createMany?: SubscribeBountyCreateManyUserInputEnvelope
    connect?: SubscribeBountyWhereUniqueInput | SubscribeBountyWhereUniqueInput[]
  }

  export type PoWCreateNestedManyWithoutUserInput = {
    create?: XOR<PoWCreateWithoutUserInput, PoWUncheckedCreateWithoutUserInput> | PoWCreateWithoutUserInput[] | PoWUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PoWCreateOrConnectWithoutUserInput | PoWCreateOrConnectWithoutUserInput[]
    createMany?: PoWCreateManyUserInputEnvelope
    connect?: PoWWhereUniqueInput | PoWWhereUniqueInput[]
  }

  export type AccountCreateNestedManyWithoutUserInput = {
    create?: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput> | AccountCreateWithoutUserInput[] | AccountUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AccountCreateOrConnectWithoutUserInput | AccountCreateOrConnectWithoutUserInput[]
    createMany?: AccountCreateManyUserInputEnvelope
    connect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
  }

  export type SessionCreateNestedManyWithoutUserInput = {
    create?: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput> | SessionCreateWithoutUserInput[] | SessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutUserInput | SessionCreateOrConnectWithoutUserInput[]
    createMany?: SessionCreateManyUserInputEnvelope
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
  }

  export type HackathonCreateNestedOneWithoutUserInput = {
    create?: XOR<HackathonCreateWithoutUserInput, HackathonUncheckedCreateWithoutUserInput>
    connectOrCreate?: HackathonCreateOrConnectWithoutUserInput
    connect?: HackathonWhereUniqueInput
  }

  export type EmailSettingsCreateNestedManyWithoutUserInput = {
    create?: XOR<EmailSettingsCreateWithoutUserInput, EmailSettingsUncheckedCreateWithoutUserInput> | EmailSettingsCreateWithoutUserInput[] | EmailSettingsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: EmailSettingsCreateOrConnectWithoutUserInput | EmailSettingsCreateOrConnectWithoutUserInput[]
    createMany?: EmailSettingsCreateManyUserInputEnvelope
    connect?: EmailSettingsWhereUniqueInput | EmailSettingsWhereUniqueInput[]
  }

  export type TalentRankingsCreateNestedManyWithoutUserInput = {
    create?: XOR<TalentRankingsCreateWithoutUserInput, TalentRankingsUncheckedCreateWithoutUserInput> | TalentRankingsCreateWithoutUserInput[] | TalentRankingsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: TalentRankingsCreateOrConnectWithoutUserInput | TalentRankingsCreateOrConnectWithoutUserInput[]
    createMany?: TalentRankingsCreateManyUserInputEnvelope
    connect?: TalentRankingsWhereUniqueInput | TalentRankingsWhereUniqueInput[]
  }

  export type ScoutsCreateNestedManyWithoutUserInput = {
    create?: XOR<ScoutsCreateWithoutUserInput, ScoutsUncheckedCreateWithoutUserInput> | ScoutsCreateWithoutUserInput[] | ScoutsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ScoutsCreateOrConnectWithoutUserInput | ScoutsCreateOrConnectWithoutUserInput[]
    createMany?: ScoutsCreateManyUserInputEnvelope
    connect?: ScoutsWhereUniqueInput | ScoutsWhereUniqueInput[]
  }

  export type GrantApplicationCreateNestedManyWithoutUserInput = {
    create?: XOR<GrantApplicationCreateWithoutUserInput, GrantApplicationUncheckedCreateWithoutUserInput> | GrantApplicationCreateWithoutUserInput[] | GrantApplicationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: GrantApplicationCreateOrConnectWithoutUserInput | GrantApplicationCreateOrConnectWithoutUserInput[]
    createMany?: GrantApplicationCreateManyUserInputEnvelope
    connect?: GrantApplicationWhereUniqueInput | GrantApplicationWhereUniqueInput[]
  }

  export type SubscribeHackathonCreateNestedManyWithoutUserInput = {
    create?: XOR<SubscribeHackathonCreateWithoutUserInput, SubscribeHackathonUncheckedCreateWithoutUserInput> | SubscribeHackathonCreateWithoutUserInput[] | SubscribeHackathonUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SubscribeHackathonCreateOrConnectWithoutUserInput | SubscribeHackathonCreateOrConnectWithoutUserInput[]
    createMany?: SubscribeHackathonCreateManyUserInputEnvelope
    connect?: SubscribeHackathonWhereUniqueInput | SubscribeHackathonWhereUniqueInput[]
  }

  export type CreditLedgerCreateNestedManyWithoutUserInput = {
    create?: XOR<CreditLedgerCreateWithoutUserInput, CreditLedgerUncheckedCreateWithoutUserInput> | CreditLedgerCreateWithoutUserInput[] | CreditLedgerUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CreditLedgerCreateOrConnectWithoutUserInput | CreditLedgerCreateOrConnectWithoutUserInput[]
    createMany?: CreditLedgerCreateManyUserInputEnvelope
    connect?: CreditLedgerWhereUniqueInput | CreditLedgerWhereUniqueInput[]
  }

  export type UserSponsorsUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<UserSponsorsCreateWithoutUserInput, UserSponsorsUncheckedCreateWithoutUserInput> | UserSponsorsCreateWithoutUserInput[] | UserSponsorsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserSponsorsCreateOrConnectWithoutUserInput | UserSponsorsCreateOrConnectWithoutUserInput[]
    createMany?: UserSponsorsCreateManyUserInputEnvelope
    connect?: UserSponsorsWhereUniqueInput | UserSponsorsWhereUniqueInput[]
  }

  export type BountiesUncheckedCreateNestedManyWithoutPocInput = {
    create?: XOR<BountiesCreateWithoutPocInput, BountiesUncheckedCreateWithoutPocInput> | BountiesCreateWithoutPocInput[] | BountiesUncheckedCreateWithoutPocInput[]
    connectOrCreate?: BountiesCreateOrConnectWithoutPocInput | BountiesCreateOrConnectWithoutPocInput[]
    createMany?: BountiesCreateManyPocInputEnvelope
    connect?: BountiesWhereUniqueInput | BountiesWhereUniqueInput[]
  }

  export type BountiesTemplatesUncheckedCreateNestedManyWithoutPocInput = {
    create?: XOR<BountiesTemplatesCreateWithoutPocInput, BountiesTemplatesUncheckedCreateWithoutPocInput> | BountiesTemplatesCreateWithoutPocInput[] | BountiesTemplatesUncheckedCreateWithoutPocInput[]
    connectOrCreate?: BountiesTemplatesCreateOrConnectWithoutPocInput | BountiesTemplatesCreateOrConnectWithoutPocInput[]
    createMany?: BountiesTemplatesCreateManyPocInputEnvelope
    connect?: BountiesTemplatesWhereUniqueInput | BountiesTemplatesWhereUniqueInput[]
  }

  export type CommentUncheckedCreateNestedManyWithoutAuthorInput = {
    create?: XOR<CommentCreateWithoutAuthorInput, CommentUncheckedCreateWithoutAuthorInput> | CommentCreateWithoutAuthorInput[] | CommentUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutAuthorInput | CommentCreateOrConnectWithoutAuthorInput[]
    createMany?: CommentCreateManyAuthorInputEnvelope
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
  }

  export type SubmissionUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<SubmissionCreateWithoutUserInput, SubmissionUncheckedCreateWithoutUserInput> | SubmissionCreateWithoutUserInput[] | SubmissionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SubmissionCreateOrConnectWithoutUserInput | SubmissionCreateOrConnectWithoutUserInput[]
    createMany?: SubmissionCreateManyUserInputEnvelope
    connect?: SubmissionWhereUniqueInput | SubmissionWhereUniqueInput[]
  }

  export type GrantsUncheckedCreateNestedManyWithoutPocInput = {
    create?: XOR<GrantsCreateWithoutPocInput, GrantsUncheckedCreateWithoutPocInput> | GrantsCreateWithoutPocInput[] | GrantsUncheckedCreateWithoutPocInput[]
    connectOrCreate?: GrantsCreateOrConnectWithoutPocInput | GrantsCreateOrConnectWithoutPocInput[]
    createMany?: GrantsCreateManyPocInputEnvelope
    connect?: GrantsWhereUniqueInput | GrantsWhereUniqueInput[]
  }

  export type UserInvitesUncheckedCreateNestedManyWithoutSenderInput = {
    create?: XOR<UserInvitesCreateWithoutSenderInput, UserInvitesUncheckedCreateWithoutSenderInput> | UserInvitesCreateWithoutSenderInput[] | UserInvitesUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: UserInvitesCreateOrConnectWithoutSenderInput | UserInvitesCreateOrConnectWithoutSenderInput[]
    createMany?: UserInvitesCreateManySenderInputEnvelope
    connect?: UserInvitesWhereUniqueInput | UserInvitesWhereUniqueInput[]
  }

  export type SubscribeBountyUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<SubscribeBountyCreateWithoutUserInput, SubscribeBountyUncheckedCreateWithoutUserInput> | SubscribeBountyCreateWithoutUserInput[] | SubscribeBountyUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SubscribeBountyCreateOrConnectWithoutUserInput | SubscribeBountyCreateOrConnectWithoutUserInput[]
    createMany?: SubscribeBountyCreateManyUserInputEnvelope
    connect?: SubscribeBountyWhereUniqueInput | SubscribeBountyWhereUniqueInput[]
  }

  export type PoWUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<PoWCreateWithoutUserInput, PoWUncheckedCreateWithoutUserInput> | PoWCreateWithoutUserInput[] | PoWUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PoWCreateOrConnectWithoutUserInput | PoWCreateOrConnectWithoutUserInput[]
    createMany?: PoWCreateManyUserInputEnvelope
    connect?: PoWWhereUniqueInput | PoWWhereUniqueInput[]
  }

  export type AccountUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput> | AccountCreateWithoutUserInput[] | AccountUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AccountCreateOrConnectWithoutUserInput | AccountCreateOrConnectWithoutUserInput[]
    createMany?: AccountCreateManyUserInputEnvelope
    connect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
  }

  export type SessionUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput> | SessionCreateWithoutUserInput[] | SessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutUserInput | SessionCreateOrConnectWithoutUserInput[]
    createMany?: SessionCreateManyUserInputEnvelope
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
  }

  export type EmailSettingsUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<EmailSettingsCreateWithoutUserInput, EmailSettingsUncheckedCreateWithoutUserInput> | EmailSettingsCreateWithoutUserInput[] | EmailSettingsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: EmailSettingsCreateOrConnectWithoutUserInput | EmailSettingsCreateOrConnectWithoutUserInput[]
    createMany?: EmailSettingsCreateManyUserInputEnvelope
    connect?: EmailSettingsWhereUniqueInput | EmailSettingsWhereUniqueInput[]
  }

  export type TalentRankingsUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<TalentRankingsCreateWithoutUserInput, TalentRankingsUncheckedCreateWithoutUserInput> | TalentRankingsCreateWithoutUserInput[] | TalentRankingsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: TalentRankingsCreateOrConnectWithoutUserInput | TalentRankingsCreateOrConnectWithoutUserInput[]
    createMany?: TalentRankingsCreateManyUserInputEnvelope
    connect?: TalentRankingsWhereUniqueInput | TalentRankingsWhereUniqueInput[]
  }

  export type ScoutsUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<ScoutsCreateWithoutUserInput, ScoutsUncheckedCreateWithoutUserInput> | ScoutsCreateWithoutUserInput[] | ScoutsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ScoutsCreateOrConnectWithoutUserInput | ScoutsCreateOrConnectWithoutUserInput[]
    createMany?: ScoutsCreateManyUserInputEnvelope
    connect?: ScoutsWhereUniqueInput | ScoutsWhereUniqueInput[]
  }

  export type GrantApplicationUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<GrantApplicationCreateWithoutUserInput, GrantApplicationUncheckedCreateWithoutUserInput> | GrantApplicationCreateWithoutUserInput[] | GrantApplicationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: GrantApplicationCreateOrConnectWithoutUserInput | GrantApplicationCreateOrConnectWithoutUserInput[]
    createMany?: GrantApplicationCreateManyUserInputEnvelope
    connect?: GrantApplicationWhereUniqueInput | GrantApplicationWhereUniqueInput[]
  }

  export type SubscribeHackathonUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<SubscribeHackathonCreateWithoutUserInput, SubscribeHackathonUncheckedCreateWithoutUserInput> | SubscribeHackathonCreateWithoutUserInput[] | SubscribeHackathonUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SubscribeHackathonCreateOrConnectWithoutUserInput | SubscribeHackathonCreateOrConnectWithoutUserInput[]
    createMany?: SubscribeHackathonCreateManyUserInputEnvelope
    connect?: SubscribeHackathonWhereUniqueInput | SubscribeHackathonWhereUniqueInput[]
  }

  export type CreditLedgerUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<CreditLedgerCreateWithoutUserInput, CreditLedgerUncheckedCreateWithoutUserInput> | CreditLedgerCreateWithoutUserInput[] | CreditLedgerUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CreditLedgerCreateOrConnectWithoutUserInput | CreditLedgerCreateOrConnectWithoutUserInput[]
    createMany?: CreditLedgerCreateManyUserInputEnvelope
    connect?: CreditLedgerWhereUniqueInput | CreditLedgerWhereUniqueInput[]
  }

  export type SponsorsUpdateOneWithoutUserNestedInput = {
    create?: XOR<SponsorsCreateWithoutUserInput, SponsorsUncheckedCreateWithoutUserInput>
    connectOrCreate?: SponsorsCreateOrConnectWithoutUserInput
    upsert?: SponsorsUpsertWithoutUserInput
    disconnect?: SponsorsWhereInput | boolean
    delete?: SponsorsWhereInput | boolean
    connect?: SponsorsWhereUniqueInput
    update?: XOR<XOR<SponsorsUpdateToOneWithWhereWithoutUserInput, SponsorsUpdateWithoutUserInput>, SponsorsUncheckedUpdateWithoutUserInput>
  }

  export type UserSponsorsUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserSponsorsCreateWithoutUserInput, UserSponsorsUncheckedCreateWithoutUserInput> | UserSponsorsCreateWithoutUserInput[] | UserSponsorsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserSponsorsCreateOrConnectWithoutUserInput | UserSponsorsCreateOrConnectWithoutUserInput[]
    upsert?: UserSponsorsUpsertWithWhereUniqueWithoutUserInput | UserSponsorsUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserSponsorsCreateManyUserInputEnvelope
    set?: UserSponsorsWhereUniqueInput | UserSponsorsWhereUniqueInput[]
    disconnect?: UserSponsorsWhereUniqueInput | UserSponsorsWhereUniqueInput[]
    delete?: UserSponsorsWhereUniqueInput | UserSponsorsWhereUniqueInput[]
    connect?: UserSponsorsWhereUniqueInput | UserSponsorsWhereUniqueInput[]
    update?: UserSponsorsUpdateWithWhereUniqueWithoutUserInput | UserSponsorsUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserSponsorsUpdateManyWithWhereWithoutUserInput | UserSponsorsUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserSponsorsScalarWhereInput | UserSponsorsScalarWhereInput[]
  }

  export type BountiesUpdateManyWithoutPocNestedInput = {
    create?: XOR<BountiesCreateWithoutPocInput, BountiesUncheckedCreateWithoutPocInput> | BountiesCreateWithoutPocInput[] | BountiesUncheckedCreateWithoutPocInput[]
    connectOrCreate?: BountiesCreateOrConnectWithoutPocInput | BountiesCreateOrConnectWithoutPocInput[]
    upsert?: BountiesUpsertWithWhereUniqueWithoutPocInput | BountiesUpsertWithWhereUniqueWithoutPocInput[]
    createMany?: BountiesCreateManyPocInputEnvelope
    set?: BountiesWhereUniqueInput | BountiesWhereUniqueInput[]
    disconnect?: BountiesWhereUniqueInput | BountiesWhereUniqueInput[]
    delete?: BountiesWhereUniqueInput | BountiesWhereUniqueInput[]
    connect?: BountiesWhereUniqueInput | BountiesWhereUniqueInput[]
    update?: BountiesUpdateWithWhereUniqueWithoutPocInput | BountiesUpdateWithWhereUniqueWithoutPocInput[]
    updateMany?: BountiesUpdateManyWithWhereWithoutPocInput | BountiesUpdateManyWithWhereWithoutPocInput[]
    deleteMany?: BountiesScalarWhereInput | BountiesScalarWhereInput[]
  }

  export type BountiesTemplatesUpdateManyWithoutPocNestedInput = {
    create?: XOR<BountiesTemplatesCreateWithoutPocInput, BountiesTemplatesUncheckedCreateWithoutPocInput> | BountiesTemplatesCreateWithoutPocInput[] | BountiesTemplatesUncheckedCreateWithoutPocInput[]
    connectOrCreate?: BountiesTemplatesCreateOrConnectWithoutPocInput | BountiesTemplatesCreateOrConnectWithoutPocInput[]
    upsert?: BountiesTemplatesUpsertWithWhereUniqueWithoutPocInput | BountiesTemplatesUpsertWithWhereUniqueWithoutPocInput[]
    createMany?: BountiesTemplatesCreateManyPocInputEnvelope
    set?: BountiesTemplatesWhereUniqueInput | BountiesTemplatesWhereUniqueInput[]
    disconnect?: BountiesTemplatesWhereUniqueInput | BountiesTemplatesWhereUniqueInput[]
    delete?: BountiesTemplatesWhereUniqueInput | BountiesTemplatesWhereUniqueInput[]
    connect?: BountiesTemplatesWhereUniqueInput | BountiesTemplatesWhereUniqueInput[]
    update?: BountiesTemplatesUpdateWithWhereUniqueWithoutPocInput | BountiesTemplatesUpdateWithWhereUniqueWithoutPocInput[]
    updateMany?: BountiesTemplatesUpdateManyWithWhereWithoutPocInput | BountiesTemplatesUpdateManyWithWhereWithoutPocInput[]
    deleteMany?: BountiesTemplatesScalarWhereInput | BountiesTemplatesScalarWhereInput[]
  }

  export type CommentUpdateManyWithoutAuthorNestedInput = {
    create?: XOR<CommentCreateWithoutAuthorInput, CommentUncheckedCreateWithoutAuthorInput> | CommentCreateWithoutAuthorInput[] | CommentUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutAuthorInput | CommentCreateOrConnectWithoutAuthorInput[]
    upsert?: CommentUpsertWithWhereUniqueWithoutAuthorInput | CommentUpsertWithWhereUniqueWithoutAuthorInput[]
    createMany?: CommentCreateManyAuthorInputEnvelope
    set?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    disconnect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    delete?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    update?: CommentUpdateWithWhereUniqueWithoutAuthorInput | CommentUpdateWithWhereUniqueWithoutAuthorInput[]
    updateMany?: CommentUpdateManyWithWhereWithoutAuthorInput | CommentUpdateManyWithWhereWithoutAuthorInput[]
    deleteMany?: CommentScalarWhereInput | CommentScalarWhereInput[]
  }

  export type SubmissionUpdateManyWithoutUserNestedInput = {
    create?: XOR<SubmissionCreateWithoutUserInput, SubmissionUncheckedCreateWithoutUserInput> | SubmissionCreateWithoutUserInput[] | SubmissionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SubmissionCreateOrConnectWithoutUserInput | SubmissionCreateOrConnectWithoutUserInput[]
    upsert?: SubmissionUpsertWithWhereUniqueWithoutUserInput | SubmissionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SubmissionCreateManyUserInputEnvelope
    set?: SubmissionWhereUniqueInput | SubmissionWhereUniqueInput[]
    disconnect?: SubmissionWhereUniqueInput | SubmissionWhereUniqueInput[]
    delete?: SubmissionWhereUniqueInput | SubmissionWhereUniqueInput[]
    connect?: SubmissionWhereUniqueInput | SubmissionWhereUniqueInput[]
    update?: SubmissionUpdateWithWhereUniqueWithoutUserInput | SubmissionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SubmissionUpdateManyWithWhereWithoutUserInput | SubmissionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SubmissionScalarWhereInput | SubmissionScalarWhereInput[]
  }

  export type GrantsUpdateManyWithoutPocNestedInput = {
    create?: XOR<GrantsCreateWithoutPocInput, GrantsUncheckedCreateWithoutPocInput> | GrantsCreateWithoutPocInput[] | GrantsUncheckedCreateWithoutPocInput[]
    connectOrCreate?: GrantsCreateOrConnectWithoutPocInput | GrantsCreateOrConnectWithoutPocInput[]
    upsert?: GrantsUpsertWithWhereUniqueWithoutPocInput | GrantsUpsertWithWhereUniqueWithoutPocInput[]
    createMany?: GrantsCreateManyPocInputEnvelope
    set?: GrantsWhereUniqueInput | GrantsWhereUniqueInput[]
    disconnect?: GrantsWhereUniqueInput | GrantsWhereUniqueInput[]
    delete?: GrantsWhereUniqueInput | GrantsWhereUniqueInput[]
    connect?: GrantsWhereUniqueInput | GrantsWhereUniqueInput[]
    update?: GrantsUpdateWithWhereUniqueWithoutPocInput | GrantsUpdateWithWhereUniqueWithoutPocInput[]
    updateMany?: GrantsUpdateManyWithWhereWithoutPocInput | GrantsUpdateManyWithWhereWithoutPocInput[]
    deleteMany?: GrantsScalarWhereInput | GrantsScalarWhereInput[]
  }

  export type UserInvitesUpdateManyWithoutSenderNestedInput = {
    create?: XOR<UserInvitesCreateWithoutSenderInput, UserInvitesUncheckedCreateWithoutSenderInput> | UserInvitesCreateWithoutSenderInput[] | UserInvitesUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: UserInvitesCreateOrConnectWithoutSenderInput | UserInvitesCreateOrConnectWithoutSenderInput[]
    upsert?: UserInvitesUpsertWithWhereUniqueWithoutSenderInput | UserInvitesUpsertWithWhereUniqueWithoutSenderInput[]
    createMany?: UserInvitesCreateManySenderInputEnvelope
    set?: UserInvitesWhereUniqueInput | UserInvitesWhereUniqueInput[]
    disconnect?: UserInvitesWhereUniqueInput | UserInvitesWhereUniqueInput[]
    delete?: UserInvitesWhereUniqueInput | UserInvitesWhereUniqueInput[]
    connect?: UserInvitesWhereUniqueInput | UserInvitesWhereUniqueInput[]
    update?: UserInvitesUpdateWithWhereUniqueWithoutSenderInput | UserInvitesUpdateWithWhereUniqueWithoutSenderInput[]
    updateMany?: UserInvitesUpdateManyWithWhereWithoutSenderInput | UserInvitesUpdateManyWithWhereWithoutSenderInput[]
    deleteMany?: UserInvitesScalarWhereInput | UserInvitesScalarWhereInput[]
  }

  export type SubscribeBountyUpdateManyWithoutUserNestedInput = {
    create?: XOR<SubscribeBountyCreateWithoutUserInput, SubscribeBountyUncheckedCreateWithoutUserInput> | SubscribeBountyCreateWithoutUserInput[] | SubscribeBountyUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SubscribeBountyCreateOrConnectWithoutUserInput | SubscribeBountyCreateOrConnectWithoutUserInput[]
    upsert?: SubscribeBountyUpsertWithWhereUniqueWithoutUserInput | SubscribeBountyUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SubscribeBountyCreateManyUserInputEnvelope
    set?: SubscribeBountyWhereUniqueInput | SubscribeBountyWhereUniqueInput[]
    disconnect?: SubscribeBountyWhereUniqueInput | SubscribeBountyWhereUniqueInput[]
    delete?: SubscribeBountyWhereUniqueInput | SubscribeBountyWhereUniqueInput[]
    connect?: SubscribeBountyWhereUniqueInput | SubscribeBountyWhereUniqueInput[]
    update?: SubscribeBountyUpdateWithWhereUniqueWithoutUserInput | SubscribeBountyUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SubscribeBountyUpdateManyWithWhereWithoutUserInput | SubscribeBountyUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SubscribeBountyScalarWhereInput | SubscribeBountyScalarWhereInput[]
  }

  export type PoWUpdateManyWithoutUserNestedInput = {
    create?: XOR<PoWCreateWithoutUserInput, PoWUncheckedCreateWithoutUserInput> | PoWCreateWithoutUserInput[] | PoWUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PoWCreateOrConnectWithoutUserInput | PoWCreateOrConnectWithoutUserInput[]
    upsert?: PoWUpsertWithWhereUniqueWithoutUserInput | PoWUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: PoWCreateManyUserInputEnvelope
    set?: PoWWhereUniqueInput | PoWWhereUniqueInput[]
    disconnect?: PoWWhereUniqueInput | PoWWhereUniqueInput[]
    delete?: PoWWhereUniqueInput | PoWWhereUniqueInput[]
    connect?: PoWWhereUniqueInput | PoWWhereUniqueInput[]
    update?: PoWUpdateWithWhereUniqueWithoutUserInput | PoWUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: PoWUpdateManyWithWhereWithoutUserInput | PoWUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: PoWScalarWhereInput | PoWScalarWhereInput[]
  }

  export type AccountUpdateManyWithoutUserNestedInput = {
    create?: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput> | AccountCreateWithoutUserInput[] | AccountUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AccountCreateOrConnectWithoutUserInput | AccountCreateOrConnectWithoutUserInput[]
    upsert?: AccountUpsertWithWhereUniqueWithoutUserInput | AccountUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AccountCreateManyUserInputEnvelope
    set?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    disconnect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    delete?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    connect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    update?: AccountUpdateWithWhereUniqueWithoutUserInput | AccountUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AccountUpdateManyWithWhereWithoutUserInput | AccountUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AccountScalarWhereInput | AccountScalarWhereInput[]
  }

  export type SessionUpdateManyWithoutUserNestedInput = {
    create?: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput> | SessionCreateWithoutUserInput[] | SessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutUserInput | SessionCreateOrConnectWithoutUserInput[]
    upsert?: SessionUpsertWithWhereUniqueWithoutUserInput | SessionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SessionCreateManyUserInputEnvelope
    set?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    disconnect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    delete?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    update?: SessionUpdateWithWhereUniqueWithoutUserInput | SessionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SessionUpdateManyWithWhereWithoutUserInput | SessionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SessionScalarWhereInput | SessionScalarWhereInput[]
  }

  export type HackathonUpdateOneWithoutUserNestedInput = {
    create?: XOR<HackathonCreateWithoutUserInput, HackathonUncheckedCreateWithoutUserInput>
    connectOrCreate?: HackathonCreateOrConnectWithoutUserInput
    upsert?: HackathonUpsertWithoutUserInput
    disconnect?: HackathonWhereInput | boolean
    delete?: HackathonWhereInput | boolean
    connect?: HackathonWhereUniqueInput
    update?: XOR<XOR<HackathonUpdateToOneWithWhereWithoutUserInput, HackathonUpdateWithoutUserInput>, HackathonUncheckedUpdateWithoutUserInput>
  }

  export type EmailSettingsUpdateManyWithoutUserNestedInput = {
    create?: XOR<EmailSettingsCreateWithoutUserInput, EmailSettingsUncheckedCreateWithoutUserInput> | EmailSettingsCreateWithoutUserInput[] | EmailSettingsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: EmailSettingsCreateOrConnectWithoutUserInput | EmailSettingsCreateOrConnectWithoutUserInput[]
    upsert?: EmailSettingsUpsertWithWhereUniqueWithoutUserInput | EmailSettingsUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: EmailSettingsCreateManyUserInputEnvelope
    set?: EmailSettingsWhereUniqueInput | EmailSettingsWhereUniqueInput[]
    disconnect?: EmailSettingsWhereUniqueInput | EmailSettingsWhereUniqueInput[]
    delete?: EmailSettingsWhereUniqueInput | EmailSettingsWhereUniqueInput[]
    connect?: EmailSettingsWhereUniqueInput | EmailSettingsWhereUniqueInput[]
    update?: EmailSettingsUpdateWithWhereUniqueWithoutUserInput | EmailSettingsUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: EmailSettingsUpdateManyWithWhereWithoutUserInput | EmailSettingsUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: EmailSettingsScalarWhereInput | EmailSettingsScalarWhereInput[]
  }

  export type TalentRankingsUpdateManyWithoutUserNestedInput = {
    create?: XOR<TalentRankingsCreateWithoutUserInput, TalentRankingsUncheckedCreateWithoutUserInput> | TalentRankingsCreateWithoutUserInput[] | TalentRankingsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: TalentRankingsCreateOrConnectWithoutUserInput | TalentRankingsCreateOrConnectWithoutUserInput[]
    upsert?: TalentRankingsUpsertWithWhereUniqueWithoutUserInput | TalentRankingsUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: TalentRankingsCreateManyUserInputEnvelope
    set?: TalentRankingsWhereUniqueInput | TalentRankingsWhereUniqueInput[]
    disconnect?: TalentRankingsWhereUniqueInput | TalentRankingsWhereUniqueInput[]
    delete?: TalentRankingsWhereUniqueInput | TalentRankingsWhereUniqueInput[]
    connect?: TalentRankingsWhereUniqueInput | TalentRankingsWhereUniqueInput[]
    update?: TalentRankingsUpdateWithWhereUniqueWithoutUserInput | TalentRankingsUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: TalentRankingsUpdateManyWithWhereWithoutUserInput | TalentRankingsUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: TalentRankingsScalarWhereInput | TalentRankingsScalarWhereInput[]
  }

  export type ScoutsUpdateManyWithoutUserNestedInput = {
    create?: XOR<ScoutsCreateWithoutUserInput, ScoutsUncheckedCreateWithoutUserInput> | ScoutsCreateWithoutUserInput[] | ScoutsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ScoutsCreateOrConnectWithoutUserInput | ScoutsCreateOrConnectWithoutUserInput[]
    upsert?: ScoutsUpsertWithWhereUniqueWithoutUserInput | ScoutsUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ScoutsCreateManyUserInputEnvelope
    set?: ScoutsWhereUniqueInput | ScoutsWhereUniqueInput[]
    disconnect?: ScoutsWhereUniqueInput | ScoutsWhereUniqueInput[]
    delete?: ScoutsWhereUniqueInput | ScoutsWhereUniqueInput[]
    connect?: ScoutsWhereUniqueInput | ScoutsWhereUniqueInput[]
    update?: ScoutsUpdateWithWhereUniqueWithoutUserInput | ScoutsUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ScoutsUpdateManyWithWhereWithoutUserInput | ScoutsUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ScoutsScalarWhereInput | ScoutsScalarWhereInput[]
  }

  export type GrantApplicationUpdateManyWithoutUserNestedInput = {
    create?: XOR<GrantApplicationCreateWithoutUserInput, GrantApplicationUncheckedCreateWithoutUserInput> | GrantApplicationCreateWithoutUserInput[] | GrantApplicationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: GrantApplicationCreateOrConnectWithoutUserInput | GrantApplicationCreateOrConnectWithoutUserInput[]
    upsert?: GrantApplicationUpsertWithWhereUniqueWithoutUserInput | GrantApplicationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: GrantApplicationCreateManyUserInputEnvelope
    set?: GrantApplicationWhereUniqueInput | GrantApplicationWhereUniqueInput[]
    disconnect?: GrantApplicationWhereUniqueInput | GrantApplicationWhereUniqueInput[]
    delete?: GrantApplicationWhereUniqueInput | GrantApplicationWhereUniqueInput[]
    connect?: GrantApplicationWhereUniqueInput | GrantApplicationWhereUniqueInput[]
    update?: GrantApplicationUpdateWithWhereUniqueWithoutUserInput | GrantApplicationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: GrantApplicationUpdateManyWithWhereWithoutUserInput | GrantApplicationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: GrantApplicationScalarWhereInput | GrantApplicationScalarWhereInput[]
  }

  export type SubscribeHackathonUpdateManyWithoutUserNestedInput = {
    create?: XOR<SubscribeHackathonCreateWithoutUserInput, SubscribeHackathonUncheckedCreateWithoutUserInput> | SubscribeHackathonCreateWithoutUserInput[] | SubscribeHackathonUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SubscribeHackathonCreateOrConnectWithoutUserInput | SubscribeHackathonCreateOrConnectWithoutUserInput[]
    upsert?: SubscribeHackathonUpsertWithWhereUniqueWithoutUserInput | SubscribeHackathonUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SubscribeHackathonCreateManyUserInputEnvelope
    set?: SubscribeHackathonWhereUniqueInput | SubscribeHackathonWhereUniqueInput[]
    disconnect?: SubscribeHackathonWhereUniqueInput | SubscribeHackathonWhereUniqueInput[]
    delete?: SubscribeHackathonWhereUniqueInput | SubscribeHackathonWhereUniqueInput[]
    connect?: SubscribeHackathonWhereUniqueInput | SubscribeHackathonWhereUniqueInput[]
    update?: SubscribeHackathonUpdateWithWhereUniqueWithoutUserInput | SubscribeHackathonUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SubscribeHackathonUpdateManyWithWhereWithoutUserInput | SubscribeHackathonUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SubscribeHackathonScalarWhereInput | SubscribeHackathonScalarWhereInput[]
  }

  export type CreditLedgerUpdateManyWithoutUserNestedInput = {
    create?: XOR<CreditLedgerCreateWithoutUserInput, CreditLedgerUncheckedCreateWithoutUserInput> | CreditLedgerCreateWithoutUserInput[] | CreditLedgerUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CreditLedgerCreateOrConnectWithoutUserInput | CreditLedgerCreateOrConnectWithoutUserInput[]
    upsert?: CreditLedgerUpsertWithWhereUniqueWithoutUserInput | CreditLedgerUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: CreditLedgerCreateManyUserInputEnvelope
    set?: CreditLedgerWhereUniqueInput | CreditLedgerWhereUniqueInput[]
    disconnect?: CreditLedgerWhereUniqueInput | CreditLedgerWhereUniqueInput[]
    delete?: CreditLedgerWhereUniqueInput | CreditLedgerWhereUniqueInput[]
    connect?: CreditLedgerWhereUniqueInput | CreditLedgerWhereUniqueInput[]
    update?: CreditLedgerUpdateWithWhereUniqueWithoutUserInput | CreditLedgerUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: CreditLedgerUpdateManyWithWhereWithoutUserInput | CreditLedgerUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: CreditLedgerScalarWhereInput | CreditLedgerScalarWhereInput[]
  }

  export type UserSponsorsUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserSponsorsCreateWithoutUserInput, UserSponsorsUncheckedCreateWithoutUserInput> | UserSponsorsCreateWithoutUserInput[] | UserSponsorsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserSponsorsCreateOrConnectWithoutUserInput | UserSponsorsCreateOrConnectWithoutUserInput[]
    upsert?: UserSponsorsUpsertWithWhereUniqueWithoutUserInput | UserSponsorsUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserSponsorsCreateManyUserInputEnvelope
    set?: UserSponsorsWhereUniqueInput | UserSponsorsWhereUniqueInput[]
    disconnect?: UserSponsorsWhereUniqueInput | UserSponsorsWhereUniqueInput[]
    delete?: UserSponsorsWhereUniqueInput | UserSponsorsWhereUniqueInput[]
    connect?: UserSponsorsWhereUniqueInput | UserSponsorsWhereUniqueInput[]
    update?: UserSponsorsUpdateWithWhereUniqueWithoutUserInput | UserSponsorsUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserSponsorsUpdateManyWithWhereWithoutUserInput | UserSponsorsUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserSponsorsScalarWhereInput | UserSponsorsScalarWhereInput[]
  }

  export type BountiesUncheckedUpdateManyWithoutPocNestedInput = {
    create?: XOR<BountiesCreateWithoutPocInput, BountiesUncheckedCreateWithoutPocInput> | BountiesCreateWithoutPocInput[] | BountiesUncheckedCreateWithoutPocInput[]
    connectOrCreate?: BountiesCreateOrConnectWithoutPocInput | BountiesCreateOrConnectWithoutPocInput[]
    upsert?: BountiesUpsertWithWhereUniqueWithoutPocInput | BountiesUpsertWithWhereUniqueWithoutPocInput[]
    createMany?: BountiesCreateManyPocInputEnvelope
    set?: BountiesWhereUniqueInput | BountiesWhereUniqueInput[]
    disconnect?: BountiesWhereUniqueInput | BountiesWhereUniqueInput[]
    delete?: BountiesWhereUniqueInput | BountiesWhereUniqueInput[]
    connect?: BountiesWhereUniqueInput | BountiesWhereUniqueInput[]
    update?: BountiesUpdateWithWhereUniqueWithoutPocInput | BountiesUpdateWithWhereUniqueWithoutPocInput[]
    updateMany?: BountiesUpdateManyWithWhereWithoutPocInput | BountiesUpdateManyWithWhereWithoutPocInput[]
    deleteMany?: BountiesScalarWhereInput | BountiesScalarWhereInput[]
  }

  export type BountiesTemplatesUncheckedUpdateManyWithoutPocNestedInput = {
    create?: XOR<BountiesTemplatesCreateWithoutPocInput, BountiesTemplatesUncheckedCreateWithoutPocInput> | BountiesTemplatesCreateWithoutPocInput[] | BountiesTemplatesUncheckedCreateWithoutPocInput[]
    connectOrCreate?: BountiesTemplatesCreateOrConnectWithoutPocInput | BountiesTemplatesCreateOrConnectWithoutPocInput[]
    upsert?: BountiesTemplatesUpsertWithWhereUniqueWithoutPocInput | BountiesTemplatesUpsertWithWhereUniqueWithoutPocInput[]
    createMany?: BountiesTemplatesCreateManyPocInputEnvelope
    set?: BountiesTemplatesWhereUniqueInput | BountiesTemplatesWhereUniqueInput[]
    disconnect?: BountiesTemplatesWhereUniqueInput | BountiesTemplatesWhereUniqueInput[]
    delete?: BountiesTemplatesWhereUniqueInput | BountiesTemplatesWhereUniqueInput[]
    connect?: BountiesTemplatesWhereUniqueInput | BountiesTemplatesWhereUniqueInput[]
    update?: BountiesTemplatesUpdateWithWhereUniqueWithoutPocInput | BountiesTemplatesUpdateWithWhereUniqueWithoutPocInput[]
    updateMany?: BountiesTemplatesUpdateManyWithWhereWithoutPocInput | BountiesTemplatesUpdateManyWithWhereWithoutPocInput[]
    deleteMany?: BountiesTemplatesScalarWhereInput | BountiesTemplatesScalarWhereInput[]
  }

  export type CommentUncheckedUpdateManyWithoutAuthorNestedInput = {
    create?: XOR<CommentCreateWithoutAuthorInput, CommentUncheckedCreateWithoutAuthorInput> | CommentCreateWithoutAuthorInput[] | CommentUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutAuthorInput | CommentCreateOrConnectWithoutAuthorInput[]
    upsert?: CommentUpsertWithWhereUniqueWithoutAuthorInput | CommentUpsertWithWhereUniqueWithoutAuthorInput[]
    createMany?: CommentCreateManyAuthorInputEnvelope
    set?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    disconnect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    delete?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    update?: CommentUpdateWithWhereUniqueWithoutAuthorInput | CommentUpdateWithWhereUniqueWithoutAuthorInput[]
    updateMany?: CommentUpdateManyWithWhereWithoutAuthorInput | CommentUpdateManyWithWhereWithoutAuthorInput[]
    deleteMany?: CommentScalarWhereInput | CommentScalarWhereInput[]
  }

  export type SubmissionUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<SubmissionCreateWithoutUserInput, SubmissionUncheckedCreateWithoutUserInput> | SubmissionCreateWithoutUserInput[] | SubmissionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SubmissionCreateOrConnectWithoutUserInput | SubmissionCreateOrConnectWithoutUserInput[]
    upsert?: SubmissionUpsertWithWhereUniqueWithoutUserInput | SubmissionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SubmissionCreateManyUserInputEnvelope
    set?: SubmissionWhereUniqueInput | SubmissionWhereUniqueInput[]
    disconnect?: SubmissionWhereUniqueInput | SubmissionWhereUniqueInput[]
    delete?: SubmissionWhereUniqueInput | SubmissionWhereUniqueInput[]
    connect?: SubmissionWhereUniqueInput | SubmissionWhereUniqueInput[]
    update?: SubmissionUpdateWithWhereUniqueWithoutUserInput | SubmissionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SubmissionUpdateManyWithWhereWithoutUserInput | SubmissionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SubmissionScalarWhereInput | SubmissionScalarWhereInput[]
  }

  export type GrantsUncheckedUpdateManyWithoutPocNestedInput = {
    create?: XOR<GrantsCreateWithoutPocInput, GrantsUncheckedCreateWithoutPocInput> | GrantsCreateWithoutPocInput[] | GrantsUncheckedCreateWithoutPocInput[]
    connectOrCreate?: GrantsCreateOrConnectWithoutPocInput | GrantsCreateOrConnectWithoutPocInput[]
    upsert?: GrantsUpsertWithWhereUniqueWithoutPocInput | GrantsUpsertWithWhereUniqueWithoutPocInput[]
    createMany?: GrantsCreateManyPocInputEnvelope
    set?: GrantsWhereUniqueInput | GrantsWhereUniqueInput[]
    disconnect?: GrantsWhereUniqueInput | GrantsWhereUniqueInput[]
    delete?: GrantsWhereUniqueInput | GrantsWhereUniqueInput[]
    connect?: GrantsWhereUniqueInput | GrantsWhereUniqueInput[]
    update?: GrantsUpdateWithWhereUniqueWithoutPocInput | GrantsUpdateWithWhereUniqueWithoutPocInput[]
    updateMany?: GrantsUpdateManyWithWhereWithoutPocInput | GrantsUpdateManyWithWhereWithoutPocInput[]
    deleteMany?: GrantsScalarWhereInput | GrantsScalarWhereInput[]
  }

  export type UserInvitesUncheckedUpdateManyWithoutSenderNestedInput = {
    create?: XOR<UserInvitesCreateWithoutSenderInput, UserInvitesUncheckedCreateWithoutSenderInput> | UserInvitesCreateWithoutSenderInput[] | UserInvitesUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: UserInvitesCreateOrConnectWithoutSenderInput | UserInvitesCreateOrConnectWithoutSenderInput[]
    upsert?: UserInvitesUpsertWithWhereUniqueWithoutSenderInput | UserInvitesUpsertWithWhereUniqueWithoutSenderInput[]
    createMany?: UserInvitesCreateManySenderInputEnvelope
    set?: UserInvitesWhereUniqueInput | UserInvitesWhereUniqueInput[]
    disconnect?: UserInvitesWhereUniqueInput | UserInvitesWhereUniqueInput[]
    delete?: UserInvitesWhereUniqueInput | UserInvitesWhereUniqueInput[]
    connect?: UserInvitesWhereUniqueInput | UserInvitesWhereUniqueInput[]
    update?: UserInvitesUpdateWithWhereUniqueWithoutSenderInput | UserInvitesUpdateWithWhereUniqueWithoutSenderInput[]
    updateMany?: UserInvitesUpdateManyWithWhereWithoutSenderInput | UserInvitesUpdateManyWithWhereWithoutSenderInput[]
    deleteMany?: UserInvitesScalarWhereInput | UserInvitesScalarWhereInput[]
  }

  export type SubscribeBountyUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<SubscribeBountyCreateWithoutUserInput, SubscribeBountyUncheckedCreateWithoutUserInput> | SubscribeBountyCreateWithoutUserInput[] | SubscribeBountyUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SubscribeBountyCreateOrConnectWithoutUserInput | SubscribeBountyCreateOrConnectWithoutUserInput[]
    upsert?: SubscribeBountyUpsertWithWhereUniqueWithoutUserInput | SubscribeBountyUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SubscribeBountyCreateManyUserInputEnvelope
    set?: SubscribeBountyWhereUniqueInput | SubscribeBountyWhereUniqueInput[]
    disconnect?: SubscribeBountyWhereUniqueInput | SubscribeBountyWhereUniqueInput[]
    delete?: SubscribeBountyWhereUniqueInput | SubscribeBountyWhereUniqueInput[]
    connect?: SubscribeBountyWhereUniqueInput | SubscribeBountyWhereUniqueInput[]
    update?: SubscribeBountyUpdateWithWhereUniqueWithoutUserInput | SubscribeBountyUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SubscribeBountyUpdateManyWithWhereWithoutUserInput | SubscribeBountyUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SubscribeBountyScalarWhereInput | SubscribeBountyScalarWhereInput[]
  }

  export type PoWUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<PoWCreateWithoutUserInput, PoWUncheckedCreateWithoutUserInput> | PoWCreateWithoutUserInput[] | PoWUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PoWCreateOrConnectWithoutUserInput | PoWCreateOrConnectWithoutUserInput[]
    upsert?: PoWUpsertWithWhereUniqueWithoutUserInput | PoWUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: PoWCreateManyUserInputEnvelope
    set?: PoWWhereUniqueInput | PoWWhereUniqueInput[]
    disconnect?: PoWWhereUniqueInput | PoWWhereUniqueInput[]
    delete?: PoWWhereUniqueInput | PoWWhereUniqueInput[]
    connect?: PoWWhereUniqueInput | PoWWhereUniqueInput[]
    update?: PoWUpdateWithWhereUniqueWithoutUserInput | PoWUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: PoWUpdateManyWithWhereWithoutUserInput | PoWUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: PoWScalarWhereInput | PoWScalarWhereInput[]
  }

  export type AccountUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput> | AccountCreateWithoutUserInput[] | AccountUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AccountCreateOrConnectWithoutUserInput | AccountCreateOrConnectWithoutUserInput[]
    upsert?: AccountUpsertWithWhereUniqueWithoutUserInput | AccountUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AccountCreateManyUserInputEnvelope
    set?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    disconnect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    delete?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    connect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    update?: AccountUpdateWithWhereUniqueWithoutUserInput | AccountUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AccountUpdateManyWithWhereWithoutUserInput | AccountUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AccountScalarWhereInput | AccountScalarWhereInput[]
  }

  export type SessionUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput> | SessionCreateWithoutUserInput[] | SessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutUserInput | SessionCreateOrConnectWithoutUserInput[]
    upsert?: SessionUpsertWithWhereUniqueWithoutUserInput | SessionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SessionCreateManyUserInputEnvelope
    set?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    disconnect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    delete?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    update?: SessionUpdateWithWhereUniqueWithoutUserInput | SessionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SessionUpdateManyWithWhereWithoutUserInput | SessionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SessionScalarWhereInput | SessionScalarWhereInput[]
  }

  export type EmailSettingsUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<EmailSettingsCreateWithoutUserInput, EmailSettingsUncheckedCreateWithoutUserInput> | EmailSettingsCreateWithoutUserInput[] | EmailSettingsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: EmailSettingsCreateOrConnectWithoutUserInput | EmailSettingsCreateOrConnectWithoutUserInput[]
    upsert?: EmailSettingsUpsertWithWhereUniqueWithoutUserInput | EmailSettingsUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: EmailSettingsCreateManyUserInputEnvelope
    set?: EmailSettingsWhereUniqueInput | EmailSettingsWhereUniqueInput[]
    disconnect?: EmailSettingsWhereUniqueInput | EmailSettingsWhereUniqueInput[]
    delete?: EmailSettingsWhereUniqueInput | EmailSettingsWhereUniqueInput[]
    connect?: EmailSettingsWhereUniqueInput | EmailSettingsWhereUniqueInput[]
    update?: EmailSettingsUpdateWithWhereUniqueWithoutUserInput | EmailSettingsUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: EmailSettingsUpdateManyWithWhereWithoutUserInput | EmailSettingsUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: EmailSettingsScalarWhereInput | EmailSettingsScalarWhereInput[]
  }

  export type TalentRankingsUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<TalentRankingsCreateWithoutUserInput, TalentRankingsUncheckedCreateWithoutUserInput> | TalentRankingsCreateWithoutUserInput[] | TalentRankingsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: TalentRankingsCreateOrConnectWithoutUserInput | TalentRankingsCreateOrConnectWithoutUserInput[]
    upsert?: TalentRankingsUpsertWithWhereUniqueWithoutUserInput | TalentRankingsUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: TalentRankingsCreateManyUserInputEnvelope
    set?: TalentRankingsWhereUniqueInput | TalentRankingsWhereUniqueInput[]
    disconnect?: TalentRankingsWhereUniqueInput | TalentRankingsWhereUniqueInput[]
    delete?: TalentRankingsWhereUniqueInput | TalentRankingsWhereUniqueInput[]
    connect?: TalentRankingsWhereUniqueInput | TalentRankingsWhereUniqueInput[]
    update?: TalentRankingsUpdateWithWhereUniqueWithoutUserInput | TalentRankingsUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: TalentRankingsUpdateManyWithWhereWithoutUserInput | TalentRankingsUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: TalentRankingsScalarWhereInput | TalentRankingsScalarWhereInput[]
  }

  export type ScoutsUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<ScoutsCreateWithoutUserInput, ScoutsUncheckedCreateWithoutUserInput> | ScoutsCreateWithoutUserInput[] | ScoutsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ScoutsCreateOrConnectWithoutUserInput | ScoutsCreateOrConnectWithoutUserInput[]
    upsert?: ScoutsUpsertWithWhereUniqueWithoutUserInput | ScoutsUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ScoutsCreateManyUserInputEnvelope
    set?: ScoutsWhereUniqueInput | ScoutsWhereUniqueInput[]
    disconnect?: ScoutsWhereUniqueInput | ScoutsWhereUniqueInput[]
    delete?: ScoutsWhereUniqueInput | ScoutsWhereUniqueInput[]
    connect?: ScoutsWhereUniqueInput | ScoutsWhereUniqueInput[]
    update?: ScoutsUpdateWithWhereUniqueWithoutUserInput | ScoutsUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ScoutsUpdateManyWithWhereWithoutUserInput | ScoutsUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ScoutsScalarWhereInput | ScoutsScalarWhereInput[]
  }

  export type GrantApplicationUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<GrantApplicationCreateWithoutUserInput, GrantApplicationUncheckedCreateWithoutUserInput> | GrantApplicationCreateWithoutUserInput[] | GrantApplicationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: GrantApplicationCreateOrConnectWithoutUserInput | GrantApplicationCreateOrConnectWithoutUserInput[]
    upsert?: GrantApplicationUpsertWithWhereUniqueWithoutUserInput | GrantApplicationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: GrantApplicationCreateManyUserInputEnvelope
    set?: GrantApplicationWhereUniqueInput | GrantApplicationWhereUniqueInput[]
    disconnect?: GrantApplicationWhereUniqueInput | GrantApplicationWhereUniqueInput[]
    delete?: GrantApplicationWhereUniqueInput | GrantApplicationWhereUniqueInput[]
    connect?: GrantApplicationWhereUniqueInput | GrantApplicationWhereUniqueInput[]
    update?: GrantApplicationUpdateWithWhereUniqueWithoutUserInput | GrantApplicationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: GrantApplicationUpdateManyWithWhereWithoutUserInput | GrantApplicationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: GrantApplicationScalarWhereInput | GrantApplicationScalarWhereInput[]
  }

  export type SubscribeHackathonUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<SubscribeHackathonCreateWithoutUserInput, SubscribeHackathonUncheckedCreateWithoutUserInput> | SubscribeHackathonCreateWithoutUserInput[] | SubscribeHackathonUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SubscribeHackathonCreateOrConnectWithoutUserInput | SubscribeHackathonCreateOrConnectWithoutUserInput[]
    upsert?: SubscribeHackathonUpsertWithWhereUniqueWithoutUserInput | SubscribeHackathonUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SubscribeHackathonCreateManyUserInputEnvelope
    set?: SubscribeHackathonWhereUniqueInput | SubscribeHackathonWhereUniqueInput[]
    disconnect?: SubscribeHackathonWhereUniqueInput | SubscribeHackathonWhereUniqueInput[]
    delete?: SubscribeHackathonWhereUniqueInput | SubscribeHackathonWhereUniqueInput[]
    connect?: SubscribeHackathonWhereUniqueInput | SubscribeHackathonWhereUniqueInput[]
    update?: SubscribeHackathonUpdateWithWhereUniqueWithoutUserInput | SubscribeHackathonUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SubscribeHackathonUpdateManyWithWhereWithoutUserInput | SubscribeHackathonUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SubscribeHackathonScalarWhereInput | SubscribeHackathonScalarWhereInput[]
  }

  export type CreditLedgerUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<CreditLedgerCreateWithoutUserInput, CreditLedgerUncheckedCreateWithoutUserInput> | CreditLedgerCreateWithoutUserInput[] | CreditLedgerUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CreditLedgerCreateOrConnectWithoutUserInput | CreditLedgerCreateOrConnectWithoutUserInput[]
    upsert?: CreditLedgerUpsertWithWhereUniqueWithoutUserInput | CreditLedgerUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: CreditLedgerCreateManyUserInputEnvelope
    set?: CreditLedgerWhereUniqueInput | CreditLedgerWhereUniqueInput[]
    disconnect?: CreditLedgerWhereUniqueInput | CreditLedgerWhereUniqueInput[]
    delete?: CreditLedgerWhereUniqueInput | CreditLedgerWhereUniqueInput[]
    connect?: CreditLedgerWhereUniqueInput | CreditLedgerWhereUniqueInput[]
    update?: CreditLedgerUpdateWithWhereUniqueWithoutUserInput | CreditLedgerUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: CreditLedgerUpdateManyWithWhereWithoutUserInput | CreditLedgerUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: CreditLedgerScalarWhereInput | CreditLedgerScalarWhereInput[]
  }

  export type BountiesCreateNestedOneWithoutScoutsInput = {
    create?: XOR<BountiesCreateWithoutScoutsInput, BountiesUncheckedCreateWithoutScoutsInput>
    connectOrCreate?: BountiesCreateOrConnectWithoutScoutsInput
    connect?: BountiesWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutScoutsInput = {
    create?: XOR<UserCreateWithoutScoutsInput, UserUncheckedCreateWithoutScoutsInput>
    connectOrCreate?: UserCreateOrConnectWithoutScoutsInput
    connect?: UserWhereUniqueInput
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type BountiesUpdateOneRequiredWithoutScoutsNestedInput = {
    create?: XOR<BountiesCreateWithoutScoutsInput, BountiesUncheckedCreateWithoutScoutsInput>
    connectOrCreate?: BountiesCreateOrConnectWithoutScoutsInput
    upsert?: BountiesUpsertWithoutScoutsInput
    connect?: BountiesWhereUniqueInput
    update?: XOR<XOR<BountiesUpdateToOneWithWhereWithoutScoutsInput, BountiesUpdateWithoutScoutsInput>, BountiesUncheckedUpdateWithoutScoutsInput>
  }

  export type UserUpdateOneRequiredWithoutScoutsNestedInput = {
    create?: XOR<UserCreateWithoutScoutsInput, UserUncheckedCreateWithoutScoutsInput>
    connectOrCreate?: UserCreateOrConnectWithoutScoutsInput
    upsert?: UserUpsertWithoutScoutsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutScoutsInput, UserUpdateWithoutScoutsInput>, UserUncheckedUpdateWithoutScoutsInput>
  }

  export type UserCreateNestedOneWithoutTalentRankingsInput = {
    create?: XOR<UserCreateWithoutTalentRankingsInput, UserUncheckedCreateWithoutTalentRankingsInput>
    connectOrCreate?: UserCreateOrConnectWithoutTalentRankingsInput
    connect?: UserWhereUniqueInput
  }

  export type EnumTalentRankingSkillsFieldUpdateOperationsInput = {
    set?: $Enums.TalentRankingSkills
  }

  export type EnumTalentRankingTimeframeFieldUpdateOperationsInput = {
    set?: $Enums.TalentRankingTimeframe
  }

  export type UserUpdateOneRequiredWithoutTalentRankingsNestedInput = {
    create?: XOR<UserCreateWithoutTalentRankingsInput, UserUncheckedCreateWithoutTalentRankingsInput>
    connectOrCreate?: UserCreateOrConnectWithoutTalentRankingsInput
    upsert?: UserUpsertWithoutTalentRankingsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutTalentRankingsInput, UserUpdateWithoutTalentRankingsInput>, UserUncheckedUpdateWithoutTalentRankingsInput>
  }

  export type UserCreateNestedOneWithoutPoWInput = {
    create?: XOR<UserCreateWithoutPoWInput, UserUncheckedCreateWithoutPoWInput>
    connectOrCreate?: UserCreateOrConnectWithoutPoWInput
    connect?: UserWhereUniqueInput
  }

  export type CommentCreateNestedManyWithoutPowInput = {
    create?: XOR<CommentCreateWithoutPowInput, CommentUncheckedCreateWithoutPowInput> | CommentCreateWithoutPowInput[] | CommentUncheckedCreateWithoutPowInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutPowInput | CommentCreateOrConnectWithoutPowInput[]
    createMany?: CommentCreateManyPowInputEnvelope
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
  }

  export type CommentUncheckedCreateNestedManyWithoutPowInput = {
    create?: XOR<CommentCreateWithoutPowInput, CommentUncheckedCreateWithoutPowInput> | CommentCreateWithoutPowInput[] | CommentUncheckedCreateWithoutPowInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutPowInput | CommentCreateOrConnectWithoutPowInput[]
    createMany?: CommentCreateManyPowInputEnvelope
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
  }

  export type UserUpdateOneRequiredWithoutPoWNestedInput = {
    create?: XOR<UserCreateWithoutPoWInput, UserUncheckedCreateWithoutPoWInput>
    connectOrCreate?: UserCreateOrConnectWithoutPoWInput
    upsert?: UserUpsertWithoutPoWInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutPoWInput, UserUpdateWithoutPoWInput>, UserUncheckedUpdateWithoutPoWInput>
  }

  export type CommentUpdateManyWithoutPowNestedInput = {
    create?: XOR<CommentCreateWithoutPowInput, CommentUncheckedCreateWithoutPowInput> | CommentCreateWithoutPowInput[] | CommentUncheckedCreateWithoutPowInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutPowInput | CommentCreateOrConnectWithoutPowInput[]
    upsert?: CommentUpsertWithWhereUniqueWithoutPowInput | CommentUpsertWithWhereUniqueWithoutPowInput[]
    createMany?: CommentCreateManyPowInputEnvelope
    set?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    disconnect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    delete?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    update?: CommentUpdateWithWhereUniqueWithoutPowInput | CommentUpdateWithWhereUniqueWithoutPowInput[]
    updateMany?: CommentUpdateManyWithWhereWithoutPowInput | CommentUpdateManyWithWhereWithoutPowInput[]
    deleteMany?: CommentScalarWhereInput | CommentScalarWhereInput[]
  }

  export type CommentUncheckedUpdateManyWithoutPowNestedInput = {
    create?: XOR<CommentCreateWithoutPowInput, CommentUncheckedCreateWithoutPowInput> | CommentCreateWithoutPowInput[] | CommentUncheckedCreateWithoutPowInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutPowInput | CommentCreateOrConnectWithoutPowInput[]
    upsert?: CommentUpsertWithWhereUniqueWithoutPowInput | CommentUpsertWithWhereUniqueWithoutPowInput[]
    createMany?: CommentCreateManyPowInputEnvelope
    set?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    disconnect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    delete?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    update?: CommentUpdateWithWhereUniqueWithoutPowInput | CommentUpdateWithWhereUniqueWithoutPowInput[]
    updateMany?: CommentUpdateManyWithWhereWithoutPowInput | CommentUpdateManyWithWhereWithoutPowInput[]
    deleteMany?: CommentScalarWhereInput | CommentScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutEmailSettingsInput = {
    create?: XOR<UserCreateWithoutEmailSettingsInput, UserUncheckedCreateWithoutEmailSettingsInput>
    connectOrCreate?: UserCreateOrConnectWithoutEmailSettingsInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutEmailSettingsNestedInput = {
    create?: XOR<UserCreateWithoutEmailSettingsInput, UserUncheckedCreateWithoutEmailSettingsInput>
    connectOrCreate?: UserCreateOrConnectWithoutEmailSettingsInput
    upsert?: UserUpsertWithoutEmailSettingsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutEmailSettingsInput, UserUpdateWithoutEmailSettingsInput>, UserUncheckedUpdateWithoutEmailSettingsInput>
  }

  export type UserCreateNestedOneWithoutUserSponsorsInput = {
    create?: XOR<UserCreateWithoutUserSponsorsInput, UserUncheckedCreateWithoutUserSponsorsInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserSponsorsInput
    connect?: UserWhereUniqueInput
  }

  export type SponsorsCreateNestedOneWithoutUserSponsorsInput = {
    create?: XOR<SponsorsCreateWithoutUserSponsorsInput, SponsorsUncheckedCreateWithoutUserSponsorsInput>
    connectOrCreate?: SponsorsCreateOrConnectWithoutUserSponsorsInput
    connect?: SponsorsWhereUniqueInput
  }

  export type EnumRoleFieldUpdateOperationsInput = {
    set?: $Enums.Role
  }

  export type UserUpdateOneRequiredWithoutUserSponsorsNestedInput = {
    create?: XOR<UserCreateWithoutUserSponsorsInput, UserUncheckedCreateWithoutUserSponsorsInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserSponsorsInput
    upsert?: UserUpsertWithoutUserSponsorsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUserSponsorsInput, UserUpdateWithoutUserSponsorsInput>, UserUncheckedUpdateWithoutUserSponsorsInput>
  }

  export type SponsorsUpdateOneRequiredWithoutUserSponsorsNestedInput = {
    create?: XOR<SponsorsCreateWithoutUserSponsorsInput, SponsorsUncheckedCreateWithoutUserSponsorsInput>
    connectOrCreate?: SponsorsCreateOrConnectWithoutUserSponsorsInput
    upsert?: SponsorsUpsertWithoutUserSponsorsInput
    connect?: SponsorsWhereUniqueInput
    update?: XOR<XOR<SponsorsUpdateToOneWithWhereWithoutUserSponsorsInput, SponsorsUpdateWithoutUserSponsorsInput>, SponsorsUncheckedUpdateWithoutUserSponsorsInput>
  }

  export type UserCreateNestedOneWithoutUserInvitesInput = {
    create?: XOR<UserCreateWithoutUserInvitesInput, UserUncheckedCreateWithoutUserInvitesInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserInvitesInput
    connect?: UserWhereUniqueInput
  }

  export type SponsorsCreateNestedOneWithoutUserInvitesInput = {
    create?: XOR<SponsorsCreateWithoutUserInvitesInput, SponsorsUncheckedCreateWithoutUserInvitesInput>
    connectOrCreate?: SponsorsCreateOrConnectWithoutUserInvitesInput
    connect?: SponsorsWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutUserInvitesNestedInput = {
    create?: XOR<UserCreateWithoutUserInvitesInput, UserUncheckedCreateWithoutUserInvitesInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserInvitesInput
    upsert?: UserUpsertWithoutUserInvitesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUserInvitesInput, UserUpdateWithoutUserInvitesInput>, UserUncheckedUpdateWithoutUserInvitesInput>
  }

  export type SponsorsUpdateOneRequiredWithoutUserInvitesNestedInput = {
    create?: XOR<SponsorsCreateWithoutUserInvitesInput, SponsorsUncheckedCreateWithoutUserInvitesInput>
    connectOrCreate?: SponsorsCreateOrConnectWithoutUserInvitesInput
    upsert?: SponsorsUpsertWithoutUserInvitesInput
    connect?: SponsorsWhereUniqueInput
    update?: XOR<XOR<SponsorsUpdateToOneWithWhereWithoutUserInvitesInput, SponsorsUpdateWithoutUserInvitesInput>, SponsorsUncheckedUpdateWithoutUserInvitesInput>
  }

  export type EnumEmailTypeFieldUpdateOperationsInput = {
    set?: $Enums.EmailType
  }

  export type UserCreateNestedOneWithoutSubscribeBountyInput = {
    create?: XOR<UserCreateWithoutSubscribeBountyInput, UserUncheckedCreateWithoutSubscribeBountyInput>
    connectOrCreate?: UserCreateOrConnectWithoutSubscribeBountyInput
    connect?: UserWhereUniqueInput
  }

  export type BountiesCreateNestedOneWithoutSubscribeBountyInput = {
    create?: XOR<BountiesCreateWithoutSubscribeBountyInput, BountiesUncheckedCreateWithoutSubscribeBountyInput>
    connectOrCreate?: BountiesCreateOrConnectWithoutSubscribeBountyInput
    connect?: BountiesWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutSubscribeBountyNestedInput = {
    create?: XOR<UserCreateWithoutSubscribeBountyInput, UserUncheckedCreateWithoutSubscribeBountyInput>
    connectOrCreate?: UserCreateOrConnectWithoutSubscribeBountyInput
    upsert?: UserUpsertWithoutSubscribeBountyInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSubscribeBountyInput, UserUpdateWithoutSubscribeBountyInput>, UserUncheckedUpdateWithoutSubscribeBountyInput>
  }

  export type BountiesUpdateOneWithoutSubscribeBountyNestedInput = {
    create?: XOR<BountiesCreateWithoutSubscribeBountyInput, BountiesUncheckedCreateWithoutSubscribeBountyInput>
    connectOrCreate?: BountiesCreateOrConnectWithoutSubscribeBountyInput
    upsert?: BountiesUpsertWithoutSubscribeBountyInput
    disconnect?: BountiesWhereInput | boolean
    delete?: BountiesWhereInput | boolean
    connect?: BountiesWhereUniqueInput
    update?: XOR<XOR<BountiesUpdateToOneWithWhereWithoutSubscribeBountyInput, BountiesUpdateWithoutSubscribeBountyInput>, BountiesUncheckedUpdateWithoutSubscribeBountyInput>
  }

  export type UserCreateNestedOneWithoutSubscribeHackathonInput = {
    create?: XOR<UserCreateWithoutSubscribeHackathonInput, UserUncheckedCreateWithoutSubscribeHackathonInput>
    connectOrCreate?: UserCreateOrConnectWithoutSubscribeHackathonInput
    connect?: UserWhereUniqueInput
  }

  export type HackathonCreateNestedOneWithoutSubscribeHackathonInput = {
    create?: XOR<HackathonCreateWithoutSubscribeHackathonInput, HackathonUncheckedCreateWithoutSubscribeHackathonInput>
    connectOrCreate?: HackathonCreateOrConnectWithoutSubscribeHackathonInput
    connect?: HackathonWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutSubscribeHackathonNestedInput = {
    create?: XOR<UserCreateWithoutSubscribeHackathonInput, UserUncheckedCreateWithoutSubscribeHackathonInput>
    connectOrCreate?: UserCreateOrConnectWithoutSubscribeHackathonInput
    upsert?: UserUpsertWithoutSubscribeHackathonInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSubscribeHackathonInput, UserUpdateWithoutSubscribeHackathonInput>, UserUncheckedUpdateWithoutSubscribeHackathonInput>
  }

  export type HackathonUpdateOneWithoutSubscribeHackathonNestedInput = {
    create?: XOR<HackathonCreateWithoutSubscribeHackathonInput, HackathonUncheckedCreateWithoutSubscribeHackathonInput>
    connectOrCreate?: HackathonCreateOrConnectWithoutSubscribeHackathonInput
    upsert?: HackathonUpsertWithoutSubscribeHackathonInput
    disconnect?: HackathonWhereInput | boolean
    delete?: HackathonWhereInput | boolean
    connect?: HackathonWhereUniqueInput
    update?: XOR<XOR<HackathonUpdateToOneWithWhereWithoutSubscribeHackathonInput, HackathonUpdateWithoutSubscribeHackathonInput>, HackathonUncheckedUpdateWithoutSubscribeHackathonInput>
  }

  export type BountiesCreateNestedManyWithoutHackathonInput = {
    create?: XOR<BountiesCreateWithoutHackathonInput, BountiesUncheckedCreateWithoutHackathonInput> | BountiesCreateWithoutHackathonInput[] | BountiesUncheckedCreateWithoutHackathonInput[]
    connectOrCreate?: BountiesCreateOrConnectWithoutHackathonInput | BountiesCreateOrConnectWithoutHackathonInput[]
    createMany?: BountiesCreateManyHackathonInputEnvelope
    connect?: BountiesWhereUniqueInput | BountiesWhereUniqueInput[]
  }

  export type SponsorsCreateNestedOneWithoutHackathonInput = {
    create?: XOR<SponsorsCreateWithoutHackathonInput, SponsorsUncheckedCreateWithoutHackathonInput>
    connectOrCreate?: SponsorsCreateOrConnectWithoutHackathonInput
    connect?: SponsorsWhereUniqueInput
  }

  export type UserCreateNestedManyWithoutHackathonInput = {
    create?: XOR<UserCreateWithoutHackathonInput, UserUncheckedCreateWithoutHackathonInput> | UserCreateWithoutHackathonInput[] | UserUncheckedCreateWithoutHackathonInput[]
    connectOrCreate?: UserCreateOrConnectWithoutHackathonInput | UserCreateOrConnectWithoutHackathonInput[]
    createMany?: UserCreateManyHackathonInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type SubscribeHackathonCreateNestedManyWithoutHackthonsInput = {
    create?: XOR<SubscribeHackathonCreateWithoutHackthonsInput, SubscribeHackathonUncheckedCreateWithoutHackthonsInput> | SubscribeHackathonCreateWithoutHackthonsInput[] | SubscribeHackathonUncheckedCreateWithoutHackthonsInput[]
    connectOrCreate?: SubscribeHackathonCreateOrConnectWithoutHackthonsInput | SubscribeHackathonCreateOrConnectWithoutHackthonsInput[]
    createMany?: SubscribeHackathonCreateManyHackthonsInputEnvelope
    connect?: SubscribeHackathonWhereUniqueInput | SubscribeHackathonWhereUniqueInput[]
  }

  export type BountiesUncheckedCreateNestedManyWithoutHackathonInput = {
    create?: XOR<BountiesCreateWithoutHackathonInput, BountiesUncheckedCreateWithoutHackathonInput> | BountiesCreateWithoutHackathonInput[] | BountiesUncheckedCreateWithoutHackathonInput[]
    connectOrCreate?: BountiesCreateOrConnectWithoutHackathonInput | BountiesCreateOrConnectWithoutHackathonInput[]
    createMany?: BountiesCreateManyHackathonInputEnvelope
    connect?: BountiesWhereUniqueInput | BountiesWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutHackathonInput = {
    create?: XOR<UserCreateWithoutHackathonInput, UserUncheckedCreateWithoutHackathonInput> | UserCreateWithoutHackathonInput[] | UserUncheckedCreateWithoutHackathonInput[]
    connectOrCreate?: UserCreateOrConnectWithoutHackathonInput | UserCreateOrConnectWithoutHackathonInput[]
    createMany?: UserCreateManyHackathonInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type SubscribeHackathonUncheckedCreateNestedManyWithoutHackthonsInput = {
    create?: XOR<SubscribeHackathonCreateWithoutHackthonsInput, SubscribeHackathonUncheckedCreateWithoutHackthonsInput> | SubscribeHackathonCreateWithoutHackthonsInput[] | SubscribeHackathonUncheckedCreateWithoutHackthonsInput[]
    connectOrCreate?: SubscribeHackathonCreateOrConnectWithoutHackthonsInput | SubscribeHackathonCreateOrConnectWithoutHackthonsInput[]
    createMany?: SubscribeHackathonCreateManyHackthonsInputEnvelope
    connect?: SubscribeHackathonWhereUniqueInput | SubscribeHackathonWhereUniqueInput[]
  }

  export type BountiesUpdateManyWithoutHackathonNestedInput = {
    create?: XOR<BountiesCreateWithoutHackathonInput, BountiesUncheckedCreateWithoutHackathonInput> | BountiesCreateWithoutHackathonInput[] | BountiesUncheckedCreateWithoutHackathonInput[]
    connectOrCreate?: BountiesCreateOrConnectWithoutHackathonInput | BountiesCreateOrConnectWithoutHackathonInput[]
    upsert?: BountiesUpsertWithWhereUniqueWithoutHackathonInput | BountiesUpsertWithWhereUniqueWithoutHackathonInput[]
    createMany?: BountiesCreateManyHackathonInputEnvelope
    set?: BountiesWhereUniqueInput | BountiesWhereUniqueInput[]
    disconnect?: BountiesWhereUniqueInput | BountiesWhereUniqueInput[]
    delete?: BountiesWhereUniqueInput | BountiesWhereUniqueInput[]
    connect?: BountiesWhereUniqueInput | BountiesWhereUniqueInput[]
    update?: BountiesUpdateWithWhereUniqueWithoutHackathonInput | BountiesUpdateWithWhereUniqueWithoutHackathonInput[]
    updateMany?: BountiesUpdateManyWithWhereWithoutHackathonInput | BountiesUpdateManyWithWhereWithoutHackathonInput[]
    deleteMany?: BountiesScalarWhereInput | BountiesScalarWhereInput[]
  }

  export type SponsorsUpdateOneWithoutHackathonNestedInput = {
    create?: XOR<SponsorsCreateWithoutHackathonInput, SponsorsUncheckedCreateWithoutHackathonInput>
    connectOrCreate?: SponsorsCreateOrConnectWithoutHackathonInput
    upsert?: SponsorsUpsertWithoutHackathonInput
    disconnect?: SponsorsWhereInput | boolean
    delete?: SponsorsWhereInput | boolean
    connect?: SponsorsWhereUniqueInput
    update?: XOR<XOR<SponsorsUpdateToOneWithWhereWithoutHackathonInput, SponsorsUpdateWithoutHackathonInput>, SponsorsUncheckedUpdateWithoutHackathonInput>
  }

  export type UserUpdateManyWithoutHackathonNestedInput = {
    create?: XOR<UserCreateWithoutHackathonInput, UserUncheckedCreateWithoutHackathonInput> | UserCreateWithoutHackathonInput[] | UserUncheckedCreateWithoutHackathonInput[]
    connectOrCreate?: UserCreateOrConnectWithoutHackathonInput | UserCreateOrConnectWithoutHackathonInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutHackathonInput | UserUpsertWithWhereUniqueWithoutHackathonInput[]
    createMany?: UserCreateManyHackathonInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutHackathonInput | UserUpdateWithWhereUniqueWithoutHackathonInput[]
    updateMany?: UserUpdateManyWithWhereWithoutHackathonInput | UserUpdateManyWithWhereWithoutHackathonInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type SubscribeHackathonUpdateManyWithoutHackthonsNestedInput = {
    create?: XOR<SubscribeHackathonCreateWithoutHackthonsInput, SubscribeHackathonUncheckedCreateWithoutHackthonsInput> | SubscribeHackathonCreateWithoutHackthonsInput[] | SubscribeHackathonUncheckedCreateWithoutHackthonsInput[]
    connectOrCreate?: SubscribeHackathonCreateOrConnectWithoutHackthonsInput | SubscribeHackathonCreateOrConnectWithoutHackthonsInput[]
    upsert?: SubscribeHackathonUpsertWithWhereUniqueWithoutHackthonsInput | SubscribeHackathonUpsertWithWhereUniqueWithoutHackthonsInput[]
    createMany?: SubscribeHackathonCreateManyHackthonsInputEnvelope
    set?: SubscribeHackathonWhereUniqueInput | SubscribeHackathonWhereUniqueInput[]
    disconnect?: SubscribeHackathonWhereUniqueInput | SubscribeHackathonWhereUniqueInput[]
    delete?: SubscribeHackathonWhereUniqueInput | SubscribeHackathonWhereUniqueInput[]
    connect?: SubscribeHackathonWhereUniqueInput | SubscribeHackathonWhereUniqueInput[]
    update?: SubscribeHackathonUpdateWithWhereUniqueWithoutHackthonsInput | SubscribeHackathonUpdateWithWhereUniqueWithoutHackthonsInput[]
    updateMany?: SubscribeHackathonUpdateManyWithWhereWithoutHackthonsInput | SubscribeHackathonUpdateManyWithWhereWithoutHackthonsInput[]
    deleteMany?: SubscribeHackathonScalarWhereInput | SubscribeHackathonScalarWhereInput[]
  }

  export type BountiesUncheckedUpdateManyWithoutHackathonNestedInput = {
    create?: XOR<BountiesCreateWithoutHackathonInput, BountiesUncheckedCreateWithoutHackathonInput> | BountiesCreateWithoutHackathonInput[] | BountiesUncheckedCreateWithoutHackathonInput[]
    connectOrCreate?: BountiesCreateOrConnectWithoutHackathonInput | BountiesCreateOrConnectWithoutHackathonInput[]
    upsert?: BountiesUpsertWithWhereUniqueWithoutHackathonInput | BountiesUpsertWithWhereUniqueWithoutHackathonInput[]
    createMany?: BountiesCreateManyHackathonInputEnvelope
    set?: BountiesWhereUniqueInput | BountiesWhereUniqueInput[]
    disconnect?: BountiesWhereUniqueInput | BountiesWhereUniqueInput[]
    delete?: BountiesWhereUniqueInput | BountiesWhereUniqueInput[]
    connect?: BountiesWhereUniqueInput | BountiesWhereUniqueInput[]
    update?: BountiesUpdateWithWhereUniqueWithoutHackathonInput | BountiesUpdateWithWhereUniqueWithoutHackathonInput[]
    updateMany?: BountiesUpdateManyWithWhereWithoutHackathonInput | BountiesUpdateManyWithWhereWithoutHackathonInput[]
    deleteMany?: BountiesScalarWhereInput | BountiesScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutHackathonNestedInput = {
    create?: XOR<UserCreateWithoutHackathonInput, UserUncheckedCreateWithoutHackathonInput> | UserCreateWithoutHackathonInput[] | UserUncheckedCreateWithoutHackathonInput[]
    connectOrCreate?: UserCreateOrConnectWithoutHackathonInput | UserCreateOrConnectWithoutHackathonInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutHackathonInput | UserUpsertWithWhereUniqueWithoutHackathonInput[]
    createMany?: UserCreateManyHackathonInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutHackathonInput | UserUpdateWithWhereUniqueWithoutHackathonInput[]
    updateMany?: UserUpdateManyWithWhereWithoutHackathonInput | UserUpdateManyWithWhereWithoutHackathonInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type SubscribeHackathonUncheckedUpdateManyWithoutHackthonsNestedInput = {
    create?: XOR<SubscribeHackathonCreateWithoutHackthonsInput, SubscribeHackathonUncheckedCreateWithoutHackthonsInput> | SubscribeHackathonCreateWithoutHackthonsInput[] | SubscribeHackathonUncheckedCreateWithoutHackthonsInput[]
    connectOrCreate?: SubscribeHackathonCreateOrConnectWithoutHackthonsInput | SubscribeHackathonCreateOrConnectWithoutHackthonsInput[]
    upsert?: SubscribeHackathonUpsertWithWhereUniqueWithoutHackthonsInput | SubscribeHackathonUpsertWithWhereUniqueWithoutHackthonsInput[]
    createMany?: SubscribeHackathonCreateManyHackthonsInputEnvelope
    set?: SubscribeHackathonWhereUniqueInput | SubscribeHackathonWhereUniqueInput[]
    disconnect?: SubscribeHackathonWhereUniqueInput | SubscribeHackathonWhereUniqueInput[]
    delete?: SubscribeHackathonWhereUniqueInput | SubscribeHackathonWhereUniqueInput[]
    connect?: SubscribeHackathonWhereUniqueInput | SubscribeHackathonWhereUniqueInput[]
    update?: SubscribeHackathonUpdateWithWhereUniqueWithoutHackthonsInput | SubscribeHackathonUpdateWithWhereUniqueWithoutHackthonsInput[]
    updateMany?: SubscribeHackathonUpdateManyWithWhereWithoutHackthonsInput | SubscribeHackathonUpdateManyWithWhereWithoutHackthonsInput[]
    deleteMany?: SubscribeHackathonScalarWhereInput | SubscribeHackathonScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutCreditLedgerInput = {
    create?: XOR<UserCreateWithoutCreditLedgerInput, UserUncheckedCreateWithoutCreditLedgerInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreditLedgerInput
    connect?: UserWhereUniqueInput
  }

  export type SubmissionCreateNestedOneWithoutCreditLedgerInput = {
    create?: XOR<SubmissionCreateWithoutCreditLedgerInput, SubmissionUncheckedCreateWithoutCreditLedgerInput>
    connectOrCreate?: SubmissionCreateOrConnectWithoutCreditLedgerInput
    connect?: SubmissionWhereUniqueInput
  }

  export type GrantApplicationCreateNestedOneWithoutCreditLedgerInput = {
    create?: XOR<GrantApplicationCreateWithoutCreditLedgerInput, GrantApplicationUncheckedCreateWithoutCreditLedgerInput>
    connectOrCreate?: GrantApplicationCreateOrConnectWithoutCreditLedgerInput
    connect?: GrantApplicationWhereUniqueInput
  }

  export type EnumCreditEventTypeFieldUpdateOperationsInput = {
    set?: $Enums.CreditEventType
  }

  export type UserUpdateOneRequiredWithoutCreditLedgerNestedInput = {
    create?: XOR<UserCreateWithoutCreditLedgerInput, UserUncheckedCreateWithoutCreditLedgerInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreditLedgerInput
    upsert?: UserUpsertWithoutCreditLedgerInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCreditLedgerInput, UserUpdateWithoutCreditLedgerInput>, UserUncheckedUpdateWithoutCreditLedgerInput>
  }

  export type SubmissionUpdateOneWithoutCreditLedgerNestedInput = {
    create?: XOR<SubmissionCreateWithoutCreditLedgerInput, SubmissionUncheckedCreateWithoutCreditLedgerInput>
    connectOrCreate?: SubmissionCreateOrConnectWithoutCreditLedgerInput
    upsert?: SubmissionUpsertWithoutCreditLedgerInput
    disconnect?: SubmissionWhereInput | boolean
    delete?: SubmissionWhereInput | boolean
    connect?: SubmissionWhereUniqueInput
    update?: XOR<XOR<SubmissionUpdateToOneWithWhereWithoutCreditLedgerInput, SubmissionUpdateWithoutCreditLedgerInput>, SubmissionUncheckedUpdateWithoutCreditLedgerInput>
  }

  export type GrantApplicationUpdateOneWithoutCreditLedgerNestedInput = {
    create?: XOR<GrantApplicationCreateWithoutCreditLedgerInput, GrantApplicationUncheckedCreateWithoutCreditLedgerInput>
    connectOrCreate?: GrantApplicationCreateOrConnectWithoutCreditLedgerInput
    upsert?: GrantApplicationUpsertWithoutCreditLedgerInput
    disconnect?: GrantApplicationWhereInput | boolean
    delete?: GrantApplicationWhereInput | boolean
    connect?: GrantApplicationWhereUniqueInput
    update?: XOR<XOR<GrantApplicationUpdateToOneWithWhereWithoutCreditLedgerInput, GrantApplicationUpdateWithoutCreditLedgerInput>, GrantApplicationUncheckedUpdateWithoutCreditLedgerInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedEnumstatusFilter<$PrismaModel = never> = {
    equals?: $Enums.status | EnumstatusFieldRefInput<$PrismaModel>
    in?: $Enums.status[]
    notIn?: $Enums.status[]
    not?: NestedEnumstatusFilter<$PrismaModel> | $Enums.status
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedEnumSourceFilter<$PrismaModel = never> = {
    equals?: $Enums.Source | EnumSourceFieldRefInput<$PrismaModel>
    in?: $Enums.Source[]
    notIn?: $Enums.Source[]
    not?: NestedEnumSourceFilter<$PrismaModel> | $Enums.Source
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedEnumBountyTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.BountyType | EnumBountyTypeFieldRefInput<$PrismaModel>
    in?: $Enums.BountyType[]
    notIn?: $Enums.BountyType[]
    not?: NestedEnumBountyTypeFilter<$PrismaModel> | $Enums.BountyType
  }

  export type NestedEnumApplicationTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.ApplicationType | EnumApplicationTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ApplicationType[]
    notIn?: $Enums.ApplicationType[]
    not?: NestedEnumApplicationTypeFilter<$PrismaModel> | $Enums.ApplicationType
  }

  export type NestedEnumCompensationTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.CompensationType | EnumCompensationTypeFieldRefInput<$PrismaModel>
    in?: $Enums.CompensationType[]
    notIn?: $Enums.CompensationType[]
    not?: NestedEnumCompensationTypeFilter<$PrismaModel> | $Enums.CompensationType
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedEnumstatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.status | EnumstatusFieldRefInput<$PrismaModel>
    in?: $Enums.status[]
    notIn?: $Enums.status[]
    not?: NestedEnumstatusWithAggregatesFilter<$PrismaModel> | $Enums.status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumstatusFilter<$PrismaModel>
    _max?: NestedEnumstatusFilter<$PrismaModel>
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedEnumSourceWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Source | EnumSourceFieldRefInput<$PrismaModel>
    in?: $Enums.Source[]
    notIn?: $Enums.Source[]
    not?: NestedEnumSourceWithAggregatesFilter<$PrismaModel> | $Enums.Source
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSourceFilter<$PrismaModel>
    _max?: NestedEnumSourceFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedEnumBountyTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.BountyType | EnumBountyTypeFieldRefInput<$PrismaModel>
    in?: $Enums.BountyType[]
    notIn?: $Enums.BountyType[]
    not?: NestedEnumBountyTypeWithAggregatesFilter<$PrismaModel> | $Enums.BountyType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumBountyTypeFilter<$PrismaModel>
    _max?: NestedEnumBountyTypeFilter<$PrismaModel>
  }

  export type NestedEnumApplicationTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ApplicationType | EnumApplicationTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ApplicationType[]
    notIn?: $Enums.ApplicationType[]
    not?: NestedEnumApplicationTypeWithAggregatesFilter<$PrismaModel> | $Enums.ApplicationType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumApplicationTypeFilter<$PrismaModel>
    _max?: NestedEnumApplicationTypeFilter<$PrismaModel>
  }

  export type NestedEnumCompensationTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CompensationType | EnumCompensationTypeFieldRefInput<$PrismaModel>
    in?: $Enums.CompensationType[]
    notIn?: $Enums.CompensationType[]
    not?: NestedEnumCompensationTypeWithAggregatesFilter<$PrismaModel> | $Enums.CompensationType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCompensationTypeFilter<$PrismaModel>
    _max?: NestedEnumCompensationTypeFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedEnumCommentRefTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.CommentRefType | EnumCommentRefTypeFieldRefInput<$PrismaModel>
    in?: $Enums.CommentRefType[]
    notIn?: $Enums.CommentRefType[]
    not?: NestedEnumCommentRefTypeFilter<$PrismaModel> | $Enums.CommentRefType
  }

  export type NestedEnumCommentTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.CommentType | EnumCommentTypeFieldRefInput<$PrismaModel>
    in?: $Enums.CommentType[]
    notIn?: $Enums.CommentType[]
    not?: NestedEnumCommentTypeFilter<$PrismaModel> | $Enums.CommentType
  }

  export type NestedEnumCommentRefTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CommentRefType | EnumCommentRefTypeFieldRefInput<$PrismaModel>
    in?: $Enums.CommentRefType[]
    notIn?: $Enums.CommentRefType[]
    not?: NestedEnumCommentRefTypeWithAggregatesFilter<$PrismaModel> | $Enums.CommentRefType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCommentRefTypeFilter<$PrismaModel>
    _max?: NestedEnumCommentRefTypeFilter<$PrismaModel>
  }

  export type NestedEnumCommentTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CommentType | EnumCommentTypeFieldRefInput<$PrismaModel>
    in?: $Enums.CommentType[]
    notIn?: $Enums.CommentType[]
    not?: NestedEnumCommentTypeWithAggregatesFilter<$PrismaModel> | $Enums.CommentType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCommentTypeFilter<$PrismaModel>
    _max?: NestedEnumCommentTypeFilter<$PrismaModel>
  }

  export type NestedEnumGrantStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.GrantStatus | EnumGrantStatusFieldRefInput<$PrismaModel>
    in?: $Enums.GrantStatus[]
    notIn?: $Enums.GrantStatus[]
    not?: NestedEnumGrantStatusFilter<$PrismaModel> | $Enums.GrantStatus
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedEnumGrantStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.GrantStatus | EnumGrantStatusFieldRefInput<$PrismaModel>
    in?: $Enums.GrantStatus[]
    notIn?: $Enums.GrantStatus[]
    not?: NestedEnumGrantStatusWithAggregatesFilter<$PrismaModel> | $Enums.GrantStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumGrantStatusFilter<$PrismaModel>
    _max?: NestedEnumGrantStatusFilter<$PrismaModel>
  }

  export type NestedEnumGrantApplicationStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.GrantApplicationStatus | EnumGrantApplicationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.GrantApplicationStatus[]
    notIn?: $Enums.GrantApplicationStatus[]
    not?: NestedEnumGrantApplicationStatusFilter<$PrismaModel> | $Enums.GrantApplicationStatus
  }

  export type NestedEnumSubmissionLabelsFilter<$PrismaModel = never> = {
    equals?: $Enums.SubmissionLabels | EnumSubmissionLabelsFieldRefInput<$PrismaModel>
    in?: $Enums.SubmissionLabels[]
    notIn?: $Enums.SubmissionLabels[]
    not?: NestedEnumSubmissionLabelsFilter<$PrismaModel> | $Enums.SubmissionLabels
  }

  export type NestedEnumGrantApplicationStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.GrantApplicationStatus | EnumGrantApplicationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.GrantApplicationStatus[]
    notIn?: $Enums.GrantApplicationStatus[]
    not?: NestedEnumGrantApplicationStatusWithAggregatesFilter<$PrismaModel> | $Enums.GrantApplicationStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumGrantApplicationStatusFilter<$PrismaModel>
    _max?: NestedEnumGrantApplicationStatusFilter<$PrismaModel>
  }

  export type NestedEnumSubmissionLabelsWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SubmissionLabels | EnumSubmissionLabelsFieldRefInput<$PrismaModel>
    in?: $Enums.SubmissionLabels[]
    notIn?: $Enums.SubmissionLabels[]
    not?: NestedEnumSubmissionLabelsWithAggregatesFilter<$PrismaModel> | $Enums.SubmissionLabels
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSubmissionLabelsFilter<$PrismaModel>
    _max?: NestedEnumSubmissionLabelsFilter<$PrismaModel>
  }

  export type NestedEnumGrantTrancheStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.GrantTrancheStatus | EnumGrantTrancheStatusFieldRefInput<$PrismaModel>
    in?: $Enums.GrantTrancheStatus[]
    notIn?: $Enums.GrantTrancheStatus[]
    not?: NestedEnumGrantTrancheStatusFilter<$PrismaModel> | $Enums.GrantTrancheStatus
  }

  export type NestedEnumGrantTrancheStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.GrantTrancheStatus | EnumGrantTrancheStatusFieldRefInput<$PrismaModel>
    in?: $Enums.GrantTrancheStatus[]
    notIn?: $Enums.GrantTrancheStatus[]
    not?: NestedEnumGrantTrancheStatusWithAggregatesFilter<$PrismaModel> | $Enums.GrantTrancheStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumGrantTrancheStatusFilter<$PrismaModel>
    _max?: NestedEnumGrantTrancheStatusFilter<$PrismaModel>
  }

  export type NestedEnumSubmissionStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.SubmissionStatus | EnumSubmissionStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SubmissionStatus[]
    notIn?: $Enums.SubmissionStatus[]
    not?: NestedEnumSubmissionStatusFilter<$PrismaModel> | $Enums.SubmissionStatus
  }

  export type NestedEnumSubmissionStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SubmissionStatus | EnumSubmissionStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SubmissionStatus[]
    notIn?: $Enums.SubmissionStatus[]
    not?: NestedEnumSubmissionStatusWithAggregatesFilter<$PrismaModel> | $Enums.SubmissionStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSubmissionStatusFilter<$PrismaModel>
    _max?: NestedEnumSubmissionStatusFilter<$PrismaModel>
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }
  export type NestedJsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedEnumTalentRankingSkillsFilter<$PrismaModel = never> = {
    equals?: $Enums.TalentRankingSkills | EnumTalentRankingSkillsFieldRefInput<$PrismaModel>
    in?: $Enums.TalentRankingSkills[]
    notIn?: $Enums.TalentRankingSkills[]
    not?: NestedEnumTalentRankingSkillsFilter<$PrismaModel> | $Enums.TalentRankingSkills
  }

  export type NestedEnumTalentRankingTimeframeFilter<$PrismaModel = never> = {
    equals?: $Enums.TalentRankingTimeframe | EnumTalentRankingTimeframeFieldRefInput<$PrismaModel>
    in?: $Enums.TalentRankingTimeframe[]
    notIn?: $Enums.TalentRankingTimeframe[]
    not?: NestedEnumTalentRankingTimeframeFilter<$PrismaModel> | $Enums.TalentRankingTimeframe
  }

  export type NestedEnumTalentRankingSkillsWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TalentRankingSkills | EnumTalentRankingSkillsFieldRefInput<$PrismaModel>
    in?: $Enums.TalentRankingSkills[]
    notIn?: $Enums.TalentRankingSkills[]
    not?: NestedEnumTalentRankingSkillsWithAggregatesFilter<$PrismaModel> | $Enums.TalentRankingSkills
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTalentRankingSkillsFilter<$PrismaModel>
    _max?: NestedEnumTalentRankingSkillsFilter<$PrismaModel>
  }

  export type NestedEnumTalentRankingTimeframeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TalentRankingTimeframe | EnumTalentRankingTimeframeFieldRefInput<$PrismaModel>
    in?: $Enums.TalentRankingTimeframe[]
    notIn?: $Enums.TalentRankingTimeframe[]
    not?: NestedEnumTalentRankingTimeframeWithAggregatesFilter<$PrismaModel> | $Enums.TalentRankingTimeframe
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTalentRankingTimeframeFilter<$PrismaModel>
    _max?: NestedEnumTalentRankingTimeframeFilter<$PrismaModel>
  }

  export type NestedEnumRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.Role | EnumRoleFieldRefInput<$PrismaModel>
    in?: $Enums.Role[]
    notIn?: $Enums.Role[]
    not?: NestedEnumRoleFilter<$PrismaModel> | $Enums.Role
  }

  export type NestedEnumRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Role | EnumRoleFieldRefInput<$PrismaModel>
    in?: $Enums.Role[]
    notIn?: $Enums.Role[]
    not?: NestedEnumRoleWithAggregatesFilter<$PrismaModel> | $Enums.Role
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRoleFilter<$PrismaModel>
    _max?: NestedEnumRoleFilter<$PrismaModel>
  }

  export type NestedEnumEmailTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.EmailType | EnumEmailTypeFieldRefInput<$PrismaModel>
    in?: $Enums.EmailType[]
    notIn?: $Enums.EmailType[]
    not?: NestedEnumEmailTypeFilter<$PrismaModel> | $Enums.EmailType
  }

  export type NestedEnumEmailTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EmailType | EnumEmailTypeFieldRefInput<$PrismaModel>
    in?: $Enums.EmailType[]
    notIn?: $Enums.EmailType[]
    not?: NestedEnumEmailTypeWithAggregatesFilter<$PrismaModel> | $Enums.EmailType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEmailTypeFilter<$PrismaModel>
    _max?: NestedEnumEmailTypeFilter<$PrismaModel>
  }

  export type NestedEnumCreditEventTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.CreditEventType | EnumCreditEventTypeFieldRefInput<$PrismaModel>
    in?: $Enums.CreditEventType[]
    notIn?: $Enums.CreditEventType[]
    not?: NestedEnumCreditEventTypeFilter<$PrismaModel> | $Enums.CreditEventType
  }

  export type NestedEnumCreditEventTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CreditEventType | EnumCreditEventTypeFieldRefInput<$PrismaModel>
    in?: $Enums.CreditEventType[]
    notIn?: $Enums.CreditEventType[]
    not?: NestedEnumCreditEventTypeWithAggregatesFilter<$PrismaModel> | $Enums.CreditEventType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCreditEventTypeFilter<$PrismaModel>
    _max?: NestedEnumCreditEventTypeFilter<$PrismaModel>
  }

  export type BountiesTemplatesCreateWithoutBountiesInput = {
    id?: string
    title?: string | null
    deadline?: Date | string | null
    slug?: string | null
    description?: string | null
    color?: string | null
    emoji?: string | null
    isFeatured?: boolean
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: $Enums.BountyType
    requirements?: string | null
    region?: string
    applicationType?: $Enums.ApplicationType
    status?: $Enums.status
    timeToComplete?: string | null
    token?: string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: string | null
    publishedAt?: Date | string | null
    compensationType?: $Enums.CompensationType
    maxRewardAsk?: number | null
    minRewardAsk?: number | null
    language?: string | null
    rewardAmount?: number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: number
    usdValue?: number | null
    pocSocials?: string | null
    source?: $Enums.Source
    isPublished?: boolean
    sponsor: SponsorsCreateNestedOneWithoutTemplatesInput
    poc: UserCreateNestedOneWithoutTemplatesInput
  }

  export type BountiesTemplatesUncheckedCreateWithoutBountiesInput = {
    id?: string
    title?: string | null
    deadline?: Date | string | null
    slug?: string | null
    description?: string | null
    color?: string | null
    emoji?: string | null
    isFeatured?: boolean
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: $Enums.BountyType
    requirements?: string | null
    region?: string
    applicationType?: $Enums.ApplicationType
    status?: $Enums.status
    timeToComplete?: string | null
    token?: string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: string | null
    publishedAt?: Date | string | null
    compensationType?: $Enums.CompensationType
    maxRewardAsk?: number | null
    minRewardAsk?: number | null
    language?: string | null
    rewardAmount?: number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: number
    usdValue?: number | null
    sponsorId: string
    pocId: string
    pocSocials?: string | null
    source?: $Enums.Source
    isPublished?: boolean
  }

  export type BountiesTemplatesCreateOrConnectWithoutBountiesInput = {
    where: BountiesTemplatesWhereUniqueInput
    create: XOR<BountiesTemplatesCreateWithoutBountiesInput, BountiesTemplatesUncheckedCreateWithoutBountiesInput>
  }

  export type SponsorsCreateWithoutBountiesInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    url?: string | null
    industry: string
    twitter?: string | null
    bio?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    isActive?: boolean
    entityName?: string | null
    isVerified?: boolean
    isCaution?: boolean
    st?: boolean
    verificationInfo?: NullableJsonNullValueInput | InputJsonValue
    Hackathon?: HackathonCreateNestedOneWithoutSponsorInput
    UserSponsors?: UserSponsorsCreateNestedManyWithoutSponsorInput
    Templates?: BountiesTemplatesCreateNestedManyWithoutSponsorInput
    Grants?: GrantsCreateNestedManyWithoutSponsorInput
    User?: UserCreateNestedManyWithoutCurrentSponsorInput
    UserInvites?: UserInvitesCreateNestedManyWithoutSponsorInput
  }

  export type SponsorsUncheckedCreateWithoutBountiesInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    url?: string | null
    industry: string
    twitter?: string | null
    bio?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    isActive?: boolean
    entityName?: string | null
    isVerified?: boolean
    isCaution?: boolean
    st?: boolean
    verificationInfo?: NullableJsonNullValueInput | InputJsonValue
    Hackathon?: HackathonUncheckedCreateNestedOneWithoutSponsorInput
    UserSponsors?: UserSponsorsUncheckedCreateNestedManyWithoutSponsorInput
    Templates?: BountiesTemplatesUncheckedCreateNestedManyWithoutSponsorInput
    Grants?: GrantsUncheckedCreateNestedManyWithoutSponsorInput
    User?: UserUncheckedCreateNestedManyWithoutCurrentSponsorInput
    UserInvites?: UserInvitesUncheckedCreateNestedManyWithoutSponsorInput
  }

  export type SponsorsCreateOrConnectWithoutBountiesInput = {
    where: SponsorsWhereUniqueInput
    create: XOR<SponsorsCreateWithoutBountiesInput, SponsorsUncheckedCreateWithoutBountiesInput>
  }

  export type UserCreateWithoutPocInput = {
    id?: string
    publicKey?: string | null
    walletAddress?: string | null
    email: string
    username?: string | null
    photo?: string | null
    firstName?: string | null
    lastName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    role?: string
    isTalentFilled?: boolean
    interests?: string | null
    bio?: string | null
    twitter?: string | null
    discord?: string | null
    github?: string | null
    linkedin?: string | null
    website?: string | null
    telegram?: string | null
    community?: string | null
    experience?: string | null
    superteamLevel?: string | null
    location?: string | null
    cryptoExperience?: string | null
    workPrefernce?: string | null
    currentEmployer?: string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    emailVerified?: Date | string | null
    featureModalShown?: boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: boolean
    acceptedTOS?: boolean
    stLead?: string | null
    isBlocked?: boolean
    privyDid: string
    isKYCVerified?: boolean
    kycName?: string | null
    kycCountry?: string | null
    kycAddress?: string | null
    kycDOB?: string | null
    kycIDNumber?: string | null
    kycIDType?: string | null
    currentSponsor?: SponsorsCreateNestedOneWithoutUserInput
    UserSponsors?: UserSponsorsCreateNestedManyWithoutUserInput
    templates?: BountiesTemplatesCreateNestedManyWithoutPocInput
    Comment?: CommentCreateNestedManyWithoutAuthorInput
    Submission?: SubmissionCreateNestedManyWithoutUserInput
    Grants?: GrantsCreateNestedManyWithoutPocInput
    UserInvites?: UserInvitesCreateNestedManyWithoutSenderInput
    SubscribeBounty?: SubscribeBountyCreateNestedManyWithoutUserInput
    PoW?: PoWCreateNestedManyWithoutUserInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    Hackathon?: HackathonCreateNestedOneWithoutUserInput
    emailSettings?: EmailSettingsCreateNestedManyWithoutUserInput
    TalentRankings?: TalentRankingsCreateNestedManyWithoutUserInput
    Scouts?: ScoutsCreateNestedManyWithoutUserInput
    GrantApplication?: GrantApplicationCreateNestedManyWithoutUserInput
    SubscribeHackathon?: SubscribeHackathonCreateNestedManyWithoutUserInput
    CreditLedger?: CreditLedgerCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutPocInput = {
    id?: string
    publicKey?: string | null
    walletAddress?: string | null
    email: string
    username?: string | null
    photo?: string | null
    firstName?: string | null
    lastName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    role?: string
    isTalentFilled?: boolean
    interests?: string | null
    bio?: string | null
    twitter?: string | null
    discord?: string | null
    github?: string | null
    linkedin?: string | null
    website?: string | null
    telegram?: string | null
    community?: string | null
    experience?: string | null
    superteamLevel?: string | null
    location?: string | null
    cryptoExperience?: string | null
    workPrefernce?: string | null
    currentEmployer?: string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    currentSponsorId?: string | null
    emailVerified?: Date | string | null
    hackathonId?: string | null
    featureModalShown?: boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: boolean
    acceptedTOS?: boolean
    stLead?: string | null
    isBlocked?: boolean
    privyDid: string
    isKYCVerified?: boolean
    kycName?: string | null
    kycCountry?: string | null
    kycAddress?: string | null
    kycDOB?: string | null
    kycIDNumber?: string | null
    kycIDType?: string | null
    UserSponsors?: UserSponsorsUncheckedCreateNestedManyWithoutUserInput
    templates?: BountiesTemplatesUncheckedCreateNestedManyWithoutPocInput
    Comment?: CommentUncheckedCreateNestedManyWithoutAuthorInput
    Submission?: SubmissionUncheckedCreateNestedManyWithoutUserInput
    Grants?: GrantsUncheckedCreateNestedManyWithoutPocInput
    UserInvites?: UserInvitesUncheckedCreateNestedManyWithoutSenderInput
    SubscribeBounty?: SubscribeBountyUncheckedCreateNestedManyWithoutUserInput
    PoW?: PoWUncheckedCreateNestedManyWithoutUserInput
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    emailSettings?: EmailSettingsUncheckedCreateNestedManyWithoutUserInput
    TalentRankings?: TalentRankingsUncheckedCreateNestedManyWithoutUserInput
    Scouts?: ScoutsUncheckedCreateNestedManyWithoutUserInput
    GrantApplication?: GrantApplicationUncheckedCreateNestedManyWithoutUserInput
    SubscribeHackathon?: SubscribeHackathonUncheckedCreateNestedManyWithoutUserInput
    CreditLedger?: CreditLedgerUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutPocInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutPocInput, UserUncheckedCreateWithoutPocInput>
  }

  export type SubmissionCreateWithoutListingInput = {
    id?: string
    link?: string | null
    tweet?: string | null
    status?: $Enums.SubmissionStatus
    eligibilityAnswers?: NullableJsonNullValueInput | InputJsonValue
    isWinner?: boolean
    winnerPosition?: number | null
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: number
    isPaid?: boolean
    paymentDetails?: NullableJsonNullValueInput | InputJsonValue
    otherInfo?: string | null
    ask?: number | null
    label?: $Enums.SubmissionLabels
    rewardInUSD?: number
    ogImage?: string | null
    notes?: string | null
    user: UserCreateNestedOneWithoutSubmissionInput
    Comments?: CommentCreateNestedManyWithoutSubmissionInput
    CreditLedger?: CreditLedgerCreateNestedManyWithoutSubmissionInput
  }

  export type SubmissionUncheckedCreateWithoutListingInput = {
    id?: string
    link?: string | null
    tweet?: string | null
    status?: $Enums.SubmissionStatus
    eligibilityAnswers?: NullableJsonNullValueInput | InputJsonValue
    userId: string
    isWinner?: boolean
    winnerPosition?: number | null
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: number
    isPaid?: boolean
    paymentDetails?: NullableJsonNullValueInput | InputJsonValue
    otherInfo?: string | null
    ask?: number | null
    label?: $Enums.SubmissionLabels
    rewardInUSD?: number
    ogImage?: string | null
    notes?: string | null
    Comments?: CommentUncheckedCreateNestedManyWithoutSubmissionInput
    CreditLedger?: CreditLedgerUncheckedCreateNestedManyWithoutSubmissionInput
  }

  export type SubmissionCreateOrConnectWithoutListingInput = {
    where: SubmissionWhereUniqueInput
    create: XOR<SubmissionCreateWithoutListingInput, SubmissionUncheckedCreateWithoutListingInput>
  }

  export type SubmissionCreateManyListingInputEnvelope = {
    data: SubmissionCreateManyListingInput | SubmissionCreateManyListingInput[]
    skipDuplicates?: boolean
  }

  export type SubscribeBountyCreateWithoutBountiesInput = {
    id?: string
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    User: UserCreateNestedOneWithoutSubscribeBountyInput
  }

  export type SubscribeBountyUncheckedCreateWithoutBountiesInput = {
    id?: string
    userId: string
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SubscribeBountyCreateOrConnectWithoutBountiesInput = {
    where: SubscribeBountyWhereUniqueInput
    create: XOR<SubscribeBountyCreateWithoutBountiesInput, SubscribeBountyUncheckedCreateWithoutBountiesInput>
  }

  export type SubscribeBountyCreateManyBountiesInputEnvelope = {
    data: SubscribeBountyCreateManyBountiesInput | SubscribeBountyCreateManyBountiesInput[]
    skipDuplicates?: boolean
  }

  export type HackathonCreateWithoutListingsInput = {
    id?: string
    slug: string
    name: string
    logo: string
    deadline?: Date | string | null
    startDate?: Date | string | null
    description: string
    altLogo?: string | null
    announceDate?: Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    Sponsor?: SponsorsCreateNestedOneWithoutHackathonInput
    User?: UserCreateNestedManyWithoutHackathonInput
    SubscribeHackathon?: SubscribeHackathonCreateNestedManyWithoutHackthonsInput
  }

  export type HackathonUncheckedCreateWithoutListingsInput = {
    id?: string
    slug: string
    name: string
    logo: string
    sponsorId?: string | null
    deadline?: Date | string | null
    startDate?: Date | string | null
    description: string
    altLogo?: string | null
    announceDate?: Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    User?: UserUncheckedCreateNestedManyWithoutHackathonInput
    SubscribeHackathon?: SubscribeHackathonUncheckedCreateNestedManyWithoutHackthonsInput
  }

  export type HackathonCreateOrConnectWithoutListingsInput = {
    where: HackathonWhereUniqueInput
    create: XOR<HackathonCreateWithoutListingsInput, HackathonUncheckedCreateWithoutListingsInput>
  }

  export type ScoutsCreateWithoutListingInput = {
    id?: string
    dollarsEarned: number
    score: Decimal | DecimalJsLike | number | string
    invited: boolean
    skills: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    user: UserCreateNestedOneWithoutScoutsInput
  }

  export type ScoutsUncheckedCreateWithoutListingInput = {
    id?: string
    userId: string
    dollarsEarned: number
    score: Decimal | DecimalJsLike | number | string
    invited: boolean
    skills: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
  }

  export type ScoutsCreateOrConnectWithoutListingInput = {
    where: ScoutsWhereUniqueInput
    create: XOR<ScoutsCreateWithoutListingInput, ScoutsUncheckedCreateWithoutListingInput>
  }

  export type ScoutsCreateManyListingInputEnvelope = {
    data: ScoutsCreateManyListingInput | ScoutsCreateManyListingInput[]
    skipDuplicates?: boolean
  }

  export type CommentCreateWithoutListingInput = {
    id?: string
    message: string
    refType?: $Enums.CommentRefType
    isActive?: boolean
    isArchived?: boolean
    isPinned?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    submissionId?: string | null
    type?: $Enums.CommentType
    author: UserCreateNestedOneWithoutCommentInput
    repliedTo?: CommentCreateNestedOneWithoutRepliesInput
    replies?: CommentCreateNestedManyWithoutRepliedToInput
    submission?: SubmissionCreateNestedOneWithoutCommentsInput
    pow?: PoWCreateNestedOneWithoutCommentsInput
    GrantApplication?: GrantApplicationCreateNestedOneWithoutCommentsInput
  }

  export type CommentUncheckedCreateWithoutListingInput = {
    id?: string
    message: string
    authorId: string
    refType?: $Enums.CommentRefType
    isActive?: boolean
    isArchived?: boolean
    isPinned?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    replyToId?: string | null
    submissionId?: string | null
    type?: $Enums.CommentType
    replies?: CommentUncheckedCreateNestedManyWithoutRepliedToInput
  }

  export type CommentCreateOrConnectWithoutListingInput = {
    where: CommentWhereUniqueInput
    create: XOR<CommentCreateWithoutListingInput, CommentUncheckedCreateWithoutListingInput>
  }

  export type CommentCreateManyListingInputEnvelope = {
    data: CommentCreateManyListingInput | CommentCreateManyListingInput[]
    skipDuplicates?: boolean
  }

  export type BountiesTemplatesUpsertWithoutBountiesInput = {
    update: XOR<BountiesTemplatesUpdateWithoutBountiesInput, BountiesTemplatesUncheckedUpdateWithoutBountiesInput>
    create: XOR<BountiesTemplatesCreateWithoutBountiesInput, BountiesTemplatesUncheckedCreateWithoutBountiesInput>
    where?: BountiesTemplatesWhereInput
  }

  export type BountiesTemplatesUpdateToOneWithWhereWithoutBountiesInput = {
    where?: BountiesTemplatesWhereInput
    data: XOR<BountiesTemplatesUpdateWithoutBountiesInput, BountiesTemplatesUncheckedUpdateWithoutBountiesInput>
  }

  export type BountiesTemplatesUpdateWithoutBountiesInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    emoji?: NullableStringFieldUpdateOperationsInput | string | null
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: EnumBountyTypeFieldUpdateOperationsInput | $Enums.BountyType
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    region?: StringFieldUpdateOperationsInput | string
    applicationType?: EnumApplicationTypeFieldUpdateOperationsInput | $Enums.ApplicationType
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    timeToComplete?: NullableStringFieldUpdateOperationsInput | string | null
    token?: NullableStringFieldUpdateOperationsInput | string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    compensationType?: EnumCompensationTypeFieldUpdateOperationsInput | $Enums.CompensationType
    maxRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    minRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    rewardAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: IntFieldUpdateOperationsInput | number
    usdValue?: NullableFloatFieldUpdateOperationsInput | number | null
    pocSocials?: NullableStringFieldUpdateOperationsInput | string | null
    source?: EnumSourceFieldUpdateOperationsInput | $Enums.Source
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    sponsor?: SponsorsUpdateOneRequiredWithoutTemplatesNestedInput
    poc?: UserUpdateOneRequiredWithoutTemplatesNestedInput
  }

  export type BountiesTemplatesUncheckedUpdateWithoutBountiesInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    emoji?: NullableStringFieldUpdateOperationsInput | string | null
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: EnumBountyTypeFieldUpdateOperationsInput | $Enums.BountyType
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    region?: StringFieldUpdateOperationsInput | string
    applicationType?: EnumApplicationTypeFieldUpdateOperationsInput | $Enums.ApplicationType
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    timeToComplete?: NullableStringFieldUpdateOperationsInput | string | null
    token?: NullableStringFieldUpdateOperationsInput | string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    compensationType?: EnumCompensationTypeFieldUpdateOperationsInput | $Enums.CompensationType
    maxRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    minRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    rewardAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: IntFieldUpdateOperationsInput | number
    usdValue?: NullableFloatFieldUpdateOperationsInput | number | null
    sponsorId?: StringFieldUpdateOperationsInput | string
    pocId?: StringFieldUpdateOperationsInput | string
    pocSocials?: NullableStringFieldUpdateOperationsInput | string | null
    source?: EnumSourceFieldUpdateOperationsInput | $Enums.Source
    isPublished?: BoolFieldUpdateOperationsInput | boolean
  }

  export type SponsorsUpsertWithoutBountiesInput = {
    update: XOR<SponsorsUpdateWithoutBountiesInput, SponsorsUncheckedUpdateWithoutBountiesInput>
    create: XOR<SponsorsCreateWithoutBountiesInput, SponsorsUncheckedCreateWithoutBountiesInput>
    where?: SponsorsWhereInput
  }

  export type SponsorsUpdateToOneWithWhereWithoutBountiesInput = {
    where?: SponsorsWhereInput
    data: XOR<SponsorsUpdateWithoutBountiesInput, SponsorsUncheckedUpdateWithoutBountiesInput>
  }

  export type SponsorsUpdateWithoutBountiesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    industry?: StringFieldUpdateOperationsInput | string
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCaution?: BoolFieldUpdateOperationsInput | boolean
    st?: BoolFieldUpdateOperationsInput | boolean
    verificationInfo?: NullableJsonNullValueInput | InputJsonValue
    Hackathon?: HackathonUpdateOneWithoutSponsorNestedInput
    UserSponsors?: UserSponsorsUpdateManyWithoutSponsorNestedInput
    Templates?: BountiesTemplatesUpdateManyWithoutSponsorNestedInput
    Grants?: GrantsUpdateManyWithoutSponsorNestedInput
    User?: UserUpdateManyWithoutCurrentSponsorNestedInput
    UserInvites?: UserInvitesUpdateManyWithoutSponsorNestedInput
  }

  export type SponsorsUncheckedUpdateWithoutBountiesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    industry?: StringFieldUpdateOperationsInput | string
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCaution?: BoolFieldUpdateOperationsInput | boolean
    st?: BoolFieldUpdateOperationsInput | boolean
    verificationInfo?: NullableJsonNullValueInput | InputJsonValue
    Hackathon?: HackathonUncheckedUpdateOneWithoutSponsorNestedInput
    UserSponsors?: UserSponsorsUncheckedUpdateManyWithoutSponsorNestedInput
    Templates?: BountiesTemplatesUncheckedUpdateManyWithoutSponsorNestedInput
    Grants?: GrantsUncheckedUpdateManyWithoutSponsorNestedInput
    User?: UserUncheckedUpdateManyWithoutCurrentSponsorNestedInput
    UserInvites?: UserInvitesUncheckedUpdateManyWithoutSponsorNestedInput
  }

  export type UserUpsertWithoutPocInput = {
    update: XOR<UserUpdateWithoutPocInput, UserUncheckedUpdateWithoutPocInput>
    create: XOR<UserCreateWithoutPocInput, UserUncheckedCreateWithoutPocInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutPocInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutPocInput, UserUncheckedUpdateWithoutPocInput>
  }

  export type UserUpdateWithoutPocInput = {
    id?: StringFieldUpdateOperationsInput | string
    publicKey?: NullableStringFieldUpdateOperationsInput | string | null
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    isTalentFilled?: BoolFieldUpdateOperationsInput | boolean
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    discord?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    community?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    superteamLevel?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    cryptoExperience?: NullableStringFieldUpdateOperationsInput | string | null
    workPrefernce?: NullableStringFieldUpdateOperationsInput | string | null
    currentEmployer?: NullableStringFieldUpdateOperationsInput | string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: BoolFieldUpdateOperationsInput | boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    featureModalShown?: BoolFieldUpdateOperationsInput | boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: BoolFieldUpdateOperationsInput | boolean
    acceptedTOS?: BoolFieldUpdateOperationsInput | boolean
    stLead?: NullableStringFieldUpdateOperationsInput | string | null
    isBlocked?: BoolFieldUpdateOperationsInput | boolean
    privyDid?: StringFieldUpdateOperationsInput | string
    isKYCVerified?: BoolFieldUpdateOperationsInput | boolean
    kycName?: NullableStringFieldUpdateOperationsInput | string | null
    kycCountry?: NullableStringFieldUpdateOperationsInput | string | null
    kycAddress?: NullableStringFieldUpdateOperationsInput | string | null
    kycDOB?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDNumber?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDType?: NullableStringFieldUpdateOperationsInput | string | null
    currentSponsor?: SponsorsUpdateOneWithoutUserNestedInput
    UserSponsors?: UserSponsorsUpdateManyWithoutUserNestedInput
    templates?: BountiesTemplatesUpdateManyWithoutPocNestedInput
    Comment?: CommentUpdateManyWithoutAuthorNestedInput
    Submission?: SubmissionUpdateManyWithoutUserNestedInput
    Grants?: GrantsUpdateManyWithoutPocNestedInput
    UserInvites?: UserInvitesUpdateManyWithoutSenderNestedInput
    SubscribeBounty?: SubscribeBountyUpdateManyWithoutUserNestedInput
    PoW?: PoWUpdateManyWithoutUserNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    Hackathon?: HackathonUpdateOneWithoutUserNestedInput
    emailSettings?: EmailSettingsUpdateManyWithoutUserNestedInput
    TalentRankings?: TalentRankingsUpdateManyWithoutUserNestedInput
    Scouts?: ScoutsUpdateManyWithoutUserNestedInput
    GrantApplication?: GrantApplicationUpdateManyWithoutUserNestedInput
    SubscribeHackathon?: SubscribeHackathonUpdateManyWithoutUserNestedInput
    CreditLedger?: CreditLedgerUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutPocInput = {
    id?: StringFieldUpdateOperationsInput | string
    publicKey?: NullableStringFieldUpdateOperationsInput | string | null
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    isTalentFilled?: BoolFieldUpdateOperationsInput | boolean
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    discord?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    community?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    superteamLevel?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    cryptoExperience?: NullableStringFieldUpdateOperationsInput | string | null
    workPrefernce?: NullableStringFieldUpdateOperationsInput | string | null
    currentEmployer?: NullableStringFieldUpdateOperationsInput | string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: BoolFieldUpdateOperationsInput | boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    currentSponsorId?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hackathonId?: NullableStringFieldUpdateOperationsInput | string | null
    featureModalShown?: BoolFieldUpdateOperationsInput | boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: BoolFieldUpdateOperationsInput | boolean
    acceptedTOS?: BoolFieldUpdateOperationsInput | boolean
    stLead?: NullableStringFieldUpdateOperationsInput | string | null
    isBlocked?: BoolFieldUpdateOperationsInput | boolean
    privyDid?: StringFieldUpdateOperationsInput | string
    isKYCVerified?: BoolFieldUpdateOperationsInput | boolean
    kycName?: NullableStringFieldUpdateOperationsInput | string | null
    kycCountry?: NullableStringFieldUpdateOperationsInput | string | null
    kycAddress?: NullableStringFieldUpdateOperationsInput | string | null
    kycDOB?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDNumber?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDType?: NullableStringFieldUpdateOperationsInput | string | null
    UserSponsors?: UserSponsorsUncheckedUpdateManyWithoutUserNestedInput
    templates?: BountiesTemplatesUncheckedUpdateManyWithoutPocNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutAuthorNestedInput
    Submission?: SubmissionUncheckedUpdateManyWithoutUserNestedInput
    Grants?: GrantsUncheckedUpdateManyWithoutPocNestedInput
    UserInvites?: UserInvitesUncheckedUpdateManyWithoutSenderNestedInput
    SubscribeBounty?: SubscribeBountyUncheckedUpdateManyWithoutUserNestedInput
    PoW?: PoWUncheckedUpdateManyWithoutUserNestedInput
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    emailSettings?: EmailSettingsUncheckedUpdateManyWithoutUserNestedInput
    TalentRankings?: TalentRankingsUncheckedUpdateManyWithoutUserNestedInput
    Scouts?: ScoutsUncheckedUpdateManyWithoutUserNestedInput
    GrantApplication?: GrantApplicationUncheckedUpdateManyWithoutUserNestedInput
    SubscribeHackathon?: SubscribeHackathonUncheckedUpdateManyWithoutUserNestedInput
    CreditLedger?: CreditLedgerUncheckedUpdateManyWithoutUserNestedInput
  }

  export type SubmissionUpsertWithWhereUniqueWithoutListingInput = {
    where: SubmissionWhereUniqueInput
    update: XOR<SubmissionUpdateWithoutListingInput, SubmissionUncheckedUpdateWithoutListingInput>
    create: XOR<SubmissionCreateWithoutListingInput, SubmissionUncheckedCreateWithoutListingInput>
  }

  export type SubmissionUpdateWithWhereUniqueWithoutListingInput = {
    where: SubmissionWhereUniqueInput
    data: XOR<SubmissionUpdateWithoutListingInput, SubmissionUncheckedUpdateWithoutListingInput>
  }

  export type SubmissionUpdateManyWithWhereWithoutListingInput = {
    where: SubmissionScalarWhereInput
    data: XOR<SubmissionUpdateManyMutationInput, SubmissionUncheckedUpdateManyWithoutListingInput>
  }

  export type SubmissionScalarWhereInput = {
    AND?: SubmissionScalarWhereInput | SubmissionScalarWhereInput[]
    OR?: SubmissionScalarWhereInput[]
    NOT?: SubmissionScalarWhereInput | SubmissionScalarWhereInput[]
    id?: StringFilter<"Submission"> | string
    link?: StringNullableFilter<"Submission"> | string | null
    tweet?: StringNullableFilter<"Submission"> | string | null
    status?: EnumSubmissionStatusFilter<"Submission"> | $Enums.SubmissionStatus
    eligibilityAnswers?: JsonNullableFilter<"Submission">
    userId?: StringFilter<"Submission"> | string
    listingId?: StringFilter<"Submission"> | string
    isWinner?: BoolFilter<"Submission"> | boolean
    winnerPosition?: IntNullableFilter<"Submission"> | number | null
    isActive?: BoolFilter<"Submission"> | boolean
    isArchived?: BoolFilter<"Submission"> | boolean
    createdAt?: DateTimeFilter<"Submission"> | Date | string
    updatedAt?: DateTimeFilter<"Submission"> | Date | string
    like?: JsonNullableFilter<"Submission">
    likeCount?: IntFilter<"Submission"> | number
    isPaid?: BoolFilter<"Submission"> | boolean
    paymentDetails?: JsonNullableFilter<"Submission">
    otherInfo?: StringNullableFilter<"Submission"> | string | null
    ask?: IntNullableFilter<"Submission"> | number | null
    label?: EnumSubmissionLabelsFilter<"Submission"> | $Enums.SubmissionLabels
    rewardInUSD?: FloatFilter<"Submission"> | number
    ogImage?: StringNullableFilter<"Submission"> | string | null
    notes?: StringNullableFilter<"Submission"> | string | null
  }

  export type SubscribeBountyUpsertWithWhereUniqueWithoutBountiesInput = {
    where: SubscribeBountyWhereUniqueInput
    update: XOR<SubscribeBountyUpdateWithoutBountiesInput, SubscribeBountyUncheckedUpdateWithoutBountiesInput>
    create: XOR<SubscribeBountyCreateWithoutBountiesInput, SubscribeBountyUncheckedCreateWithoutBountiesInput>
  }

  export type SubscribeBountyUpdateWithWhereUniqueWithoutBountiesInput = {
    where: SubscribeBountyWhereUniqueInput
    data: XOR<SubscribeBountyUpdateWithoutBountiesInput, SubscribeBountyUncheckedUpdateWithoutBountiesInput>
  }

  export type SubscribeBountyUpdateManyWithWhereWithoutBountiesInput = {
    where: SubscribeBountyScalarWhereInput
    data: XOR<SubscribeBountyUpdateManyMutationInput, SubscribeBountyUncheckedUpdateManyWithoutBountiesInput>
  }

  export type SubscribeBountyScalarWhereInput = {
    AND?: SubscribeBountyScalarWhereInput | SubscribeBountyScalarWhereInput[]
    OR?: SubscribeBountyScalarWhereInput[]
    NOT?: SubscribeBountyScalarWhereInput | SubscribeBountyScalarWhereInput[]
    id?: StringFilter<"SubscribeBounty"> | string
    userId?: StringFilter<"SubscribeBounty"> | string
    bountyId?: StringFilter<"SubscribeBounty"> | string
    isArchived?: BoolFilter<"SubscribeBounty"> | boolean
    createdAt?: DateTimeFilter<"SubscribeBounty"> | Date | string
    updatedAt?: DateTimeFilter<"SubscribeBounty"> | Date | string
  }

  export type HackathonUpsertWithoutListingsInput = {
    update: XOR<HackathonUpdateWithoutListingsInput, HackathonUncheckedUpdateWithoutListingsInput>
    create: XOR<HackathonCreateWithoutListingsInput, HackathonUncheckedCreateWithoutListingsInput>
    where?: HackathonWhereInput
  }

  export type HackathonUpdateToOneWithWhereWithoutListingsInput = {
    where?: HackathonWhereInput
    data: XOR<HackathonUpdateWithoutListingsInput, HackathonUncheckedUpdateWithoutListingsInput>
  }

  export type HackathonUpdateWithoutListingsInput = {
    id?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    logo?: StringFieldUpdateOperationsInput | string
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    altLogo?: NullableStringFieldUpdateOperationsInput | string | null
    announceDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    Sponsor?: SponsorsUpdateOneWithoutHackathonNestedInput
    User?: UserUpdateManyWithoutHackathonNestedInput
    SubscribeHackathon?: SubscribeHackathonUpdateManyWithoutHackthonsNestedInput
  }

  export type HackathonUncheckedUpdateWithoutListingsInput = {
    id?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    logo?: StringFieldUpdateOperationsInput | string
    sponsorId?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    altLogo?: NullableStringFieldUpdateOperationsInput | string | null
    announceDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    User?: UserUncheckedUpdateManyWithoutHackathonNestedInput
    SubscribeHackathon?: SubscribeHackathonUncheckedUpdateManyWithoutHackthonsNestedInput
  }

  export type ScoutsUpsertWithWhereUniqueWithoutListingInput = {
    where: ScoutsWhereUniqueInput
    update: XOR<ScoutsUpdateWithoutListingInput, ScoutsUncheckedUpdateWithoutListingInput>
    create: XOR<ScoutsCreateWithoutListingInput, ScoutsUncheckedCreateWithoutListingInput>
  }

  export type ScoutsUpdateWithWhereUniqueWithoutListingInput = {
    where: ScoutsWhereUniqueInput
    data: XOR<ScoutsUpdateWithoutListingInput, ScoutsUncheckedUpdateWithoutListingInput>
  }

  export type ScoutsUpdateManyWithWhereWithoutListingInput = {
    where: ScoutsScalarWhereInput
    data: XOR<ScoutsUpdateManyMutationInput, ScoutsUncheckedUpdateManyWithoutListingInput>
  }

  export type ScoutsScalarWhereInput = {
    AND?: ScoutsScalarWhereInput | ScoutsScalarWhereInput[]
    OR?: ScoutsScalarWhereInput[]
    NOT?: ScoutsScalarWhereInput | ScoutsScalarWhereInput[]
    id?: StringFilter<"Scouts"> | string
    userId?: StringFilter<"Scouts"> | string
    listingId?: StringFilter<"Scouts"> | string
    dollarsEarned?: IntFilter<"Scouts"> | number
    score?: DecimalFilter<"Scouts"> | Decimal | DecimalJsLike | number | string
    invited?: BoolFilter<"Scouts"> | boolean
    skills?: JsonFilter<"Scouts">
    createdAt?: DateTimeFilter<"Scouts"> | Date | string
  }

  export type CommentUpsertWithWhereUniqueWithoutListingInput = {
    where: CommentWhereUniqueInput
    update: XOR<CommentUpdateWithoutListingInput, CommentUncheckedUpdateWithoutListingInput>
    create: XOR<CommentCreateWithoutListingInput, CommentUncheckedCreateWithoutListingInput>
  }

  export type CommentUpdateWithWhereUniqueWithoutListingInput = {
    where: CommentWhereUniqueInput
    data: XOR<CommentUpdateWithoutListingInput, CommentUncheckedUpdateWithoutListingInput>
  }

  export type CommentUpdateManyWithWhereWithoutListingInput = {
    where: CommentScalarWhereInput
    data: XOR<CommentUpdateManyMutationInput, CommentUncheckedUpdateManyWithoutListingInput>
  }

  export type CommentScalarWhereInput = {
    AND?: CommentScalarWhereInput | CommentScalarWhereInput[]
    OR?: CommentScalarWhereInput[]
    NOT?: CommentScalarWhereInput | CommentScalarWhereInput[]
    id?: StringFilter<"Comment"> | string
    message?: StringFilter<"Comment"> | string
    authorId?: StringFilter<"Comment"> | string
    refType?: EnumCommentRefTypeFilter<"Comment"> | $Enums.CommentRefType
    refId?: StringFilter<"Comment"> | string
    isActive?: BoolFilter<"Comment"> | boolean
    isArchived?: BoolFilter<"Comment"> | boolean
    isPinned?: BoolFilter<"Comment"> | boolean
    createdAt?: DateTimeFilter<"Comment"> | Date | string
    updatedAt?: DateTimeFilter<"Comment"> | Date | string
    replyToId?: StringNullableFilter<"Comment"> | string | null
    submissionId?: StringNullableFilter<"Comment"> | string | null
    type?: EnumCommentTypeFilter<"Comment"> | $Enums.CommentType
  }

  export type BountiesCreateWithoutTemplateInput = {
    id?: string
    title: string
    slug: string
    description?: string | null
    deadline?: Date | string | null
    commitmentDate?: Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.status
    token?: string | null
    rewardAmount?: number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: number
    usdValue?: number | null
    source?: $Enums.Source
    isPublished?: boolean
    isFeatured?: boolean
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    applicationLink?: string | null
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: $Enums.BountyType
    requirements?: string | null
    isWinnersAnnounced?: boolean
    region?: string
    pocSocials?: string | null
    hackathonprize?: boolean
    applicationType?: $Enums.ApplicationType
    timeToComplete?: string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: string | null
    publishedAt?: Date | string | null
    isPrivate?: boolean
    compensationType?: $Enums.CompensationType
    maxRewardAsk?: number | null
    minRewardAsk?: number | null
    language?: string | null
    shouldSendEmail?: boolean
    isFndnPaying?: boolean
    winnersAnnouncedAt?: Date | string | null
    discordMessageIds?: NullableJsonNullValueInput | InputJsonValue
    sponsor: SponsorsCreateNestedOneWithoutBountiesInput
    poc: UserCreateNestedOneWithoutPocInput
    Submission?: SubmissionCreateNestedManyWithoutListingInput
    SubscribeBounty?: SubscribeBountyCreateNestedManyWithoutBountiesInput
    Hackathon?: HackathonCreateNestedOneWithoutListingsInput
    Scouts?: ScoutsCreateNestedManyWithoutListingInput
    Comments?: CommentCreateNestedManyWithoutListingInput
  }

  export type BountiesUncheckedCreateWithoutTemplateInput = {
    id?: string
    title: string
    slug: string
    description?: string | null
    deadline?: Date | string | null
    commitmentDate?: Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.status
    token?: string | null
    rewardAmount?: number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: number
    usdValue?: number | null
    sponsorId: string
    pocId: string
    source?: $Enums.Source
    isPublished?: boolean
    isFeatured?: boolean
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    applicationLink?: string | null
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: $Enums.BountyType
    requirements?: string | null
    isWinnersAnnounced?: boolean
    region?: string
    pocSocials?: string | null
    hackathonprize?: boolean
    applicationType?: $Enums.ApplicationType
    timeToComplete?: string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: string | null
    publishedAt?: Date | string | null
    isPrivate?: boolean
    hackathonId?: string | null
    compensationType?: $Enums.CompensationType
    maxRewardAsk?: number | null
    minRewardAsk?: number | null
    language?: string | null
    shouldSendEmail?: boolean
    isFndnPaying?: boolean
    winnersAnnouncedAt?: Date | string | null
    discordMessageIds?: NullableJsonNullValueInput | InputJsonValue
    Submission?: SubmissionUncheckedCreateNestedManyWithoutListingInput
    SubscribeBounty?: SubscribeBountyUncheckedCreateNestedManyWithoutBountiesInput
    Scouts?: ScoutsUncheckedCreateNestedManyWithoutListingInput
    Comments?: CommentUncheckedCreateNestedManyWithoutListingInput
  }

  export type BountiesCreateOrConnectWithoutTemplateInput = {
    where: BountiesWhereUniqueInput
    create: XOR<BountiesCreateWithoutTemplateInput, BountiesUncheckedCreateWithoutTemplateInput>
  }

  export type BountiesCreateManyTemplateInputEnvelope = {
    data: BountiesCreateManyTemplateInput | BountiesCreateManyTemplateInput[]
    skipDuplicates?: boolean
  }

  export type SponsorsCreateWithoutTemplatesInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    url?: string | null
    industry: string
    twitter?: string | null
    bio?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    isActive?: boolean
    entityName?: string | null
    isVerified?: boolean
    isCaution?: boolean
    st?: boolean
    verificationInfo?: NullableJsonNullValueInput | InputJsonValue
    Hackathon?: HackathonCreateNestedOneWithoutSponsorInput
    UserSponsors?: UserSponsorsCreateNestedManyWithoutSponsorInput
    Bounties?: BountiesCreateNestedManyWithoutSponsorInput
    Grants?: GrantsCreateNestedManyWithoutSponsorInput
    User?: UserCreateNestedManyWithoutCurrentSponsorInput
    UserInvites?: UserInvitesCreateNestedManyWithoutSponsorInput
  }

  export type SponsorsUncheckedCreateWithoutTemplatesInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    url?: string | null
    industry: string
    twitter?: string | null
    bio?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    isActive?: boolean
    entityName?: string | null
    isVerified?: boolean
    isCaution?: boolean
    st?: boolean
    verificationInfo?: NullableJsonNullValueInput | InputJsonValue
    Hackathon?: HackathonUncheckedCreateNestedOneWithoutSponsorInput
    UserSponsors?: UserSponsorsUncheckedCreateNestedManyWithoutSponsorInput
    Bounties?: BountiesUncheckedCreateNestedManyWithoutSponsorInput
    Grants?: GrantsUncheckedCreateNestedManyWithoutSponsorInput
    User?: UserUncheckedCreateNestedManyWithoutCurrentSponsorInput
    UserInvites?: UserInvitesUncheckedCreateNestedManyWithoutSponsorInput
  }

  export type SponsorsCreateOrConnectWithoutTemplatesInput = {
    where: SponsorsWhereUniqueInput
    create: XOR<SponsorsCreateWithoutTemplatesInput, SponsorsUncheckedCreateWithoutTemplatesInput>
  }

  export type UserCreateWithoutTemplatesInput = {
    id?: string
    publicKey?: string | null
    walletAddress?: string | null
    email: string
    username?: string | null
    photo?: string | null
    firstName?: string | null
    lastName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    role?: string
    isTalentFilled?: boolean
    interests?: string | null
    bio?: string | null
    twitter?: string | null
    discord?: string | null
    github?: string | null
    linkedin?: string | null
    website?: string | null
    telegram?: string | null
    community?: string | null
    experience?: string | null
    superteamLevel?: string | null
    location?: string | null
    cryptoExperience?: string | null
    workPrefernce?: string | null
    currentEmployer?: string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    emailVerified?: Date | string | null
    featureModalShown?: boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: boolean
    acceptedTOS?: boolean
    stLead?: string | null
    isBlocked?: boolean
    privyDid: string
    isKYCVerified?: boolean
    kycName?: string | null
    kycCountry?: string | null
    kycAddress?: string | null
    kycDOB?: string | null
    kycIDNumber?: string | null
    kycIDType?: string | null
    currentSponsor?: SponsorsCreateNestedOneWithoutUserInput
    UserSponsors?: UserSponsorsCreateNestedManyWithoutUserInput
    poc?: BountiesCreateNestedManyWithoutPocInput
    Comment?: CommentCreateNestedManyWithoutAuthorInput
    Submission?: SubmissionCreateNestedManyWithoutUserInput
    Grants?: GrantsCreateNestedManyWithoutPocInput
    UserInvites?: UserInvitesCreateNestedManyWithoutSenderInput
    SubscribeBounty?: SubscribeBountyCreateNestedManyWithoutUserInput
    PoW?: PoWCreateNestedManyWithoutUserInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    Hackathon?: HackathonCreateNestedOneWithoutUserInput
    emailSettings?: EmailSettingsCreateNestedManyWithoutUserInput
    TalentRankings?: TalentRankingsCreateNestedManyWithoutUserInput
    Scouts?: ScoutsCreateNestedManyWithoutUserInput
    GrantApplication?: GrantApplicationCreateNestedManyWithoutUserInput
    SubscribeHackathon?: SubscribeHackathonCreateNestedManyWithoutUserInput
    CreditLedger?: CreditLedgerCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutTemplatesInput = {
    id?: string
    publicKey?: string | null
    walletAddress?: string | null
    email: string
    username?: string | null
    photo?: string | null
    firstName?: string | null
    lastName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    role?: string
    isTalentFilled?: boolean
    interests?: string | null
    bio?: string | null
    twitter?: string | null
    discord?: string | null
    github?: string | null
    linkedin?: string | null
    website?: string | null
    telegram?: string | null
    community?: string | null
    experience?: string | null
    superteamLevel?: string | null
    location?: string | null
    cryptoExperience?: string | null
    workPrefernce?: string | null
    currentEmployer?: string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    currentSponsorId?: string | null
    emailVerified?: Date | string | null
    hackathonId?: string | null
    featureModalShown?: boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: boolean
    acceptedTOS?: boolean
    stLead?: string | null
    isBlocked?: boolean
    privyDid: string
    isKYCVerified?: boolean
    kycName?: string | null
    kycCountry?: string | null
    kycAddress?: string | null
    kycDOB?: string | null
    kycIDNumber?: string | null
    kycIDType?: string | null
    UserSponsors?: UserSponsorsUncheckedCreateNestedManyWithoutUserInput
    poc?: BountiesUncheckedCreateNestedManyWithoutPocInput
    Comment?: CommentUncheckedCreateNestedManyWithoutAuthorInput
    Submission?: SubmissionUncheckedCreateNestedManyWithoutUserInput
    Grants?: GrantsUncheckedCreateNestedManyWithoutPocInput
    UserInvites?: UserInvitesUncheckedCreateNestedManyWithoutSenderInput
    SubscribeBounty?: SubscribeBountyUncheckedCreateNestedManyWithoutUserInput
    PoW?: PoWUncheckedCreateNestedManyWithoutUserInput
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    emailSettings?: EmailSettingsUncheckedCreateNestedManyWithoutUserInput
    TalentRankings?: TalentRankingsUncheckedCreateNestedManyWithoutUserInput
    Scouts?: ScoutsUncheckedCreateNestedManyWithoutUserInput
    GrantApplication?: GrantApplicationUncheckedCreateNestedManyWithoutUserInput
    SubscribeHackathon?: SubscribeHackathonUncheckedCreateNestedManyWithoutUserInput
    CreditLedger?: CreditLedgerUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutTemplatesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutTemplatesInput, UserUncheckedCreateWithoutTemplatesInput>
  }

  export type BountiesUpsertWithWhereUniqueWithoutTemplateInput = {
    where: BountiesWhereUniqueInput
    update: XOR<BountiesUpdateWithoutTemplateInput, BountiesUncheckedUpdateWithoutTemplateInput>
    create: XOR<BountiesCreateWithoutTemplateInput, BountiesUncheckedCreateWithoutTemplateInput>
  }

  export type BountiesUpdateWithWhereUniqueWithoutTemplateInput = {
    where: BountiesWhereUniqueInput
    data: XOR<BountiesUpdateWithoutTemplateInput, BountiesUncheckedUpdateWithoutTemplateInput>
  }

  export type BountiesUpdateManyWithWhereWithoutTemplateInput = {
    where: BountiesScalarWhereInput
    data: XOR<BountiesUpdateManyMutationInput, BountiesUncheckedUpdateManyWithoutTemplateInput>
  }

  export type BountiesScalarWhereInput = {
    AND?: BountiesScalarWhereInput | BountiesScalarWhereInput[]
    OR?: BountiesScalarWhereInput[]
    NOT?: BountiesScalarWhereInput | BountiesScalarWhereInput[]
    id?: StringFilter<"Bounties"> | string
    title?: StringFilter<"Bounties"> | string
    slug?: StringFilter<"Bounties"> | string
    description?: StringNullableFilter<"Bounties"> | string | null
    deadline?: DateTimeNullableFilter<"Bounties"> | Date | string | null
    commitmentDate?: DateTimeNullableFilter<"Bounties"> | Date | string | null
    eligibility?: JsonNullableFilter<"Bounties">
    status?: EnumstatusFilter<"Bounties"> | $Enums.status
    token?: StringNullableFilter<"Bounties"> | string | null
    rewardAmount?: FloatNullableFilter<"Bounties"> | number | null
    rewards?: JsonNullableFilter<"Bounties">
    maxBonusSpots?: IntFilter<"Bounties"> | number
    usdValue?: FloatNullableFilter<"Bounties"> | number | null
    sponsorId?: StringFilter<"Bounties"> | string
    pocId?: StringFilter<"Bounties"> | string
    source?: EnumSourceFilter<"Bounties"> | $Enums.Source
    isPublished?: BoolFilter<"Bounties"> | boolean
    isFeatured?: BoolFilter<"Bounties"> | boolean
    isActive?: BoolFilter<"Bounties"> | boolean
    isArchived?: BoolFilter<"Bounties"> | boolean
    createdAt?: DateTimeFilter<"Bounties"> | Date | string
    updatedAt?: DateTimeFilter<"Bounties"> | Date | string
    applicationLink?: StringNullableFilter<"Bounties"> | string | null
    skills?: JsonNullableFilter<"Bounties">
    type?: EnumBountyTypeFilter<"Bounties"> | $Enums.BountyType
    requirements?: StringNullableFilter<"Bounties"> | string | null
    isWinnersAnnounced?: BoolFilter<"Bounties"> | boolean
    templateId?: StringNullableFilter<"Bounties"> | string | null
    region?: StringFilter<"Bounties"> | string
    pocSocials?: StringNullableFilter<"Bounties"> | string | null
    hackathonprize?: BoolFilter<"Bounties"> | boolean
    applicationType?: EnumApplicationTypeFilter<"Bounties"> | $Enums.ApplicationType
    timeToComplete?: StringNullableFilter<"Bounties"> | string | null
    references?: JsonNullableFilter<"Bounties">
    referredBy?: StringNullableFilter<"Bounties"> | string | null
    publishedAt?: DateTimeNullableFilter<"Bounties"> | Date | string | null
    isPrivate?: BoolFilter<"Bounties"> | boolean
    hackathonId?: StringNullableFilter<"Bounties"> | string | null
    compensationType?: EnumCompensationTypeFilter<"Bounties"> | $Enums.CompensationType
    maxRewardAsk?: IntNullableFilter<"Bounties"> | number | null
    minRewardAsk?: IntNullableFilter<"Bounties"> | number | null
    language?: StringNullableFilter<"Bounties"> | string | null
    shouldSendEmail?: BoolFilter<"Bounties"> | boolean
    isFndnPaying?: BoolFilter<"Bounties"> | boolean
    winnersAnnouncedAt?: DateTimeNullableFilter<"Bounties"> | Date | string | null
    discordMessageIds?: JsonNullableFilter<"Bounties">
  }

  export type SponsorsUpsertWithoutTemplatesInput = {
    update: XOR<SponsorsUpdateWithoutTemplatesInput, SponsorsUncheckedUpdateWithoutTemplatesInput>
    create: XOR<SponsorsCreateWithoutTemplatesInput, SponsorsUncheckedCreateWithoutTemplatesInput>
    where?: SponsorsWhereInput
  }

  export type SponsorsUpdateToOneWithWhereWithoutTemplatesInput = {
    where?: SponsorsWhereInput
    data: XOR<SponsorsUpdateWithoutTemplatesInput, SponsorsUncheckedUpdateWithoutTemplatesInput>
  }

  export type SponsorsUpdateWithoutTemplatesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    industry?: StringFieldUpdateOperationsInput | string
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCaution?: BoolFieldUpdateOperationsInput | boolean
    st?: BoolFieldUpdateOperationsInput | boolean
    verificationInfo?: NullableJsonNullValueInput | InputJsonValue
    Hackathon?: HackathonUpdateOneWithoutSponsorNestedInput
    UserSponsors?: UserSponsorsUpdateManyWithoutSponsorNestedInput
    Bounties?: BountiesUpdateManyWithoutSponsorNestedInput
    Grants?: GrantsUpdateManyWithoutSponsorNestedInput
    User?: UserUpdateManyWithoutCurrentSponsorNestedInput
    UserInvites?: UserInvitesUpdateManyWithoutSponsorNestedInput
  }

  export type SponsorsUncheckedUpdateWithoutTemplatesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    industry?: StringFieldUpdateOperationsInput | string
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCaution?: BoolFieldUpdateOperationsInput | boolean
    st?: BoolFieldUpdateOperationsInput | boolean
    verificationInfo?: NullableJsonNullValueInput | InputJsonValue
    Hackathon?: HackathonUncheckedUpdateOneWithoutSponsorNestedInput
    UserSponsors?: UserSponsorsUncheckedUpdateManyWithoutSponsorNestedInput
    Bounties?: BountiesUncheckedUpdateManyWithoutSponsorNestedInput
    Grants?: GrantsUncheckedUpdateManyWithoutSponsorNestedInput
    User?: UserUncheckedUpdateManyWithoutCurrentSponsorNestedInput
    UserInvites?: UserInvitesUncheckedUpdateManyWithoutSponsorNestedInput
  }

  export type UserUpsertWithoutTemplatesInput = {
    update: XOR<UserUpdateWithoutTemplatesInput, UserUncheckedUpdateWithoutTemplatesInput>
    create: XOR<UserCreateWithoutTemplatesInput, UserUncheckedCreateWithoutTemplatesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutTemplatesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutTemplatesInput, UserUncheckedUpdateWithoutTemplatesInput>
  }

  export type UserUpdateWithoutTemplatesInput = {
    id?: StringFieldUpdateOperationsInput | string
    publicKey?: NullableStringFieldUpdateOperationsInput | string | null
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    isTalentFilled?: BoolFieldUpdateOperationsInput | boolean
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    discord?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    community?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    superteamLevel?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    cryptoExperience?: NullableStringFieldUpdateOperationsInput | string | null
    workPrefernce?: NullableStringFieldUpdateOperationsInput | string | null
    currentEmployer?: NullableStringFieldUpdateOperationsInput | string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: BoolFieldUpdateOperationsInput | boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    featureModalShown?: BoolFieldUpdateOperationsInput | boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: BoolFieldUpdateOperationsInput | boolean
    acceptedTOS?: BoolFieldUpdateOperationsInput | boolean
    stLead?: NullableStringFieldUpdateOperationsInput | string | null
    isBlocked?: BoolFieldUpdateOperationsInput | boolean
    privyDid?: StringFieldUpdateOperationsInput | string
    isKYCVerified?: BoolFieldUpdateOperationsInput | boolean
    kycName?: NullableStringFieldUpdateOperationsInput | string | null
    kycCountry?: NullableStringFieldUpdateOperationsInput | string | null
    kycAddress?: NullableStringFieldUpdateOperationsInput | string | null
    kycDOB?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDNumber?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDType?: NullableStringFieldUpdateOperationsInput | string | null
    currentSponsor?: SponsorsUpdateOneWithoutUserNestedInput
    UserSponsors?: UserSponsorsUpdateManyWithoutUserNestedInput
    poc?: BountiesUpdateManyWithoutPocNestedInput
    Comment?: CommentUpdateManyWithoutAuthorNestedInput
    Submission?: SubmissionUpdateManyWithoutUserNestedInput
    Grants?: GrantsUpdateManyWithoutPocNestedInput
    UserInvites?: UserInvitesUpdateManyWithoutSenderNestedInput
    SubscribeBounty?: SubscribeBountyUpdateManyWithoutUserNestedInput
    PoW?: PoWUpdateManyWithoutUserNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    Hackathon?: HackathonUpdateOneWithoutUserNestedInput
    emailSettings?: EmailSettingsUpdateManyWithoutUserNestedInput
    TalentRankings?: TalentRankingsUpdateManyWithoutUserNestedInput
    Scouts?: ScoutsUpdateManyWithoutUserNestedInput
    GrantApplication?: GrantApplicationUpdateManyWithoutUserNestedInput
    SubscribeHackathon?: SubscribeHackathonUpdateManyWithoutUserNestedInput
    CreditLedger?: CreditLedgerUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutTemplatesInput = {
    id?: StringFieldUpdateOperationsInput | string
    publicKey?: NullableStringFieldUpdateOperationsInput | string | null
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    isTalentFilled?: BoolFieldUpdateOperationsInput | boolean
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    discord?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    community?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    superteamLevel?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    cryptoExperience?: NullableStringFieldUpdateOperationsInput | string | null
    workPrefernce?: NullableStringFieldUpdateOperationsInput | string | null
    currentEmployer?: NullableStringFieldUpdateOperationsInput | string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: BoolFieldUpdateOperationsInput | boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    currentSponsorId?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hackathonId?: NullableStringFieldUpdateOperationsInput | string | null
    featureModalShown?: BoolFieldUpdateOperationsInput | boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: BoolFieldUpdateOperationsInput | boolean
    acceptedTOS?: BoolFieldUpdateOperationsInput | boolean
    stLead?: NullableStringFieldUpdateOperationsInput | string | null
    isBlocked?: BoolFieldUpdateOperationsInput | boolean
    privyDid?: StringFieldUpdateOperationsInput | string
    isKYCVerified?: BoolFieldUpdateOperationsInput | boolean
    kycName?: NullableStringFieldUpdateOperationsInput | string | null
    kycCountry?: NullableStringFieldUpdateOperationsInput | string | null
    kycAddress?: NullableStringFieldUpdateOperationsInput | string | null
    kycDOB?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDNumber?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDType?: NullableStringFieldUpdateOperationsInput | string | null
    UserSponsors?: UserSponsorsUncheckedUpdateManyWithoutUserNestedInput
    poc?: BountiesUncheckedUpdateManyWithoutPocNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutAuthorNestedInput
    Submission?: SubmissionUncheckedUpdateManyWithoutUserNestedInput
    Grants?: GrantsUncheckedUpdateManyWithoutPocNestedInput
    UserInvites?: UserInvitesUncheckedUpdateManyWithoutSenderNestedInput
    SubscribeBounty?: SubscribeBountyUncheckedUpdateManyWithoutUserNestedInput
    PoW?: PoWUncheckedUpdateManyWithoutUserNestedInput
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    emailSettings?: EmailSettingsUncheckedUpdateManyWithoutUserNestedInput
    TalentRankings?: TalentRankingsUncheckedUpdateManyWithoutUserNestedInput
    Scouts?: ScoutsUncheckedUpdateManyWithoutUserNestedInput
    GrantApplication?: GrantApplicationUncheckedUpdateManyWithoutUserNestedInput
    SubscribeHackathon?: SubscribeHackathonUncheckedUpdateManyWithoutUserNestedInput
    CreditLedger?: CreditLedgerUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateWithoutCommentInput = {
    id?: string
    publicKey?: string | null
    walletAddress?: string | null
    email: string
    username?: string | null
    photo?: string | null
    firstName?: string | null
    lastName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    role?: string
    isTalentFilled?: boolean
    interests?: string | null
    bio?: string | null
    twitter?: string | null
    discord?: string | null
    github?: string | null
    linkedin?: string | null
    website?: string | null
    telegram?: string | null
    community?: string | null
    experience?: string | null
    superteamLevel?: string | null
    location?: string | null
    cryptoExperience?: string | null
    workPrefernce?: string | null
    currentEmployer?: string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    emailVerified?: Date | string | null
    featureModalShown?: boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: boolean
    acceptedTOS?: boolean
    stLead?: string | null
    isBlocked?: boolean
    privyDid: string
    isKYCVerified?: boolean
    kycName?: string | null
    kycCountry?: string | null
    kycAddress?: string | null
    kycDOB?: string | null
    kycIDNumber?: string | null
    kycIDType?: string | null
    currentSponsor?: SponsorsCreateNestedOneWithoutUserInput
    UserSponsors?: UserSponsorsCreateNestedManyWithoutUserInput
    poc?: BountiesCreateNestedManyWithoutPocInput
    templates?: BountiesTemplatesCreateNestedManyWithoutPocInput
    Submission?: SubmissionCreateNestedManyWithoutUserInput
    Grants?: GrantsCreateNestedManyWithoutPocInput
    UserInvites?: UserInvitesCreateNestedManyWithoutSenderInput
    SubscribeBounty?: SubscribeBountyCreateNestedManyWithoutUserInput
    PoW?: PoWCreateNestedManyWithoutUserInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    Hackathon?: HackathonCreateNestedOneWithoutUserInput
    emailSettings?: EmailSettingsCreateNestedManyWithoutUserInput
    TalentRankings?: TalentRankingsCreateNestedManyWithoutUserInput
    Scouts?: ScoutsCreateNestedManyWithoutUserInput
    GrantApplication?: GrantApplicationCreateNestedManyWithoutUserInput
    SubscribeHackathon?: SubscribeHackathonCreateNestedManyWithoutUserInput
    CreditLedger?: CreditLedgerCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutCommentInput = {
    id?: string
    publicKey?: string | null
    walletAddress?: string | null
    email: string
    username?: string | null
    photo?: string | null
    firstName?: string | null
    lastName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    role?: string
    isTalentFilled?: boolean
    interests?: string | null
    bio?: string | null
    twitter?: string | null
    discord?: string | null
    github?: string | null
    linkedin?: string | null
    website?: string | null
    telegram?: string | null
    community?: string | null
    experience?: string | null
    superteamLevel?: string | null
    location?: string | null
    cryptoExperience?: string | null
    workPrefernce?: string | null
    currentEmployer?: string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    currentSponsorId?: string | null
    emailVerified?: Date | string | null
    hackathonId?: string | null
    featureModalShown?: boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: boolean
    acceptedTOS?: boolean
    stLead?: string | null
    isBlocked?: boolean
    privyDid: string
    isKYCVerified?: boolean
    kycName?: string | null
    kycCountry?: string | null
    kycAddress?: string | null
    kycDOB?: string | null
    kycIDNumber?: string | null
    kycIDType?: string | null
    UserSponsors?: UserSponsorsUncheckedCreateNestedManyWithoutUserInput
    poc?: BountiesUncheckedCreateNestedManyWithoutPocInput
    templates?: BountiesTemplatesUncheckedCreateNestedManyWithoutPocInput
    Submission?: SubmissionUncheckedCreateNestedManyWithoutUserInput
    Grants?: GrantsUncheckedCreateNestedManyWithoutPocInput
    UserInvites?: UserInvitesUncheckedCreateNestedManyWithoutSenderInput
    SubscribeBounty?: SubscribeBountyUncheckedCreateNestedManyWithoutUserInput
    PoW?: PoWUncheckedCreateNestedManyWithoutUserInput
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    emailSettings?: EmailSettingsUncheckedCreateNestedManyWithoutUserInput
    TalentRankings?: TalentRankingsUncheckedCreateNestedManyWithoutUserInput
    Scouts?: ScoutsUncheckedCreateNestedManyWithoutUserInput
    GrantApplication?: GrantApplicationUncheckedCreateNestedManyWithoutUserInput
    SubscribeHackathon?: SubscribeHackathonUncheckedCreateNestedManyWithoutUserInput
    CreditLedger?: CreditLedgerUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutCommentInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCommentInput, UserUncheckedCreateWithoutCommentInput>
  }

  export type CommentCreateWithoutRepliesInput = {
    id?: string
    message: string
    refType?: $Enums.CommentRefType
    isActive?: boolean
    isArchived?: boolean
    isPinned?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    submissionId?: string | null
    type?: $Enums.CommentType
    author: UserCreateNestedOneWithoutCommentInput
    repliedTo?: CommentCreateNestedOneWithoutRepliesInput
    listing?: BountiesCreateNestedOneWithoutCommentsInput
    submission?: SubmissionCreateNestedOneWithoutCommentsInput
    pow?: PoWCreateNestedOneWithoutCommentsInput
    GrantApplication?: GrantApplicationCreateNestedOneWithoutCommentsInput
  }

  export type CommentUncheckedCreateWithoutRepliesInput = {
    id?: string
    message: string
    authorId: string
    refType?: $Enums.CommentRefType
    refId: string
    isActive?: boolean
    isArchived?: boolean
    isPinned?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    replyToId?: string | null
    submissionId?: string | null
    type?: $Enums.CommentType
  }

  export type CommentCreateOrConnectWithoutRepliesInput = {
    where: CommentWhereUniqueInput
    create: XOR<CommentCreateWithoutRepliesInput, CommentUncheckedCreateWithoutRepliesInput>
  }

  export type CommentCreateWithoutRepliedToInput = {
    id?: string
    message: string
    refType?: $Enums.CommentRefType
    isActive?: boolean
    isArchived?: boolean
    isPinned?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    submissionId?: string | null
    type?: $Enums.CommentType
    author: UserCreateNestedOneWithoutCommentInput
    replies?: CommentCreateNestedManyWithoutRepliedToInput
    listing?: BountiesCreateNestedOneWithoutCommentsInput
    submission?: SubmissionCreateNestedOneWithoutCommentsInput
    pow?: PoWCreateNestedOneWithoutCommentsInput
    GrantApplication?: GrantApplicationCreateNestedOneWithoutCommentsInput
  }

  export type CommentUncheckedCreateWithoutRepliedToInput = {
    id?: string
    message: string
    authorId: string
    refType?: $Enums.CommentRefType
    refId: string
    isActive?: boolean
    isArchived?: boolean
    isPinned?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    submissionId?: string | null
    type?: $Enums.CommentType
    replies?: CommentUncheckedCreateNestedManyWithoutRepliedToInput
  }

  export type CommentCreateOrConnectWithoutRepliedToInput = {
    where: CommentWhereUniqueInput
    create: XOR<CommentCreateWithoutRepliedToInput, CommentUncheckedCreateWithoutRepliedToInput>
  }

  export type CommentCreateManyRepliedToInputEnvelope = {
    data: CommentCreateManyRepliedToInput | CommentCreateManyRepliedToInput[]
    skipDuplicates?: boolean
  }

  export type BountiesCreateWithoutCommentsInput = {
    id?: string
    title: string
    slug: string
    description?: string | null
    deadline?: Date | string | null
    commitmentDate?: Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.status
    token?: string | null
    rewardAmount?: number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: number
    usdValue?: number | null
    source?: $Enums.Source
    isPublished?: boolean
    isFeatured?: boolean
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    applicationLink?: string | null
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: $Enums.BountyType
    requirements?: string | null
    isWinnersAnnounced?: boolean
    region?: string
    pocSocials?: string | null
    hackathonprize?: boolean
    applicationType?: $Enums.ApplicationType
    timeToComplete?: string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: string | null
    publishedAt?: Date | string | null
    isPrivate?: boolean
    compensationType?: $Enums.CompensationType
    maxRewardAsk?: number | null
    minRewardAsk?: number | null
    language?: string | null
    shouldSendEmail?: boolean
    isFndnPaying?: boolean
    winnersAnnouncedAt?: Date | string | null
    discordMessageIds?: NullableJsonNullValueInput | InputJsonValue
    template?: BountiesTemplatesCreateNestedOneWithoutBountiesInput
    sponsor: SponsorsCreateNestedOneWithoutBountiesInput
    poc: UserCreateNestedOneWithoutPocInput
    Submission?: SubmissionCreateNestedManyWithoutListingInput
    SubscribeBounty?: SubscribeBountyCreateNestedManyWithoutBountiesInput
    Hackathon?: HackathonCreateNestedOneWithoutListingsInput
    Scouts?: ScoutsCreateNestedManyWithoutListingInput
  }

  export type BountiesUncheckedCreateWithoutCommentsInput = {
    id?: string
    title: string
    slug: string
    description?: string | null
    deadline?: Date | string | null
    commitmentDate?: Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.status
    token?: string | null
    rewardAmount?: number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: number
    usdValue?: number | null
    sponsorId: string
    pocId: string
    source?: $Enums.Source
    isPublished?: boolean
    isFeatured?: boolean
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    applicationLink?: string | null
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: $Enums.BountyType
    requirements?: string | null
    isWinnersAnnounced?: boolean
    templateId?: string | null
    region?: string
    pocSocials?: string | null
    hackathonprize?: boolean
    applicationType?: $Enums.ApplicationType
    timeToComplete?: string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: string | null
    publishedAt?: Date | string | null
    isPrivate?: boolean
    hackathonId?: string | null
    compensationType?: $Enums.CompensationType
    maxRewardAsk?: number | null
    minRewardAsk?: number | null
    language?: string | null
    shouldSendEmail?: boolean
    isFndnPaying?: boolean
    winnersAnnouncedAt?: Date | string | null
    discordMessageIds?: NullableJsonNullValueInput | InputJsonValue
    Submission?: SubmissionUncheckedCreateNestedManyWithoutListingInput
    SubscribeBounty?: SubscribeBountyUncheckedCreateNestedManyWithoutBountiesInput
    Scouts?: ScoutsUncheckedCreateNestedManyWithoutListingInput
  }

  export type BountiesCreateOrConnectWithoutCommentsInput = {
    where: BountiesWhereUniqueInput
    create: XOR<BountiesCreateWithoutCommentsInput, BountiesUncheckedCreateWithoutCommentsInput>
  }

  export type SubmissionCreateWithoutCommentsInput = {
    id?: string
    link?: string | null
    tweet?: string | null
    status?: $Enums.SubmissionStatus
    eligibilityAnswers?: NullableJsonNullValueInput | InputJsonValue
    isWinner?: boolean
    winnerPosition?: number | null
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: number
    isPaid?: boolean
    paymentDetails?: NullableJsonNullValueInput | InputJsonValue
    otherInfo?: string | null
    ask?: number | null
    label?: $Enums.SubmissionLabels
    rewardInUSD?: number
    ogImage?: string | null
    notes?: string | null
    listing: BountiesCreateNestedOneWithoutSubmissionInput
    user: UserCreateNestedOneWithoutSubmissionInput
    CreditLedger?: CreditLedgerCreateNestedManyWithoutSubmissionInput
  }

  export type SubmissionUncheckedCreateWithoutCommentsInput = {
    id?: string
    link?: string | null
    tweet?: string | null
    status?: $Enums.SubmissionStatus
    eligibilityAnswers?: NullableJsonNullValueInput | InputJsonValue
    userId: string
    listingId: string
    isWinner?: boolean
    winnerPosition?: number | null
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: number
    isPaid?: boolean
    paymentDetails?: NullableJsonNullValueInput | InputJsonValue
    otherInfo?: string | null
    ask?: number | null
    label?: $Enums.SubmissionLabels
    rewardInUSD?: number
    ogImage?: string | null
    notes?: string | null
    CreditLedger?: CreditLedgerUncheckedCreateNestedManyWithoutSubmissionInput
  }

  export type SubmissionCreateOrConnectWithoutCommentsInput = {
    where: SubmissionWhereUniqueInput
    create: XOR<SubmissionCreateWithoutCommentsInput, SubmissionUncheckedCreateWithoutCommentsInput>
  }

  export type PoWCreateWithoutCommentsInput = {
    id?: string
    title: string
    description: string
    skills?: NullableJsonNullValueInput | InputJsonValue
    link: string
    createdAt?: Date | string
    subSkills?: NullableJsonNullValueInput | InputJsonValue
    updatedAt?: Date | string
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: number
    ogImage?: string | null
    user: UserCreateNestedOneWithoutPoWInput
  }

  export type PoWUncheckedCreateWithoutCommentsInput = {
    id?: string
    userId: string
    title: string
    description: string
    skills?: NullableJsonNullValueInput | InputJsonValue
    link: string
    createdAt?: Date | string
    subSkills?: NullableJsonNullValueInput | InputJsonValue
    updatedAt?: Date | string
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: number
    ogImage?: string | null
  }

  export type PoWCreateOrConnectWithoutCommentsInput = {
    where: PoWWhereUniqueInput
    create: XOR<PoWCreateWithoutCommentsInput, PoWUncheckedCreateWithoutCommentsInput>
  }

  export type GrantApplicationCreateWithoutCommentsInput = {
    id?: string
    applicationStatus?: $Enums.GrantApplicationStatus
    projectTitle: string
    projectOneLiner: string
    projectDetails: string
    projectTimeline: string
    proofOfWork: string
    walletAddress: string
    twitter?: string | null
    github?: string | null
    milestones?: string | null
    kpi?: string | null
    answers?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    label?: $Enums.SubmissionLabels
    ask?: number
    approvedAmount?: number
    approvedAmountInUSD?: number
    decidedAt?: Date | string | null
    totalPaid?: number
    isShipped?: boolean
    paymentDetails?: NullableJsonNullValueInput | InputJsonValue
    totalTranches?: number
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: number
    decidedBy?: string | null
    notes?: string | null
    ai?: NullableJsonNullValueInput | InputJsonValue
    user: UserCreateNestedOneWithoutGrantApplicationInput
    grant: GrantsCreateNestedOneWithoutGrantApplicationInput
    GrantTranche?: GrantTrancheCreateNestedManyWithoutGrantApplicationInput
    CreditLedger?: CreditLedgerCreateNestedManyWithoutApplicationInput
  }

  export type GrantApplicationUncheckedCreateWithoutCommentsInput = {
    id?: string
    userId: string
    grantId: string
    applicationStatus?: $Enums.GrantApplicationStatus
    projectTitle: string
    projectOneLiner: string
    projectDetails: string
    projectTimeline: string
    proofOfWork: string
    walletAddress: string
    twitter?: string | null
    github?: string | null
    milestones?: string | null
    kpi?: string | null
    answers?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    label?: $Enums.SubmissionLabels
    ask?: number
    approvedAmount?: number
    approvedAmountInUSD?: number
    decidedAt?: Date | string | null
    totalPaid?: number
    isShipped?: boolean
    paymentDetails?: NullableJsonNullValueInput | InputJsonValue
    totalTranches?: number
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: number
    decidedBy?: string | null
    notes?: string | null
    ai?: NullableJsonNullValueInput | InputJsonValue
    GrantTranche?: GrantTrancheUncheckedCreateNestedManyWithoutGrantApplicationInput
    CreditLedger?: CreditLedgerUncheckedCreateNestedManyWithoutApplicationInput
  }

  export type GrantApplicationCreateOrConnectWithoutCommentsInput = {
    where: GrantApplicationWhereUniqueInput
    create: XOR<GrantApplicationCreateWithoutCommentsInput, GrantApplicationUncheckedCreateWithoutCommentsInput>
  }

  export type UserUpsertWithoutCommentInput = {
    update: XOR<UserUpdateWithoutCommentInput, UserUncheckedUpdateWithoutCommentInput>
    create: XOR<UserCreateWithoutCommentInput, UserUncheckedCreateWithoutCommentInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCommentInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCommentInput, UserUncheckedUpdateWithoutCommentInput>
  }

  export type UserUpdateWithoutCommentInput = {
    id?: StringFieldUpdateOperationsInput | string
    publicKey?: NullableStringFieldUpdateOperationsInput | string | null
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    isTalentFilled?: BoolFieldUpdateOperationsInput | boolean
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    discord?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    community?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    superteamLevel?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    cryptoExperience?: NullableStringFieldUpdateOperationsInput | string | null
    workPrefernce?: NullableStringFieldUpdateOperationsInput | string | null
    currentEmployer?: NullableStringFieldUpdateOperationsInput | string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: BoolFieldUpdateOperationsInput | boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    featureModalShown?: BoolFieldUpdateOperationsInput | boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: BoolFieldUpdateOperationsInput | boolean
    acceptedTOS?: BoolFieldUpdateOperationsInput | boolean
    stLead?: NullableStringFieldUpdateOperationsInput | string | null
    isBlocked?: BoolFieldUpdateOperationsInput | boolean
    privyDid?: StringFieldUpdateOperationsInput | string
    isKYCVerified?: BoolFieldUpdateOperationsInput | boolean
    kycName?: NullableStringFieldUpdateOperationsInput | string | null
    kycCountry?: NullableStringFieldUpdateOperationsInput | string | null
    kycAddress?: NullableStringFieldUpdateOperationsInput | string | null
    kycDOB?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDNumber?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDType?: NullableStringFieldUpdateOperationsInput | string | null
    currentSponsor?: SponsorsUpdateOneWithoutUserNestedInput
    UserSponsors?: UserSponsorsUpdateManyWithoutUserNestedInput
    poc?: BountiesUpdateManyWithoutPocNestedInput
    templates?: BountiesTemplatesUpdateManyWithoutPocNestedInput
    Submission?: SubmissionUpdateManyWithoutUserNestedInput
    Grants?: GrantsUpdateManyWithoutPocNestedInput
    UserInvites?: UserInvitesUpdateManyWithoutSenderNestedInput
    SubscribeBounty?: SubscribeBountyUpdateManyWithoutUserNestedInput
    PoW?: PoWUpdateManyWithoutUserNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    Hackathon?: HackathonUpdateOneWithoutUserNestedInput
    emailSettings?: EmailSettingsUpdateManyWithoutUserNestedInput
    TalentRankings?: TalentRankingsUpdateManyWithoutUserNestedInput
    Scouts?: ScoutsUpdateManyWithoutUserNestedInput
    GrantApplication?: GrantApplicationUpdateManyWithoutUserNestedInput
    SubscribeHackathon?: SubscribeHackathonUpdateManyWithoutUserNestedInput
    CreditLedger?: CreditLedgerUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutCommentInput = {
    id?: StringFieldUpdateOperationsInput | string
    publicKey?: NullableStringFieldUpdateOperationsInput | string | null
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    isTalentFilled?: BoolFieldUpdateOperationsInput | boolean
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    discord?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    community?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    superteamLevel?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    cryptoExperience?: NullableStringFieldUpdateOperationsInput | string | null
    workPrefernce?: NullableStringFieldUpdateOperationsInput | string | null
    currentEmployer?: NullableStringFieldUpdateOperationsInput | string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: BoolFieldUpdateOperationsInput | boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    currentSponsorId?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hackathonId?: NullableStringFieldUpdateOperationsInput | string | null
    featureModalShown?: BoolFieldUpdateOperationsInput | boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: BoolFieldUpdateOperationsInput | boolean
    acceptedTOS?: BoolFieldUpdateOperationsInput | boolean
    stLead?: NullableStringFieldUpdateOperationsInput | string | null
    isBlocked?: BoolFieldUpdateOperationsInput | boolean
    privyDid?: StringFieldUpdateOperationsInput | string
    isKYCVerified?: BoolFieldUpdateOperationsInput | boolean
    kycName?: NullableStringFieldUpdateOperationsInput | string | null
    kycCountry?: NullableStringFieldUpdateOperationsInput | string | null
    kycAddress?: NullableStringFieldUpdateOperationsInput | string | null
    kycDOB?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDNumber?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDType?: NullableStringFieldUpdateOperationsInput | string | null
    UserSponsors?: UserSponsorsUncheckedUpdateManyWithoutUserNestedInput
    poc?: BountiesUncheckedUpdateManyWithoutPocNestedInput
    templates?: BountiesTemplatesUncheckedUpdateManyWithoutPocNestedInput
    Submission?: SubmissionUncheckedUpdateManyWithoutUserNestedInput
    Grants?: GrantsUncheckedUpdateManyWithoutPocNestedInput
    UserInvites?: UserInvitesUncheckedUpdateManyWithoutSenderNestedInput
    SubscribeBounty?: SubscribeBountyUncheckedUpdateManyWithoutUserNestedInput
    PoW?: PoWUncheckedUpdateManyWithoutUserNestedInput
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    emailSettings?: EmailSettingsUncheckedUpdateManyWithoutUserNestedInput
    TalentRankings?: TalentRankingsUncheckedUpdateManyWithoutUserNestedInput
    Scouts?: ScoutsUncheckedUpdateManyWithoutUserNestedInput
    GrantApplication?: GrantApplicationUncheckedUpdateManyWithoutUserNestedInput
    SubscribeHackathon?: SubscribeHackathonUncheckedUpdateManyWithoutUserNestedInput
    CreditLedger?: CreditLedgerUncheckedUpdateManyWithoutUserNestedInput
  }

  export type CommentUpsertWithoutRepliesInput = {
    update: XOR<CommentUpdateWithoutRepliesInput, CommentUncheckedUpdateWithoutRepliesInput>
    create: XOR<CommentCreateWithoutRepliesInput, CommentUncheckedCreateWithoutRepliesInput>
    where?: CommentWhereInput
  }

  export type CommentUpdateToOneWithWhereWithoutRepliesInput = {
    where?: CommentWhereInput
    data: XOR<CommentUpdateWithoutRepliesInput, CommentUncheckedUpdateWithoutRepliesInput>
  }

  export type CommentUpdateWithoutRepliesInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    refType?: EnumCommentRefTypeFieldUpdateOperationsInput | $Enums.CommentRefType
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    isPinned?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    submissionId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCommentTypeFieldUpdateOperationsInput | $Enums.CommentType
    author?: UserUpdateOneRequiredWithoutCommentNestedInput
    repliedTo?: CommentUpdateOneWithoutRepliesNestedInput
    listing?: BountiesUpdateOneWithoutCommentsNestedInput
    submission?: SubmissionUpdateOneWithoutCommentsNestedInput
    pow?: PoWUpdateOneWithoutCommentsNestedInput
    GrantApplication?: GrantApplicationUpdateOneWithoutCommentsNestedInput
  }

  export type CommentUncheckedUpdateWithoutRepliesInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    authorId?: StringFieldUpdateOperationsInput | string
    refType?: EnumCommentRefTypeFieldUpdateOperationsInput | $Enums.CommentRefType
    refId?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    isPinned?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    replyToId?: NullableStringFieldUpdateOperationsInput | string | null
    submissionId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCommentTypeFieldUpdateOperationsInput | $Enums.CommentType
  }

  export type CommentUpsertWithWhereUniqueWithoutRepliedToInput = {
    where: CommentWhereUniqueInput
    update: XOR<CommentUpdateWithoutRepliedToInput, CommentUncheckedUpdateWithoutRepliedToInput>
    create: XOR<CommentCreateWithoutRepliedToInput, CommentUncheckedCreateWithoutRepliedToInput>
  }

  export type CommentUpdateWithWhereUniqueWithoutRepliedToInput = {
    where: CommentWhereUniqueInput
    data: XOR<CommentUpdateWithoutRepliedToInput, CommentUncheckedUpdateWithoutRepliedToInput>
  }

  export type CommentUpdateManyWithWhereWithoutRepliedToInput = {
    where: CommentScalarWhereInput
    data: XOR<CommentUpdateManyMutationInput, CommentUncheckedUpdateManyWithoutRepliedToInput>
  }

  export type BountiesUpsertWithoutCommentsInput = {
    update: XOR<BountiesUpdateWithoutCommentsInput, BountiesUncheckedUpdateWithoutCommentsInput>
    create: XOR<BountiesCreateWithoutCommentsInput, BountiesUncheckedCreateWithoutCommentsInput>
    where?: BountiesWhereInput
  }

  export type BountiesUpdateToOneWithWhereWithoutCommentsInput = {
    where?: BountiesWhereInput
    data: XOR<BountiesUpdateWithoutCommentsInput, BountiesUncheckedUpdateWithoutCommentsInput>
  }

  export type BountiesUpdateWithoutCommentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    commitmentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    token?: NullableStringFieldUpdateOperationsInput | string | null
    rewardAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: IntFieldUpdateOperationsInput | number
    usdValue?: NullableFloatFieldUpdateOperationsInput | number | null
    source?: EnumSourceFieldUpdateOperationsInput | $Enums.Source
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationLink?: NullableStringFieldUpdateOperationsInput | string | null
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: EnumBountyTypeFieldUpdateOperationsInput | $Enums.BountyType
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    isWinnersAnnounced?: BoolFieldUpdateOperationsInput | boolean
    region?: StringFieldUpdateOperationsInput | string
    pocSocials?: NullableStringFieldUpdateOperationsInput | string | null
    hackathonprize?: BoolFieldUpdateOperationsInput | boolean
    applicationType?: EnumApplicationTypeFieldUpdateOperationsInput | $Enums.ApplicationType
    timeToComplete?: NullableStringFieldUpdateOperationsInput | string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    compensationType?: EnumCompensationTypeFieldUpdateOperationsInput | $Enums.CompensationType
    maxRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    minRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    shouldSendEmail?: BoolFieldUpdateOperationsInput | boolean
    isFndnPaying?: BoolFieldUpdateOperationsInput | boolean
    winnersAnnouncedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discordMessageIds?: NullableJsonNullValueInput | InputJsonValue
    template?: BountiesTemplatesUpdateOneWithoutBountiesNestedInput
    sponsor?: SponsorsUpdateOneRequiredWithoutBountiesNestedInput
    poc?: UserUpdateOneRequiredWithoutPocNestedInput
    Submission?: SubmissionUpdateManyWithoutListingNestedInput
    SubscribeBounty?: SubscribeBountyUpdateManyWithoutBountiesNestedInput
    Hackathon?: HackathonUpdateOneWithoutListingsNestedInput
    Scouts?: ScoutsUpdateManyWithoutListingNestedInput
  }

  export type BountiesUncheckedUpdateWithoutCommentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    commitmentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    token?: NullableStringFieldUpdateOperationsInput | string | null
    rewardAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: IntFieldUpdateOperationsInput | number
    usdValue?: NullableFloatFieldUpdateOperationsInput | number | null
    sponsorId?: StringFieldUpdateOperationsInput | string
    pocId?: StringFieldUpdateOperationsInput | string
    source?: EnumSourceFieldUpdateOperationsInput | $Enums.Source
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationLink?: NullableStringFieldUpdateOperationsInput | string | null
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: EnumBountyTypeFieldUpdateOperationsInput | $Enums.BountyType
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    isWinnersAnnounced?: BoolFieldUpdateOperationsInput | boolean
    templateId?: NullableStringFieldUpdateOperationsInput | string | null
    region?: StringFieldUpdateOperationsInput | string
    pocSocials?: NullableStringFieldUpdateOperationsInput | string | null
    hackathonprize?: BoolFieldUpdateOperationsInput | boolean
    applicationType?: EnumApplicationTypeFieldUpdateOperationsInput | $Enums.ApplicationType
    timeToComplete?: NullableStringFieldUpdateOperationsInput | string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    hackathonId?: NullableStringFieldUpdateOperationsInput | string | null
    compensationType?: EnumCompensationTypeFieldUpdateOperationsInput | $Enums.CompensationType
    maxRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    minRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    shouldSendEmail?: BoolFieldUpdateOperationsInput | boolean
    isFndnPaying?: BoolFieldUpdateOperationsInput | boolean
    winnersAnnouncedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discordMessageIds?: NullableJsonNullValueInput | InputJsonValue
    Submission?: SubmissionUncheckedUpdateManyWithoutListingNestedInput
    SubscribeBounty?: SubscribeBountyUncheckedUpdateManyWithoutBountiesNestedInput
    Scouts?: ScoutsUncheckedUpdateManyWithoutListingNestedInput
  }

  export type SubmissionUpsertWithoutCommentsInput = {
    update: XOR<SubmissionUpdateWithoutCommentsInput, SubmissionUncheckedUpdateWithoutCommentsInput>
    create: XOR<SubmissionCreateWithoutCommentsInput, SubmissionUncheckedCreateWithoutCommentsInput>
    where?: SubmissionWhereInput
  }

  export type SubmissionUpdateToOneWithWhereWithoutCommentsInput = {
    where?: SubmissionWhereInput
    data: XOR<SubmissionUpdateWithoutCommentsInput, SubmissionUncheckedUpdateWithoutCommentsInput>
  }

  export type SubmissionUpdateWithoutCommentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    link?: NullableStringFieldUpdateOperationsInput | string | null
    tweet?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumSubmissionStatusFieldUpdateOperationsInput | $Enums.SubmissionStatus
    eligibilityAnswers?: NullableJsonNullValueInput | InputJsonValue
    isWinner?: BoolFieldUpdateOperationsInput | boolean
    winnerPosition?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: IntFieldUpdateOperationsInput | number
    isPaid?: BoolFieldUpdateOperationsInput | boolean
    paymentDetails?: NullableJsonNullValueInput | InputJsonValue
    otherInfo?: NullableStringFieldUpdateOperationsInput | string | null
    ask?: NullableIntFieldUpdateOperationsInput | number | null
    label?: EnumSubmissionLabelsFieldUpdateOperationsInput | $Enums.SubmissionLabels
    rewardInUSD?: FloatFieldUpdateOperationsInput | number
    ogImage?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    listing?: BountiesUpdateOneRequiredWithoutSubmissionNestedInput
    user?: UserUpdateOneRequiredWithoutSubmissionNestedInput
    CreditLedger?: CreditLedgerUpdateManyWithoutSubmissionNestedInput
  }

  export type SubmissionUncheckedUpdateWithoutCommentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    link?: NullableStringFieldUpdateOperationsInput | string | null
    tweet?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumSubmissionStatusFieldUpdateOperationsInput | $Enums.SubmissionStatus
    eligibilityAnswers?: NullableJsonNullValueInput | InputJsonValue
    userId?: StringFieldUpdateOperationsInput | string
    listingId?: StringFieldUpdateOperationsInput | string
    isWinner?: BoolFieldUpdateOperationsInput | boolean
    winnerPosition?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: IntFieldUpdateOperationsInput | number
    isPaid?: BoolFieldUpdateOperationsInput | boolean
    paymentDetails?: NullableJsonNullValueInput | InputJsonValue
    otherInfo?: NullableStringFieldUpdateOperationsInput | string | null
    ask?: NullableIntFieldUpdateOperationsInput | number | null
    label?: EnumSubmissionLabelsFieldUpdateOperationsInput | $Enums.SubmissionLabels
    rewardInUSD?: FloatFieldUpdateOperationsInput | number
    ogImage?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    CreditLedger?: CreditLedgerUncheckedUpdateManyWithoutSubmissionNestedInput
  }

  export type PoWUpsertWithoutCommentsInput = {
    update: XOR<PoWUpdateWithoutCommentsInput, PoWUncheckedUpdateWithoutCommentsInput>
    create: XOR<PoWCreateWithoutCommentsInput, PoWUncheckedCreateWithoutCommentsInput>
    where?: PoWWhereInput
  }

  export type PoWUpdateToOneWithWhereWithoutCommentsInput = {
    where?: PoWWhereInput
    data: XOR<PoWUpdateWithoutCommentsInput, PoWUncheckedUpdateWithoutCommentsInput>
  }

  export type PoWUpdateWithoutCommentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    skills?: NullableJsonNullValueInput | InputJsonValue
    link?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    subSkills?: NullableJsonNullValueInput | InputJsonValue
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: IntFieldUpdateOperationsInput | number
    ogImage?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneRequiredWithoutPoWNestedInput
  }

  export type PoWUncheckedUpdateWithoutCommentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    skills?: NullableJsonNullValueInput | InputJsonValue
    link?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    subSkills?: NullableJsonNullValueInput | InputJsonValue
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: IntFieldUpdateOperationsInput | number
    ogImage?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type GrantApplicationUpsertWithoutCommentsInput = {
    update: XOR<GrantApplicationUpdateWithoutCommentsInput, GrantApplicationUncheckedUpdateWithoutCommentsInput>
    create: XOR<GrantApplicationCreateWithoutCommentsInput, GrantApplicationUncheckedCreateWithoutCommentsInput>
    where?: GrantApplicationWhereInput
  }

  export type GrantApplicationUpdateToOneWithWhereWithoutCommentsInput = {
    where?: GrantApplicationWhereInput
    data: XOR<GrantApplicationUpdateWithoutCommentsInput, GrantApplicationUncheckedUpdateWithoutCommentsInput>
  }

  export type GrantApplicationUpdateWithoutCommentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    applicationStatus?: EnumGrantApplicationStatusFieldUpdateOperationsInput | $Enums.GrantApplicationStatus
    projectTitle?: StringFieldUpdateOperationsInput | string
    projectOneLiner?: StringFieldUpdateOperationsInput | string
    projectDetails?: StringFieldUpdateOperationsInput | string
    projectTimeline?: StringFieldUpdateOperationsInput | string
    proofOfWork?: StringFieldUpdateOperationsInput | string
    walletAddress?: StringFieldUpdateOperationsInput | string
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    milestones?: NullableStringFieldUpdateOperationsInput | string | null
    kpi?: NullableStringFieldUpdateOperationsInput | string | null
    answers?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    label?: EnumSubmissionLabelsFieldUpdateOperationsInput | $Enums.SubmissionLabels
    ask?: FloatFieldUpdateOperationsInput | number
    approvedAmount?: FloatFieldUpdateOperationsInput | number
    approvedAmountInUSD?: FloatFieldUpdateOperationsInput | number
    decidedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalPaid?: FloatFieldUpdateOperationsInput | number
    isShipped?: BoolFieldUpdateOperationsInput | boolean
    paymentDetails?: NullableJsonNullValueInput | InputJsonValue
    totalTranches?: IntFieldUpdateOperationsInput | number
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: IntFieldUpdateOperationsInput | number
    decidedBy?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    ai?: NullableJsonNullValueInput | InputJsonValue
    user?: UserUpdateOneRequiredWithoutGrantApplicationNestedInput
    grant?: GrantsUpdateOneRequiredWithoutGrantApplicationNestedInput
    GrantTranche?: GrantTrancheUpdateManyWithoutGrantApplicationNestedInput
    CreditLedger?: CreditLedgerUpdateManyWithoutApplicationNestedInput
  }

  export type GrantApplicationUncheckedUpdateWithoutCommentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    grantId?: StringFieldUpdateOperationsInput | string
    applicationStatus?: EnumGrantApplicationStatusFieldUpdateOperationsInput | $Enums.GrantApplicationStatus
    projectTitle?: StringFieldUpdateOperationsInput | string
    projectOneLiner?: StringFieldUpdateOperationsInput | string
    projectDetails?: StringFieldUpdateOperationsInput | string
    projectTimeline?: StringFieldUpdateOperationsInput | string
    proofOfWork?: StringFieldUpdateOperationsInput | string
    walletAddress?: StringFieldUpdateOperationsInput | string
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    milestones?: NullableStringFieldUpdateOperationsInput | string | null
    kpi?: NullableStringFieldUpdateOperationsInput | string | null
    answers?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    label?: EnumSubmissionLabelsFieldUpdateOperationsInput | $Enums.SubmissionLabels
    ask?: FloatFieldUpdateOperationsInput | number
    approvedAmount?: FloatFieldUpdateOperationsInput | number
    approvedAmountInUSD?: FloatFieldUpdateOperationsInput | number
    decidedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalPaid?: FloatFieldUpdateOperationsInput | number
    isShipped?: BoolFieldUpdateOperationsInput | boolean
    paymentDetails?: NullableJsonNullValueInput | InputJsonValue
    totalTranches?: IntFieldUpdateOperationsInput | number
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: IntFieldUpdateOperationsInput | number
    decidedBy?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    ai?: NullableJsonNullValueInput | InputJsonValue
    GrantTranche?: GrantTrancheUncheckedUpdateManyWithoutGrantApplicationNestedInput
    CreditLedger?: CreditLedgerUncheckedUpdateManyWithoutApplicationNestedInput
  }

  export type SponsorsCreateWithoutGrantsInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    url?: string | null
    industry: string
    twitter?: string | null
    bio?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    isActive?: boolean
    entityName?: string | null
    isVerified?: boolean
    isCaution?: boolean
    st?: boolean
    verificationInfo?: NullableJsonNullValueInput | InputJsonValue
    Hackathon?: HackathonCreateNestedOneWithoutSponsorInput
    UserSponsors?: UserSponsorsCreateNestedManyWithoutSponsorInput
    Bounties?: BountiesCreateNestedManyWithoutSponsorInput
    Templates?: BountiesTemplatesCreateNestedManyWithoutSponsorInput
    User?: UserCreateNestedManyWithoutCurrentSponsorInput
    UserInvites?: UserInvitesCreateNestedManyWithoutSponsorInput
  }

  export type SponsorsUncheckedCreateWithoutGrantsInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    url?: string | null
    industry: string
    twitter?: string | null
    bio?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    isActive?: boolean
    entityName?: string | null
    isVerified?: boolean
    isCaution?: boolean
    st?: boolean
    verificationInfo?: NullableJsonNullValueInput | InputJsonValue
    Hackathon?: HackathonUncheckedCreateNestedOneWithoutSponsorInput
    UserSponsors?: UserSponsorsUncheckedCreateNestedManyWithoutSponsorInput
    Bounties?: BountiesUncheckedCreateNestedManyWithoutSponsorInput
    Templates?: BountiesTemplatesUncheckedCreateNestedManyWithoutSponsorInput
    User?: UserUncheckedCreateNestedManyWithoutCurrentSponsorInput
    UserInvites?: UserInvitesUncheckedCreateNestedManyWithoutSponsorInput
  }

  export type SponsorsCreateOrConnectWithoutGrantsInput = {
    where: SponsorsWhereUniqueInput
    create: XOR<SponsorsCreateWithoutGrantsInput, SponsorsUncheckedCreateWithoutGrantsInput>
  }

  export type UserCreateWithoutGrantsInput = {
    id?: string
    publicKey?: string | null
    walletAddress?: string | null
    email: string
    username?: string | null
    photo?: string | null
    firstName?: string | null
    lastName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    role?: string
    isTalentFilled?: boolean
    interests?: string | null
    bio?: string | null
    twitter?: string | null
    discord?: string | null
    github?: string | null
    linkedin?: string | null
    website?: string | null
    telegram?: string | null
    community?: string | null
    experience?: string | null
    superteamLevel?: string | null
    location?: string | null
    cryptoExperience?: string | null
    workPrefernce?: string | null
    currentEmployer?: string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    emailVerified?: Date | string | null
    featureModalShown?: boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: boolean
    acceptedTOS?: boolean
    stLead?: string | null
    isBlocked?: boolean
    privyDid: string
    isKYCVerified?: boolean
    kycName?: string | null
    kycCountry?: string | null
    kycAddress?: string | null
    kycDOB?: string | null
    kycIDNumber?: string | null
    kycIDType?: string | null
    currentSponsor?: SponsorsCreateNestedOneWithoutUserInput
    UserSponsors?: UserSponsorsCreateNestedManyWithoutUserInput
    poc?: BountiesCreateNestedManyWithoutPocInput
    templates?: BountiesTemplatesCreateNestedManyWithoutPocInput
    Comment?: CommentCreateNestedManyWithoutAuthorInput
    Submission?: SubmissionCreateNestedManyWithoutUserInput
    UserInvites?: UserInvitesCreateNestedManyWithoutSenderInput
    SubscribeBounty?: SubscribeBountyCreateNestedManyWithoutUserInput
    PoW?: PoWCreateNestedManyWithoutUserInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    Hackathon?: HackathonCreateNestedOneWithoutUserInput
    emailSettings?: EmailSettingsCreateNestedManyWithoutUserInput
    TalentRankings?: TalentRankingsCreateNestedManyWithoutUserInput
    Scouts?: ScoutsCreateNestedManyWithoutUserInput
    GrantApplication?: GrantApplicationCreateNestedManyWithoutUserInput
    SubscribeHackathon?: SubscribeHackathonCreateNestedManyWithoutUserInput
    CreditLedger?: CreditLedgerCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutGrantsInput = {
    id?: string
    publicKey?: string | null
    walletAddress?: string | null
    email: string
    username?: string | null
    photo?: string | null
    firstName?: string | null
    lastName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    role?: string
    isTalentFilled?: boolean
    interests?: string | null
    bio?: string | null
    twitter?: string | null
    discord?: string | null
    github?: string | null
    linkedin?: string | null
    website?: string | null
    telegram?: string | null
    community?: string | null
    experience?: string | null
    superteamLevel?: string | null
    location?: string | null
    cryptoExperience?: string | null
    workPrefernce?: string | null
    currentEmployer?: string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    currentSponsorId?: string | null
    emailVerified?: Date | string | null
    hackathonId?: string | null
    featureModalShown?: boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: boolean
    acceptedTOS?: boolean
    stLead?: string | null
    isBlocked?: boolean
    privyDid: string
    isKYCVerified?: boolean
    kycName?: string | null
    kycCountry?: string | null
    kycAddress?: string | null
    kycDOB?: string | null
    kycIDNumber?: string | null
    kycIDType?: string | null
    UserSponsors?: UserSponsorsUncheckedCreateNestedManyWithoutUserInput
    poc?: BountiesUncheckedCreateNestedManyWithoutPocInput
    templates?: BountiesTemplatesUncheckedCreateNestedManyWithoutPocInput
    Comment?: CommentUncheckedCreateNestedManyWithoutAuthorInput
    Submission?: SubmissionUncheckedCreateNestedManyWithoutUserInput
    UserInvites?: UserInvitesUncheckedCreateNestedManyWithoutSenderInput
    SubscribeBounty?: SubscribeBountyUncheckedCreateNestedManyWithoutUserInput
    PoW?: PoWUncheckedCreateNestedManyWithoutUserInput
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    emailSettings?: EmailSettingsUncheckedCreateNestedManyWithoutUserInput
    TalentRankings?: TalentRankingsUncheckedCreateNestedManyWithoutUserInput
    Scouts?: ScoutsUncheckedCreateNestedManyWithoutUserInput
    GrantApplication?: GrantApplicationUncheckedCreateNestedManyWithoutUserInput
    SubscribeHackathon?: SubscribeHackathonUncheckedCreateNestedManyWithoutUserInput
    CreditLedger?: CreditLedgerUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutGrantsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutGrantsInput, UserUncheckedCreateWithoutGrantsInput>
  }

  export type GrantApplicationCreateWithoutGrantInput = {
    id?: string
    applicationStatus?: $Enums.GrantApplicationStatus
    projectTitle: string
    projectOneLiner: string
    projectDetails: string
    projectTimeline: string
    proofOfWork: string
    walletAddress: string
    twitter?: string | null
    github?: string | null
    milestones?: string | null
    kpi?: string | null
    answers?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    label?: $Enums.SubmissionLabels
    ask?: number
    approvedAmount?: number
    approvedAmountInUSD?: number
    decidedAt?: Date | string | null
    totalPaid?: number
    isShipped?: boolean
    paymentDetails?: NullableJsonNullValueInput | InputJsonValue
    totalTranches?: number
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: number
    decidedBy?: string | null
    notes?: string | null
    ai?: NullableJsonNullValueInput | InputJsonValue
    user: UserCreateNestedOneWithoutGrantApplicationInput
    Comments?: CommentCreateNestedManyWithoutGrantApplicationInput
    GrantTranche?: GrantTrancheCreateNestedManyWithoutGrantApplicationInput
    CreditLedger?: CreditLedgerCreateNestedManyWithoutApplicationInput
  }

  export type GrantApplicationUncheckedCreateWithoutGrantInput = {
    id?: string
    userId: string
    applicationStatus?: $Enums.GrantApplicationStatus
    projectTitle: string
    projectOneLiner: string
    projectDetails: string
    projectTimeline: string
    proofOfWork: string
    walletAddress: string
    twitter?: string | null
    github?: string | null
    milestones?: string | null
    kpi?: string | null
    answers?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    label?: $Enums.SubmissionLabels
    ask?: number
    approvedAmount?: number
    approvedAmountInUSD?: number
    decidedAt?: Date | string | null
    totalPaid?: number
    isShipped?: boolean
    paymentDetails?: NullableJsonNullValueInput | InputJsonValue
    totalTranches?: number
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: number
    decidedBy?: string | null
    notes?: string | null
    ai?: NullableJsonNullValueInput | InputJsonValue
    Comments?: CommentUncheckedCreateNestedManyWithoutGrantApplicationInput
    GrantTranche?: GrantTrancheUncheckedCreateNestedManyWithoutGrantApplicationInput
    CreditLedger?: CreditLedgerUncheckedCreateNestedManyWithoutApplicationInput
  }

  export type GrantApplicationCreateOrConnectWithoutGrantInput = {
    where: GrantApplicationWhereUniqueInput
    create: XOR<GrantApplicationCreateWithoutGrantInput, GrantApplicationUncheckedCreateWithoutGrantInput>
  }

  export type GrantApplicationCreateManyGrantInputEnvelope = {
    data: GrantApplicationCreateManyGrantInput | GrantApplicationCreateManyGrantInput[]
    skipDuplicates?: boolean
  }

  export type GrantTrancheCreateWithoutGrantInput = {
    id?: string
    ask: number
    update?: string | null
    helpWanted?: string | null
    status?: $Enums.GrantTrancheStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    approvedAmount?: number | null
    decidedAt?: Date | string | null
    trancheNumber: number
    GrantApplication: GrantApplicationCreateNestedOneWithoutGrantTrancheInput
  }

  export type GrantTrancheUncheckedCreateWithoutGrantInput = {
    id?: string
    applicationId: string
    ask: number
    update?: string | null
    helpWanted?: string | null
    status?: $Enums.GrantTrancheStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    approvedAmount?: number | null
    decidedAt?: Date | string | null
    trancheNumber: number
  }

  export type GrantTrancheCreateOrConnectWithoutGrantInput = {
    where: GrantTrancheWhereUniqueInput
    create: XOR<GrantTrancheCreateWithoutGrantInput, GrantTrancheUncheckedCreateWithoutGrantInput>
  }

  export type GrantTrancheCreateManyGrantInputEnvelope = {
    data: GrantTrancheCreateManyGrantInput | GrantTrancheCreateManyGrantInput[]
    skipDuplicates?: boolean
  }

  export type SponsorsUpsertWithoutGrantsInput = {
    update: XOR<SponsorsUpdateWithoutGrantsInput, SponsorsUncheckedUpdateWithoutGrantsInput>
    create: XOR<SponsorsCreateWithoutGrantsInput, SponsorsUncheckedCreateWithoutGrantsInput>
    where?: SponsorsWhereInput
  }

  export type SponsorsUpdateToOneWithWhereWithoutGrantsInput = {
    where?: SponsorsWhereInput
    data: XOR<SponsorsUpdateWithoutGrantsInput, SponsorsUncheckedUpdateWithoutGrantsInput>
  }

  export type SponsorsUpdateWithoutGrantsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    industry?: StringFieldUpdateOperationsInput | string
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCaution?: BoolFieldUpdateOperationsInput | boolean
    st?: BoolFieldUpdateOperationsInput | boolean
    verificationInfo?: NullableJsonNullValueInput | InputJsonValue
    Hackathon?: HackathonUpdateOneWithoutSponsorNestedInput
    UserSponsors?: UserSponsorsUpdateManyWithoutSponsorNestedInput
    Bounties?: BountiesUpdateManyWithoutSponsorNestedInput
    Templates?: BountiesTemplatesUpdateManyWithoutSponsorNestedInput
    User?: UserUpdateManyWithoutCurrentSponsorNestedInput
    UserInvites?: UserInvitesUpdateManyWithoutSponsorNestedInput
  }

  export type SponsorsUncheckedUpdateWithoutGrantsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    industry?: StringFieldUpdateOperationsInput | string
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCaution?: BoolFieldUpdateOperationsInput | boolean
    st?: BoolFieldUpdateOperationsInput | boolean
    verificationInfo?: NullableJsonNullValueInput | InputJsonValue
    Hackathon?: HackathonUncheckedUpdateOneWithoutSponsorNestedInput
    UserSponsors?: UserSponsorsUncheckedUpdateManyWithoutSponsorNestedInput
    Bounties?: BountiesUncheckedUpdateManyWithoutSponsorNestedInput
    Templates?: BountiesTemplatesUncheckedUpdateManyWithoutSponsorNestedInput
    User?: UserUncheckedUpdateManyWithoutCurrentSponsorNestedInput
    UserInvites?: UserInvitesUncheckedUpdateManyWithoutSponsorNestedInput
  }

  export type UserUpsertWithoutGrantsInput = {
    update: XOR<UserUpdateWithoutGrantsInput, UserUncheckedUpdateWithoutGrantsInput>
    create: XOR<UserCreateWithoutGrantsInput, UserUncheckedCreateWithoutGrantsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutGrantsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutGrantsInput, UserUncheckedUpdateWithoutGrantsInput>
  }

  export type UserUpdateWithoutGrantsInput = {
    id?: StringFieldUpdateOperationsInput | string
    publicKey?: NullableStringFieldUpdateOperationsInput | string | null
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    isTalentFilled?: BoolFieldUpdateOperationsInput | boolean
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    discord?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    community?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    superteamLevel?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    cryptoExperience?: NullableStringFieldUpdateOperationsInput | string | null
    workPrefernce?: NullableStringFieldUpdateOperationsInput | string | null
    currentEmployer?: NullableStringFieldUpdateOperationsInput | string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: BoolFieldUpdateOperationsInput | boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    featureModalShown?: BoolFieldUpdateOperationsInput | boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: BoolFieldUpdateOperationsInput | boolean
    acceptedTOS?: BoolFieldUpdateOperationsInput | boolean
    stLead?: NullableStringFieldUpdateOperationsInput | string | null
    isBlocked?: BoolFieldUpdateOperationsInput | boolean
    privyDid?: StringFieldUpdateOperationsInput | string
    isKYCVerified?: BoolFieldUpdateOperationsInput | boolean
    kycName?: NullableStringFieldUpdateOperationsInput | string | null
    kycCountry?: NullableStringFieldUpdateOperationsInput | string | null
    kycAddress?: NullableStringFieldUpdateOperationsInput | string | null
    kycDOB?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDNumber?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDType?: NullableStringFieldUpdateOperationsInput | string | null
    currentSponsor?: SponsorsUpdateOneWithoutUserNestedInput
    UserSponsors?: UserSponsorsUpdateManyWithoutUserNestedInput
    poc?: BountiesUpdateManyWithoutPocNestedInput
    templates?: BountiesTemplatesUpdateManyWithoutPocNestedInput
    Comment?: CommentUpdateManyWithoutAuthorNestedInput
    Submission?: SubmissionUpdateManyWithoutUserNestedInput
    UserInvites?: UserInvitesUpdateManyWithoutSenderNestedInput
    SubscribeBounty?: SubscribeBountyUpdateManyWithoutUserNestedInput
    PoW?: PoWUpdateManyWithoutUserNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    Hackathon?: HackathonUpdateOneWithoutUserNestedInput
    emailSettings?: EmailSettingsUpdateManyWithoutUserNestedInput
    TalentRankings?: TalentRankingsUpdateManyWithoutUserNestedInput
    Scouts?: ScoutsUpdateManyWithoutUserNestedInput
    GrantApplication?: GrantApplicationUpdateManyWithoutUserNestedInput
    SubscribeHackathon?: SubscribeHackathonUpdateManyWithoutUserNestedInput
    CreditLedger?: CreditLedgerUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutGrantsInput = {
    id?: StringFieldUpdateOperationsInput | string
    publicKey?: NullableStringFieldUpdateOperationsInput | string | null
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    isTalentFilled?: BoolFieldUpdateOperationsInput | boolean
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    discord?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    community?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    superteamLevel?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    cryptoExperience?: NullableStringFieldUpdateOperationsInput | string | null
    workPrefernce?: NullableStringFieldUpdateOperationsInput | string | null
    currentEmployer?: NullableStringFieldUpdateOperationsInput | string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: BoolFieldUpdateOperationsInput | boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    currentSponsorId?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hackathonId?: NullableStringFieldUpdateOperationsInput | string | null
    featureModalShown?: BoolFieldUpdateOperationsInput | boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: BoolFieldUpdateOperationsInput | boolean
    acceptedTOS?: BoolFieldUpdateOperationsInput | boolean
    stLead?: NullableStringFieldUpdateOperationsInput | string | null
    isBlocked?: BoolFieldUpdateOperationsInput | boolean
    privyDid?: StringFieldUpdateOperationsInput | string
    isKYCVerified?: BoolFieldUpdateOperationsInput | boolean
    kycName?: NullableStringFieldUpdateOperationsInput | string | null
    kycCountry?: NullableStringFieldUpdateOperationsInput | string | null
    kycAddress?: NullableStringFieldUpdateOperationsInput | string | null
    kycDOB?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDNumber?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDType?: NullableStringFieldUpdateOperationsInput | string | null
    UserSponsors?: UserSponsorsUncheckedUpdateManyWithoutUserNestedInput
    poc?: BountiesUncheckedUpdateManyWithoutPocNestedInput
    templates?: BountiesTemplatesUncheckedUpdateManyWithoutPocNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutAuthorNestedInput
    Submission?: SubmissionUncheckedUpdateManyWithoutUserNestedInput
    UserInvites?: UserInvitesUncheckedUpdateManyWithoutSenderNestedInput
    SubscribeBounty?: SubscribeBountyUncheckedUpdateManyWithoutUserNestedInput
    PoW?: PoWUncheckedUpdateManyWithoutUserNestedInput
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    emailSettings?: EmailSettingsUncheckedUpdateManyWithoutUserNestedInput
    TalentRankings?: TalentRankingsUncheckedUpdateManyWithoutUserNestedInput
    Scouts?: ScoutsUncheckedUpdateManyWithoutUserNestedInput
    GrantApplication?: GrantApplicationUncheckedUpdateManyWithoutUserNestedInput
    SubscribeHackathon?: SubscribeHackathonUncheckedUpdateManyWithoutUserNestedInput
    CreditLedger?: CreditLedgerUncheckedUpdateManyWithoutUserNestedInput
  }

  export type GrantApplicationUpsertWithWhereUniqueWithoutGrantInput = {
    where: GrantApplicationWhereUniqueInput
    update: XOR<GrantApplicationUpdateWithoutGrantInput, GrantApplicationUncheckedUpdateWithoutGrantInput>
    create: XOR<GrantApplicationCreateWithoutGrantInput, GrantApplicationUncheckedCreateWithoutGrantInput>
  }

  export type GrantApplicationUpdateWithWhereUniqueWithoutGrantInput = {
    where: GrantApplicationWhereUniqueInput
    data: XOR<GrantApplicationUpdateWithoutGrantInput, GrantApplicationUncheckedUpdateWithoutGrantInput>
  }

  export type GrantApplicationUpdateManyWithWhereWithoutGrantInput = {
    where: GrantApplicationScalarWhereInput
    data: XOR<GrantApplicationUpdateManyMutationInput, GrantApplicationUncheckedUpdateManyWithoutGrantInput>
  }

  export type GrantApplicationScalarWhereInput = {
    AND?: GrantApplicationScalarWhereInput | GrantApplicationScalarWhereInput[]
    OR?: GrantApplicationScalarWhereInput[]
    NOT?: GrantApplicationScalarWhereInput | GrantApplicationScalarWhereInput[]
    id?: StringFilter<"GrantApplication"> | string
    userId?: StringFilter<"GrantApplication"> | string
    grantId?: StringFilter<"GrantApplication"> | string
    applicationStatus?: EnumGrantApplicationStatusFilter<"GrantApplication"> | $Enums.GrantApplicationStatus
    projectTitle?: StringFilter<"GrantApplication"> | string
    projectOneLiner?: StringFilter<"GrantApplication"> | string
    projectDetails?: StringFilter<"GrantApplication"> | string
    projectTimeline?: StringFilter<"GrantApplication"> | string
    proofOfWork?: StringFilter<"GrantApplication"> | string
    walletAddress?: StringFilter<"GrantApplication"> | string
    twitter?: StringNullableFilter<"GrantApplication"> | string | null
    github?: StringNullableFilter<"GrantApplication"> | string | null
    milestones?: StringNullableFilter<"GrantApplication"> | string | null
    kpi?: StringNullableFilter<"GrantApplication"> | string | null
    answers?: JsonNullableFilter<"GrantApplication">
    createdAt?: DateTimeFilter<"GrantApplication"> | Date | string
    updatedAt?: DateTimeFilter<"GrantApplication"> | Date | string
    label?: EnumSubmissionLabelsFilter<"GrantApplication"> | $Enums.SubmissionLabels
    ask?: FloatFilter<"GrantApplication"> | number
    approvedAmount?: FloatFilter<"GrantApplication"> | number
    approvedAmountInUSD?: FloatFilter<"GrantApplication"> | number
    decidedAt?: DateTimeNullableFilter<"GrantApplication"> | Date | string | null
    totalPaid?: FloatFilter<"GrantApplication"> | number
    isShipped?: BoolFilter<"GrantApplication"> | boolean
    paymentDetails?: JsonNullableFilter<"GrantApplication">
    totalTranches?: IntFilter<"GrantApplication"> | number
    like?: JsonNullableFilter<"GrantApplication">
    likeCount?: IntFilter<"GrantApplication"> | number
    decidedBy?: StringNullableFilter<"GrantApplication"> | string | null
    notes?: StringNullableFilter<"GrantApplication"> | string | null
    ai?: JsonNullableFilter<"GrantApplication">
  }

  export type GrantTrancheUpsertWithWhereUniqueWithoutGrantInput = {
    where: GrantTrancheWhereUniqueInput
    update: XOR<GrantTrancheUpdateWithoutGrantInput, GrantTrancheUncheckedUpdateWithoutGrantInput>
    create: XOR<GrantTrancheCreateWithoutGrantInput, GrantTrancheUncheckedCreateWithoutGrantInput>
  }

  export type GrantTrancheUpdateWithWhereUniqueWithoutGrantInput = {
    where: GrantTrancheWhereUniqueInput
    data: XOR<GrantTrancheUpdateWithoutGrantInput, GrantTrancheUncheckedUpdateWithoutGrantInput>
  }

  export type GrantTrancheUpdateManyWithWhereWithoutGrantInput = {
    where: GrantTrancheScalarWhereInput
    data: XOR<GrantTrancheUpdateManyMutationInput, GrantTrancheUncheckedUpdateManyWithoutGrantInput>
  }

  export type GrantTrancheScalarWhereInput = {
    AND?: GrantTrancheScalarWhereInput | GrantTrancheScalarWhereInput[]
    OR?: GrantTrancheScalarWhereInput[]
    NOT?: GrantTrancheScalarWhereInput | GrantTrancheScalarWhereInput[]
    id?: StringFilter<"GrantTranche"> | string
    applicationId?: StringFilter<"GrantTranche"> | string
    grantId?: StringFilter<"GrantTranche"> | string
    ask?: FloatFilter<"GrantTranche"> | number
    update?: StringNullableFilter<"GrantTranche"> | string | null
    helpWanted?: StringNullableFilter<"GrantTranche"> | string | null
    status?: EnumGrantTrancheStatusFilter<"GrantTranche"> | $Enums.GrantTrancheStatus
    createdAt?: DateTimeFilter<"GrantTranche"> | Date | string
    updatedAt?: DateTimeFilter<"GrantTranche"> | Date | string
    approvedAmount?: FloatNullableFilter<"GrantTranche"> | number | null
    decidedAt?: DateTimeNullableFilter<"GrantTranche"> | Date | string | null
    trancheNumber?: IntFilter<"GrantTranche"> | number
  }

  export type UserCreateWithoutGrantApplicationInput = {
    id?: string
    publicKey?: string | null
    walletAddress?: string | null
    email: string
    username?: string | null
    photo?: string | null
    firstName?: string | null
    lastName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    role?: string
    isTalentFilled?: boolean
    interests?: string | null
    bio?: string | null
    twitter?: string | null
    discord?: string | null
    github?: string | null
    linkedin?: string | null
    website?: string | null
    telegram?: string | null
    community?: string | null
    experience?: string | null
    superteamLevel?: string | null
    location?: string | null
    cryptoExperience?: string | null
    workPrefernce?: string | null
    currentEmployer?: string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    emailVerified?: Date | string | null
    featureModalShown?: boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: boolean
    acceptedTOS?: boolean
    stLead?: string | null
    isBlocked?: boolean
    privyDid: string
    isKYCVerified?: boolean
    kycName?: string | null
    kycCountry?: string | null
    kycAddress?: string | null
    kycDOB?: string | null
    kycIDNumber?: string | null
    kycIDType?: string | null
    currentSponsor?: SponsorsCreateNestedOneWithoutUserInput
    UserSponsors?: UserSponsorsCreateNestedManyWithoutUserInput
    poc?: BountiesCreateNestedManyWithoutPocInput
    templates?: BountiesTemplatesCreateNestedManyWithoutPocInput
    Comment?: CommentCreateNestedManyWithoutAuthorInput
    Submission?: SubmissionCreateNestedManyWithoutUserInput
    Grants?: GrantsCreateNestedManyWithoutPocInput
    UserInvites?: UserInvitesCreateNestedManyWithoutSenderInput
    SubscribeBounty?: SubscribeBountyCreateNestedManyWithoutUserInput
    PoW?: PoWCreateNestedManyWithoutUserInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    Hackathon?: HackathonCreateNestedOneWithoutUserInput
    emailSettings?: EmailSettingsCreateNestedManyWithoutUserInput
    TalentRankings?: TalentRankingsCreateNestedManyWithoutUserInput
    Scouts?: ScoutsCreateNestedManyWithoutUserInput
    SubscribeHackathon?: SubscribeHackathonCreateNestedManyWithoutUserInput
    CreditLedger?: CreditLedgerCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutGrantApplicationInput = {
    id?: string
    publicKey?: string | null
    walletAddress?: string | null
    email: string
    username?: string | null
    photo?: string | null
    firstName?: string | null
    lastName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    role?: string
    isTalentFilled?: boolean
    interests?: string | null
    bio?: string | null
    twitter?: string | null
    discord?: string | null
    github?: string | null
    linkedin?: string | null
    website?: string | null
    telegram?: string | null
    community?: string | null
    experience?: string | null
    superteamLevel?: string | null
    location?: string | null
    cryptoExperience?: string | null
    workPrefernce?: string | null
    currentEmployer?: string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    currentSponsorId?: string | null
    emailVerified?: Date | string | null
    hackathonId?: string | null
    featureModalShown?: boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: boolean
    acceptedTOS?: boolean
    stLead?: string | null
    isBlocked?: boolean
    privyDid: string
    isKYCVerified?: boolean
    kycName?: string | null
    kycCountry?: string | null
    kycAddress?: string | null
    kycDOB?: string | null
    kycIDNumber?: string | null
    kycIDType?: string | null
    UserSponsors?: UserSponsorsUncheckedCreateNestedManyWithoutUserInput
    poc?: BountiesUncheckedCreateNestedManyWithoutPocInput
    templates?: BountiesTemplatesUncheckedCreateNestedManyWithoutPocInput
    Comment?: CommentUncheckedCreateNestedManyWithoutAuthorInput
    Submission?: SubmissionUncheckedCreateNestedManyWithoutUserInput
    Grants?: GrantsUncheckedCreateNestedManyWithoutPocInput
    UserInvites?: UserInvitesUncheckedCreateNestedManyWithoutSenderInput
    SubscribeBounty?: SubscribeBountyUncheckedCreateNestedManyWithoutUserInput
    PoW?: PoWUncheckedCreateNestedManyWithoutUserInput
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    emailSettings?: EmailSettingsUncheckedCreateNestedManyWithoutUserInput
    TalentRankings?: TalentRankingsUncheckedCreateNestedManyWithoutUserInput
    Scouts?: ScoutsUncheckedCreateNestedManyWithoutUserInput
    SubscribeHackathon?: SubscribeHackathonUncheckedCreateNestedManyWithoutUserInput
    CreditLedger?: CreditLedgerUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutGrantApplicationInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutGrantApplicationInput, UserUncheckedCreateWithoutGrantApplicationInput>
  }

  export type GrantsCreateWithoutGrantApplicationInput = {
    id?: string
    title: string
    slug: string
    description?: string | null
    shortDescription?: string | null
    token?: string | null
    minReward?: number | null
    maxReward?: number | null
    totalPaid?: number
    totalApproved?: number
    historicalApplications?: number
    historicalPaid?: number
    link?: string | null
    isPublished?: boolean
    isFeatured?: boolean
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    skills?: NullableJsonNullValueInput | InputJsonValue
    logo?: string | null
    region?: string
    questions?: NullableJsonNullValueInput | InputJsonValue
    pocSocials?: string | null
    status?: $Enums.GrantStatus
    airtableId?: string | null
    avgResponseTime?: string | null
    isNative?: boolean
    isPrivate?: boolean
    references?: NullableJsonNullValueInput | InputJsonValue
    ai?: NullableJsonNullValueInput | InputJsonValue
    approverRecordId?: string | null
    emailSender?: string | null
    replyToEmail?: string | null
    emailSalutation?: string | null
    communityLink?: string | null
    sponsor: SponsorsCreateNestedOneWithoutGrantsInput
    poc: UserCreateNestedOneWithoutGrantsInput
    GrantTranche?: GrantTrancheCreateNestedManyWithoutGrantInput
  }

  export type GrantsUncheckedCreateWithoutGrantApplicationInput = {
    id?: string
    title: string
    slug: string
    description?: string | null
    shortDescription?: string | null
    token?: string | null
    minReward?: number | null
    maxReward?: number | null
    totalPaid?: number
    totalApproved?: number
    historicalApplications?: number
    historicalPaid?: number
    link?: string | null
    sponsorId: string
    pocId: string
    isPublished?: boolean
    isFeatured?: boolean
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    skills?: NullableJsonNullValueInput | InputJsonValue
    logo?: string | null
    region?: string
    questions?: NullableJsonNullValueInput | InputJsonValue
    pocSocials?: string | null
    status?: $Enums.GrantStatus
    airtableId?: string | null
    avgResponseTime?: string | null
    isNative?: boolean
    isPrivate?: boolean
    references?: NullableJsonNullValueInput | InputJsonValue
    ai?: NullableJsonNullValueInput | InputJsonValue
    approverRecordId?: string | null
    emailSender?: string | null
    replyToEmail?: string | null
    emailSalutation?: string | null
    communityLink?: string | null
    GrantTranche?: GrantTrancheUncheckedCreateNestedManyWithoutGrantInput
  }

  export type GrantsCreateOrConnectWithoutGrantApplicationInput = {
    where: GrantsWhereUniqueInput
    create: XOR<GrantsCreateWithoutGrantApplicationInput, GrantsUncheckedCreateWithoutGrantApplicationInput>
  }

  export type CommentCreateWithoutGrantApplicationInput = {
    id?: string
    message: string
    refType?: $Enums.CommentRefType
    isActive?: boolean
    isArchived?: boolean
    isPinned?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    submissionId?: string | null
    type?: $Enums.CommentType
    author: UserCreateNestedOneWithoutCommentInput
    repliedTo?: CommentCreateNestedOneWithoutRepliesInput
    replies?: CommentCreateNestedManyWithoutRepliedToInput
    listing?: BountiesCreateNestedOneWithoutCommentsInput
    submission?: SubmissionCreateNestedOneWithoutCommentsInput
    pow?: PoWCreateNestedOneWithoutCommentsInput
  }

  export type CommentUncheckedCreateWithoutGrantApplicationInput = {
    id?: string
    message: string
    authorId: string
    refType?: $Enums.CommentRefType
    isActive?: boolean
    isArchived?: boolean
    isPinned?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    replyToId?: string | null
    submissionId?: string | null
    type?: $Enums.CommentType
    replies?: CommentUncheckedCreateNestedManyWithoutRepliedToInput
  }

  export type CommentCreateOrConnectWithoutGrantApplicationInput = {
    where: CommentWhereUniqueInput
    create: XOR<CommentCreateWithoutGrantApplicationInput, CommentUncheckedCreateWithoutGrantApplicationInput>
  }

  export type CommentCreateManyGrantApplicationInputEnvelope = {
    data: CommentCreateManyGrantApplicationInput | CommentCreateManyGrantApplicationInput[]
    skipDuplicates?: boolean
  }

  export type GrantTrancheCreateWithoutGrantApplicationInput = {
    id?: string
    ask: number
    update?: string | null
    helpWanted?: string | null
    status?: $Enums.GrantTrancheStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    approvedAmount?: number | null
    decidedAt?: Date | string | null
    trancheNumber: number
    Grant: GrantsCreateNestedOneWithoutGrantTrancheInput
  }

  export type GrantTrancheUncheckedCreateWithoutGrantApplicationInput = {
    id?: string
    grantId: string
    ask: number
    update?: string | null
    helpWanted?: string | null
    status?: $Enums.GrantTrancheStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    approvedAmount?: number | null
    decidedAt?: Date | string | null
    trancheNumber: number
  }

  export type GrantTrancheCreateOrConnectWithoutGrantApplicationInput = {
    where: GrantTrancheWhereUniqueInput
    create: XOR<GrantTrancheCreateWithoutGrantApplicationInput, GrantTrancheUncheckedCreateWithoutGrantApplicationInput>
  }

  export type GrantTrancheCreateManyGrantApplicationInputEnvelope = {
    data: GrantTrancheCreateManyGrantApplicationInput | GrantTrancheCreateManyGrantApplicationInput[]
    skipDuplicates?: boolean
  }

  export type CreditLedgerCreateWithoutApplicationInput = {
    id?: string
    type: $Enums.CreditEventType
    change: number
    effectiveMonth: Date | string
    createdAt?: Date | string
    user: UserCreateNestedOneWithoutCreditLedgerInput
    submission?: SubmissionCreateNestedOneWithoutCreditLedgerInput
  }

  export type CreditLedgerUncheckedCreateWithoutApplicationInput = {
    id?: string
    userId: string
    submissionId?: string | null
    type: $Enums.CreditEventType
    change: number
    effectiveMonth: Date | string
    createdAt?: Date | string
  }

  export type CreditLedgerCreateOrConnectWithoutApplicationInput = {
    where: CreditLedgerWhereUniqueInput
    create: XOR<CreditLedgerCreateWithoutApplicationInput, CreditLedgerUncheckedCreateWithoutApplicationInput>
  }

  export type CreditLedgerCreateManyApplicationInputEnvelope = {
    data: CreditLedgerCreateManyApplicationInput | CreditLedgerCreateManyApplicationInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutGrantApplicationInput = {
    update: XOR<UserUpdateWithoutGrantApplicationInput, UserUncheckedUpdateWithoutGrantApplicationInput>
    create: XOR<UserCreateWithoutGrantApplicationInput, UserUncheckedCreateWithoutGrantApplicationInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutGrantApplicationInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutGrantApplicationInput, UserUncheckedUpdateWithoutGrantApplicationInput>
  }

  export type UserUpdateWithoutGrantApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    publicKey?: NullableStringFieldUpdateOperationsInput | string | null
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    isTalentFilled?: BoolFieldUpdateOperationsInput | boolean
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    discord?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    community?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    superteamLevel?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    cryptoExperience?: NullableStringFieldUpdateOperationsInput | string | null
    workPrefernce?: NullableStringFieldUpdateOperationsInput | string | null
    currentEmployer?: NullableStringFieldUpdateOperationsInput | string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: BoolFieldUpdateOperationsInput | boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    featureModalShown?: BoolFieldUpdateOperationsInput | boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: BoolFieldUpdateOperationsInput | boolean
    acceptedTOS?: BoolFieldUpdateOperationsInput | boolean
    stLead?: NullableStringFieldUpdateOperationsInput | string | null
    isBlocked?: BoolFieldUpdateOperationsInput | boolean
    privyDid?: StringFieldUpdateOperationsInput | string
    isKYCVerified?: BoolFieldUpdateOperationsInput | boolean
    kycName?: NullableStringFieldUpdateOperationsInput | string | null
    kycCountry?: NullableStringFieldUpdateOperationsInput | string | null
    kycAddress?: NullableStringFieldUpdateOperationsInput | string | null
    kycDOB?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDNumber?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDType?: NullableStringFieldUpdateOperationsInput | string | null
    currentSponsor?: SponsorsUpdateOneWithoutUserNestedInput
    UserSponsors?: UserSponsorsUpdateManyWithoutUserNestedInput
    poc?: BountiesUpdateManyWithoutPocNestedInput
    templates?: BountiesTemplatesUpdateManyWithoutPocNestedInput
    Comment?: CommentUpdateManyWithoutAuthorNestedInput
    Submission?: SubmissionUpdateManyWithoutUserNestedInput
    Grants?: GrantsUpdateManyWithoutPocNestedInput
    UserInvites?: UserInvitesUpdateManyWithoutSenderNestedInput
    SubscribeBounty?: SubscribeBountyUpdateManyWithoutUserNestedInput
    PoW?: PoWUpdateManyWithoutUserNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    Hackathon?: HackathonUpdateOneWithoutUserNestedInput
    emailSettings?: EmailSettingsUpdateManyWithoutUserNestedInput
    TalentRankings?: TalentRankingsUpdateManyWithoutUserNestedInput
    Scouts?: ScoutsUpdateManyWithoutUserNestedInput
    SubscribeHackathon?: SubscribeHackathonUpdateManyWithoutUserNestedInput
    CreditLedger?: CreditLedgerUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutGrantApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    publicKey?: NullableStringFieldUpdateOperationsInput | string | null
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    isTalentFilled?: BoolFieldUpdateOperationsInput | boolean
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    discord?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    community?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    superteamLevel?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    cryptoExperience?: NullableStringFieldUpdateOperationsInput | string | null
    workPrefernce?: NullableStringFieldUpdateOperationsInput | string | null
    currentEmployer?: NullableStringFieldUpdateOperationsInput | string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: BoolFieldUpdateOperationsInput | boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    currentSponsorId?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hackathonId?: NullableStringFieldUpdateOperationsInput | string | null
    featureModalShown?: BoolFieldUpdateOperationsInput | boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: BoolFieldUpdateOperationsInput | boolean
    acceptedTOS?: BoolFieldUpdateOperationsInput | boolean
    stLead?: NullableStringFieldUpdateOperationsInput | string | null
    isBlocked?: BoolFieldUpdateOperationsInput | boolean
    privyDid?: StringFieldUpdateOperationsInput | string
    isKYCVerified?: BoolFieldUpdateOperationsInput | boolean
    kycName?: NullableStringFieldUpdateOperationsInput | string | null
    kycCountry?: NullableStringFieldUpdateOperationsInput | string | null
    kycAddress?: NullableStringFieldUpdateOperationsInput | string | null
    kycDOB?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDNumber?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDType?: NullableStringFieldUpdateOperationsInput | string | null
    UserSponsors?: UserSponsorsUncheckedUpdateManyWithoutUserNestedInput
    poc?: BountiesUncheckedUpdateManyWithoutPocNestedInput
    templates?: BountiesTemplatesUncheckedUpdateManyWithoutPocNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutAuthorNestedInput
    Submission?: SubmissionUncheckedUpdateManyWithoutUserNestedInput
    Grants?: GrantsUncheckedUpdateManyWithoutPocNestedInput
    UserInvites?: UserInvitesUncheckedUpdateManyWithoutSenderNestedInput
    SubscribeBounty?: SubscribeBountyUncheckedUpdateManyWithoutUserNestedInput
    PoW?: PoWUncheckedUpdateManyWithoutUserNestedInput
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    emailSettings?: EmailSettingsUncheckedUpdateManyWithoutUserNestedInput
    TalentRankings?: TalentRankingsUncheckedUpdateManyWithoutUserNestedInput
    Scouts?: ScoutsUncheckedUpdateManyWithoutUserNestedInput
    SubscribeHackathon?: SubscribeHackathonUncheckedUpdateManyWithoutUserNestedInput
    CreditLedger?: CreditLedgerUncheckedUpdateManyWithoutUserNestedInput
  }

  export type GrantsUpsertWithoutGrantApplicationInput = {
    update: XOR<GrantsUpdateWithoutGrantApplicationInput, GrantsUncheckedUpdateWithoutGrantApplicationInput>
    create: XOR<GrantsCreateWithoutGrantApplicationInput, GrantsUncheckedCreateWithoutGrantApplicationInput>
    where?: GrantsWhereInput
  }

  export type GrantsUpdateToOneWithWhereWithoutGrantApplicationInput = {
    where?: GrantsWhereInput
    data: XOR<GrantsUpdateWithoutGrantApplicationInput, GrantsUncheckedUpdateWithoutGrantApplicationInput>
  }

  export type GrantsUpdateWithoutGrantApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    token?: NullableStringFieldUpdateOperationsInput | string | null
    minReward?: NullableFloatFieldUpdateOperationsInput | number | null
    maxReward?: NullableFloatFieldUpdateOperationsInput | number | null
    totalPaid?: FloatFieldUpdateOperationsInput | number
    totalApproved?: FloatFieldUpdateOperationsInput | number
    historicalApplications?: IntFieldUpdateOperationsInput | number
    historicalPaid?: FloatFieldUpdateOperationsInput | number
    link?: NullableStringFieldUpdateOperationsInput | string | null
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    skills?: NullableJsonNullValueInput | InputJsonValue
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    region?: StringFieldUpdateOperationsInput | string
    questions?: NullableJsonNullValueInput | InputJsonValue
    pocSocials?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumGrantStatusFieldUpdateOperationsInput | $Enums.GrantStatus
    airtableId?: NullableStringFieldUpdateOperationsInput | string | null
    avgResponseTime?: NullableStringFieldUpdateOperationsInput | string | null
    isNative?: BoolFieldUpdateOperationsInput | boolean
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    references?: NullableJsonNullValueInput | InputJsonValue
    ai?: NullableJsonNullValueInput | InputJsonValue
    approverRecordId?: NullableStringFieldUpdateOperationsInput | string | null
    emailSender?: NullableStringFieldUpdateOperationsInput | string | null
    replyToEmail?: NullableStringFieldUpdateOperationsInput | string | null
    emailSalutation?: NullableStringFieldUpdateOperationsInput | string | null
    communityLink?: NullableStringFieldUpdateOperationsInput | string | null
    sponsor?: SponsorsUpdateOneRequiredWithoutGrantsNestedInput
    poc?: UserUpdateOneRequiredWithoutGrantsNestedInput
    GrantTranche?: GrantTrancheUpdateManyWithoutGrantNestedInput
  }

  export type GrantsUncheckedUpdateWithoutGrantApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    token?: NullableStringFieldUpdateOperationsInput | string | null
    minReward?: NullableFloatFieldUpdateOperationsInput | number | null
    maxReward?: NullableFloatFieldUpdateOperationsInput | number | null
    totalPaid?: FloatFieldUpdateOperationsInput | number
    totalApproved?: FloatFieldUpdateOperationsInput | number
    historicalApplications?: IntFieldUpdateOperationsInput | number
    historicalPaid?: FloatFieldUpdateOperationsInput | number
    link?: NullableStringFieldUpdateOperationsInput | string | null
    sponsorId?: StringFieldUpdateOperationsInput | string
    pocId?: StringFieldUpdateOperationsInput | string
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    skills?: NullableJsonNullValueInput | InputJsonValue
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    region?: StringFieldUpdateOperationsInput | string
    questions?: NullableJsonNullValueInput | InputJsonValue
    pocSocials?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumGrantStatusFieldUpdateOperationsInput | $Enums.GrantStatus
    airtableId?: NullableStringFieldUpdateOperationsInput | string | null
    avgResponseTime?: NullableStringFieldUpdateOperationsInput | string | null
    isNative?: BoolFieldUpdateOperationsInput | boolean
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    references?: NullableJsonNullValueInput | InputJsonValue
    ai?: NullableJsonNullValueInput | InputJsonValue
    approverRecordId?: NullableStringFieldUpdateOperationsInput | string | null
    emailSender?: NullableStringFieldUpdateOperationsInput | string | null
    replyToEmail?: NullableStringFieldUpdateOperationsInput | string | null
    emailSalutation?: NullableStringFieldUpdateOperationsInput | string | null
    communityLink?: NullableStringFieldUpdateOperationsInput | string | null
    GrantTranche?: GrantTrancheUncheckedUpdateManyWithoutGrantNestedInput
  }

  export type CommentUpsertWithWhereUniqueWithoutGrantApplicationInput = {
    where: CommentWhereUniqueInput
    update: XOR<CommentUpdateWithoutGrantApplicationInput, CommentUncheckedUpdateWithoutGrantApplicationInput>
    create: XOR<CommentCreateWithoutGrantApplicationInput, CommentUncheckedCreateWithoutGrantApplicationInput>
  }

  export type CommentUpdateWithWhereUniqueWithoutGrantApplicationInput = {
    where: CommentWhereUniqueInput
    data: XOR<CommentUpdateWithoutGrantApplicationInput, CommentUncheckedUpdateWithoutGrantApplicationInput>
  }

  export type CommentUpdateManyWithWhereWithoutGrantApplicationInput = {
    where: CommentScalarWhereInput
    data: XOR<CommentUpdateManyMutationInput, CommentUncheckedUpdateManyWithoutGrantApplicationInput>
  }

  export type GrantTrancheUpsertWithWhereUniqueWithoutGrantApplicationInput = {
    where: GrantTrancheWhereUniqueInput
    update: XOR<GrantTrancheUpdateWithoutGrantApplicationInput, GrantTrancheUncheckedUpdateWithoutGrantApplicationInput>
    create: XOR<GrantTrancheCreateWithoutGrantApplicationInput, GrantTrancheUncheckedCreateWithoutGrantApplicationInput>
  }

  export type GrantTrancheUpdateWithWhereUniqueWithoutGrantApplicationInput = {
    where: GrantTrancheWhereUniqueInput
    data: XOR<GrantTrancheUpdateWithoutGrantApplicationInput, GrantTrancheUncheckedUpdateWithoutGrantApplicationInput>
  }

  export type GrantTrancheUpdateManyWithWhereWithoutGrantApplicationInput = {
    where: GrantTrancheScalarWhereInput
    data: XOR<GrantTrancheUpdateManyMutationInput, GrantTrancheUncheckedUpdateManyWithoutGrantApplicationInput>
  }

  export type CreditLedgerUpsertWithWhereUniqueWithoutApplicationInput = {
    where: CreditLedgerWhereUniqueInput
    update: XOR<CreditLedgerUpdateWithoutApplicationInput, CreditLedgerUncheckedUpdateWithoutApplicationInput>
    create: XOR<CreditLedgerCreateWithoutApplicationInput, CreditLedgerUncheckedCreateWithoutApplicationInput>
  }

  export type CreditLedgerUpdateWithWhereUniqueWithoutApplicationInput = {
    where: CreditLedgerWhereUniqueInput
    data: XOR<CreditLedgerUpdateWithoutApplicationInput, CreditLedgerUncheckedUpdateWithoutApplicationInput>
  }

  export type CreditLedgerUpdateManyWithWhereWithoutApplicationInput = {
    where: CreditLedgerScalarWhereInput
    data: XOR<CreditLedgerUpdateManyMutationInput, CreditLedgerUncheckedUpdateManyWithoutApplicationInput>
  }

  export type CreditLedgerScalarWhereInput = {
    AND?: CreditLedgerScalarWhereInput | CreditLedgerScalarWhereInput[]
    OR?: CreditLedgerScalarWhereInput[]
    NOT?: CreditLedgerScalarWhereInput | CreditLedgerScalarWhereInput[]
    id?: StringFilter<"CreditLedger"> | string
    userId?: StringFilter<"CreditLedger"> | string
    submissionId?: StringNullableFilter<"CreditLedger"> | string | null
    applicationId?: StringNullableFilter<"CreditLedger"> | string | null
    type?: EnumCreditEventTypeFilter<"CreditLedger"> | $Enums.CreditEventType
    change?: IntFilter<"CreditLedger"> | number
    effectiveMonth?: DateTimeFilter<"CreditLedger"> | Date | string
    createdAt?: DateTimeFilter<"CreditLedger"> | Date | string
  }

  export type GrantApplicationCreateWithoutGrantTrancheInput = {
    id?: string
    applicationStatus?: $Enums.GrantApplicationStatus
    projectTitle: string
    projectOneLiner: string
    projectDetails: string
    projectTimeline: string
    proofOfWork: string
    walletAddress: string
    twitter?: string | null
    github?: string | null
    milestones?: string | null
    kpi?: string | null
    answers?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    label?: $Enums.SubmissionLabels
    ask?: number
    approvedAmount?: number
    approvedAmountInUSD?: number
    decidedAt?: Date | string | null
    totalPaid?: number
    isShipped?: boolean
    paymentDetails?: NullableJsonNullValueInput | InputJsonValue
    totalTranches?: number
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: number
    decidedBy?: string | null
    notes?: string | null
    ai?: NullableJsonNullValueInput | InputJsonValue
    user: UserCreateNestedOneWithoutGrantApplicationInput
    grant: GrantsCreateNestedOneWithoutGrantApplicationInput
    Comments?: CommentCreateNestedManyWithoutGrantApplicationInput
    CreditLedger?: CreditLedgerCreateNestedManyWithoutApplicationInput
  }

  export type GrantApplicationUncheckedCreateWithoutGrantTrancheInput = {
    id?: string
    userId: string
    grantId: string
    applicationStatus?: $Enums.GrantApplicationStatus
    projectTitle: string
    projectOneLiner: string
    projectDetails: string
    projectTimeline: string
    proofOfWork: string
    walletAddress: string
    twitter?: string | null
    github?: string | null
    milestones?: string | null
    kpi?: string | null
    answers?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    label?: $Enums.SubmissionLabels
    ask?: number
    approvedAmount?: number
    approvedAmountInUSD?: number
    decidedAt?: Date | string | null
    totalPaid?: number
    isShipped?: boolean
    paymentDetails?: NullableJsonNullValueInput | InputJsonValue
    totalTranches?: number
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: number
    decidedBy?: string | null
    notes?: string | null
    ai?: NullableJsonNullValueInput | InputJsonValue
    Comments?: CommentUncheckedCreateNestedManyWithoutGrantApplicationInput
    CreditLedger?: CreditLedgerUncheckedCreateNestedManyWithoutApplicationInput
  }

  export type GrantApplicationCreateOrConnectWithoutGrantTrancheInput = {
    where: GrantApplicationWhereUniqueInput
    create: XOR<GrantApplicationCreateWithoutGrantTrancheInput, GrantApplicationUncheckedCreateWithoutGrantTrancheInput>
  }

  export type GrantsCreateWithoutGrantTrancheInput = {
    id?: string
    title: string
    slug: string
    description?: string | null
    shortDescription?: string | null
    token?: string | null
    minReward?: number | null
    maxReward?: number | null
    totalPaid?: number
    totalApproved?: number
    historicalApplications?: number
    historicalPaid?: number
    link?: string | null
    isPublished?: boolean
    isFeatured?: boolean
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    skills?: NullableJsonNullValueInput | InputJsonValue
    logo?: string | null
    region?: string
    questions?: NullableJsonNullValueInput | InputJsonValue
    pocSocials?: string | null
    status?: $Enums.GrantStatus
    airtableId?: string | null
    avgResponseTime?: string | null
    isNative?: boolean
    isPrivate?: boolean
    references?: NullableJsonNullValueInput | InputJsonValue
    ai?: NullableJsonNullValueInput | InputJsonValue
    approverRecordId?: string | null
    emailSender?: string | null
    replyToEmail?: string | null
    emailSalutation?: string | null
    communityLink?: string | null
    sponsor: SponsorsCreateNestedOneWithoutGrantsInput
    poc: UserCreateNestedOneWithoutGrantsInput
    GrantApplication?: GrantApplicationCreateNestedManyWithoutGrantInput
  }

  export type GrantsUncheckedCreateWithoutGrantTrancheInput = {
    id?: string
    title: string
    slug: string
    description?: string | null
    shortDescription?: string | null
    token?: string | null
    minReward?: number | null
    maxReward?: number | null
    totalPaid?: number
    totalApproved?: number
    historicalApplications?: number
    historicalPaid?: number
    link?: string | null
    sponsorId: string
    pocId: string
    isPublished?: boolean
    isFeatured?: boolean
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    skills?: NullableJsonNullValueInput | InputJsonValue
    logo?: string | null
    region?: string
    questions?: NullableJsonNullValueInput | InputJsonValue
    pocSocials?: string | null
    status?: $Enums.GrantStatus
    airtableId?: string | null
    avgResponseTime?: string | null
    isNative?: boolean
    isPrivate?: boolean
    references?: NullableJsonNullValueInput | InputJsonValue
    ai?: NullableJsonNullValueInput | InputJsonValue
    approverRecordId?: string | null
    emailSender?: string | null
    replyToEmail?: string | null
    emailSalutation?: string | null
    communityLink?: string | null
    GrantApplication?: GrantApplicationUncheckedCreateNestedManyWithoutGrantInput
  }

  export type GrantsCreateOrConnectWithoutGrantTrancheInput = {
    where: GrantsWhereUniqueInput
    create: XOR<GrantsCreateWithoutGrantTrancheInput, GrantsUncheckedCreateWithoutGrantTrancheInput>
  }

  export type GrantApplicationUpsertWithoutGrantTrancheInput = {
    update: XOR<GrantApplicationUpdateWithoutGrantTrancheInput, GrantApplicationUncheckedUpdateWithoutGrantTrancheInput>
    create: XOR<GrantApplicationCreateWithoutGrantTrancheInput, GrantApplicationUncheckedCreateWithoutGrantTrancheInput>
    where?: GrantApplicationWhereInput
  }

  export type GrantApplicationUpdateToOneWithWhereWithoutGrantTrancheInput = {
    where?: GrantApplicationWhereInput
    data: XOR<GrantApplicationUpdateWithoutGrantTrancheInput, GrantApplicationUncheckedUpdateWithoutGrantTrancheInput>
  }

  export type GrantApplicationUpdateWithoutGrantTrancheInput = {
    id?: StringFieldUpdateOperationsInput | string
    applicationStatus?: EnumGrantApplicationStatusFieldUpdateOperationsInput | $Enums.GrantApplicationStatus
    projectTitle?: StringFieldUpdateOperationsInput | string
    projectOneLiner?: StringFieldUpdateOperationsInput | string
    projectDetails?: StringFieldUpdateOperationsInput | string
    projectTimeline?: StringFieldUpdateOperationsInput | string
    proofOfWork?: StringFieldUpdateOperationsInput | string
    walletAddress?: StringFieldUpdateOperationsInput | string
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    milestones?: NullableStringFieldUpdateOperationsInput | string | null
    kpi?: NullableStringFieldUpdateOperationsInput | string | null
    answers?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    label?: EnumSubmissionLabelsFieldUpdateOperationsInput | $Enums.SubmissionLabels
    ask?: FloatFieldUpdateOperationsInput | number
    approvedAmount?: FloatFieldUpdateOperationsInput | number
    approvedAmountInUSD?: FloatFieldUpdateOperationsInput | number
    decidedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalPaid?: FloatFieldUpdateOperationsInput | number
    isShipped?: BoolFieldUpdateOperationsInput | boolean
    paymentDetails?: NullableJsonNullValueInput | InputJsonValue
    totalTranches?: IntFieldUpdateOperationsInput | number
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: IntFieldUpdateOperationsInput | number
    decidedBy?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    ai?: NullableJsonNullValueInput | InputJsonValue
    user?: UserUpdateOneRequiredWithoutGrantApplicationNestedInput
    grant?: GrantsUpdateOneRequiredWithoutGrantApplicationNestedInput
    Comments?: CommentUpdateManyWithoutGrantApplicationNestedInput
    CreditLedger?: CreditLedgerUpdateManyWithoutApplicationNestedInput
  }

  export type GrantApplicationUncheckedUpdateWithoutGrantTrancheInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    grantId?: StringFieldUpdateOperationsInput | string
    applicationStatus?: EnumGrantApplicationStatusFieldUpdateOperationsInput | $Enums.GrantApplicationStatus
    projectTitle?: StringFieldUpdateOperationsInput | string
    projectOneLiner?: StringFieldUpdateOperationsInput | string
    projectDetails?: StringFieldUpdateOperationsInput | string
    projectTimeline?: StringFieldUpdateOperationsInput | string
    proofOfWork?: StringFieldUpdateOperationsInput | string
    walletAddress?: StringFieldUpdateOperationsInput | string
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    milestones?: NullableStringFieldUpdateOperationsInput | string | null
    kpi?: NullableStringFieldUpdateOperationsInput | string | null
    answers?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    label?: EnumSubmissionLabelsFieldUpdateOperationsInput | $Enums.SubmissionLabels
    ask?: FloatFieldUpdateOperationsInput | number
    approvedAmount?: FloatFieldUpdateOperationsInput | number
    approvedAmountInUSD?: FloatFieldUpdateOperationsInput | number
    decidedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalPaid?: FloatFieldUpdateOperationsInput | number
    isShipped?: BoolFieldUpdateOperationsInput | boolean
    paymentDetails?: NullableJsonNullValueInput | InputJsonValue
    totalTranches?: IntFieldUpdateOperationsInput | number
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: IntFieldUpdateOperationsInput | number
    decidedBy?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    ai?: NullableJsonNullValueInput | InputJsonValue
    Comments?: CommentUncheckedUpdateManyWithoutGrantApplicationNestedInput
    CreditLedger?: CreditLedgerUncheckedUpdateManyWithoutApplicationNestedInput
  }

  export type GrantsUpsertWithoutGrantTrancheInput = {
    update: XOR<GrantsUpdateWithoutGrantTrancheInput, GrantsUncheckedUpdateWithoutGrantTrancheInput>
    create: XOR<GrantsCreateWithoutGrantTrancheInput, GrantsUncheckedCreateWithoutGrantTrancheInput>
    where?: GrantsWhereInput
  }

  export type GrantsUpdateToOneWithWhereWithoutGrantTrancheInput = {
    where?: GrantsWhereInput
    data: XOR<GrantsUpdateWithoutGrantTrancheInput, GrantsUncheckedUpdateWithoutGrantTrancheInput>
  }

  export type GrantsUpdateWithoutGrantTrancheInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    token?: NullableStringFieldUpdateOperationsInput | string | null
    minReward?: NullableFloatFieldUpdateOperationsInput | number | null
    maxReward?: NullableFloatFieldUpdateOperationsInput | number | null
    totalPaid?: FloatFieldUpdateOperationsInput | number
    totalApproved?: FloatFieldUpdateOperationsInput | number
    historicalApplications?: IntFieldUpdateOperationsInput | number
    historicalPaid?: FloatFieldUpdateOperationsInput | number
    link?: NullableStringFieldUpdateOperationsInput | string | null
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    skills?: NullableJsonNullValueInput | InputJsonValue
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    region?: StringFieldUpdateOperationsInput | string
    questions?: NullableJsonNullValueInput | InputJsonValue
    pocSocials?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumGrantStatusFieldUpdateOperationsInput | $Enums.GrantStatus
    airtableId?: NullableStringFieldUpdateOperationsInput | string | null
    avgResponseTime?: NullableStringFieldUpdateOperationsInput | string | null
    isNative?: BoolFieldUpdateOperationsInput | boolean
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    references?: NullableJsonNullValueInput | InputJsonValue
    ai?: NullableJsonNullValueInput | InputJsonValue
    approverRecordId?: NullableStringFieldUpdateOperationsInput | string | null
    emailSender?: NullableStringFieldUpdateOperationsInput | string | null
    replyToEmail?: NullableStringFieldUpdateOperationsInput | string | null
    emailSalutation?: NullableStringFieldUpdateOperationsInput | string | null
    communityLink?: NullableStringFieldUpdateOperationsInput | string | null
    sponsor?: SponsorsUpdateOneRequiredWithoutGrantsNestedInput
    poc?: UserUpdateOneRequiredWithoutGrantsNestedInput
    GrantApplication?: GrantApplicationUpdateManyWithoutGrantNestedInput
  }

  export type GrantsUncheckedUpdateWithoutGrantTrancheInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    token?: NullableStringFieldUpdateOperationsInput | string | null
    minReward?: NullableFloatFieldUpdateOperationsInput | number | null
    maxReward?: NullableFloatFieldUpdateOperationsInput | number | null
    totalPaid?: FloatFieldUpdateOperationsInput | number
    totalApproved?: FloatFieldUpdateOperationsInput | number
    historicalApplications?: IntFieldUpdateOperationsInput | number
    historicalPaid?: FloatFieldUpdateOperationsInput | number
    link?: NullableStringFieldUpdateOperationsInput | string | null
    sponsorId?: StringFieldUpdateOperationsInput | string
    pocId?: StringFieldUpdateOperationsInput | string
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    skills?: NullableJsonNullValueInput | InputJsonValue
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    region?: StringFieldUpdateOperationsInput | string
    questions?: NullableJsonNullValueInput | InputJsonValue
    pocSocials?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumGrantStatusFieldUpdateOperationsInput | $Enums.GrantStatus
    airtableId?: NullableStringFieldUpdateOperationsInput | string | null
    avgResponseTime?: NullableStringFieldUpdateOperationsInput | string | null
    isNative?: BoolFieldUpdateOperationsInput | boolean
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    references?: NullableJsonNullValueInput | InputJsonValue
    ai?: NullableJsonNullValueInput | InputJsonValue
    approverRecordId?: NullableStringFieldUpdateOperationsInput | string | null
    emailSender?: NullableStringFieldUpdateOperationsInput | string | null
    replyToEmail?: NullableStringFieldUpdateOperationsInput | string | null
    emailSalutation?: NullableStringFieldUpdateOperationsInput | string | null
    communityLink?: NullableStringFieldUpdateOperationsInput | string | null
    GrantApplication?: GrantApplicationUncheckedUpdateManyWithoutGrantNestedInput
  }

  export type BountiesCreateWithoutSubmissionInput = {
    id?: string
    title: string
    slug: string
    description?: string | null
    deadline?: Date | string | null
    commitmentDate?: Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.status
    token?: string | null
    rewardAmount?: number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: number
    usdValue?: number | null
    source?: $Enums.Source
    isPublished?: boolean
    isFeatured?: boolean
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    applicationLink?: string | null
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: $Enums.BountyType
    requirements?: string | null
    isWinnersAnnounced?: boolean
    region?: string
    pocSocials?: string | null
    hackathonprize?: boolean
    applicationType?: $Enums.ApplicationType
    timeToComplete?: string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: string | null
    publishedAt?: Date | string | null
    isPrivate?: boolean
    compensationType?: $Enums.CompensationType
    maxRewardAsk?: number | null
    minRewardAsk?: number | null
    language?: string | null
    shouldSendEmail?: boolean
    isFndnPaying?: boolean
    winnersAnnouncedAt?: Date | string | null
    discordMessageIds?: NullableJsonNullValueInput | InputJsonValue
    template?: BountiesTemplatesCreateNestedOneWithoutBountiesInput
    sponsor: SponsorsCreateNestedOneWithoutBountiesInput
    poc: UserCreateNestedOneWithoutPocInput
    SubscribeBounty?: SubscribeBountyCreateNestedManyWithoutBountiesInput
    Hackathon?: HackathonCreateNestedOneWithoutListingsInput
    Scouts?: ScoutsCreateNestedManyWithoutListingInput
    Comments?: CommentCreateNestedManyWithoutListingInput
  }

  export type BountiesUncheckedCreateWithoutSubmissionInput = {
    id?: string
    title: string
    slug: string
    description?: string | null
    deadline?: Date | string | null
    commitmentDate?: Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.status
    token?: string | null
    rewardAmount?: number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: number
    usdValue?: number | null
    sponsorId: string
    pocId: string
    source?: $Enums.Source
    isPublished?: boolean
    isFeatured?: boolean
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    applicationLink?: string | null
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: $Enums.BountyType
    requirements?: string | null
    isWinnersAnnounced?: boolean
    templateId?: string | null
    region?: string
    pocSocials?: string | null
    hackathonprize?: boolean
    applicationType?: $Enums.ApplicationType
    timeToComplete?: string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: string | null
    publishedAt?: Date | string | null
    isPrivate?: boolean
    hackathonId?: string | null
    compensationType?: $Enums.CompensationType
    maxRewardAsk?: number | null
    minRewardAsk?: number | null
    language?: string | null
    shouldSendEmail?: boolean
    isFndnPaying?: boolean
    winnersAnnouncedAt?: Date | string | null
    discordMessageIds?: NullableJsonNullValueInput | InputJsonValue
    SubscribeBounty?: SubscribeBountyUncheckedCreateNestedManyWithoutBountiesInput
    Scouts?: ScoutsUncheckedCreateNestedManyWithoutListingInput
    Comments?: CommentUncheckedCreateNestedManyWithoutListingInput
  }

  export type BountiesCreateOrConnectWithoutSubmissionInput = {
    where: BountiesWhereUniqueInput
    create: XOR<BountiesCreateWithoutSubmissionInput, BountiesUncheckedCreateWithoutSubmissionInput>
  }

  export type UserCreateWithoutSubmissionInput = {
    id?: string
    publicKey?: string | null
    walletAddress?: string | null
    email: string
    username?: string | null
    photo?: string | null
    firstName?: string | null
    lastName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    role?: string
    isTalentFilled?: boolean
    interests?: string | null
    bio?: string | null
    twitter?: string | null
    discord?: string | null
    github?: string | null
    linkedin?: string | null
    website?: string | null
    telegram?: string | null
    community?: string | null
    experience?: string | null
    superteamLevel?: string | null
    location?: string | null
    cryptoExperience?: string | null
    workPrefernce?: string | null
    currentEmployer?: string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    emailVerified?: Date | string | null
    featureModalShown?: boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: boolean
    acceptedTOS?: boolean
    stLead?: string | null
    isBlocked?: boolean
    privyDid: string
    isKYCVerified?: boolean
    kycName?: string | null
    kycCountry?: string | null
    kycAddress?: string | null
    kycDOB?: string | null
    kycIDNumber?: string | null
    kycIDType?: string | null
    currentSponsor?: SponsorsCreateNestedOneWithoutUserInput
    UserSponsors?: UserSponsorsCreateNestedManyWithoutUserInput
    poc?: BountiesCreateNestedManyWithoutPocInput
    templates?: BountiesTemplatesCreateNestedManyWithoutPocInput
    Comment?: CommentCreateNestedManyWithoutAuthorInput
    Grants?: GrantsCreateNestedManyWithoutPocInput
    UserInvites?: UserInvitesCreateNestedManyWithoutSenderInput
    SubscribeBounty?: SubscribeBountyCreateNestedManyWithoutUserInput
    PoW?: PoWCreateNestedManyWithoutUserInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    Hackathon?: HackathonCreateNestedOneWithoutUserInput
    emailSettings?: EmailSettingsCreateNestedManyWithoutUserInput
    TalentRankings?: TalentRankingsCreateNestedManyWithoutUserInput
    Scouts?: ScoutsCreateNestedManyWithoutUserInput
    GrantApplication?: GrantApplicationCreateNestedManyWithoutUserInput
    SubscribeHackathon?: SubscribeHackathonCreateNestedManyWithoutUserInput
    CreditLedger?: CreditLedgerCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutSubmissionInput = {
    id?: string
    publicKey?: string | null
    walletAddress?: string | null
    email: string
    username?: string | null
    photo?: string | null
    firstName?: string | null
    lastName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    role?: string
    isTalentFilled?: boolean
    interests?: string | null
    bio?: string | null
    twitter?: string | null
    discord?: string | null
    github?: string | null
    linkedin?: string | null
    website?: string | null
    telegram?: string | null
    community?: string | null
    experience?: string | null
    superteamLevel?: string | null
    location?: string | null
    cryptoExperience?: string | null
    workPrefernce?: string | null
    currentEmployer?: string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    currentSponsorId?: string | null
    emailVerified?: Date | string | null
    hackathonId?: string | null
    featureModalShown?: boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: boolean
    acceptedTOS?: boolean
    stLead?: string | null
    isBlocked?: boolean
    privyDid: string
    isKYCVerified?: boolean
    kycName?: string | null
    kycCountry?: string | null
    kycAddress?: string | null
    kycDOB?: string | null
    kycIDNumber?: string | null
    kycIDType?: string | null
    UserSponsors?: UserSponsorsUncheckedCreateNestedManyWithoutUserInput
    poc?: BountiesUncheckedCreateNestedManyWithoutPocInput
    templates?: BountiesTemplatesUncheckedCreateNestedManyWithoutPocInput
    Comment?: CommentUncheckedCreateNestedManyWithoutAuthorInput
    Grants?: GrantsUncheckedCreateNestedManyWithoutPocInput
    UserInvites?: UserInvitesUncheckedCreateNestedManyWithoutSenderInput
    SubscribeBounty?: SubscribeBountyUncheckedCreateNestedManyWithoutUserInput
    PoW?: PoWUncheckedCreateNestedManyWithoutUserInput
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    emailSettings?: EmailSettingsUncheckedCreateNestedManyWithoutUserInput
    TalentRankings?: TalentRankingsUncheckedCreateNestedManyWithoutUserInput
    Scouts?: ScoutsUncheckedCreateNestedManyWithoutUserInput
    GrantApplication?: GrantApplicationUncheckedCreateNestedManyWithoutUserInput
    SubscribeHackathon?: SubscribeHackathonUncheckedCreateNestedManyWithoutUserInput
    CreditLedger?: CreditLedgerUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutSubmissionInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSubmissionInput, UserUncheckedCreateWithoutSubmissionInput>
  }

  export type CommentCreateWithoutSubmissionInput = {
    id?: string
    message: string
    refType?: $Enums.CommentRefType
    isActive?: boolean
    isArchived?: boolean
    isPinned?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    submissionId?: string | null
    type?: $Enums.CommentType
    author: UserCreateNestedOneWithoutCommentInput
    repliedTo?: CommentCreateNestedOneWithoutRepliesInput
    replies?: CommentCreateNestedManyWithoutRepliedToInput
    listing?: BountiesCreateNestedOneWithoutCommentsInput
    pow?: PoWCreateNestedOneWithoutCommentsInput
    GrantApplication?: GrantApplicationCreateNestedOneWithoutCommentsInput
  }

  export type CommentUncheckedCreateWithoutSubmissionInput = {
    id?: string
    message: string
    authorId: string
    refType?: $Enums.CommentRefType
    isActive?: boolean
    isArchived?: boolean
    isPinned?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    replyToId?: string | null
    submissionId?: string | null
    type?: $Enums.CommentType
    replies?: CommentUncheckedCreateNestedManyWithoutRepliedToInput
  }

  export type CommentCreateOrConnectWithoutSubmissionInput = {
    where: CommentWhereUniqueInput
    create: XOR<CommentCreateWithoutSubmissionInput, CommentUncheckedCreateWithoutSubmissionInput>
  }

  export type CommentCreateManySubmissionInputEnvelope = {
    data: CommentCreateManySubmissionInput | CommentCreateManySubmissionInput[]
    skipDuplicates?: boolean
  }

  export type CreditLedgerCreateWithoutSubmissionInput = {
    id?: string
    type: $Enums.CreditEventType
    change: number
    effectiveMonth: Date | string
    createdAt?: Date | string
    user: UserCreateNestedOneWithoutCreditLedgerInput
    application?: GrantApplicationCreateNestedOneWithoutCreditLedgerInput
  }

  export type CreditLedgerUncheckedCreateWithoutSubmissionInput = {
    id?: string
    userId: string
    applicationId?: string | null
    type: $Enums.CreditEventType
    change: number
    effectiveMonth: Date | string
    createdAt?: Date | string
  }

  export type CreditLedgerCreateOrConnectWithoutSubmissionInput = {
    where: CreditLedgerWhereUniqueInput
    create: XOR<CreditLedgerCreateWithoutSubmissionInput, CreditLedgerUncheckedCreateWithoutSubmissionInput>
  }

  export type CreditLedgerCreateManySubmissionInputEnvelope = {
    data: CreditLedgerCreateManySubmissionInput | CreditLedgerCreateManySubmissionInput[]
    skipDuplicates?: boolean
  }

  export type BountiesUpsertWithoutSubmissionInput = {
    update: XOR<BountiesUpdateWithoutSubmissionInput, BountiesUncheckedUpdateWithoutSubmissionInput>
    create: XOR<BountiesCreateWithoutSubmissionInput, BountiesUncheckedCreateWithoutSubmissionInput>
    where?: BountiesWhereInput
  }

  export type BountiesUpdateToOneWithWhereWithoutSubmissionInput = {
    where?: BountiesWhereInput
    data: XOR<BountiesUpdateWithoutSubmissionInput, BountiesUncheckedUpdateWithoutSubmissionInput>
  }

  export type BountiesUpdateWithoutSubmissionInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    commitmentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    token?: NullableStringFieldUpdateOperationsInput | string | null
    rewardAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: IntFieldUpdateOperationsInput | number
    usdValue?: NullableFloatFieldUpdateOperationsInput | number | null
    source?: EnumSourceFieldUpdateOperationsInput | $Enums.Source
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationLink?: NullableStringFieldUpdateOperationsInput | string | null
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: EnumBountyTypeFieldUpdateOperationsInput | $Enums.BountyType
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    isWinnersAnnounced?: BoolFieldUpdateOperationsInput | boolean
    region?: StringFieldUpdateOperationsInput | string
    pocSocials?: NullableStringFieldUpdateOperationsInput | string | null
    hackathonprize?: BoolFieldUpdateOperationsInput | boolean
    applicationType?: EnumApplicationTypeFieldUpdateOperationsInput | $Enums.ApplicationType
    timeToComplete?: NullableStringFieldUpdateOperationsInput | string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    compensationType?: EnumCompensationTypeFieldUpdateOperationsInput | $Enums.CompensationType
    maxRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    minRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    shouldSendEmail?: BoolFieldUpdateOperationsInput | boolean
    isFndnPaying?: BoolFieldUpdateOperationsInput | boolean
    winnersAnnouncedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discordMessageIds?: NullableJsonNullValueInput | InputJsonValue
    template?: BountiesTemplatesUpdateOneWithoutBountiesNestedInput
    sponsor?: SponsorsUpdateOneRequiredWithoutBountiesNestedInput
    poc?: UserUpdateOneRequiredWithoutPocNestedInput
    SubscribeBounty?: SubscribeBountyUpdateManyWithoutBountiesNestedInput
    Hackathon?: HackathonUpdateOneWithoutListingsNestedInput
    Scouts?: ScoutsUpdateManyWithoutListingNestedInput
    Comments?: CommentUpdateManyWithoutListingNestedInput
  }

  export type BountiesUncheckedUpdateWithoutSubmissionInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    commitmentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    token?: NullableStringFieldUpdateOperationsInput | string | null
    rewardAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: IntFieldUpdateOperationsInput | number
    usdValue?: NullableFloatFieldUpdateOperationsInput | number | null
    sponsorId?: StringFieldUpdateOperationsInput | string
    pocId?: StringFieldUpdateOperationsInput | string
    source?: EnumSourceFieldUpdateOperationsInput | $Enums.Source
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationLink?: NullableStringFieldUpdateOperationsInput | string | null
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: EnumBountyTypeFieldUpdateOperationsInput | $Enums.BountyType
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    isWinnersAnnounced?: BoolFieldUpdateOperationsInput | boolean
    templateId?: NullableStringFieldUpdateOperationsInput | string | null
    region?: StringFieldUpdateOperationsInput | string
    pocSocials?: NullableStringFieldUpdateOperationsInput | string | null
    hackathonprize?: BoolFieldUpdateOperationsInput | boolean
    applicationType?: EnumApplicationTypeFieldUpdateOperationsInput | $Enums.ApplicationType
    timeToComplete?: NullableStringFieldUpdateOperationsInput | string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    hackathonId?: NullableStringFieldUpdateOperationsInput | string | null
    compensationType?: EnumCompensationTypeFieldUpdateOperationsInput | $Enums.CompensationType
    maxRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    minRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    shouldSendEmail?: BoolFieldUpdateOperationsInput | boolean
    isFndnPaying?: BoolFieldUpdateOperationsInput | boolean
    winnersAnnouncedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discordMessageIds?: NullableJsonNullValueInput | InputJsonValue
    SubscribeBounty?: SubscribeBountyUncheckedUpdateManyWithoutBountiesNestedInput
    Scouts?: ScoutsUncheckedUpdateManyWithoutListingNestedInput
    Comments?: CommentUncheckedUpdateManyWithoutListingNestedInput
  }

  export type UserUpsertWithoutSubmissionInput = {
    update: XOR<UserUpdateWithoutSubmissionInput, UserUncheckedUpdateWithoutSubmissionInput>
    create: XOR<UserCreateWithoutSubmissionInput, UserUncheckedCreateWithoutSubmissionInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSubmissionInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSubmissionInput, UserUncheckedUpdateWithoutSubmissionInput>
  }

  export type UserUpdateWithoutSubmissionInput = {
    id?: StringFieldUpdateOperationsInput | string
    publicKey?: NullableStringFieldUpdateOperationsInput | string | null
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    isTalentFilled?: BoolFieldUpdateOperationsInput | boolean
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    discord?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    community?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    superteamLevel?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    cryptoExperience?: NullableStringFieldUpdateOperationsInput | string | null
    workPrefernce?: NullableStringFieldUpdateOperationsInput | string | null
    currentEmployer?: NullableStringFieldUpdateOperationsInput | string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: BoolFieldUpdateOperationsInput | boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    featureModalShown?: BoolFieldUpdateOperationsInput | boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: BoolFieldUpdateOperationsInput | boolean
    acceptedTOS?: BoolFieldUpdateOperationsInput | boolean
    stLead?: NullableStringFieldUpdateOperationsInput | string | null
    isBlocked?: BoolFieldUpdateOperationsInput | boolean
    privyDid?: StringFieldUpdateOperationsInput | string
    isKYCVerified?: BoolFieldUpdateOperationsInput | boolean
    kycName?: NullableStringFieldUpdateOperationsInput | string | null
    kycCountry?: NullableStringFieldUpdateOperationsInput | string | null
    kycAddress?: NullableStringFieldUpdateOperationsInput | string | null
    kycDOB?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDNumber?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDType?: NullableStringFieldUpdateOperationsInput | string | null
    currentSponsor?: SponsorsUpdateOneWithoutUserNestedInput
    UserSponsors?: UserSponsorsUpdateManyWithoutUserNestedInput
    poc?: BountiesUpdateManyWithoutPocNestedInput
    templates?: BountiesTemplatesUpdateManyWithoutPocNestedInput
    Comment?: CommentUpdateManyWithoutAuthorNestedInput
    Grants?: GrantsUpdateManyWithoutPocNestedInput
    UserInvites?: UserInvitesUpdateManyWithoutSenderNestedInput
    SubscribeBounty?: SubscribeBountyUpdateManyWithoutUserNestedInput
    PoW?: PoWUpdateManyWithoutUserNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    Hackathon?: HackathonUpdateOneWithoutUserNestedInput
    emailSettings?: EmailSettingsUpdateManyWithoutUserNestedInput
    TalentRankings?: TalentRankingsUpdateManyWithoutUserNestedInput
    Scouts?: ScoutsUpdateManyWithoutUserNestedInput
    GrantApplication?: GrantApplicationUpdateManyWithoutUserNestedInput
    SubscribeHackathon?: SubscribeHackathonUpdateManyWithoutUserNestedInput
    CreditLedger?: CreditLedgerUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutSubmissionInput = {
    id?: StringFieldUpdateOperationsInput | string
    publicKey?: NullableStringFieldUpdateOperationsInput | string | null
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    isTalentFilled?: BoolFieldUpdateOperationsInput | boolean
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    discord?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    community?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    superteamLevel?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    cryptoExperience?: NullableStringFieldUpdateOperationsInput | string | null
    workPrefernce?: NullableStringFieldUpdateOperationsInput | string | null
    currentEmployer?: NullableStringFieldUpdateOperationsInput | string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: BoolFieldUpdateOperationsInput | boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    currentSponsorId?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hackathonId?: NullableStringFieldUpdateOperationsInput | string | null
    featureModalShown?: BoolFieldUpdateOperationsInput | boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: BoolFieldUpdateOperationsInput | boolean
    acceptedTOS?: BoolFieldUpdateOperationsInput | boolean
    stLead?: NullableStringFieldUpdateOperationsInput | string | null
    isBlocked?: BoolFieldUpdateOperationsInput | boolean
    privyDid?: StringFieldUpdateOperationsInput | string
    isKYCVerified?: BoolFieldUpdateOperationsInput | boolean
    kycName?: NullableStringFieldUpdateOperationsInput | string | null
    kycCountry?: NullableStringFieldUpdateOperationsInput | string | null
    kycAddress?: NullableStringFieldUpdateOperationsInput | string | null
    kycDOB?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDNumber?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDType?: NullableStringFieldUpdateOperationsInput | string | null
    UserSponsors?: UserSponsorsUncheckedUpdateManyWithoutUserNestedInput
    poc?: BountiesUncheckedUpdateManyWithoutPocNestedInput
    templates?: BountiesTemplatesUncheckedUpdateManyWithoutPocNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutAuthorNestedInput
    Grants?: GrantsUncheckedUpdateManyWithoutPocNestedInput
    UserInvites?: UserInvitesUncheckedUpdateManyWithoutSenderNestedInput
    SubscribeBounty?: SubscribeBountyUncheckedUpdateManyWithoutUserNestedInput
    PoW?: PoWUncheckedUpdateManyWithoutUserNestedInput
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    emailSettings?: EmailSettingsUncheckedUpdateManyWithoutUserNestedInput
    TalentRankings?: TalentRankingsUncheckedUpdateManyWithoutUserNestedInput
    Scouts?: ScoutsUncheckedUpdateManyWithoutUserNestedInput
    GrantApplication?: GrantApplicationUncheckedUpdateManyWithoutUserNestedInput
    SubscribeHackathon?: SubscribeHackathonUncheckedUpdateManyWithoutUserNestedInput
    CreditLedger?: CreditLedgerUncheckedUpdateManyWithoutUserNestedInput
  }

  export type CommentUpsertWithWhereUniqueWithoutSubmissionInput = {
    where: CommentWhereUniqueInput
    update: XOR<CommentUpdateWithoutSubmissionInput, CommentUncheckedUpdateWithoutSubmissionInput>
    create: XOR<CommentCreateWithoutSubmissionInput, CommentUncheckedCreateWithoutSubmissionInput>
  }

  export type CommentUpdateWithWhereUniqueWithoutSubmissionInput = {
    where: CommentWhereUniqueInput
    data: XOR<CommentUpdateWithoutSubmissionInput, CommentUncheckedUpdateWithoutSubmissionInput>
  }

  export type CommentUpdateManyWithWhereWithoutSubmissionInput = {
    where: CommentScalarWhereInput
    data: XOR<CommentUpdateManyMutationInput, CommentUncheckedUpdateManyWithoutSubmissionInput>
  }

  export type CreditLedgerUpsertWithWhereUniqueWithoutSubmissionInput = {
    where: CreditLedgerWhereUniqueInput
    update: XOR<CreditLedgerUpdateWithoutSubmissionInput, CreditLedgerUncheckedUpdateWithoutSubmissionInput>
    create: XOR<CreditLedgerCreateWithoutSubmissionInput, CreditLedgerUncheckedCreateWithoutSubmissionInput>
  }

  export type CreditLedgerUpdateWithWhereUniqueWithoutSubmissionInput = {
    where: CreditLedgerWhereUniqueInput
    data: XOR<CreditLedgerUpdateWithoutSubmissionInput, CreditLedgerUncheckedUpdateWithoutSubmissionInput>
  }

  export type CreditLedgerUpdateManyWithWhereWithoutSubmissionInput = {
    where: CreditLedgerScalarWhereInput
    data: XOR<CreditLedgerUpdateManyMutationInput, CreditLedgerUncheckedUpdateManyWithoutSubmissionInput>
  }

  export type HackathonCreateWithoutSponsorInput = {
    id?: string
    slug: string
    name: string
    logo: string
    deadline?: Date | string | null
    startDate?: Date | string | null
    description: string
    altLogo?: string | null
    announceDate?: Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    listings?: BountiesCreateNestedManyWithoutHackathonInput
    User?: UserCreateNestedManyWithoutHackathonInput
    SubscribeHackathon?: SubscribeHackathonCreateNestedManyWithoutHackthonsInput
  }

  export type HackathonUncheckedCreateWithoutSponsorInput = {
    id?: string
    slug: string
    name: string
    logo: string
    deadline?: Date | string | null
    startDate?: Date | string | null
    description: string
    altLogo?: string | null
    announceDate?: Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    listings?: BountiesUncheckedCreateNestedManyWithoutHackathonInput
    User?: UserUncheckedCreateNestedManyWithoutHackathonInput
    SubscribeHackathon?: SubscribeHackathonUncheckedCreateNestedManyWithoutHackthonsInput
  }

  export type HackathonCreateOrConnectWithoutSponsorInput = {
    where: HackathonWhereUniqueInput
    create: XOR<HackathonCreateWithoutSponsorInput, HackathonUncheckedCreateWithoutSponsorInput>
  }

  export type UserSponsorsCreateWithoutSponsorInput = {
    role?: $Enums.Role
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutUserSponsorsInput
  }

  export type UserSponsorsUncheckedCreateWithoutSponsorInput = {
    userId: string
    role?: $Enums.Role
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserSponsorsCreateOrConnectWithoutSponsorInput = {
    where: UserSponsorsWhereUniqueInput
    create: XOR<UserSponsorsCreateWithoutSponsorInput, UserSponsorsUncheckedCreateWithoutSponsorInput>
  }

  export type UserSponsorsCreateManySponsorInputEnvelope = {
    data: UserSponsorsCreateManySponsorInput | UserSponsorsCreateManySponsorInput[]
    skipDuplicates?: boolean
  }

  export type BountiesCreateWithoutSponsorInput = {
    id?: string
    title: string
    slug: string
    description?: string | null
    deadline?: Date | string | null
    commitmentDate?: Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.status
    token?: string | null
    rewardAmount?: number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: number
    usdValue?: number | null
    source?: $Enums.Source
    isPublished?: boolean
    isFeatured?: boolean
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    applicationLink?: string | null
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: $Enums.BountyType
    requirements?: string | null
    isWinnersAnnounced?: boolean
    region?: string
    pocSocials?: string | null
    hackathonprize?: boolean
    applicationType?: $Enums.ApplicationType
    timeToComplete?: string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: string | null
    publishedAt?: Date | string | null
    isPrivate?: boolean
    compensationType?: $Enums.CompensationType
    maxRewardAsk?: number | null
    minRewardAsk?: number | null
    language?: string | null
    shouldSendEmail?: boolean
    isFndnPaying?: boolean
    winnersAnnouncedAt?: Date | string | null
    discordMessageIds?: NullableJsonNullValueInput | InputJsonValue
    template?: BountiesTemplatesCreateNestedOneWithoutBountiesInput
    poc: UserCreateNestedOneWithoutPocInput
    Submission?: SubmissionCreateNestedManyWithoutListingInput
    SubscribeBounty?: SubscribeBountyCreateNestedManyWithoutBountiesInput
    Hackathon?: HackathonCreateNestedOneWithoutListingsInput
    Scouts?: ScoutsCreateNestedManyWithoutListingInput
    Comments?: CommentCreateNestedManyWithoutListingInput
  }

  export type BountiesUncheckedCreateWithoutSponsorInput = {
    id?: string
    title: string
    slug: string
    description?: string | null
    deadline?: Date | string | null
    commitmentDate?: Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.status
    token?: string | null
    rewardAmount?: number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: number
    usdValue?: number | null
    pocId: string
    source?: $Enums.Source
    isPublished?: boolean
    isFeatured?: boolean
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    applicationLink?: string | null
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: $Enums.BountyType
    requirements?: string | null
    isWinnersAnnounced?: boolean
    templateId?: string | null
    region?: string
    pocSocials?: string | null
    hackathonprize?: boolean
    applicationType?: $Enums.ApplicationType
    timeToComplete?: string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: string | null
    publishedAt?: Date | string | null
    isPrivate?: boolean
    hackathonId?: string | null
    compensationType?: $Enums.CompensationType
    maxRewardAsk?: number | null
    minRewardAsk?: number | null
    language?: string | null
    shouldSendEmail?: boolean
    isFndnPaying?: boolean
    winnersAnnouncedAt?: Date | string | null
    discordMessageIds?: NullableJsonNullValueInput | InputJsonValue
    Submission?: SubmissionUncheckedCreateNestedManyWithoutListingInput
    SubscribeBounty?: SubscribeBountyUncheckedCreateNestedManyWithoutBountiesInput
    Scouts?: ScoutsUncheckedCreateNestedManyWithoutListingInput
    Comments?: CommentUncheckedCreateNestedManyWithoutListingInput
  }

  export type BountiesCreateOrConnectWithoutSponsorInput = {
    where: BountiesWhereUniqueInput
    create: XOR<BountiesCreateWithoutSponsorInput, BountiesUncheckedCreateWithoutSponsorInput>
  }

  export type BountiesCreateManySponsorInputEnvelope = {
    data: BountiesCreateManySponsorInput | BountiesCreateManySponsorInput[]
    skipDuplicates?: boolean
  }

  export type BountiesTemplatesCreateWithoutSponsorInput = {
    id?: string
    title?: string | null
    deadline?: Date | string | null
    slug?: string | null
    description?: string | null
    color?: string | null
    emoji?: string | null
    isFeatured?: boolean
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: $Enums.BountyType
    requirements?: string | null
    region?: string
    applicationType?: $Enums.ApplicationType
    status?: $Enums.status
    timeToComplete?: string | null
    token?: string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: string | null
    publishedAt?: Date | string | null
    compensationType?: $Enums.CompensationType
    maxRewardAsk?: number | null
    minRewardAsk?: number | null
    language?: string | null
    rewardAmount?: number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: number
    usdValue?: number | null
    pocSocials?: string | null
    source?: $Enums.Source
    isPublished?: boolean
    Bounties?: BountiesCreateNestedManyWithoutTemplateInput
    poc: UserCreateNestedOneWithoutTemplatesInput
  }

  export type BountiesTemplatesUncheckedCreateWithoutSponsorInput = {
    id?: string
    title?: string | null
    deadline?: Date | string | null
    slug?: string | null
    description?: string | null
    color?: string | null
    emoji?: string | null
    isFeatured?: boolean
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: $Enums.BountyType
    requirements?: string | null
    region?: string
    applicationType?: $Enums.ApplicationType
    status?: $Enums.status
    timeToComplete?: string | null
    token?: string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: string | null
    publishedAt?: Date | string | null
    compensationType?: $Enums.CompensationType
    maxRewardAsk?: number | null
    minRewardAsk?: number | null
    language?: string | null
    rewardAmount?: number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: number
    usdValue?: number | null
    pocId: string
    pocSocials?: string | null
    source?: $Enums.Source
    isPublished?: boolean
    Bounties?: BountiesUncheckedCreateNestedManyWithoutTemplateInput
  }

  export type BountiesTemplatesCreateOrConnectWithoutSponsorInput = {
    where: BountiesTemplatesWhereUniqueInput
    create: XOR<BountiesTemplatesCreateWithoutSponsorInput, BountiesTemplatesUncheckedCreateWithoutSponsorInput>
  }

  export type BountiesTemplatesCreateManySponsorInputEnvelope = {
    data: BountiesTemplatesCreateManySponsorInput | BountiesTemplatesCreateManySponsorInput[]
    skipDuplicates?: boolean
  }

  export type GrantsCreateWithoutSponsorInput = {
    id?: string
    title: string
    slug: string
    description?: string | null
    shortDescription?: string | null
    token?: string | null
    minReward?: number | null
    maxReward?: number | null
    totalPaid?: number
    totalApproved?: number
    historicalApplications?: number
    historicalPaid?: number
    link?: string | null
    isPublished?: boolean
    isFeatured?: boolean
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    skills?: NullableJsonNullValueInput | InputJsonValue
    logo?: string | null
    region?: string
    questions?: NullableJsonNullValueInput | InputJsonValue
    pocSocials?: string | null
    status?: $Enums.GrantStatus
    airtableId?: string | null
    avgResponseTime?: string | null
    isNative?: boolean
    isPrivate?: boolean
    references?: NullableJsonNullValueInput | InputJsonValue
    ai?: NullableJsonNullValueInput | InputJsonValue
    approverRecordId?: string | null
    emailSender?: string | null
    replyToEmail?: string | null
    emailSalutation?: string | null
    communityLink?: string | null
    poc: UserCreateNestedOneWithoutGrantsInput
    GrantApplication?: GrantApplicationCreateNestedManyWithoutGrantInput
    GrantTranche?: GrantTrancheCreateNestedManyWithoutGrantInput
  }

  export type GrantsUncheckedCreateWithoutSponsorInput = {
    id?: string
    title: string
    slug: string
    description?: string | null
    shortDescription?: string | null
    token?: string | null
    minReward?: number | null
    maxReward?: number | null
    totalPaid?: number
    totalApproved?: number
    historicalApplications?: number
    historicalPaid?: number
    link?: string | null
    pocId: string
    isPublished?: boolean
    isFeatured?: boolean
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    skills?: NullableJsonNullValueInput | InputJsonValue
    logo?: string | null
    region?: string
    questions?: NullableJsonNullValueInput | InputJsonValue
    pocSocials?: string | null
    status?: $Enums.GrantStatus
    airtableId?: string | null
    avgResponseTime?: string | null
    isNative?: boolean
    isPrivate?: boolean
    references?: NullableJsonNullValueInput | InputJsonValue
    ai?: NullableJsonNullValueInput | InputJsonValue
    approverRecordId?: string | null
    emailSender?: string | null
    replyToEmail?: string | null
    emailSalutation?: string | null
    communityLink?: string | null
    GrantApplication?: GrantApplicationUncheckedCreateNestedManyWithoutGrantInput
    GrantTranche?: GrantTrancheUncheckedCreateNestedManyWithoutGrantInput
  }

  export type GrantsCreateOrConnectWithoutSponsorInput = {
    where: GrantsWhereUniqueInput
    create: XOR<GrantsCreateWithoutSponsorInput, GrantsUncheckedCreateWithoutSponsorInput>
  }

  export type GrantsCreateManySponsorInputEnvelope = {
    data: GrantsCreateManySponsorInput | GrantsCreateManySponsorInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutCurrentSponsorInput = {
    id?: string
    publicKey?: string | null
    walletAddress?: string | null
    email: string
    username?: string | null
    photo?: string | null
    firstName?: string | null
    lastName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    role?: string
    isTalentFilled?: boolean
    interests?: string | null
    bio?: string | null
    twitter?: string | null
    discord?: string | null
    github?: string | null
    linkedin?: string | null
    website?: string | null
    telegram?: string | null
    community?: string | null
    experience?: string | null
    superteamLevel?: string | null
    location?: string | null
    cryptoExperience?: string | null
    workPrefernce?: string | null
    currentEmployer?: string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    emailVerified?: Date | string | null
    featureModalShown?: boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: boolean
    acceptedTOS?: boolean
    stLead?: string | null
    isBlocked?: boolean
    privyDid: string
    isKYCVerified?: boolean
    kycName?: string | null
    kycCountry?: string | null
    kycAddress?: string | null
    kycDOB?: string | null
    kycIDNumber?: string | null
    kycIDType?: string | null
    UserSponsors?: UserSponsorsCreateNestedManyWithoutUserInput
    poc?: BountiesCreateNestedManyWithoutPocInput
    templates?: BountiesTemplatesCreateNestedManyWithoutPocInput
    Comment?: CommentCreateNestedManyWithoutAuthorInput
    Submission?: SubmissionCreateNestedManyWithoutUserInput
    Grants?: GrantsCreateNestedManyWithoutPocInput
    UserInvites?: UserInvitesCreateNestedManyWithoutSenderInput
    SubscribeBounty?: SubscribeBountyCreateNestedManyWithoutUserInput
    PoW?: PoWCreateNestedManyWithoutUserInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    Hackathon?: HackathonCreateNestedOneWithoutUserInput
    emailSettings?: EmailSettingsCreateNestedManyWithoutUserInput
    TalentRankings?: TalentRankingsCreateNestedManyWithoutUserInput
    Scouts?: ScoutsCreateNestedManyWithoutUserInput
    GrantApplication?: GrantApplicationCreateNestedManyWithoutUserInput
    SubscribeHackathon?: SubscribeHackathonCreateNestedManyWithoutUserInput
    CreditLedger?: CreditLedgerCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutCurrentSponsorInput = {
    id?: string
    publicKey?: string | null
    walletAddress?: string | null
    email: string
    username?: string | null
    photo?: string | null
    firstName?: string | null
    lastName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    role?: string
    isTalentFilled?: boolean
    interests?: string | null
    bio?: string | null
    twitter?: string | null
    discord?: string | null
    github?: string | null
    linkedin?: string | null
    website?: string | null
    telegram?: string | null
    community?: string | null
    experience?: string | null
    superteamLevel?: string | null
    location?: string | null
    cryptoExperience?: string | null
    workPrefernce?: string | null
    currentEmployer?: string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    emailVerified?: Date | string | null
    hackathonId?: string | null
    featureModalShown?: boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: boolean
    acceptedTOS?: boolean
    stLead?: string | null
    isBlocked?: boolean
    privyDid: string
    isKYCVerified?: boolean
    kycName?: string | null
    kycCountry?: string | null
    kycAddress?: string | null
    kycDOB?: string | null
    kycIDNumber?: string | null
    kycIDType?: string | null
    UserSponsors?: UserSponsorsUncheckedCreateNestedManyWithoutUserInput
    poc?: BountiesUncheckedCreateNestedManyWithoutPocInput
    templates?: BountiesTemplatesUncheckedCreateNestedManyWithoutPocInput
    Comment?: CommentUncheckedCreateNestedManyWithoutAuthorInput
    Submission?: SubmissionUncheckedCreateNestedManyWithoutUserInput
    Grants?: GrantsUncheckedCreateNestedManyWithoutPocInput
    UserInvites?: UserInvitesUncheckedCreateNestedManyWithoutSenderInput
    SubscribeBounty?: SubscribeBountyUncheckedCreateNestedManyWithoutUserInput
    PoW?: PoWUncheckedCreateNestedManyWithoutUserInput
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    emailSettings?: EmailSettingsUncheckedCreateNestedManyWithoutUserInput
    TalentRankings?: TalentRankingsUncheckedCreateNestedManyWithoutUserInput
    Scouts?: ScoutsUncheckedCreateNestedManyWithoutUserInput
    GrantApplication?: GrantApplicationUncheckedCreateNestedManyWithoutUserInput
    SubscribeHackathon?: SubscribeHackathonUncheckedCreateNestedManyWithoutUserInput
    CreditLedger?: CreditLedgerUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutCurrentSponsorInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCurrentSponsorInput, UserUncheckedCreateWithoutCurrentSponsorInput>
  }

  export type UserCreateManyCurrentSponsorInputEnvelope = {
    data: UserCreateManyCurrentSponsorInput | UserCreateManyCurrentSponsorInput[]
    skipDuplicates?: boolean
  }

  export type UserInvitesCreateWithoutSponsorInput = {
    id?: string
    email: string
    createdAt?: Date | string
    updatedAt?: Date | string
    memberType?: $Enums.Role
    token: string
    expires: Date | string
    sender: UserCreateNestedOneWithoutUserInvitesInput
  }

  export type UserInvitesUncheckedCreateWithoutSponsorInput = {
    id?: string
    email: string
    senderId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    memberType?: $Enums.Role
    token: string
    expires: Date | string
  }

  export type UserInvitesCreateOrConnectWithoutSponsorInput = {
    where: UserInvitesWhereUniqueInput
    create: XOR<UserInvitesCreateWithoutSponsorInput, UserInvitesUncheckedCreateWithoutSponsorInput>
  }

  export type UserInvitesCreateManySponsorInputEnvelope = {
    data: UserInvitesCreateManySponsorInput | UserInvitesCreateManySponsorInput[]
    skipDuplicates?: boolean
  }

  export type HackathonUpsertWithoutSponsorInput = {
    update: XOR<HackathonUpdateWithoutSponsorInput, HackathonUncheckedUpdateWithoutSponsorInput>
    create: XOR<HackathonCreateWithoutSponsorInput, HackathonUncheckedCreateWithoutSponsorInput>
    where?: HackathonWhereInput
  }

  export type HackathonUpdateToOneWithWhereWithoutSponsorInput = {
    where?: HackathonWhereInput
    data: XOR<HackathonUpdateWithoutSponsorInput, HackathonUncheckedUpdateWithoutSponsorInput>
  }

  export type HackathonUpdateWithoutSponsorInput = {
    id?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    logo?: StringFieldUpdateOperationsInput | string
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    altLogo?: NullableStringFieldUpdateOperationsInput | string | null
    announceDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    listings?: BountiesUpdateManyWithoutHackathonNestedInput
    User?: UserUpdateManyWithoutHackathonNestedInput
    SubscribeHackathon?: SubscribeHackathonUpdateManyWithoutHackthonsNestedInput
  }

  export type HackathonUncheckedUpdateWithoutSponsorInput = {
    id?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    logo?: StringFieldUpdateOperationsInput | string
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    altLogo?: NullableStringFieldUpdateOperationsInput | string | null
    announceDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    listings?: BountiesUncheckedUpdateManyWithoutHackathonNestedInput
    User?: UserUncheckedUpdateManyWithoutHackathonNestedInput
    SubscribeHackathon?: SubscribeHackathonUncheckedUpdateManyWithoutHackthonsNestedInput
  }

  export type UserSponsorsUpsertWithWhereUniqueWithoutSponsorInput = {
    where: UserSponsorsWhereUniqueInput
    update: XOR<UserSponsorsUpdateWithoutSponsorInput, UserSponsorsUncheckedUpdateWithoutSponsorInput>
    create: XOR<UserSponsorsCreateWithoutSponsorInput, UserSponsorsUncheckedCreateWithoutSponsorInput>
  }

  export type UserSponsorsUpdateWithWhereUniqueWithoutSponsorInput = {
    where: UserSponsorsWhereUniqueInput
    data: XOR<UserSponsorsUpdateWithoutSponsorInput, UserSponsorsUncheckedUpdateWithoutSponsorInput>
  }

  export type UserSponsorsUpdateManyWithWhereWithoutSponsorInput = {
    where: UserSponsorsScalarWhereInput
    data: XOR<UserSponsorsUpdateManyMutationInput, UserSponsorsUncheckedUpdateManyWithoutSponsorInput>
  }

  export type UserSponsorsScalarWhereInput = {
    AND?: UserSponsorsScalarWhereInput | UserSponsorsScalarWhereInput[]
    OR?: UserSponsorsScalarWhereInput[]
    NOT?: UserSponsorsScalarWhereInput | UserSponsorsScalarWhereInput[]
    userId?: StringFilter<"UserSponsors"> | string
    sponsorId?: StringFilter<"UserSponsors"> | string
    role?: EnumRoleFilter<"UserSponsors"> | $Enums.Role
    createdAt?: DateTimeFilter<"UserSponsors"> | Date | string
    updatedAt?: DateTimeFilter<"UserSponsors"> | Date | string
  }

  export type BountiesUpsertWithWhereUniqueWithoutSponsorInput = {
    where: BountiesWhereUniqueInput
    update: XOR<BountiesUpdateWithoutSponsorInput, BountiesUncheckedUpdateWithoutSponsorInput>
    create: XOR<BountiesCreateWithoutSponsorInput, BountiesUncheckedCreateWithoutSponsorInput>
  }

  export type BountiesUpdateWithWhereUniqueWithoutSponsorInput = {
    where: BountiesWhereUniqueInput
    data: XOR<BountiesUpdateWithoutSponsorInput, BountiesUncheckedUpdateWithoutSponsorInput>
  }

  export type BountiesUpdateManyWithWhereWithoutSponsorInput = {
    where: BountiesScalarWhereInput
    data: XOR<BountiesUpdateManyMutationInput, BountiesUncheckedUpdateManyWithoutSponsorInput>
  }

  export type BountiesTemplatesUpsertWithWhereUniqueWithoutSponsorInput = {
    where: BountiesTemplatesWhereUniqueInput
    update: XOR<BountiesTemplatesUpdateWithoutSponsorInput, BountiesTemplatesUncheckedUpdateWithoutSponsorInput>
    create: XOR<BountiesTemplatesCreateWithoutSponsorInput, BountiesTemplatesUncheckedCreateWithoutSponsorInput>
  }

  export type BountiesTemplatesUpdateWithWhereUniqueWithoutSponsorInput = {
    where: BountiesTemplatesWhereUniqueInput
    data: XOR<BountiesTemplatesUpdateWithoutSponsorInput, BountiesTemplatesUncheckedUpdateWithoutSponsorInput>
  }

  export type BountiesTemplatesUpdateManyWithWhereWithoutSponsorInput = {
    where: BountiesTemplatesScalarWhereInput
    data: XOR<BountiesTemplatesUpdateManyMutationInput, BountiesTemplatesUncheckedUpdateManyWithoutSponsorInput>
  }

  export type BountiesTemplatesScalarWhereInput = {
    AND?: BountiesTemplatesScalarWhereInput | BountiesTemplatesScalarWhereInput[]
    OR?: BountiesTemplatesScalarWhereInput[]
    NOT?: BountiesTemplatesScalarWhereInput | BountiesTemplatesScalarWhereInput[]
    id?: StringFilter<"BountiesTemplates"> | string
    title?: StringNullableFilter<"BountiesTemplates"> | string | null
    deadline?: DateTimeNullableFilter<"BountiesTemplates"> | Date | string | null
    slug?: StringNullableFilter<"BountiesTemplates"> | string | null
    description?: StringNullableFilter<"BountiesTemplates"> | string | null
    color?: StringNullableFilter<"BountiesTemplates"> | string | null
    emoji?: StringNullableFilter<"BountiesTemplates"> | string | null
    isFeatured?: BoolFilter<"BountiesTemplates"> | boolean
    isActive?: BoolFilter<"BountiesTemplates"> | boolean
    isArchived?: BoolFilter<"BountiesTemplates"> | boolean
    createdAt?: DateTimeFilter<"BountiesTemplates"> | Date | string
    updatedAt?: DateTimeFilter<"BountiesTemplates"> | Date | string
    skills?: JsonNullableFilter<"BountiesTemplates">
    type?: EnumBountyTypeFilter<"BountiesTemplates"> | $Enums.BountyType
    requirements?: StringNullableFilter<"BountiesTemplates"> | string | null
    region?: StringFilter<"BountiesTemplates"> | string
    applicationType?: EnumApplicationTypeFilter<"BountiesTemplates"> | $Enums.ApplicationType
    status?: EnumstatusFilter<"BountiesTemplates"> | $Enums.status
    timeToComplete?: StringNullableFilter<"BountiesTemplates"> | string | null
    token?: StringNullableFilter<"BountiesTemplates"> | string | null
    references?: JsonNullableFilter<"BountiesTemplates">
    referredBy?: StringNullableFilter<"BountiesTemplates"> | string | null
    publishedAt?: DateTimeNullableFilter<"BountiesTemplates"> | Date | string | null
    compensationType?: EnumCompensationTypeFilter<"BountiesTemplates"> | $Enums.CompensationType
    maxRewardAsk?: IntNullableFilter<"BountiesTemplates"> | number | null
    minRewardAsk?: IntNullableFilter<"BountiesTemplates"> | number | null
    language?: StringNullableFilter<"BountiesTemplates"> | string | null
    rewardAmount?: FloatNullableFilter<"BountiesTemplates"> | number | null
    rewards?: JsonNullableFilter<"BountiesTemplates">
    maxBonusSpots?: IntFilter<"BountiesTemplates"> | number
    usdValue?: FloatNullableFilter<"BountiesTemplates"> | number | null
    sponsorId?: StringFilter<"BountiesTemplates"> | string
    pocId?: StringFilter<"BountiesTemplates"> | string
    pocSocials?: StringNullableFilter<"BountiesTemplates"> | string | null
    source?: EnumSourceFilter<"BountiesTemplates"> | $Enums.Source
    isPublished?: BoolFilter<"BountiesTemplates"> | boolean
  }

  export type GrantsUpsertWithWhereUniqueWithoutSponsorInput = {
    where: GrantsWhereUniqueInput
    update: XOR<GrantsUpdateWithoutSponsorInput, GrantsUncheckedUpdateWithoutSponsorInput>
    create: XOR<GrantsCreateWithoutSponsorInput, GrantsUncheckedCreateWithoutSponsorInput>
  }

  export type GrantsUpdateWithWhereUniqueWithoutSponsorInput = {
    where: GrantsWhereUniqueInput
    data: XOR<GrantsUpdateWithoutSponsorInput, GrantsUncheckedUpdateWithoutSponsorInput>
  }

  export type GrantsUpdateManyWithWhereWithoutSponsorInput = {
    where: GrantsScalarWhereInput
    data: XOR<GrantsUpdateManyMutationInput, GrantsUncheckedUpdateManyWithoutSponsorInput>
  }

  export type GrantsScalarWhereInput = {
    AND?: GrantsScalarWhereInput | GrantsScalarWhereInput[]
    OR?: GrantsScalarWhereInput[]
    NOT?: GrantsScalarWhereInput | GrantsScalarWhereInput[]
    id?: StringFilter<"Grants"> | string
    title?: StringFilter<"Grants"> | string
    slug?: StringFilter<"Grants"> | string
    description?: StringNullableFilter<"Grants"> | string | null
    shortDescription?: StringNullableFilter<"Grants"> | string | null
    token?: StringNullableFilter<"Grants"> | string | null
    minReward?: FloatNullableFilter<"Grants"> | number | null
    maxReward?: FloatNullableFilter<"Grants"> | number | null
    totalPaid?: FloatFilter<"Grants"> | number
    totalApproved?: FloatFilter<"Grants"> | number
    historicalApplications?: IntFilter<"Grants"> | number
    historicalPaid?: FloatFilter<"Grants"> | number
    link?: StringNullableFilter<"Grants"> | string | null
    sponsorId?: StringFilter<"Grants"> | string
    pocId?: StringFilter<"Grants"> | string
    isPublished?: BoolFilter<"Grants"> | boolean
    isFeatured?: BoolFilter<"Grants"> | boolean
    isActive?: BoolFilter<"Grants"> | boolean
    isArchived?: BoolFilter<"Grants"> | boolean
    createdAt?: DateTimeFilter<"Grants"> | Date | string
    updatedAt?: DateTimeFilter<"Grants"> | Date | string
    skills?: JsonNullableFilter<"Grants">
    logo?: StringNullableFilter<"Grants"> | string | null
    region?: StringFilter<"Grants"> | string
    questions?: JsonNullableFilter<"Grants">
    pocSocials?: StringNullableFilter<"Grants"> | string | null
    status?: EnumGrantStatusFilter<"Grants"> | $Enums.GrantStatus
    airtableId?: StringNullableFilter<"Grants"> | string | null
    avgResponseTime?: StringNullableFilter<"Grants"> | string | null
    isNative?: BoolFilter<"Grants"> | boolean
    isPrivate?: BoolFilter<"Grants"> | boolean
    references?: JsonNullableFilter<"Grants">
    ai?: JsonNullableFilter<"Grants">
    approverRecordId?: StringNullableFilter<"Grants"> | string | null
    emailSender?: StringNullableFilter<"Grants"> | string | null
    replyToEmail?: StringNullableFilter<"Grants"> | string | null
    emailSalutation?: StringNullableFilter<"Grants"> | string | null
    communityLink?: StringNullableFilter<"Grants"> | string | null
  }

  export type UserUpsertWithWhereUniqueWithoutCurrentSponsorInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutCurrentSponsorInput, UserUncheckedUpdateWithoutCurrentSponsorInput>
    create: XOR<UserCreateWithoutCurrentSponsorInput, UserUncheckedCreateWithoutCurrentSponsorInput>
  }

  export type UserUpdateWithWhereUniqueWithoutCurrentSponsorInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutCurrentSponsorInput, UserUncheckedUpdateWithoutCurrentSponsorInput>
  }

  export type UserUpdateManyWithWhereWithoutCurrentSponsorInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutCurrentSponsorInput>
  }

  export type UserScalarWhereInput = {
    AND?: UserScalarWhereInput | UserScalarWhereInput[]
    OR?: UserScalarWhereInput[]
    NOT?: UserScalarWhereInput | UserScalarWhereInput[]
    id?: StringFilter<"User"> | string
    publicKey?: StringNullableFilter<"User"> | string | null
    walletAddress?: StringNullableFilter<"User"> | string | null
    email?: StringFilter<"User"> | string
    username?: StringNullableFilter<"User"> | string | null
    photo?: StringNullableFilter<"User"> | string | null
    firstName?: StringNullableFilter<"User"> | string | null
    lastName?: StringNullableFilter<"User"> | string | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    isVerified?: BoolFilter<"User"> | boolean
    role?: StringFilter<"User"> | string
    isTalentFilled?: BoolFilter<"User"> | boolean
    interests?: StringNullableFilter<"User"> | string | null
    bio?: StringNullableFilter<"User"> | string | null
    twitter?: StringNullableFilter<"User"> | string | null
    discord?: StringNullableFilter<"User"> | string | null
    github?: StringNullableFilter<"User"> | string | null
    linkedin?: StringNullableFilter<"User"> | string | null
    website?: StringNullableFilter<"User"> | string | null
    telegram?: StringNullableFilter<"User"> | string | null
    community?: StringNullableFilter<"User"> | string | null
    experience?: StringNullableFilter<"User"> | string | null
    superteamLevel?: StringNullableFilter<"User"> | string | null
    location?: StringNullableFilter<"User"> | string | null
    cryptoExperience?: StringNullableFilter<"User"> | string | null
    workPrefernce?: StringNullableFilter<"User"> | string | null
    currentEmployer?: StringNullableFilter<"User"> | string | null
    notifications?: JsonNullableFilter<"User">
    private?: BoolFilter<"User"> | boolean
    skills?: JsonNullableFilter<"User">
    currentSponsorId?: StringNullableFilter<"User"> | string | null
    emailVerified?: DateTimeNullableFilter<"User"> | Date | string | null
    hackathonId?: StringNullableFilter<"User"> | string | null
    featureModalShown?: BoolFilter<"User"> | boolean
    surveysShown?: JsonNullableFilter<"User">
    stRecommended?: BoolFilter<"User"> | boolean
    acceptedTOS?: BoolFilter<"User"> | boolean
    stLead?: StringNullableFilter<"User"> | string | null
    isBlocked?: BoolFilter<"User"> | boolean
    privyDid?: StringFilter<"User"> | string
    isKYCVerified?: BoolFilter<"User"> | boolean
    kycName?: StringNullableFilter<"User"> | string | null
    kycCountry?: StringNullableFilter<"User"> | string | null
    kycAddress?: StringNullableFilter<"User"> | string | null
    kycDOB?: StringNullableFilter<"User"> | string | null
    kycIDNumber?: StringNullableFilter<"User"> | string | null
    kycIDType?: StringNullableFilter<"User"> | string | null
  }

  export type UserInvitesUpsertWithWhereUniqueWithoutSponsorInput = {
    where: UserInvitesWhereUniqueInput
    update: XOR<UserInvitesUpdateWithoutSponsorInput, UserInvitesUncheckedUpdateWithoutSponsorInput>
    create: XOR<UserInvitesCreateWithoutSponsorInput, UserInvitesUncheckedCreateWithoutSponsorInput>
  }

  export type UserInvitesUpdateWithWhereUniqueWithoutSponsorInput = {
    where: UserInvitesWhereUniqueInput
    data: XOR<UserInvitesUpdateWithoutSponsorInput, UserInvitesUncheckedUpdateWithoutSponsorInput>
  }

  export type UserInvitesUpdateManyWithWhereWithoutSponsorInput = {
    where: UserInvitesScalarWhereInput
    data: XOR<UserInvitesUpdateManyMutationInput, UserInvitesUncheckedUpdateManyWithoutSponsorInput>
  }

  export type UserInvitesScalarWhereInput = {
    AND?: UserInvitesScalarWhereInput | UserInvitesScalarWhereInput[]
    OR?: UserInvitesScalarWhereInput[]
    NOT?: UserInvitesScalarWhereInput | UserInvitesScalarWhereInput[]
    id?: StringFilter<"UserInvites"> | string
    email?: StringFilter<"UserInvites"> | string
    senderId?: StringFilter<"UserInvites"> | string
    createdAt?: DateTimeFilter<"UserInvites"> | Date | string
    updatedAt?: DateTimeFilter<"UserInvites"> | Date | string
    sponsorId?: StringFilter<"UserInvites"> | string
    memberType?: EnumRoleFilter<"UserInvites"> | $Enums.Role
    token?: StringFilter<"UserInvites"> | string
    expires?: DateTimeFilter<"UserInvites"> | Date | string
  }

  export type UserCreateWithoutAccountsInput = {
    id?: string
    publicKey?: string | null
    walletAddress?: string | null
    email: string
    username?: string | null
    photo?: string | null
    firstName?: string | null
    lastName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    role?: string
    isTalentFilled?: boolean
    interests?: string | null
    bio?: string | null
    twitter?: string | null
    discord?: string | null
    github?: string | null
    linkedin?: string | null
    website?: string | null
    telegram?: string | null
    community?: string | null
    experience?: string | null
    superteamLevel?: string | null
    location?: string | null
    cryptoExperience?: string | null
    workPrefernce?: string | null
    currentEmployer?: string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    emailVerified?: Date | string | null
    featureModalShown?: boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: boolean
    acceptedTOS?: boolean
    stLead?: string | null
    isBlocked?: boolean
    privyDid: string
    isKYCVerified?: boolean
    kycName?: string | null
    kycCountry?: string | null
    kycAddress?: string | null
    kycDOB?: string | null
    kycIDNumber?: string | null
    kycIDType?: string | null
    currentSponsor?: SponsorsCreateNestedOneWithoutUserInput
    UserSponsors?: UserSponsorsCreateNestedManyWithoutUserInput
    poc?: BountiesCreateNestedManyWithoutPocInput
    templates?: BountiesTemplatesCreateNestedManyWithoutPocInput
    Comment?: CommentCreateNestedManyWithoutAuthorInput
    Submission?: SubmissionCreateNestedManyWithoutUserInput
    Grants?: GrantsCreateNestedManyWithoutPocInput
    UserInvites?: UserInvitesCreateNestedManyWithoutSenderInput
    SubscribeBounty?: SubscribeBountyCreateNestedManyWithoutUserInput
    PoW?: PoWCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    Hackathon?: HackathonCreateNestedOneWithoutUserInput
    emailSettings?: EmailSettingsCreateNestedManyWithoutUserInput
    TalentRankings?: TalentRankingsCreateNestedManyWithoutUserInput
    Scouts?: ScoutsCreateNestedManyWithoutUserInput
    GrantApplication?: GrantApplicationCreateNestedManyWithoutUserInput
    SubscribeHackathon?: SubscribeHackathonCreateNestedManyWithoutUserInput
    CreditLedger?: CreditLedgerCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutAccountsInput = {
    id?: string
    publicKey?: string | null
    walletAddress?: string | null
    email: string
    username?: string | null
    photo?: string | null
    firstName?: string | null
    lastName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    role?: string
    isTalentFilled?: boolean
    interests?: string | null
    bio?: string | null
    twitter?: string | null
    discord?: string | null
    github?: string | null
    linkedin?: string | null
    website?: string | null
    telegram?: string | null
    community?: string | null
    experience?: string | null
    superteamLevel?: string | null
    location?: string | null
    cryptoExperience?: string | null
    workPrefernce?: string | null
    currentEmployer?: string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    currentSponsorId?: string | null
    emailVerified?: Date | string | null
    hackathonId?: string | null
    featureModalShown?: boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: boolean
    acceptedTOS?: boolean
    stLead?: string | null
    isBlocked?: boolean
    privyDid: string
    isKYCVerified?: boolean
    kycName?: string | null
    kycCountry?: string | null
    kycAddress?: string | null
    kycDOB?: string | null
    kycIDNumber?: string | null
    kycIDType?: string | null
    UserSponsors?: UserSponsorsUncheckedCreateNestedManyWithoutUserInput
    poc?: BountiesUncheckedCreateNestedManyWithoutPocInput
    templates?: BountiesTemplatesUncheckedCreateNestedManyWithoutPocInput
    Comment?: CommentUncheckedCreateNestedManyWithoutAuthorInput
    Submission?: SubmissionUncheckedCreateNestedManyWithoutUserInput
    Grants?: GrantsUncheckedCreateNestedManyWithoutPocInput
    UserInvites?: UserInvitesUncheckedCreateNestedManyWithoutSenderInput
    SubscribeBounty?: SubscribeBountyUncheckedCreateNestedManyWithoutUserInput
    PoW?: PoWUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    emailSettings?: EmailSettingsUncheckedCreateNestedManyWithoutUserInput
    TalentRankings?: TalentRankingsUncheckedCreateNestedManyWithoutUserInput
    Scouts?: ScoutsUncheckedCreateNestedManyWithoutUserInput
    GrantApplication?: GrantApplicationUncheckedCreateNestedManyWithoutUserInput
    SubscribeHackathon?: SubscribeHackathonUncheckedCreateNestedManyWithoutUserInput
    CreditLedger?: CreditLedgerUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutAccountsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAccountsInput, UserUncheckedCreateWithoutAccountsInput>
  }

  export type UserUpsertWithoutAccountsInput = {
    update: XOR<UserUpdateWithoutAccountsInput, UserUncheckedUpdateWithoutAccountsInput>
    create: XOR<UserCreateWithoutAccountsInput, UserUncheckedCreateWithoutAccountsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAccountsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAccountsInput, UserUncheckedUpdateWithoutAccountsInput>
  }

  export type UserUpdateWithoutAccountsInput = {
    id?: StringFieldUpdateOperationsInput | string
    publicKey?: NullableStringFieldUpdateOperationsInput | string | null
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    isTalentFilled?: BoolFieldUpdateOperationsInput | boolean
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    discord?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    community?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    superteamLevel?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    cryptoExperience?: NullableStringFieldUpdateOperationsInput | string | null
    workPrefernce?: NullableStringFieldUpdateOperationsInput | string | null
    currentEmployer?: NullableStringFieldUpdateOperationsInput | string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: BoolFieldUpdateOperationsInput | boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    featureModalShown?: BoolFieldUpdateOperationsInput | boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: BoolFieldUpdateOperationsInput | boolean
    acceptedTOS?: BoolFieldUpdateOperationsInput | boolean
    stLead?: NullableStringFieldUpdateOperationsInput | string | null
    isBlocked?: BoolFieldUpdateOperationsInput | boolean
    privyDid?: StringFieldUpdateOperationsInput | string
    isKYCVerified?: BoolFieldUpdateOperationsInput | boolean
    kycName?: NullableStringFieldUpdateOperationsInput | string | null
    kycCountry?: NullableStringFieldUpdateOperationsInput | string | null
    kycAddress?: NullableStringFieldUpdateOperationsInput | string | null
    kycDOB?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDNumber?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDType?: NullableStringFieldUpdateOperationsInput | string | null
    currentSponsor?: SponsorsUpdateOneWithoutUserNestedInput
    UserSponsors?: UserSponsorsUpdateManyWithoutUserNestedInput
    poc?: BountiesUpdateManyWithoutPocNestedInput
    templates?: BountiesTemplatesUpdateManyWithoutPocNestedInput
    Comment?: CommentUpdateManyWithoutAuthorNestedInput
    Submission?: SubmissionUpdateManyWithoutUserNestedInput
    Grants?: GrantsUpdateManyWithoutPocNestedInput
    UserInvites?: UserInvitesUpdateManyWithoutSenderNestedInput
    SubscribeBounty?: SubscribeBountyUpdateManyWithoutUserNestedInput
    PoW?: PoWUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    Hackathon?: HackathonUpdateOneWithoutUserNestedInput
    emailSettings?: EmailSettingsUpdateManyWithoutUserNestedInput
    TalentRankings?: TalentRankingsUpdateManyWithoutUserNestedInput
    Scouts?: ScoutsUpdateManyWithoutUserNestedInput
    GrantApplication?: GrantApplicationUpdateManyWithoutUserNestedInput
    SubscribeHackathon?: SubscribeHackathonUpdateManyWithoutUserNestedInput
    CreditLedger?: CreditLedgerUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutAccountsInput = {
    id?: StringFieldUpdateOperationsInput | string
    publicKey?: NullableStringFieldUpdateOperationsInput | string | null
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    isTalentFilled?: BoolFieldUpdateOperationsInput | boolean
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    discord?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    community?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    superteamLevel?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    cryptoExperience?: NullableStringFieldUpdateOperationsInput | string | null
    workPrefernce?: NullableStringFieldUpdateOperationsInput | string | null
    currentEmployer?: NullableStringFieldUpdateOperationsInput | string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: BoolFieldUpdateOperationsInput | boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    currentSponsorId?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hackathonId?: NullableStringFieldUpdateOperationsInput | string | null
    featureModalShown?: BoolFieldUpdateOperationsInput | boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: BoolFieldUpdateOperationsInput | boolean
    acceptedTOS?: BoolFieldUpdateOperationsInput | boolean
    stLead?: NullableStringFieldUpdateOperationsInput | string | null
    isBlocked?: BoolFieldUpdateOperationsInput | boolean
    privyDid?: StringFieldUpdateOperationsInput | string
    isKYCVerified?: BoolFieldUpdateOperationsInput | boolean
    kycName?: NullableStringFieldUpdateOperationsInput | string | null
    kycCountry?: NullableStringFieldUpdateOperationsInput | string | null
    kycAddress?: NullableStringFieldUpdateOperationsInput | string | null
    kycDOB?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDNumber?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDType?: NullableStringFieldUpdateOperationsInput | string | null
    UserSponsors?: UserSponsorsUncheckedUpdateManyWithoutUserNestedInput
    poc?: BountiesUncheckedUpdateManyWithoutPocNestedInput
    templates?: BountiesTemplatesUncheckedUpdateManyWithoutPocNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutAuthorNestedInput
    Submission?: SubmissionUncheckedUpdateManyWithoutUserNestedInput
    Grants?: GrantsUncheckedUpdateManyWithoutPocNestedInput
    UserInvites?: UserInvitesUncheckedUpdateManyWithoutSenderNestedInput
    SubscribeBounty?: SubscribeBountyUncheckedUpdateManyWithoutUserNestedInput
    PoW?: PoWUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    emailSettings?: EmailSettingsUncheckedUpdateManyWithoutUserNestedInput
    TalentRankings?: TalentRankingsUncheckedUpdateManyWithoutUserNestedInput
    Scouts?: ScoutsUncheckedUpdateManyWithoutUserNestedInput
    GrantApplication?: GrantApplicationUncheckedUpdateManyWithoutUserNestedInput
    SubscribeHackathon?: SubscribeHackathonUncheckedUpdateManyWithoutUserNestedInput
    CreditLedger?: CreditLedgerUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateWithoutSessionsInput = {
    id?: string
    publicKey?: string | null
    walletAddress?: string | null
    email: string
    username?: string | null
    photo?: string | null
    firstName?: string | null
    lastName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    role?: string
    isTalentFilled?: boolean
    interests?: string | null
    bio?: string | null
    twitter?: string | null
    discord?: string | null
    github?: string | null
    linkedin?: string | null
    website?: string | null
    telegram?: string | null
    community?: string | null
    experience?: string | null
    superteamLevel?: string | null
    location?: string | null
    cryptoExperience?: string | null
    workPrefernce?: string | null
    currentEmployer?: string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    emailVerified?: Date | string | null
    featureModalShown?: boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: boolean
    acceptedTOS?: boolean
    stLead?: string | null
    isBlocked?: boolean
    privyDid: string
    isKYCVerified?: boolean
    kycName?: string | null
    kycCountry?: string | null
    kycAddress?: string | null
    kycDOB?: string | null
    kycIDNumber?: string | null
    kycIDType?: string | null
    currentSponsor?: SponsorsCreateNestedOneWithoutUserInput
    UserSponsors?: UserSponsorsCreateNestedManyWithoutUserInput
    poc?: BountiesCreateNestedManyWithoutPocInput
    templates?: BountiesTemplatesCreateNestedManyWithoutPocInput
    Comment?: CommentCreateNestedManyWithoutAuthorInput
    Submission?: SubmissionCreateNestedManyWithoutUserInput
    Grants?: GrantsCreateNestedManyWithoutPocInput
    UserInvites?: UserInvitesCreateNestedManyWithoutSenderInput
    SubscribeBounty?: SubscribeBountyCreateNestedManyWithoutUserInput
    PoW?: PoWCreateNestedManyWithoutUserInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    Hackathon?: HackathonCreateNestedOneWithoutUserInput
    emailSettings?: EmailSettingsCreateNestedManyWithoutUserInput
    TalentRankings?: TalentRankingsCreateNestedManyWithoutUserInput
    Scouts?: ScoutsCreateNestedManyWithoutUserInput
    GrantApplication?: GrantApplicationCreateNestedManyWithoutUserInput
    SubscribeHackathon?: SubscribeHackathonCreateNestedManyWithoutUserInput
    CreditLedger?: CreditLedgerCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutSessionsInput = {
    id?: string
    publicKey?: string | null
    walletAddress?: string | null
    email: string
    username?: string | null
    photo?: string | null
    firstName?: string | null
    lastName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    role?: string
    isTalentFilled?: boolean
    interests?: string | null
    bio?: string | null
    twitter?: string | null
    discord?: string | null
    github?: string | null
    linkedin?: string | null
    website?: string | null
    telegram?: string | null
    community?: string | null
    experience?: string | null
    superteamLevel?: string | null
    location?: string | null
    cryptoExperience?: string | null
    workPrefernce?: string | null
    currentEmployer?: string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    currentSponsorId?: string | null
    emailVerified?: Date | string | null
    hackathonId?: string | null
    featureModalShown?: boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: boolean
    acceptedTOS?: boolean
    stLead?: string | null
    isBlocked?: boolean
    privyDid: string
    isKYCVerified?: boolean
    kycName?: string | null
    kycCountry?: string | null
    kycAddress?: string | null
    kycDOB?: string | null
    kycIDNumber?: string | null
    kycIDType?: string | null
    UserSponsors?: UserSponsorsUncheckedCreateNestedManyWithoutUserInput
    poc?: BountiesUncheckedCreateNestedManyWithoutPocInput
    templates?: BountiesTemplatesUncheckedCreateNestedManyWithoutPocInput
    Comment?: CommentUncheckedCreateNestedManyWithoutAuthorInput
    Submission?: SubmissionUncheckedCreateNestedManyWithoutUserInput
    Grants?: GrantsUncheckedCreateNestedManyWithoutPocInput
    UserInvites?: UserInvitesUncheckedCreateNestedManyWithoutSenderInput
    SubscribeBounty?: SubscribeBountyUncheckedCreateNestedManyWithoutUserInput
    PoW?: PoWUncheckedCreateNestedManyWithoutUserInput
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    emailSettings?: EmailSettingsUncheckedCreateNestedManyWithoutUserInput
    TalentRankings?: TalentRankingsUncheckedCreateNestedManyWithoutUserInput
    Scouts?: ScoutsUncheckedCreateNestedManyWithoutUserInput
    GrantApplication?: GrantApplicationUncheckedCreateNestedManyWithoutUserInput
    SubscribeHackathon?: SubscribeHackathonUncheckedCreateNestedManyWithoutUserInput
    CreditLedger?: CreditLedgerUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutSessionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
  }

  export type UserUpsertWithoutSessionsInput = {
    update: XOR<UserUpdateWithoutSessionsInput, UserUncheckedUpdateWithoutSessionsInput>
    create: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSessionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSessionsInput, UserUncheckedUpdateWithoutSessionsInput>
  }

  export type UserUpdateWithoutSessionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    publicKey?: NullableStringFieldUpdateOperationsInput | string | null
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    isTalentFilled?: BoolFieldUpdateOperationsInput | boolean
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    discord?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    community?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    superteamLevel?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    cryptoExperience?: NullableStringFieldUpdateOperationsInput | string | null
    workPrefernce?: NullableStringFieldUpdateOperationsInput | string | null
    currentEmployer?: NullableStringFieldUpdateOperationsInput | string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: BoolFieldUpdateOperationsInput | boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    featureModalShown?: BoolFieldUpdateOperationsInput | boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: BoolFieldUpdateOperationsInput | boolean
    acceptedTOS?: BoolFieldUpdateOperationsInput | boolean
    stLead?: NullableStringFieldUpdateOperationsInput | string | null
    isBlocked?: BoolFieldUpdateOperationsInput | boolean
    privyDid?: StringFieldUpdateOperationsInput | string
    isKYCVerified?: BoolFieldUpdateOperationsInput | boolean
    kycName?: NullableStringFieldUpdateOperationsInput | string | null
    kycCountry?: NullableStringFieldUpdateOperationsInput | string | null
    kycAddress?: NullableStringFieldUpdateOperationsInput | string | null
    kycDOB?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDNumber?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDType?: NullableStringFieldUpdateOperationsInput | string | null
    currentSponsor?: SponsorsUpdateOneWithoutUserNestedInput
    UserSponsors?: UserSponsorsUpdateManyWithoutUserNestedInput
    poc?: BountiesUpdateManyWithoutPocNestedInput
    templates?: BountiesTemplatesUpdateManyWithoutPocNestedInput
    Comment?: CommentUpdateManyWithoutAuthorNestedInput
    Submission?: SubmissionUpdateManyWithoutUserNestedInput
    Grants?: GrantsUpdateManyWithoutPocNestedInput
    UserInvites?: UserInvitesUpdateManyWithoutSenderNestedInput
    SubscribeBounty?: SubscribeBountyUpdateManyWithoutUserNestedInput
    PoW?: PoWUpdateManyWithoutUserNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    Hackathon?: HackathonUpdateOneWithoutUserNestedInput
    emailSettings?: EmailSettingsUpdateManyWithoutUserNestedInput
    TalentRankings?: TalentRankingsUpdateManyWithoutUserNestedInput
    Scouts?: ScoutsUpdateManyWithoutUserNestedInput
    GrantApplication?: GrantApplicationUpdateManyWithoutUserNestedInput
    SubscribeHackathon?: SubscribeHackathonUpdateManyWithoutUserNestedInput
    CreditLedger?: CreditLedgerUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutSessionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    publicKey?: NullableStringFieldUpdateOperationsInput | string | null
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    isTalentFilled?: BoolFieldUpdateOperationsInput | boolean
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    discord?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    community?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    superteamLevel?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    cryptoExperience?: NullableStringFieldUpdateOperationsInput | string | null
    workPrefernce?: NullableStringFieldUpdateOperationsInput | string | null
    currentEmployer?: NullableStringFieldUpdateOperationsInput | string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: BoolFieldUpdateOperationsInput | boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    currentSponsorId?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hackathonId?: NullableStringFieldUpdateOperationsInput | string | null
    featureModalShown?: BoolFieldUpdateOperationsInput | boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: BoolFieldUpdateOperationsInput | boolean
    acceptedTOS?: BoolFieldUpdateOperationsInput | boolean
    stLead?: NullableStringFieldUpdateOperationsInput | string | null
    isBlocked?: BoolFieldUpdateOperationsInput | boolean
    privyDid?: StringFieldUpdateOperationsInput | string
    isKYCVerified?: BoolFieldUpdateOperationsInput | boolean
    kycName?: NullableStringFieldUpdateOperationsInput | string | null
    kycCountry?: NullableStringFieldUpdateOperationsInput | string | null
    kycAddress?: NullableStringFieldUpdateOperationsInput | string | null
    kycDOB?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDNumber?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDType?: NullableStringFieldUpdateOperationsInput | string | null
    UserSponsors?: UserSponsorsUncheckedUpdateManyWithoutUserNestedInput
    poc?: BountiesUncheckedUpdateManyWithoutPocNestedInput
    templates?: BountiesTemplatesUncheckedUpdateManyWithoutPocNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutAuthorNestedInput
    Submission?: SubmissionUncheckedUpdateManyWithoutUserNestedInput
    Grants?: GrantsUncheckedUpdateManyWithoutPocNestedInput
    UserInvites?: UserInvitesUncheckedUpdateManyWithoutSenderNestedInput
    SubscribeBounty?: SubscribeBountyUncheckedUpdateManyWithoutUserNestedInput
    PoW?: PoWUncheckedUpdateManyWithoutUserNestedInput
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    emailSettings?: EmailSettingsUncheckedUpdateManyWithoutUserNestedInput
    TalentRankings?: TalentRankingsUncheckedUpdateManyWithoutUserNestedInput
    Scouts?: ScoutsUncheckedUpdateManyWithoutUserNestedInput
    GrantApplication?: GrantApplicationUncheckedUpdateManyWithoutUserNestedInput
    SubscribeHackathon?: SubscribeHackathonUncheckedUpdateManyWithoutUserNestedInput
    CreditLedger?: CreditLedgerUncheckedUpdateManyWithoutUserNestedInput
  }

  export type SponsorsCreateWithoutUserInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    url?: string | null
    industry: string
    twitter?: string | null
    bio?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    isActive?: boolean
    entityName?: string | null
    isVerified?: boolean
    isCaution?: boolean
    st?: boolean
    verificationInfo?: NullableJsonNullValueInput | InputJsonValue
    Hackathon?: HackathonCreateNestedOneWithoutSponsorInput
    UserSponsors?: UserSponsorsCreateNestedManyWithoutSponsorInput
    Bounties?: BountiesCreateNestedManyWithoutSponsorInput
    Templates?: BountiesTemplatesCreateNestedManyWithoutSponsorInput
    Grants?: GrantsCreateNestedManyWithoutSponsorInput
    UserInvites?: UserInvitesCreateNestedManyWithoutSponsorInput
  }

  export type SponsorsUncheckedCreateWithoutUserInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    url?: string | null
    industry: string
    twitter?: string | null
    bio?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    isActive?: boolean
    entityName?: string | null
    isVerified?: boolean
    isCaution?: boolean
    st?: boolean
    verificationInfo?: NullableJsonNullValueInput | InputJsonValue
    Hackathon?: HackathonUncheckedCreateNestedOneWithoutSponsorInput
    UserSponsors?: UserSponsorsUncheckedCreateNestedManyWithoutSponsorInput
    Bounties?: BountiesUncheckedCreateNestedManyWithoutSponsorInput
    Templates?: BountiesTemplatesUncheckedCreateNestedManyWithoutSponsorInput
    Grants?: GrantsUncheckedCreateNestedManyWithoutSponsorInput
    UserInvites?: UserInvitesUncheckedCreateNestedManyWithoutSponsorInput
  }

  export type SponsorsCreateOrConnectWithoutUserInput = {
    where: SponsorsWhereUniqueInput
    create: XOR<SponsorsCreateWithoutUserInput, SponsorsUncheckedCreateWithoutUserInput>
  }

  export type UserSponsorsCreateWithoutUserInput = {
    role?: $Enums.Role
    createdAt?: Date | string
    updatedAt?: Date | string
    sponsor: SponsorsCreateNestedOneWithoutUserSponsorsInput
  }

  export type UserSponsorsUncheckedCreateWithoutUserInput = {
    sponsorId: string
    role?: $Enums.Role
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserSponsorsCreateOrConnectWithoutUserInput = {
    where: UserSponsorsWhereUniqueInput
    create: XOR<UserSponsorsCreateWithoutUserInput, UserSponsorsUncheckedCreateWithoutUserInput>
  }

  export type UserSponsorsCreateManyUserInputEnvelope = {
    data: UserSponsorsCreateManyUserInput | UserSponsorsCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type BountiesCreateWithoutPocInput = {
    id?: string
    title: string
    slug: string
    description?: string | null
    deadline?: Date | string | null
    commitmentDate?: Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.status
    token?: string | null
    rewardAmount?: number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: number
    usdValue?: number | null
    source?: $Enums.Source
    isPublished?: boolean
    isFeatured?: boolean
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    applicationLink?: string | null
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: $Enums.BountyType
    requirements?: string | null
    isWinnersAnnounced?: boolean
    region?: string
    pocSocials?: string | null
    hackathonprize?: boolean
    applicationType?: $Enums.ApplicationType
    timeToComplete?: string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: string | null
    publishedAt?: Date | string | null
    isPrivate?: boolean
    compensationType?: $Enums.CompensationType
    maxRewardAsk?: number | null
    minRewardAsk?: number | null
    language?: string | null
    shouldSendEmail?: boolean
    isFndnPaying?: boolean
    winnersAnnouncedAt?: Date | string | null
    discordMessageIds?: NullableJsonNullValueInput | InputJsonValue
    template?: BountiesTemplatesCreateNestedOneWithoutBountiesInput
    sponsor: SponsorsCreateNestedOneWithoutBountiesInput
    Submission?: SubmissionCreateNestedManyWithoutListingInput
    SubscribeBounty?: SubscribeBountyCreateNestedManyWithoutBountiesInput
    Hackathon?: HackathonCreateNestedOneWithoutListingsInput
    Scouts?: ScoutsCreateNestedManyWithoutListingInput
    Comments?: CommentCreateNestedManyWithoutListingInput
  }

  export type BountiesUncheckedCreateWithoutPocInput = {
    id?: string
    title: string
    slug: string
    description?: string | null
    deadline?: Date | string | null
    commitmentDate?: Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.status
    token?: string | null
    rewardAmount?: number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: number
    usdValue?: number | null
    sponsorId: string
    source?: $Enums.Source
    isPublished?: boolean
    isFeatured?: boolean
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    applicationLink?: string | null
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: $Enums.BountyType
    requirements?: string | null
    isWinnersAnnounced?: boolean
    templateId?: string | null
    region?: string
    pocSocials?: string | null
    hackathonprize?: boolean
    applicationType?: $Enums.ApplicationType
    timeToComplete?: string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: string | null
    publishedAt?: Date | string | null
    isPrivate?: boolean
    hackathonId?: string | null
    compensationType?: $Enums.CompensationType
    maxRewardAsk?: number | null
    minRewardAsk?: number | null
    language?: string | null
    shouldSendEmail?: boolean
    isFndnPaying?: boolean
    winnersAnnouncedAt?: Date | string | null
    discordMessageIds?: NullableJsonNullValueInput | InputJsonValue
    Submission?: SubmissionUncheckedCreateNestedManyWithoutListingInput
    SubscribeBounty?: SubscribeBountyUncheckedCreateNestedManyWithoutBountiesInput
    Scouts?: ScoutsUncheckedCreateNestedManyWithoutListingInput
    Comments?: CommentUncheckedCreateNestedManyWithoutListingInput
  }

  export type BountiesCreateOrConnectWithoutPocInput = {
    where: BountiesWhereUniqueInput
    create: XOR<BountiesCreateWithoutPocInput, BountiesUncheckedCreateWithoutPocInput>
  }

  export type BountiesCreateManyPocInputEnvelope = {
    data: BountiesCreateManyPocInput | BountiesCreateManyPocInput[]
    skipDuplicates?: boolean
  }

  export type BountiesTemplatesCreateWithoutPocInput = {
    id?: string
    title?: string | null
    deadline?: Date | string | null
    slug?: string | null
    description?: string | null
    color?: string | null
    emoji?: string | null
    isFeatured?: boolean
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: $Enums.BountyType
    requirements?: string | null
    region?: string
    applicationType?: $Enums.ApplicationType
    status?: $Enums.status
    timeToComplete?: string | null
    token?: string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: string | null
    publishedAt?: Date | string | null
    compensationType?: $Enums.CompensationType
    maxRewardAsk?: number | null
    minRewardAsk?: number | null
    language?: string | null
    rewardAmount?: number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: number
    usdValue?: number | null
    pocSocials?: string | null
    source?: $Enums.Source
    isPublished?: boolean
    Bounties?: BountiesCreateNestedManyWithoutTemplateInput
    sponsor: SponsorsCreateNestedOneWithoutTemplatesInput
  }

  export type BountiesTemplatesUncheckedCreateWithoutPocInput = {
    id?: string
    title?: string | null
    deadline?: Date | string | null
    slug?: string | null
    description?: string | null
    color?: string | null
    emoji?: string | null
    isFeatured?: boolean
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: $Enums.BountyType
    requirements?: string | null
    region?: string
    applicationType?: $Enums.ApplicationType
    status?: $Enums.status
    timeToComplete?: string | null
    token?: string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: string | null
    publishedAt?: Date | string | null
    compensationType?: $Enums.CompensationType
    maxRewardAsk?: number | null
    minRewardAsk?: number | null
    language?: string | null
    rewardAmount?: number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: number
    usdValue?: number | null
    sponsorId: string
    pocSocials?: string | null
    source?: $Enums.Source
    isPublished?: boolean
    Bounties?: BountiesUncheckedCreateNestedManyWithoutTemplateInput
  }

  export type BountiesTemplatesCreateOrConnectWithoutPocInput = {
    where: BountiesTemplatesWhereUniqueInput
    create: XOR<BountiesTemplatesCreateWithoutPocInput, BountiesTemplatesUncheckedCreateWithoutPocInput>
  }

  export type BountiesTemplatesCreateManyPocInputEnvelope = {
    data: BountiesTemplatesCreateManyPocInput | BountiesTemplatesCreateManyPocInput[]
    skipDuplicates?: boolean
  }

  export type CommentCreateWithoutAuthorInput = {
    id?: string
    message: string
    refType?: $Enums.CommentRefType
    isActive?: boolean
    isArchived?: boolean
    isPinned?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    submissionId?: string | null
    type?: $Enums.CommentType
    repliedTo?: CommentCreateNestedOneWithoutRepliesInput
    replies?: CommentCreateNestedManyWithoutRepliedToInput
    listing?: BountiesCreateNestedOneWithoutCommentsInput
    submission?: SubmissionCreateNestedOneWithoutCommentsInput
    pow?: PoWCreateNestedOneWithoutCommentsInput
    GrantApplication?: GrantApplicationCreateNestedOneWithoutCommentsInput
  }

  export type CommentUncheckedCreateWithoutAuthorInput = {
    id?: string
    message: string
    refType?: $Enums.CommentRefType
    refId: string
    isActive?: boolean
    isArchived?: boolean
    isPinned?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    replyToId?: string | null
    submissionId?: string | null
    type?: $Enums.CommentType
    replies?: CommentUncheckedCreateNestedManyWithoutRepliedToInput
  }

  export type CommentCreateOrConnectWithoutAuthorInput = {
    where: CommentWhereUniqueInput
    create: XOR<CommentCreateWithoutAuthorInput, CommentUncheckedCreateWithoutAuthorInput>
  }

  export type CommentCreateManyAuthorInputEnvelope = {
    data: CommentCreateManyAuthorInput | CommentCreateManyAuthorInput[]
    skipDuplicates?: boolean
  }

  export type SubmissionCreateWithoutUserInput = {
    id?: string
    link?: string | null
    tweet?: string | null
    status?: $Enums.SubmissionStatus
    eligibilityAnswers?: NullableJsonNullValueInput | InputJsonValue
    isWinner?: boolean
    winnerPosition?: number | null
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: number
    isPaid?: boolean
    paymentDetails?: NullableJsonNullValueInput | InputJsonValue
    otherInfo?: string | null
    ask?: number | null
    label?: $Enums.SubmissionLabels
    rewardInUSD?: number
    ogImage?: string | null
    notes?: string | null
    listing: BountiesCreateNestedOneWithoutSubmissionInput
    Comments?: CommentCreateNestedManyWithoutSubmissionInput
    CreditLedger?: CreditLedgerCreateNestedManyWithoutSubmissionInput
  }

  export type SubmissionUncheckedCreateWithoutUserInput = {
    id?: string
    link?: string | null
    tweet?: string | null
    status?: $Enums.SubmissionStatus
    eligibilityAnswers?: NullableJsonNullValueInput | InputJsonValue
    listingId: string
    isWinner?: boolean
    winnerPosition?: number | null
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: number
    isPaid?: boolean
    paymentDetails?: NullableJsonNullValueInput | InputJsonValue
    otherInfo?: string | null
    ask?: number | null
    label?: $Enums.SubmissionLabels
    rewardInUSD?: number
    ogImage?: string | null
    notes?: string | null
    Comments?: CommentUncheckedCreateNestedManyWithoutSubmissionInput
    CreditLedger?: CreditLedgerUncheckedCreateNestedManyWithoutSubmissionInput
  }

  export type SubmissionCreateOrConnectWithoutUserInput = {
    where: SubmissionWhereUniqueInput
    create: XOR<SubmissionCreateWithoutUserInput, SubmissionUncheckedCreateWithoutUserInput>
  }

  export type SubmissionCreateManyUserInputEnvelope = {
    data: SubmissionCreateManyUserInput | SubmissionCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type GrantsCreateWithoutPocInput = {
    id?: string
    title: string
    slug: string
    description?: string | null
    shortDescription?: string | null
    token?: string | null
    minReward?: number | null
    maxReward?: number | null
    totalPaid?: number
    totalApproved?: number
    historicalApplications?: number
    historicalPaid?: number
    link?: string | null
    isPublished?: boolean
    isFeatured?: boolean
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    skills?: NullableJsonNullValueInput | InputJsonValue
    logo?: string | null
    region?: string
    questions?: NullableJsonNullValueInput | InputJsonValue
    pocSocials?: string | null
    status?: $Enums.GrantStatus
    airtableId?: string | null
    avgResponseTime?: string | null
    isNative?: boolean
    isPrivate?: boolean
    references?: NullableJsonNullValueInput | InputJsonValue
    ai?: NullableJsonNullValueInput | InputJsonValue
    approverRecordId?: string | null
    emailSender?: string | null
    replyToEmail?: string | null
    emailSalutation?: string | null
    communityLink?: string | null
    sponsor: SponsorsCreateNestedOneWithoutGrantsInput
    GrantApplication?: GrantApplicationCreateNestedManyWithoutGrantInput
    GrantTranche?: GrantTrancheCreateNestedManyWithoutGrantInput
  }

  export type GrantsUncheckedCreateWithoutPocInput = {
    id?: string
    title: string
    slug: string
    description?: string | null
    shortDescription?: string | null
    token?: string | null
    minReward?: number | null
    maxReward?: number | null
    totalPaid?: number
    totalApproved?: number
    historicalApplications?: number
    historicalPaid?: number
    link?: string | null
    sponsorId: string
    isPublished?: boolean
    isFeatured?: boolean
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    skills?: NullableJsonNullValueInput | InputJsonValue
    logo?: string | null
    region?: string
    questions?: NullableJsonNullValueInput | InputJsonValue
    pocSocials?: string | null
    status?: $Enums.GrantStatus
    airtableId?: string | null
    avgResponseTime?: string | null
    isNative?: boolean
    isPrivate?: boolean
    references?: NullableJsonNullValueInput | InputJsonValue
    ai?: NullableJsonNullValueInput | InputJsonValue
    approverRecordId?: string | null
    emailSender?: string | null
    replyToEmail?: string | null
    emailSalutation?: string | null
    communityLink?: string | null
    GrantApplication?: GrantApplicationUncheckedCreateNestedManyWithoutGrantInput
    GrantTranche?: GrantTrancheUncheckedCreateNestedManyWithoutGrantInput
  }

  export type GrantsCreateOrConnectWithoutPocInput = {
    where: GrantsWhereUniqueInput
    create: XOR<GrantsCreateWithoutPocInput, GrantsUncheckedCreateWithoutPocInput>
  }

  export type GrantsCreateManyPocInputEnvelope = {
    data: GrantsCreateManyPocInput | GrantsCreateManyPocInput[]
    skipDuplicates?: boolean
  }

  export type UserInvitesCreateWithoutSenderInput = {
    id?: string
    email: string
    createdAt?: Date | string
    updatedAt?: Date | string
    memberType?: $Enums.Role
    token: string
    expires: Date | string
    sponsor: SponsorsCreateNestedOneWithoutUserInvitesInput
  }

  export type UserInvitesUncheckedCreateWithoutSenderInput = {
    id?: string
    email: string
    createdAt?: Date | string
    updatedAt?: Date | string
    sponsorId: string
    memberType?: $Enums.Role
    token: string
    expires: Date | string
  }

  export type UserInvitesCreateOrConnectWithoutSenderInput = {
    where: UserInvitesWhereUniqueInput
    create: XOR<UserInvitesCreateWithoutSenderInput, UserInvitesUncheckedCreateWithoutSenderInput>
  }

  export type UserInvitesCreateManySenderInputEnvelope = {
    data: UserInvitesCreateManySenderInput | UserInvitesCreateManySenderInput[]
    skipDuplicates?: boolean
  }

  export type SubscribeBountyCreateWithoutUserInput = {
    id?: string
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    Bounties?: BountiesCreateNestedOneWithoutSubscribeBountyInput
  }

  export type SubscribeBountyUncheckedCreateWithoutUserInput = {
    id?: string
    bountyId: string
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SubscribeBountyCreateOrConnectWithoutUserInput = {
    where: SubscribeBountyWhereUniqueInput
    create: XOR<SubscribeBountyCreateWithoutUserInput, SubscribeBountyUncheckedCreateWithoutUserInput>
  }

  export type SubscribeBountyCreateManyUserInputEnvelope = {
    data: SubscribeBountyCreateManyUserInput | SubscribeBountyCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type PoWCreateWithoutUserInput = {
    id?: string
    title: string
    description: string
    skills?: NullableJsonNullValueInput | InputJsonValue
    link: string
    createdAt?: Date | string
    subSkills?: NullableJsonNullValueInput | InputJsonValue
    updatedAt?: Date | string
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: number
    ogImage?: string | null
    Comments?: CommentCreateNestedManyWithoutPowInput
  }

  export type PoWUncheckedCreateWithoutUserInput = {
    id?: string
    title: string
    description: string
    skills?: NullableJsonNullValueInput | InputJsonValue
    link: string
    createdAt?: Date | string
    subSkills?: NullableJsonNullValueInput | InputJsonValue
    updatedAt?: Date | string
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: number
    ogImage?: string | null
    Comments?: CommentUncheckedCreateNestedManyWithoutPowInput
  }

  export type PoWCreateOrConnectWithoutUserInput = {
    where: PoWWhereUniqueInput
    create: XOR<PoWCreateWithoutUserInput, PoWUncheckedCreateWithoutUserInput>
  }

  export type PoWCreateManyUserInputEnvelope = {
    data: PoWCreateManyUserInput | PoWCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type AccountCreateWithoutUserInput = {
    id?: string
    type: string
    provider: string
    providerAccountId: string
    refresh_token?: string | null
    access_token?: string | null
    expires_at?: number | null
    token_type?: string | null
    scope?: string | null
    id_token?: string | null
    session_state?: string | null
  }

  export type AccountUncheckedCreateWithoutUserInput = {
    id?: string
    type: string
    provider: string
    providerAccountId: string
    refresh_token?: string | null
    access_token?: string | null
    expires_at?: number | null
    token_type?: string | null
    scope?: string | null
    id_token?: string | null
    session_state?: string | null
  }

  export type AccountCreateOrConnectWithoutUserInput = {
    where: AccountWhereUniqueInput
    create: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput>
  }

  export type AccountCreateManyUserInputEnvelope = {
    data: AccountCreateManyUserInput | AccountCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type SessionCreateWithoutUserInput = {
    id?: string
    sessionToken: string
    expires: Date | string
  }

  export type SessionUncheckedCreateWithoutUserInput = {
    id?: string
    sessionToken: string
    expires: Date | string
  }

  export type SessionCreateOrConnectWithoutUserInput = {
    where: SessionWhereUniqueInput
    create: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput>
  }

  export type SessionCreateManyUserInputEnvelope = {
    data: SessionCreateManyUserInput | SessionCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type HackathonCreateWithoutUserInput = {
    id?: string
    slug: string
    name: string
    logo: string
    deadline?: Date | string | null
    startDate?: Date | string | null
    description: string
    altLogo?: string | null
    announceDate?: Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    listings?: BountiesCreateNestedManyWithoutHackathonInput
    Sponsor?: SponsorsCreateNestedOneWithoutHackathonInput
    SubscribeHackathon?: SubscribeHackathonCreateNestedManyWithoutHackthonsInput
  }

  export type HackathonUncheckedCreateWithoutUserInput = {
    id?: string
    slug: string
    name: string
    logo: string
    sponsorId?: string | null
    deadline?: Date | string | null
    startDate?: Date | string | null
    description: string
    altLogo?: string | null
    announceDate?: Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    listings?: BountiesUncheckedCreateNestedManyWithoutHackathonInput
    SubscribeHackathon?: SubscribeHackathonUncheckedCreateNestedManyWithoutHackthonsInput
  }

  export type HackathonCreateOrConnectWithoutUserInput = {
    where: HackathonWhereUniqueInput
    create: XOR<HackathonCreateWithoutUserInput, HackathonUncheckedCreateWithoutUserInput>
  }

  export type EmailSettingsCreateWithoutUserInput = {
    category: string
  }

  export type EmailSettingsUncheckedCreateWithoutUserInput = {
    id?: number
    category: string
  }

  export type EmailSettingsCreateOrConnectWithoutUserInput = {
    where: EmailSettingsWhereUniqueInput
    create: XOR<EmailSettingsCreateWithoutUserInput, EmailSettingsUncheckedCreateWithoutUserInput>
  }

  export type EmailSettingsCreateManyUserInputEnvelope = {
    data: EmailSettingsCreateManyUserInput | EmailSettingsCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type TalentRankingsCreateWithoutUserInput = {
    id?: string
    skill?: $Enums.TalentRankingSkills
    timeframe?: $Enums.TalentRankingTimeframe
    rank: number
    submissions?: number
    winRate?: number
    wins?: number
    totalEarnedInUSD: number
  }

  export type TalentRankingsUncheckedCreateWithoutUserInput = {
    id?: string
    skill?: $Enums.TalentRankingSkills
    timeframe?: $Enums.TalentRankingTimeframe
    rank: number
    submissions?: number
    winRate?: number
    wins?: number
    totalEarnedInUSD: number
  }

  export type TalentRankingsCreateOrConnectWithoutUserInput = {
    where: TalentRankingsWhereUniqueInput
    create: XOR<TalentRankingsCreateWithoutUserInput, TalentRankingsUncheckedCreateWithoutUserInput>
  }

  export type TalentRankingsCreateManyUserInputEnvelope = {
    data: TalentRankingsCreateManyUserInput | TalentRankingsCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type ScoutsCreateWithoutUserInput = {
    id?: string
    dollarsEarned: number
    score: Decimal | DecimalJsLike | number | string
    invited: boolean
    skills: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    listing: BountiesCreateNestedOneWithoutScoutsInput
  }

  export type ScoutsUncheckedCreateWithoutUserInput = {
    id?: string
    listingId: string
    dollarsEarned: number
    score: Decimal | DecimalJsLike | number | string
    invited: boolean
    skills: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
  }

  export type ScoutsCreateOrConnectWithoutUserInput = {
    where: ScoutsWhereUniqueInput
    create: XOR<ScoutsCreateWithoutUserInput, ScoutsUncheckedCreateWithoutUserInput>
  }

  export type ScoutsCreateManyUserInputEnvelope = {
    data: ScoutsCreateManyUserInput | ScoutsCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type GrantApplicationCreateWithoutUserInput = {
    id?: string
    applicationStatus?: $Enums.GrantApplicationStatus
    projectTitle: string
    projectOneLiner: string
    projectDetails: string
    projectTimeline: string
    proofOfWork: string
    walletAddress: string
    twitter?: string | null
    github?: string | null
    milestones?: string | null
    kpi?: string | null
    answers?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    label?: $Enums.SubmissionLabels
    ask?: number
    approvedAmount?: number
    approvedAmountInUSD?: number
    decidedAt?: Date | string | null
    totalPaid?: number
    isShipped?: boolean
    paymentDetails?: NullableJsonNullValueInput | InputJsonValue
    totalTranches?: number
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: number
    decidedBy?: string | null
    notes?: string | null
    ai?: NullableJsonNullValueInput | InputJsonValue
    grant: GrantsCreateNestedOneWithoutGrantApplicationInput
    Comments?: CommentCreateNestedManyWithoutGrantApplicationInput
    GrantTranche?: GrantTrancheCreateNestedManyWithoutGrantApplicationInput
    CreditLedger?: CreditLedgerCreateNestedManyWithoutApplicationInput
  }

  export type GrantApplicationUncheckedCreateWithoutUserInput = {
    id?: string
    grantId: string
    applicationStatus?: $Enums.GrantApplicationStatus
    projectTitle: string
    projectOneLiner: string
    projectDetails: string
    projectTimeline: string
    proofOfWork: string
    walletAddress: string
    twitter?: string | null
    github?: string | null
    milestones?: string | null
    kpi?: string | null
    answers?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    label?: $Enums.SubmissionLabels
    ask?: number
    approvedAmount?: number
    approvedAmountInUSD?: number
    decidedAt?: Date | string | null
    totalPaid?: number
    isShipped?: boolean
    paymentDetails?: NullableJsonNullValueInput | InputJsonValue
    totalTranches?: number
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: number
    decidedBy?: string | null
    notes?: string | null
    ai?: NullableJsonNullValueInput | InputJsonValue
    Comments?: CommentUncheckedCreateNestedManyWithoutGrantApplicationInput
    GrantTranche?: GrantTrancheUncheckedCreateNestedManyWithoutGrantApplicationInput
    CreditLedger?: CreditLedgerUncheckedCreateNestedManyWithoutApplicationInput
  }

  export type GrantApplicationCreateOrConnectWithoutUserInput = {
    where: GrantApplicationWhereUniqueInput
    create: XOR<GrantApplicationCreateWithoutUserInput, GrantApplicationUncheckedCreateWithoutUserInput>
  }

  export type GrantApplicationCreateManyUserInputEnvelope = {
    data: GrantApplicationCreateManyUserInput | GrantApplicationCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type SubscribeHackathonCreateWithoutUserInput = {
    id?: string
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    Hackthons?: HackathonCreateNestedOneWithoutSubscribeHackathonInput
  }

  export type SubscribeHackathonUncheckedCreateWithoutUserInput = {
    id?: string
    hackathonId: string
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SubscribeHackathonCreateOrConnectWithoutUserInput = {
    where: SubscribeHackathonWhereUniqueInput
    create: XOR<SubscribeHackathonCreateWithoutUserInput, SubscribeHackathonUncheckedCreateWithoutUserInput>
  }

  export type SubscribeHackathonCreateManyUserInputEnvelope = {
    data: SubscribeHackathonCreateManyUserInput | SubscribeHackathonCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type CreditLedgerCreateWithoutUserInput = {
    id?: string
    type: $Enums.CreditEventType
    change: number
    effectiveMonth: Date | string
    createdAt?: Date | string
    submission?: SubmissionCreateNestedOneWithoutCreditLedgerInput
    application?: GrantApplicationCreateNestedOneWithoutCreditLedgerInput
  }

  export type CreditLedgerUncheckedCreateWithoutUserInput = {
    id?: string
    submissionId?: string | null
    applicationId?: string | null
    type: $Enums.CreditEventType
    change: number
    effectiveMonth: Date | string
    createdAt?: Date | string
  }

  export type CreditLedgerCreateOrConnectWithoutUserInput = {
    where: CreditLedgerWhereUniqueInput
    create: XOR<CreditLedgerCreateWithoutUserInput, CreditLedgerUncheckedCreateWithoutUserInput>
  }

  export type CreditLedgerCreateManyUserInputEnvelope = {
    data: CreditLedgerCreateManyUserInput | CreditLedgerCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type SponsorsUpsertWithoutUserInput = {
    update: XOR<SponsorsUpdateWithoutUserInput, SponsorsUncheckedUpdateWithoutUserInput>
    create: XOR<SponsorsCreateWithoutUserInput, SponsorsUncheckedCreateWithoutUserInput>
    where?: SponsorsWhereInput
  }

  export type SponsorsUpdateToOneWithWhereWithoutUserInput = {
    where?: SponsorsWhereInput
    data: XOR<SponsorsUpdateWithoutUserInput, SponsorsUncheckedUpdateWithoutUserInput>
  }

  export type SponsorsUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    industry?: StringFieldUpdateOperationsInput | string
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCaution?: BoolFieldUpdateOperationsInput | boolean
    st?: BoolFieldUpdateOperationsInput | boolean
    verificationInfo?: NullableJsonNullValueInput | InputJsonValue
    Hackathon?: HackathonUpdateOneWithoutSponsorNestedInput
    UserSponsors?: UserSponsorsUpdateManyWithoutSponsorNestedInput
    Bounties?: BountiesUpdateManyWithoutSponsorNestedInput
    Templates?: BountiesTemplatesUpdateManyWithoutSponsorNestedInput
    Grants?: GrantsUpdateManyWithoutSponsorNestedInput
    UserInvites?: UserInvitesUpdateManyWithoutSponsorNestedInput
  }

  export type SponsorsUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    industry?: StringFieldUpdateOperationsInput | string
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCaution?: BoolFieldUpdateOperationsInput | boolean
    st?: BoolFieldUpdateOperationsInput | boolean
    verificationInfo?: NullableJsonNullValueInput | InputJsonValue
    Hackathon?: HackathonUncheckedUpdateOneWithoutSponsorNestedInput
    UserSponsors?: UserSponsorsUncheckedUpdateManyWithoutSponsorNestedInput
    Bounties?: BountiesUncheckedUpdateManyWithoutSponsorNestedInput
    Templates?: BountiesTemplatesUncheckedUpdateManyWithoutSponsorNestedInput
    Grants?: GrantsUncheckedUpdateManyWithoutSponsorNestedInput
    UserInvites?: UserInvitesUncheckedUpdateManyWithoutSponsorNestedInput
  }

  export type UserSponsorsUpsertWithWhereUniqueWithoutUserInput = {
    where: UserSponsorsWhereUniqueInput
    update: XOR<UserSponsorsUpdateWithoutUserInput, UserSponsorsUncheckedUpdateWithoutUserInput>
    create: XOR<UserSponsorsCreateWithoutUserInput, UserSponsorsUncheckedCreateWithoutUserInput>
  }

  export type UserSponsorsUpdateWithWhereUniqueWithoutUserInput = {
    where: UserSponsorsWhereUniqueInput
    data: XOR<UserSponsorsUpdateWithoutUserInput, UserSponsorsUncheckedUpdateWithoutUserInput>
  }

  export type UserSponsorsUpdateManyWithWhereWithoutUserInput = {
    where: UserSponsorsScalarWhereInput
    data: XOR<UserSponsorsUpdateManyMutationInput, UserSponsorsUncheckedUpdateManyWithoutUserInput>
  }

  export type BountiesUpsertWithWhereUniqueWithoutPocInput = {
    where: BountiesWhereUniqueInput
    update: XOR<BountiesUpdateWithoutPocInput, BountiesUncheckedUpdateWithoutPocInput>
    create: XOR<BountiesCreateWithoutPocInput, BountiesUncheckedCreateWithoutPocInput>
  }

  export type BountiesUpdateWithWhereUniqueWithoutPocInput = {
    where: BountiesWhereUniqueInput
    data: XOR<BountiesUpdateWithoutPocInput, BountiesUncheckedUpdateWithoutPocInput>
  }

  export type BountiesUpdateManyWithWhereWithoutPocInput = {
    where: BountiesScalarWhereInput
    data: XOR<BountiesUpdateManyMutationInput, BountiesUncheckedUpdateManyWithoutPocInput>
  }

  export type BountiesTemplatesUpsertWithWhereUniqueWithoutPocInput = {
    where: BountiesTemplatesWhereUniqueInput
    update: XOR<BountiesTemplatesUpdateWithoutPocInput, BountiesTemplatesUncheckedUpdateWithoutPocInput>
    create: XOR<BountiesTemplatesCreateWithoutPocInput, BountiesTemplatesUncheckedCreateWithoutPocInput>
  }

  export type BountiesTemplatesUpdateWithWhereUniqueWithoutPocInput = {
    where: BountiesTemplatesWhereUniqueInput
    data: XOR<BountiesTemplatesUpdateWithoutPocInput, BountiesTemplatesUncheckedUpdateWithoutPocInput>
  }

  export type BountiesTemplatesUpdateManyWithWhereWithoutPocInput = {
    where: BountiesTemplatesScalarWhereInput
    data: XOR<BountiesTemplatesUpdateManyMutationInput, BountiesTemplatesUncheckedUpdateManyWithoutPocInput>
  }

  export type CommentUpsertWithWhereUniqueWithoutAuthorInput = {
    where: CommentWhereUniqueInput
    update: XOR<CommentUpdateWithoutAuthorInput, CommentUncheckedUpdateWithoutAuthorInput>
    create: XOR<CommentCreateWithoutAuthorInput, CommentUncheckedCreateWithoutAuthorInput>
  }

  export type CommentUpdateWithWhereUniqueWithoutAuthorInput = {
    where: CommentWhereUniqueInput
    data: XOR<CommentUpdateWithoutAuthorInput, CommentUncheckedUpdateWithoutAuthorInput>
  }

  export type CommentUpdateManyWithWhereWithoutAuthorInput = {
    where: CommentScalarWhereInput
    data: XOR<CommentUpdateManyMutationInput, CommentUncheckedUpdateManyWithoutAuthorInput>
  }

  export type SubmissionUpsertWithWhereUniqueWithoutUserInput = {
    where: SubmissionWhereUniqueInput
    update: XOR<SubmissionUpdateWithoutUserInput, SubmissionUncheckedUpdateWithoutUserInput>
    create: XOR<SubmissionCreateWithoutUserInput, SubmissionUncheckedCreateWithoutUserInput>
  }

  export type SubmissionUpdateWithWhereUniqueWithoutUserInput = {
    where: SubmissionWhereUniqueInput
    data: XOR<SubmissionUpdateWithoutUserInput, SubmissionUncheckedUpdateWithoutUserInput>
  }

  export type SubmissionUpdateManyWithWhereWithoutUserInput = {
    where: SubmissionScalarWhereInput
    data: XOR<SubmissionUpdateManyMutationInput, SubmissionUncheckedUpdateManyWithoutUserInput>
  }

  export type GrantsUpsertWithWhereUniqueWithoutPocInput = {
    where: GrantsWhereUniqueInput
    update: XOR<GrantsUpdateWithoutPocInput, GrantsUncheckedUpdateWithoutPocInput>
    create: XOR<GrantsCreateWithoutPocInput, GrantsUncheckedCreateWithoutPocInput>
  }

  export type GrantsUpdateWithWhereUniqueWithoutPocInput = {
    where: GrantsWhereUniqueInput
    data: XOR<GrantsUpdateWithoutPocInput, GrantsUncheckedUpdateWithoutPocInput>
  }

  export type GrantsUpdateManyWithWhereWithoutPocInput = {
    where: GrantsScalarWhereInput
    data: XOR<GrantsUpdateManyMutationInput, GrantsUncheckedUpdateManyWithoutPocInput>
  }

  export type UserInvitesUpsertWithWhereUniqueWithoutSenderInput = {
    where: UserInvitesWhereUniqueInput
    update: XOR<UserInvitesUpdateWithoutSenderInput, UserInvitesUncheckedUpdateWithoutSenderInput>
    create: XOR<UserInvitesCreateWithoutSenderInput, UserInvitesUncheckedCreateWithoutSenderInput>
  }

  export type UserInvitesUpdateWithWhereUniqueWithoutSenderInput = {
    where: UserInvitesWhereUniqueInput
    data: XOR<UserInvitesUpdateWithoutSenderInput, UserInvitesUncheckedUpdateWithoutSenderInput>
  }

  export type UserInvitesUpdateManyWithWhereWithoutSenderInput = {
    where: UserInvitesScalarWhereInput
    data: XOR<UserInvitesUpdateManyMutationInput, UserInvitesUncheckedUpdateManyWithoutSenderInput>
  }

  export type SubscribeBountyUpsertWithWhereUniqueWithoutUserInput = {
    where: SubscribeBountyWhereUniqueInput
    update: XOR<SubscribeBountyUpdateWithoutUserInput, SubscribeBountyUncheckedUpdateWithoutUserInput>
    create: XOR<SubscribeBountyCreateWithoutUserInput, SubscribeBountyUncheckedCreateWithoutUserInput>
  }

  export type SubscribeBountyUpdateWithWhereUniqueWithoutUserInput = {
    where: SubscribeBountyWhereUniqueInput
    data: XOR<SubscribeBountyUpdateWithoutUserInput, SubscribeBountyUncheckedUpdateWithoutUserInput>
  }

  export type SubscribeBountyUpdateManyWithWhereWithoutUserInput = {
    where: SubscribeBountyScalarWhereInput
    data: XOR<SubscribeBountyUpdateManyMutationInput, SubscribeBountyUncheckedUpdateManyWithoutUserInput>
  }

  export type PoWUpsertWithWhereUniqueWithoutUserInput = {
    where: PoWWhereUniqueInput
    update: XOR<PoWUpdateWithoutUserInput, PoWUncheckedUpdateWithoutUserInput>
    create: XOR<PoWCreateWithoutUserInput, PoWUncheckedCreateWithoutUserInput>
  }

  export type PoWUpdateWithWhereUniqueWithoutUserInput = {
    where: PoWWhereUniqueInput
    data: XOR<PoWUpdateWithoutUserInput, PoWUncheckedUpdateWithoutUserInput>
  }

  export type PoWUpdateManyWithWhereWithoutUserInput = {
    where: PoWScalarWhereInput
    data: XOR<PoWUpdateManyMutationInput, PoWUncheckedUpdateManyWithoutUserInput>
  }

  export type PoWScalarWhereInput = {
    AND?: PoWScalarWhereInput | PoWScalarWhereInput[]
    OR?: PoWScalarWhereInput[]
    NOT?: PoWScalarWhereInput | PoWScalarWhereInput[]
    id?: StringFilter<"PoW"> | string
    userId?: StringFilter<"PoW"> | string
    title?: StringFilter<"PoW"> | string
    description?: StringFilter<"PoW"> | string
    skills?: JsonNullableFilter<"PoW">
    link?: StringFilter<"PoW"> | string
    createdAt?: DateTimeFilter<"PoW"> | Date | string
    subSkills?: JsonNullableFilter<"PoW">
    updatedAt?: DateTimeFilter<"PoW"> | Date | string
    like?: JsonNullableFilter<"PoW">
    likeCount?: IntFilter<"PoW"> | number
    ogImage?: StringNullableFilter<"PoW"> | string | null
  }

  export type AccountUpsertWithWhereUniqueWithoutUserInput = {
    where: AccountWhereUniqueInput
    update: XOR<AccountUpdateWithoutUserInput, AccountUncheckedUpdateWithoutUserInput>
    create: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput>
  }

  export type AccountUpdateWithWhereUniqueWithoutUserInput = {
    where: AccountWhereUniqueInput
    data: XOR<AccountUpdateWithoutUserInput, AccountUncheckedUpdateWithoutUserInput>
  }

  export type AccountUpdateManyWithWhereWithoutUserInput = {
    where: AccountScalarWhereInput
    data: XOR<AccountUpdateManyMutationInput, AccountUncheckedUpdateManyWithoutUserInput>
  }

  export type AccountScalarWhereInput = {
    AND?: AccountScalarWhereInput | AccountScalarWhereInput[]
    OR?: AccountScalarWhereInput[]
    NOT?: AccountScalarWhereInput | AccountScalarWhereInput[]
    id?: StringFilter<"Account"> | string
    userId?: StringFilter<"Account"> | string
    type?: StringFilter<"Account"> | string
    provider?: StringFilter<"Account"> | string
    providerAccountId?: StringFilter<"Account"> | string
    refresh_token?: StringNullableFilter<"Account"> | string | null
    access_token?: StringNullableFilter<"Account"> | string | null
    expires_at?: IntNullableFilter<"Account"> | number | null
    token_type?: StringNullableFilter<"Account"> | string | null
    scope?: StringNullableFilter<"Account"> | string | null
    id_token?: StringNullableFilter<"Account"> | string | null
    session_state?: StringNullableFilter<"Account"> | string | null
  }

  export type SessionUpsertWithWhereUniqueWithoutUserInput = {
    where: SessionWhereUniqueInput
    update: XOR<SessionUpdateWithoutUserInput, SessionUncheckedUpdateWithoutUserInput>
    create: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput>
  }

  export type SessionUpdateWithWhereUniqueWithoutUserInput = {
    where: SessionWhereUniqueInput
    data: XOR<SessionUpdateWithoutUserInput, SessionUncheckedUpdateWithoutUserInput>
  }

  export type SessionUpdateManyWithWhereWithoutUserInput = {
    where: SessionScalarWhereInput
    data: XOR<SessionUpdateManyMutationInput, SessionUncheckedUpdateManyWithoutUserInput>
  }

  export type SessionScalarWhereInput = {
    AND?: SessionScalarWhereInput | SessionScalarWhereInput[]
    OR?: SessionScalarWhereInput[]
    NOT?: SessionScalarWhereInput | SessionScalarWhereInput[]
    id?: StringFilter<"Session"> | string
    sessionToken?: StringFilter<"Session"> | string
    userId?: StringFilter<"Session"> | string
    expires?: DateTimeFilter<"Session"> | Date | string
  }

  export type HackathonUpsertWithoutUserInput = {
    update: XOR<HackathonUpdateWithoutUserInput, HackathonUncheckedUpdateWithoutUserInput>
    create: XOR<HackathonCreateWithoutUserInput, HackathonUncheckedCreateWithoutUserInput>
    where?: HackathonWhereInput
  }

  export type HackathonUpdateToOneWithWhereWithoutUserInput = {
    where?: HackathonWhereInput
    data: XOR<HackathonUpdateWithoutUserInput, HackathonUncheckedUpdateWithoutUserInput>
  }

  export type HackathonUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    logo?: StringFieldUpdateOperationsInput | string
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    altLogo?: NullableStringFieldUpdateOperationsInput | string | null
    announceDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    listings?: BountiesUpdateManyWithoutHackathonNestedInput
    Sponsor?: SponsorsUpdateOneWithoutHackathonNestedInput
    SubscribeHackathon?: SubscribeHackathonUpdateManyWithoutHackthonsNestedInput
  }

  export type HackathonUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    logo?: StringFieldUpdateOperationsInput | string
    sponsorId?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    altLogo?: NullableStringFieldUpdateOperationsInput | string | null
    announceDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    listings?: BountiesUncheckedUpdateManyWithoutHackathonNestedInput
    SubscribeHackathon?: SubscribeHackathonUncheckedUpdateManyWithoutHackthonsNestedInput
  }

  export type EmailSettingsUpsertWithWhereUniqueWithoutUserInput = {
    where: EmailSettingsWhereUniqueInput
    update: XOR<EmailSettingsUpdateWithoutUserInput, EmailSettingsUncheckedUpdateWithoutUserInput>
    create: XOR<EmailSettingsCreateWithoutUserInput, EmailSettingsUncheckedCreateWithoutUserInput>
  }

  export type EmailSettingsUpdateWithWhereUniqueWithoutUserInput = {
    where: EmailSettingsWhereUniqueInput
    data: XOR<EmailSettingsUpdateWithoutUserInput, EmailSettingsUncheckedUpdateWithoutUserInput>
  }

  export type EmailSettingsUpdateManyWithWhereWithoutUserInput = {
    where: EmailSettingsScalarWhereInput
    data: XOR<EmailSettingsUpdateManyMutationInput, EmailSettingsUncheckedUpdateManyWithoutUserInput>
  }

  export type EmailSettingsScalarWhereInput = {
    AND?: EmailSettingsScalarWhereInput | EmailSettingsScalarWhereInput[]
    OR?: EmailSettingsScalarWhereInput[]
    NOT?: EmailSettingsScalarWhereInput | EmailSettingsScalarWhereInput[]
    id?: IntFilter<"EmailSettings"> | number
    userId?: StringFilter<"EmailSettings"> | string
    category?: StringFilter<"EmailSettings"> | string
  }

  export type TalentRankingsUpsertWithWhereUniqueWithoutUserInput = {
    where: TalentRankingsWhereUniqueInput
    update: XOR<TalentRankingsUpdateWithoutUserInput, TalentRankingsUncheckedUpdateWithoutUserInput>
    create: XOR<TalentRankingsCreateWithoutUserInput, TalentRankingsUncheckedCreateWithoutUserInput>
  }

  export type TalentRankingsUpdateWithWhereUniqueWithoutUserInput = {
    where: TalentRankingsWhereUniqueInput
    data: XOR<TalentRankingsUpdateWithoutUserInput, TalentRankingsUncheckedUpdateWithoutUserInput>
  }

  export type TalentRankingsUpdateManyWithWhereWithoutUserInput = {
    where: TalentRankingsScalarWhereInput
    data: XOR<TalentRankingsUpdateManyMutationInput, TalentRankingsUncheckedUpdateManyWithoutUserInput>
  }

  export type TalentRankingsScalarWhereInput = {
    AND?: TalentRankingsScalarWhereInput | TalentRankingsScalarWhereInput[]
    OR?: TalentRankingsScalarWhereInput[]
    NOT?: TalentRankingsScalarWhereInput | TalentRankingsScalarWhereInput[]
    id?: StringFilter<"TalentRankings"> | string
    userId?: StringFilter<"TalentRankings"> | string
    skill?: EnumTalentRankingSkillsFilter<"TalentRankings"> | $Enums.TalentRankingSkills
    timeframe?: EnumTalentRankingTimeframeFilter<"TalentRankings"> | $Enums.TalentRankingTimeframe
    rank?: IntFilter<"TalentRankings"> | number
    submissions?: IntFilter<"TalentRankings"> | number
    winRate?: IntFilter<"TalentRankings"> | number
    wins?: IntFilter<"TalentRankings"> | number
    totalEarnedInUSD?: IntFilter<"TalentRankings"> | number
  }

  export type ScoutsUpsertWithWhereUniqueWithoutUserInput = {
    where: ScoutsWhereUniqueInput
    update: XOR<ScoutsUpdateWithoutUserInput, ScoutsUncheckedUpdateWithoutUserInput>
    create: XOR<ScoutsCreateWithoutUserInput, ScoutsUncheckedCreateWithoutUserInput>
  }

  export type ScoutsUpdateWithWhereUniqueWithoutUserInput = {
    where: ScoutsWhereUniqueInput
    data: XOR<ScoutsUpdateWithoutUserInput, ScoutsUncheckedUpdateWithoutUserInput>
  }

  export type ScoutsUpdateManyWithWhereWithoutUserInput = {
    where: ScoutsScalarWhereInput
    data: XOR<ScoutsUpdateManyMutationInput, ScoutsUncheckedUpdateManyWithoutUserInput>
  }

  export type GrantApplicationUpsertWithWhereUniqueWithoutUserInput = {
    where: GrantApplicationWhereUniqueInput
    update: XOR<GrantApplicationUpdateWithoutUserInput, GrantApplicationUncheckedUpdateWithoutUserInput>
    create: XOR<GrantApplicationCreateWithoutUserInput, GrantApplicationUncheckedCreateWithoutUserInput>
  }

  export type GrantApplicationUpdateWithWhereUniqueWithoutUserInput = {
    where: GrantApplicationWhereUniqueInput
    data: XOR<GrantApplicationUpdateWithoutUserInput, GrantApplicationUncheckedUpdateWithoutUserInput>
  }

  export type GrantApplicationUpdateManyWithWhereWithoutUserInput = {
    where: GrantApplicationScalarWhereInput
    data: XOR<GrantApplicationUpdateManyMutationInput, GrantApplicationUncheckedUpdateManyWithoutUserInput>
  }

  export type SubscribeHackathonUpsertWithWhereUniqueWithoutUserInput = {
    where: SubscribeHackathonWhereUniqueInput
    update: XOR<SubscribeHackathonUpdateWithoutUserInput, SubscribeHackathonUncheckedUpdateWithoutUserInput>
    create: XOR<SubscribeHackathonCreateWithoutUserInput, SubscribeHackathonUncheckedCreateWithoutUserInput>
  }

  export type SubscribeHackathonUpdateWithWhereUniqueWithoutUserInput = {
    where: SubscribeHackathonWhereUniqueInput
    data: XOR<SubscribeHackathonUpdateWithoutUserInput, SubscribeHackathonUncheckedUpdateWithoutUserInput>
  }

  export type SubscribeHackathonUpdateManyWithWhereWithoutUserInput = {
    where: SubscribeHackathonScalarWhereInput
    data: XOR<SubscribeHackathonUpdateManyMutationInput, SubscribeHackathonUncheckedUpdateManyWithoutUserInput>
  }

  export type SubscribeHackathonScalarWhereInput = {
    AND?: SubscribeHackathonScalarWhereInput | SubscribeHackathonScalarWhereInput[]
    OR?: SubscribeHackathonScalarWhereInput[]
    NOT?: SubscribeHackathonScalarWhereInput | SubscribeHackathonScalarWhereInput[]
    id?: StringFilter<"SubscribeHackathon"> | string
    userId?: StringFilter<"SubscribeHackathon"> | string
    hackathonId?: StringFilter<"SubscribeHackathon"> | string
    isArchived?: BoolFilter<"SubscribeHackathon"> | boolean
    createdAt?: DateTimeFilter<"SubscribeHackathon"> | Date | string
    updatedAt?: DateTimeFilter<"SubscribeHackathon"> | Date | string
  }

  export type CreditLedgerUpsertWithWhereUniqueWithoutUserInput = {
    where: CreditLedgerWhereUniqueInput
    update: XOR<CreditLedgerUpdateWithoutUserInput, CreditLedgerUncheckedUpdateWithoutUserInput>
    create: XOR<CreditLedgerCreateWithoutUserInput, CreditLedgerUncheckedCreateWithoutUserInput>
  }

  export type CreditLedgerUpdateWithWhereUniqueWithoutUserInput = {
    where: CreditLedgerWhereUniqueInput
    data: XOR<CreditLedgerUpdateWithoutUserInput, CreditLedgerUncheckedUpdateWithoutUserInput>
  }

  export type CreditLedgerUpdateManyWithWhereWithoutUserInput = {
    where: CreditLedgerScalarWhereInput
    data: XOR<CreditLedgerUpdateManyMutationInput, CreditLedgerUncheckedUpdateManyWithoutUserInput>
  }

  export type BountiesCreateWithoutScoutsInput = {
    id?: string
    title: string
    slug: string
    description?: string | null
    deadline?: Date | string | null
    commitmentDate?: Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.status
    token?: string | null
    rewardAmount?: number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: number
    usdValue?: number | null
    source?: $Enums.Source
    isPublished?: boolean
    isFeatured?: boolean
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    applicationLink?: string | null
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: $Enums.BountyType
    requirements?: string | null
    isWinnersAnnounced?: boolean
    region?: string
    pocSocials?: string | null
    hackathonprize?: boolean
    applicationType?: $Enums.ApplicationType
    timeToComplete?: string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: string | null
    publishedAt?: Date | string | null
    isPrivate?: boolean
    compensationType?: $Enums.CompensationType
    maxRewardAsk?: number | null
    minRewardAsk?: number | null
    language?: string | null
    shouldSendEmail?: boolean
    isFndnPaying?: boolean
    winnersAnnouncedAt?: Date | string | null
    discordMessageIds?: NullableJsonNullValueInput | InputJsonValue
    template?: BountiesTemplatesCreateNestedOneWithoutBountiesInput
    sponsor: SponsorsCreateNestedOneWithoutBountiesInput
    poc: UserCreateNestedOneWithoutPocInput
    Submission?: SubmissionCreateNestedManyWithoutListingInput
    SubscribeBounty?: SubscribeBountyCreateNestedManyWithoutBountiesInput
    Hackathon?: HackathonCreateNestedOneWithoutListingsInput
    Comments?: CommentCreateNestedManyWithoutListingInput
  }

  export type BountiesUncheckedCreateWithoutScoutsInput = {
    id?: string
    title: string
    slug: string
    description?: string | null
    deadline?: Date | string | null
    commitmentDate?: Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.status
    token?: string | null
    rewardAmount?: number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: number
    usdValue?: number | null
    sponsorId: string
    pocId: string
    source?: $Enums.Source
    isPublished?: boolean
    isFeatured?: boolean
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    applicationLink?: string | null
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: $Enums.BountyType
    requirements?: string | null
    isWinnersAnnounced?: boolean
    templateId?: string | null
    region?: string
    pocSocials?: string | null
    hackathonprize?: boolean
    applicationType?: $Enums.ApplicationType
    timeToComplete?: string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: string | null
    publishedAt?: Date | string | null
    isPrivate?: boolean
    hackathonId?: string | null
    compensationType?: $Enums.CompensationType
    maxRewardAsk?: number | null
    minRewardAsk?: number | null
    language?: string | null
    shouldSendEmail?: boolean
    isFndnPaying?: boolean
    winnersAnnouncedAt?: Date | string | null
    discordMessageIds?: NullableJsonNullValueInput | InputJsonValue
    Submission?: SubmissionUncheckedCreateNestedManyWithoutListingInput
    SubscribeBounty?: SubscribeBountyUncheckedCreateNestedManyWithoutBountiesInput
    Comments?: CommentUncheckedCreateNestedManyWithoutListingInput
  }

  export type BountiesCreateOrConnectWithoutScoutsInput = {
    where: BountiesWhereUniqueInput
    create: XOR<BountiesCreateWithoutScoutsInput, BountiesUncheckedCreateWithoutScoutsInput>
  }

  export type UserCreateWithoutScoutsInput = {
    id?: string
    publicKey?: string | null
    walletAddress?: string | null
    email: string
    username?: string | null
    photo?: string | null
    firstName?: string | null
    lastName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    role?: string
    isTalentFilled?: boolean
    interests?: string | null
    bio?: string | null
    twitter?: string | null
    discord?: string | null
    github?: string | null
    linkedin?: string | null
    website?: string | null
    telegram?: string | null
    community?: string | null
    experience?: string | null
    superteamLevel?: string | null
    location?: string | null
    cryptoExperience?: string | null
    workPrefernce?: string | null
    currentEmployer?: string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    emailVerified?: Date | string | null
    featureModalShown?: boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: boolean
    acceptedTOS?: boolean
    stLead?: string | null
    isBlocked?: boolean
    privyDid: string
    isKYCVerified?: boolean
    kycName?: string | null
    kycCountry?: string | null
    kycAddress?: string | null
    kycDOB?: string | null
    kycIDNumber?: string | null
    kycIDType?: string | null
    currentSponsor?: SponsorsCreateNestedOneWithoutUserInput
    UserSponsors?: UserSponsorsCreateNestedManyWithoutUserInput
    poc?: BountiesCreateNestedManyWithoutPocInput
    templates?: BountiesTemplatesCreateNestedManyWithoutPocInput
    Comment?: CommentCreateNestedManyWithoutAuthorInput
    Submission?: SubmissionCreateNestedManyWithoutUserInput
    Grants?: GrantsCreateNestedManyWithoutPocInput
    UserInvites?: UserInvitesCreateNestedManyWithoutSenderInput
    SubscribeBounty?: SubscribeBountyCreateNestedManyWithoutUserInput
    PoW?: PoWCreateNestedManyWithoutUserInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    Hackathon?: HackathonCreateNestedOneWithoutUserInput
    emailSettings?: EmailSettingsCreateNestedManyWithoutUserInput
    TalentRankings?: TalentRankingsCreateNestedManyWithoutUserInput
    GrantApplication?: GrantApplicationCreateNestedManyWithoutUserInput
    SubscribeHackathon?: SubscribeHackathonCreateNestedManyWithoutUserInput
    CreditLedger?: CreditLedgerCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutScoutsInput = {
    id?: string
    publicKey?: string | null
    walletAddress?: string | null
    email: string
    username?: string | null
    photo?: string | null
    firstName?: string | null
    lastName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    role?: string
    isTalentFilled?: boolean
    interests?: string | null
    bio?: string | null
    twitter?: string | null
    discord?: string | null
    github?: string | null
    linkedin?: string | null
    website?: string | null
    telegram?: string | null
    community?: string | null
    experience?: string | null
    superteamLevel?: string | null
    location?: string | null
    cryptoExperience?: string | null
    workPrefernce?: string | null
    currentEmployer?: string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    currentSponsorId?: string | null
    emailVerified?: Date | string | null
    hackathonId?: string | null
    featureModalShown?: boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: boolean
    acceptedTOS?: boolean
    stLead?: string | null
    isBlocked?: boolean
    privyDid: string
    isKYCVerified?: boolean
    kycName?: string | null
    kycCountry?: string | null
    kycAddress?: string | null
    kycDOB?: string | null
    kycIDNumber?: string | null
    kycIDType?: string | null
    UserSponsors?: UserSponsorsUncheckedCreateNestedManyWithoutUserInput
    poc?: BountiesUncheckedCreateNestedManyWithoutPocInput
    templates?: BountiesTemplatesUncheckedCreateNestedManyWithoutPocInput
    Comment?: CommentUncheckedCreateNestedManyWithoutAuthorInput
    Submission?: SubmissionUncheckedCreateNestedManyWithoutUserInput
    Grants?: GrantsUncheckedCreateNestedManyWithoutPocInput
    UserInvites?: UserInvitesUncheckedCreateNestedManyWithoutSenderInput
    SubscribeBounty?: SubscribeBountyUncheckedCreateNestedManyWithoutUserInput
    PoW?: PoWUncheckedCreateNestedManyWithoutUserInput
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    emailSettings?: EmailSettingsUncheckedCreateNestedManyWithoutUserInput
    TalentRankings?: TalentRankingsUncheckedCreateNestedManyWithoutUserInput
    GrantApplication?: GrantApplicationUncheckedCreateNestedManyWithoutUserInput
    SubscribeHackathon?: SubscribeHackathonUncheckedCreateNestedManyWithoutUserInput
    CreditLedger?: CreditLedgerUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutScoutsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutScoutsInput, UserUncheckedCreateWithoutScoutsInput>
  }

  export type BountiesUpsertWithoutScoutsInput = {
    update: XOR<BountiesUpdateWithoutScoutsInput, BountiesUncheckedUpdateWithoutScoutsInput>
    create: XOR<BountiesCreateWithoutScoutsInput, BountiesUncheckedCreateWithoutScoutsInput>
    where?: BountiesWhereInput
  }

  export type BountiesUpdateToOneWithWhereWithoutScoutsInput = {
    where?: BountiesWhereInput
    data: XOR<BountiesUpdateWithoutScoutsInput, BountiesUncheckedUpdateWithoutScoutsInput>
  }

  export type BountiesUpdateWithoutScoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    commitmentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    token?: NullableStringFieldUpdateOperationsInput | string | null
    rewardAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: IntFieldUpdateOperationsInput | number
    usdValue?: NullableFloatFieldUpdateOperationsInput | number | null
    source?: EnumSourceFieldUpdateOperationsInput | $Enums.Source
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationLink?: NullableStringFieldUpdateOperationsInput | string | null
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: EnumBountyTypeFieldUpdateOperationsInput | $Enums.BountyType
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    isWinnersAnnounced?: BoolFieldUpdateOperationsInput | boolean
    region?: StringFieldUpdateOperationsInput | string
    pocSocials?: NullableStringFieldUpdateOperationsInput | string | null
    hackathonprize?: BoolFieldUpdateOperationsInput | boolean
    applicationType?: EnumApplicationTypeFieldUpdateOperationsInput | $Enums.ApplicationType
    timeToComplete?: NullableStringFieldUpdateOperationsInput | string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    compensationType?: EnumCompensationTypeFieldUpdateOperationsInput | $Enums.CompensationType
    maxRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    minRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    shouldSendEmail?: BoolFieldUpdateOperationsInput | boolean
    isFndnPaying?: BoolFieldUpdateOperationsInput | boolean
    winnersAnnouncedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discordMessageIds?: NullableJsonNullValueInput | InputJsonValue
    template?: BountiesTemplatesUpdateOneWithoutBountiesNestedInput
    sponsor?: SponsorsUpdateOneRequiredWithoutBountiesNestedInput
    poc?: UserUpdateOneRequiredWithoutPocNestedInput
    Submission?: SubmissionUpdateManyWithoutListingNestedInput
    SubscribeBounty?: SubscribeBountyUpdateManyWithoutBountiesNestedInput
    Hackathon?: HackathonUpdateOneWithoutListingsNestedInput
    Comments?: CommentUpdateManyWithoutListingNestedInput
  }

  export type BountiesUncheckedUpdateWithoutScoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    commitmentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    token?: NullableStringFieldUpdateOperationsInput | string | null
    rewardAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: IntFieldUpdateOperationsInput | number
    usdValue?: NullableFloatFieldUpdateOperationsInput | number | null
    sponsorId?: StringFieldUpdateOperationsInput | string
    pocId?: StringFieldUpdateOperationsInput | string
    source?: EnumSourceFieldUpdateOperationsInput | $Enums.Source
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationLink?: NullableStringFieldUpdateOperationsInput | string | null
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: EnumBountyTypeFieldUpdateOperationsInput | $Enums.BountyType
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    isWinnersAnnounced?: BoolFieldUpdateOperationsInput | boolean
    templateId?: NullableStringFieldUpdateOperationsInput | string | null
    region?: StringFieldUpdateOperationsInput | string
    pocSocials?: NullableStringFieldUpdateOperationsInput | string | null
    hackathonprize?: BoolFieldUpdateOperationsInput | boolean
    applicationType?: EnumApplicationTypeFieldUpdateOperationsInput | $Enums.ApplicationType
    timeToComplete?: NullableStringFieldUpdateOperationsInput | string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    hackathonId?: NullableStringFieldUpdateOperationsInput | string | null
    compensationType?: EnumCompensationTypeFieldUpdateOperationsInput | $Enums.CompensationType
    maxRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    minRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    shouldSendEmail?: BoolFieldUpdateOperationsInput | boolean
    isFndnPaying?: BoolFieldUpdateOperationsInput | boolean
    winnersAnnouncedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discordMessageIds?: NullableJsonNullValueInput | InputJsonValue
    Submission?: SubmissionUncheckedUpdateManyWithoutListingNestedInput
    SubscribeBounty?: SubscribeBountyUncheckedUpdateManyWithoutBountiesNestedInput
    Comments?: CommentUncheckedUpdateManyWithoutListingNestedInput
  }

  export type UserUpsertWithoutScoutsInput = {
    update: XOR<UserUpdateWithoutScoutsInput, UserUncheckedUpdateWithoutScoutsInput>
    create: XOR<UserCreateWithoutScoutsInput, UserUncheckedCreateWithoutScoutsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutScoutsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutScoutsInput, UserUncheckedUpdateWithoutScoutsInput>
  }

  export type UserUpdateWithoutScoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    publicKey?: NullableStringFieldUpdateOperationsInput | string | null
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    isTalentFilled?: BoolFieldUpdateOperationsInput | boolean
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    discord?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    community?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    superteamLevel?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    cryptoExperience?: NullableStringFieldUpdateOperationsInput | string | null
    workPrefernce?: NullableStringFieldUpdateOperationsInput | string | null
    currentEmployer?: NullableStringFieldUpdateOperationsInput | string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: BoolFieldUpdateOperationsInput | boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    featureModalShown?: BoolFieldUpdateOperationsInput | boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: BoolFieldUpdateOperationsInput | boolean
    acceptedTOS?: BoolFieldUpdateOperationsInput | boolean
    stLead?: NullableStringFieldUpdateOperationsInput | string | null
    isBlocked?: BoolFieldUpdateOperationsInput | boolean
    privyDid?: StringFieldUpdateOperationsInput | string
    isKYCVerified?: BoolFieldUpdateOperationsInput | boolean
    kycName?: NullableStringFieldUpdateOperationsInput | string | null
    kycCountry?: NullableStringFieldUpdateOperationsInput | string | null
    kycAddress?: NullableStringFieldUpdateOperationsInput | string | null
    kycDOB?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDNumber?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDType?: NullableStringFieldUpdateOperationsInput | string | null
    currentSponsor?: SponsorsUpdateOneWithoutUserNestedInput
    UserSponsors?: UserSponsorsUpdateManyWithoutUserNestedInput
    poc?: BountiesUpdateManyWithoutPocNestedInput
    templates?: BountiesTemplatesUpdateManyWithoutPocNestedInput
    Comment?: CommentUpdateManyWithoutAuthorNestedInput
    Submission?: SubmissionUpdateManyWithoutUserNestedInput
    Grants?: GrantsUpdateManyWithoutPocNestedInput
    UserInvites?: UserInvitesUpdateManyWithoutSenderNestedInput
    SubscribeBounty?: SubscribeBountyUpdateManyWithoutUserNestedInput
    PoW?: PoWUpdateManyWithoutUserNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    Hackathon?: HackathonUpdateOneWithoutUserNestedInput
    emailSettings?: EmailSettingsUpdateManyWithoutUserNestedInput
    TalentRankings?: TalentRankingsUpdateManyWithoutUserNestedInput
    GrantApplication?: GrantApplicationUpdateManyWithoutUserNestedInput
    SubscribeHackathon?: SubscribeHackathonUpdateManyWithoutUserNestedInput
    CreditLedger?: CreditLedgerUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutScoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    publicKey?: NullableStringFieldUpdateOperationsInput | string | null
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    isTalentFilled?: BoolFieldUpdateOperationsInput | boolean
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    discord?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    community?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    superteamLevel?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    cryptoExperience?: NullableStringFieldUpdateOperationsInput | string | null
    workPrefernce?: NullableStringFieldUpdateOperationsInput | string | null
    currentEmployer?: NullableStringFieldUpdateOperationsInput | string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: BoolFieldUpdateOperationsInput | boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    currentSponsorId?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hackathonId?: NullableStringFieldUpdateOperationsInput | string | null
    featureModalShown?: BoolFieldUpdateOperationsInput | boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: BoolFieldUpdateOperationsInput | boolean
    acceptedTOS?: BoolFieldUpdateOperationsInput | boolean
    stLead?: NullableStringFieldUpdateOperationsInput | string | null
    isBlocked?: BoolFieldUpdateOperationsInput | boolean
    privyDid?: StringFieldUpdateOperationsInput | string
    isKYCVerified?: BoolFieldUpdateOperationsInput | boolean
    kycName?: NullableStringFieldUpdateOperationsInput | string | null
    kycCountry?: NullableStringFieldUpdateOperationsInput | string | null
    kycAddress?: NullableStringFieldUpdateOperationsInput | string | null
    kycDOB?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDNumber?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDType?: NullableStringFieldUpdateOperationsInput | string | null
    UserSponsors?: UserSponsorsUncheckedUpdateManyWithoutUserNestedInput
    poc?: BountiesUncheckedUpdateManyWithoutPocNestedInput
    templates?: BountiesTemplatesUncheckedUpdateManyWithoutPocNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutAuthorNestedInput
    Submission?: SubmissionUncheckedUpdateManyWithoutUserNestedInput
    Grants?: GrantsUncheckedUpdateManyWithoutPocNestedInput
    UserInvites?: UserInvitesUncheckedUpdateManyWithoutSenderNestedInput
    SubscribeBounty?: SubscribeBountyUncheckedUpdateManyWithoutUserNestedInput
    PoW?: PoWUncheckedUpdateManyWithoutUserNestedInput
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    emailSettings?: EmailSettingsUncheckedUpdateManyWithoutUserNestedInput
    TalentRankings?: TalentRankingsUncheckedUpdateManyWithoutUserNestedInput
    GrantApplication?: GrantApplicationUncheckedUpdateManyWithoutUserNestedInput
    SubscribeHackathon?: SubscribeHackathonUncheckedUpdateManyWithoutUserNestedInput
    CreditLedger?: CreditLedgerUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateWithoutTalentRankingsInput = {
    id?: string
    publicKey?: string | null
    walletAddress?: string | null
    email: string
    username?: string | null
    photo?: string | null
    firstName?: string | null
    lastName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    role?: string
    isTalentFilled?: boolean
    interests?: string | null
    bio?: string | null
    twitter?: string | null
    discord?: string | null
    github?: string | null
    linkedin?: string | null
    website?: string | null
    telegram?: string | null
    community?: string | null
    experience?: string | null
    superteamLevel?: string | null
    location?: string | null
    cryptoExperience?: string | null
    workPrefernce?: string | null
    currentEmployer?: string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    emailVerified?: Date | string | null
    featureModalShown?: boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: boolean
    acceptedTOS?: boolean
    stLead?: string | null
    isBlocked?: boolean
    privyDid: string
    isKYCVerified?: boolean
    kycName?: string | null
    kycCountry?: string | null
    kycAddress?: string | null
    kycDOB?: string | null
    kycIDNumber?: string | null
    kycIDType?: string | null
    currentSponsor?: SponsorsCreateNestedOneWithoutUserInput
    UserSponsors?: UserSponsorsCreateNestedManyWithoutUserInput
    poc?: BountiesCreateNestedManyWithoutPocInput
    templates?: BountiesTemplatesCreateNestedManyWithoutPocInput
    Comment?: CommentCreateNestedManyWithoutAuthorInput
    Submission?: SubmissionCreateNestedManyWithoutUserInput
    Grants?: GrantsCreateNestedManyWithoutPocInput
    UserInvites?: UserInvitesCreateNestedManyWithoutSenderInput
    SubscribeBounty?: SubscribeBountyCreateNestedManyWithoutUserInput
    PoW?: PoWCreateNestedManyWithoutUserInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    Hackathon?: HackathonCreateNestedOneWithoutUserInput
    emailSettings?: EmailSettingsCreateNestedManyWithoutUserInput
    Scouts?: ScoutsCreateNestedManyWithoutUserInput
    GrantApplication?: GrantApplicationCreateNestedManyWithoutUserInput
    SubscribeHackathon?: SubscribeHackathonCreateNestedManyWithoutUserInput
    CreditLedger?: CreditLedgerCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutTalentRankingsInput = {
    id?: string
    publicKey?: string | null
    walletAddress?: string | null
    email: string
    username?: string | null
    photo?: string | null
    firstName?: string | null
    lastName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    role?: string
    isTalentFilled?: boolean
    interests?: string | null
    bio?: string | null
    twitter?: string | null
    discord?: string | null
    github?: string | null
    linkedin?: string | null
    website?: string | null
    telegram?: string | null
    community?: string | null
    experience?: string | null
    superteamLevel?: string | null
    location?: string | null
    cryptoExperience?: string | null
    workPrefernce?: string | null
    currentEmployer?: string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    currentSponsorId?: string | null
    emailVerified?: Date | string | null
    hackathonId?: string | null
    featureModalShown?: boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: boolean
    acceptedTOS?: boolean
    stLead?: string | null
    isBlocked?: boolean
    privyDid: string
    isKYCVerified?: boolean
    kycName?: string | null
    kycCountry?: string | null
    kycAddress?: string | null
    kycDOB?: string | null
    kycIDNumber?: string | null
    kycIDType?: string | null
    UserSponsors?: UserSponsorsUncheckedCreateNestedManyWithoutUserInput
    poc?: BountiesUncheckedCreateNestedManyWithoutPocInput
    templates?: BountiesTemplatesUncheckedCreateNestedManyWithoutPocInput
    Comment?: CommentUncheckedCreateNestedManyWithoutAuthorInput
    Submission?: SubmissionUncheckedCreateNestedManyWithoutUserInput
    Grants?: GrantsUncheckedCreateNestedManyWithoutPocInput
    UserInvites?: UserInvitesUncheckedCreateNestedManyWithoutSenderInput
    SubscribeBounty?: SubscribeBountyUncheckedCreateNestedManyWithoutUserInput
    PoW?: PoWUncheckedCreateNestedManyWithoutUserInput
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    emailSettings?: EmailSettingsUncheckedCreateNestedManyWithoutUserInput
    Scouts?: ScoutsUncheckedCreateNestedManyWithoutUserInput
    GrantApplication?: GrantApplicationUncheckedCreateNestedManyWithoutUserInput
    SubscribeHackathon?: SubscribeHackathonUncheckedCreateNestedManyWithoutUserInput
    CreditLedger?: CreditLedgerUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutTalentRankingsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutTalentRankingsInput, UserUncheckedCreateWithoutTalentRankingsInput>
  }

  export type UserUpsertWithoutTalentRankingsInput = {
    update: XOR<UserUpdateWithoutTalentRankingsInput, UserUncheckedUpdateWithoutTalentRankingsInput>
    create: XOR<UserCreateWithoutTalentRankingsInput, UserUncheckedCreateWithoutTalentRankingsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutTalentRankingsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutTalentRankingsInput, UserUncheckedUpdateWithoutTalentRankingsInput>
  }

  export type UserUpdateWithoutTalentRankingsInput = {
    id?: StringFieldUpdateOperationsInput | string
    publicKey?: NullableStringFieldUpdateOperationsInput | string | null
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    isTalentFilled?: BoolFieldUpdateOperationsInput | boolean
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    discord?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    community?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    superteamLevel?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    cryptoExperience?: NullableStringFieldUpdateOperationsInput | string | null
    workPrefernce?: NullableStringFieldUpdateOperationsInput | string | null
    currentEmployer?: NullableStringFieldUpdateOperationsInput | string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: BoolFieldUpdateOperationsInput | boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    featureModalShown?: BoolFieldUpdateOperationsInput | boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: BoolFieldUpdateOperationsInput | boolean
    acceptedTOS?: BoolFieldUpdateOperationsInput | boolean
    stLead?: NullableStringFieldUpdateOperationsInput | string | null
    isBlocked?: BoolFieldUpdateOperationsInput | boolean
    privyDid?: StringFieldUpdateOperationsInput | string
    isKYCVerified?: BoolFieldUpdateOperationsInput | boolean
    kycName?: NullableStringFieldUpdateOperationsInput | string | null
    kycCountry?: NullableStringFieldUpdateOperationsInput | string | null
    kycAddress?: NullableStringFieldUpdateOperationsInput | string | null
    kycDOB?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDNumber?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDType?: NullableStringFieldUpdateOperationsInput | string | null
    currentSponsor?: SponsorsUpdateOneWithoutUserNestedInput
    UserSponsors?: UserSponsorsUpdateManyWithoutUserNestedInput
    poc?: BountiesUpdateManyWithoutPocNestedInput
    templates?: BountiesTemplatesUpdateManyWithoutPocNestedInput
    Comment?: CommentUpdateManyWithoutAuthorNestedInput
    Submission?: SubmissionUpdateManyWithoutUserNestedInput
    Grants?: GrantsUpdateManyWithoutPocNestedInput
    UserInvites?: UserInvitesUpdateManyWithoutSenderNestedInput
    SubscribeBounty?: SubscribeBountyUpdateManyWithoutUserNestedInput
    PoW?: PoWUpdateManyWithoutUserNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    Hackathon?: HackathonUpdateOneWithoutUserNestedInput
    emailSettings?: EmailSettingsUpdateManyWithoutUserNestedInput
    Scouts?: ScoutsUpdateManyWithoutUserNestedInput
    GrantApplication?: GrantApplicationUpdateManyWithoutUserNestedInput
    SubscribeHackathon?: SubscribeHackathonUpdateManyWithoutUserNestedInput
    CreditLedger?: CreditLedgerUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutTalentRankingsInput = {
    id?: StringFieldUpdateOperationsInput | string
    publicKey?: NullableStringFieldUpdateOperationsInput | string | null
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    isTalentFilled?: BoolFieldUpdateOperationsInput | boolean
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    discord?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    community?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    superteamLevel?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    cryptoExperience?: NullableStringFieldUpdateOperationsInput | string | null
    workPrefernce?: NullableStringFieldUpdateOperationsInput | string | null
    currentEmployer?: NullableStringFieldUpdateOperationsInput | string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: BoolFieldUpdateOperationsInput | boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    currentSponsorId?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hackathonId?: NullableStringFieldUpdateOperationsInput | string | null
    featureModalShown?: BoolFieldUpdateOperationsInput | boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: BoolFieldUpdateOperationsInput | boolean
    acceptedTOS?: BoolFieldUpdateOperationsInput | boolean
    stLead?: NullableStringFieldUpdateOperationsInput | string | null
    isBlocked?: BoolFieldUpdateOperationsInput | boolean
    privyDid?: StringFieldUpdateOperationsInput | string
    isKYCVerified?: BoolFieldUpdateOperationsInput | boolean
    kycName?: NullableStringFieldUpdateOperationsInput | string | null
    kycCountry?: NullableStringFieldUpdateOperationsInput | string | null
    kycAddress?: NullableStringFieldUpdateOperationsInput | string | null
    kycDOB?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDNumber?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDType?: NullableStringFieldUpdateOperationsInput | string | null
    UserSponsors?: UserSponsorsUncheckedUpdateManyWithoutUserNestedInput
    poc?: BountiesUncheckedUpdateManyWithoutPocNestedInput
    templates?: BountiesTemplatesUncheckedUpdateManyWithoutPocNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutAuthorNestedInput
    Submission?: SubmissionUncheckedUpdateManyWithoutUserNestedInput
    Grants?: GrantsUncheckedUpdateManyWithoutPocNestedInput
    UserInvites?: UserInvitesUncheckedUpdateManyWithoutSenderNestedInput
    SubscribeBounty?: SubscribeBountyUncheckedUpdateManyWithoutUserNestedInput
    PoW?: PoWUncheckedUpdateManyWithoutUserNestedInput
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    emailSettings?: EmailSettingsUncheckedUpdateManyWithoutUserNestedInput
    Scouts?: ScoutsUncheckedUpdateManyWithoutUserNestedInput
    GrantApplication?: GrantApplicationUncheckedUpdateManyWithoutUserNestedInput
    SubscribeHackathon?: SubscribeHackathonUncheckedUpdateManyWithoutUserNestedInput
    CreditLedger?: CreditLedgerUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateWithoutPoWInput = {
    id?: string
    publicKey?: string | null
    walletAddress?: string | null
    email: string
    username?: string | null
    photo?: string | null
    firstName?: string | null
    lastName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    role?: string
    isTalentFilled?: boolean
    interests?: string | null
    bio?: string | null
    twitter?: string | null
    discord?: string | null
    github?: string | null
    linkedin?: string | null
    website?: string | null
    telegram?: string | null
    community?: string | null
    experience?: string | null
    superteamLevel?: string | null
    location?: string | null
    cryptoExperience?: string | null
    workPrefernce?: string | null
    currentEmployer?: string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    emailVerified?: Date | string | null
    featureModalShown?: boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: boolean
    acceptedTOS?: boolean
    stLead?: string | null
    isBlocked?: boolean
    privyDid: string
    isKYCVerified?: boolean
    kycName?: string | null
    kycCountry?: string | null
    kycAddress?: string | null
    kycDOB?: string | null
    kycIDNumber?: string | null
    kycIDType?: string | null
    currentSponsor?: SponsorsCreateNestedOneWithoutUserInput
    UserSponsors?: UserSponsorsCreateNestedManyWithoutUserInput
    poc?: BountiesCreateNestedManyWithoutPocInput
    templates?: BountiesTemplatesCreateNestedManyWithoutPocInput
    Comment?: CommentCreateNestedManyWithoutAuthorInput
    Submission?: SubmissionCreateNestedManyWithoutUserInput
    Grants?: GrantsCreateNestedManyWithoutPocInput
    UserInvites?: UserInvitesCreateNestedManyWithoutSenderInput
    SubscribeBounty?: SubscribeBountyCreateNestedManyWithoutUserInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    Hackathon?: HackathonCreateNestedOneWithoutUserInput
    emailSettings?: EmailSettingsCreateNestedManyWithoutUserInput
    TalentRankings?: TalentRankingsCreateNestedManyWithoutUserInput
    Scouts?: ScoutsCreateNestedManyWithoutUserInput
    GrantApplication?: GrantApplicationCreateNestedManyWithoutUserInput
    SubscribeHackathon?: SubscribeHackathonCreateNestedManyWithoutUserInput
    CreditLedger?: CreditLedgerCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutPoWInput = {
    id?: string
    publicKey?: string | null
    walletAddress?: string | null
    email: string
    username?: string | null
    photo?: string | null
    firstName?: string | null
    lastName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    role?: string
    isTalentFilled?: boolean
    interests?: string | null
    bio?: string | null
    twitter?: string | null
    discord?: string | null
    github?: string | null
    linkedin?: string | null
    website?: string | null
    telegram?: string | null
    community?: string | null
    experience?: string | null
    superteamLevel?: string | null
    location?: string | null
    cryptoExperience?: string | null
    workPrefernce?: string | null
    currentEmployer?: string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    currentSponsorId?: string | null
    emailVerified?: Date | string | null
    hackathonId?: string | null
    featureModalShown?: boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: boolean
    acceptedTOS?: boolean
    stLead?: string | null
    isBlocked?: boolean
    privyDid: string
    isKYCVerified?: boolean
    kycName?: string | null
    kycCountry?: string | null
    kycAddress?: string | null
    kycDOB?: string | null
    kycIDNumber?: string | null
    kycIDType?: string | null
    UserSponsors?: UserSponsorsUncheckedCreateNestedManyWithoutUserInput
    poc?: BountiesUncheckedCreateNestedManyWithoutPocInput
    templates?: BountiesTemplatesUncheckedCreateNestedManyWithoutPocInput
    Comment?: CommentUncheckedCreateNestedManyWithoutAuthorInput
    Submission?: SubmissionUncheckedCreateNestedManyWithoutUserInput
    Grants?: GrantsUncheckedCreateNestedManyWithoutPocInput
    UserInvites?: UserInvitesUncheckedCreateNestedManyWithoutSenderInput
    SubscribeBounty?: SubscribeBountyUncheckedCreateNestedManyWithoutUserInput
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    emailSettings?: EmailSettingsUncheckedCreateNestedManyWithoutUserInput
    TalentRankings?: TalentRankingsUncheckedCreateNestedManyWithoutUserInput
    Scouts?: ScoutsUncheckedCreateNestedManyWithoutUserInput
    GrantApplication?: GrantApplicationUncheckedCreateNestedManyWithoutUserInput
    SubscribeHackathon?: SubscribeHackathonUncheckedCreateNestedManyWithoutUserInput
    CreditLedger?: CreditLedgerUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutPoWInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutPoWInput, UserUncheckedCreateWithoutPoWInput>
  }

  export type CommentCreateWithoutPowInput = {
    id?: string
    message: string
    refType?: $Enums.CommentRefType
    isActive?: boolean
    isArchived?: boolean
    isPinned?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    submissionId?: string | null
    type?: $Enums.CommentType
    author: UserCreateNestedOneWithoutCommentInput
    repliedTo?: CommentCreateNestedOneWithoutRepliesInput
    replies?: CommentCreateNestedManyWithoutRepliedToInput
    listing?: BountiesCreateNestedOneWithoutCommentsInput
    submission?: SubmissionCreateNestedOneWithoutCommentsInput
    GrantApplication?: GrantApplicationCreateNestedOneWithoutCommentsInput
  }

  export type CommentUncheckedCreateWithoutPowInput = {
    id?: string
    message: string
    authorId: string
    refType?: $Enums.CommentRefType
    isActive?: boolean
    isArchived?: boolean
    isPinned?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    replyToId?: string | null
    submissionId?: string | null
    type?: $Enums.CommentType
    replies?: CommentUncheckedCreateNestedManyWithoutRepliedToInput
  }

  export type CommentCreateOrConnectWithoutPowInput = {
    where: CommentWhereUniqueInput
    create: XOR<CommentCreateWithoutPowInput, CommentUncheckedCreateWithoutPowInput>
  }

  export type CommentCreateManyPowInputEnvelope = {
    data: CommentCreateManyPowInput | CommentCreateManyPowInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutPoWInput = {
    update: XOR<UserUpdateWithoutPoWInput, UserUncheckedUpdateWithoutPoWInput>
    create: XOR<UserCreateWithoutPoWInput, UserUncheckedCreateWithoutPoWInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutPoWInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutPoWInput, UserUncheckedUpdateWithoutPoWInput>
  }

  export type UserUpdateWithoutPoWInput = {
    id?: StringFieldUpdateOperationsInput | string
    publicKey?: NullableStringFieldUpdateOperationsInput | string | null
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    isTalentFilled?: BoolFieldUpdateOperationsInput | boolean
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    discord?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    community?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    superteamLevel?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    cryptoExperience?: NullableStringFieldUpdateOperationsInput | string | null
    workPrefernce?: NullableStringFieldUpdateOperationsInput | string | null
    currentEmployer?: NullableStringFieldUpdateOperationsInput | string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: BoolFieldUpdateOperationsInput | boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    featureModalShown?: BoolFieldUpdateOperationsInput | boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: BoolFieldUpdateOperationsInput | boolean
    acceptedTOS?: BoolFieldUpdateOperationsInput | boolean
    stLead?: NullableStringFieldUpdateOperationsInput | string | null
    isBlocked?: BoolFieldUpdateOperationsInput | boolean
    privyDid?: StringFieldUpdateOperationsInput | string
    isKYCVerified?: BoolFieldUpdateOperationsInput | boolean
    kycName?: NullableStringFieldUpdateOperationsInput | string | null
    kycCountry?: NullableStringFieldUpdateOperationsInput | string | null
    kycAddress?: NullableStringFieldUpdateOperationsInput | string | null
    kycDOB?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDNumber?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDType?: NullableStringFieldUpdateOperationsInput | string | null
    currentSponsor?: SponsorsUpdateOneWithoutUserNestedInput
    UserSponsors?: UserSponsorsUpdateManyWithoutUserNestedInput
    poc?: BountiesUpdateManyWithoutPocNestedInput
    templates?: BountiesTemplatesUpdateManyWithoutPocNestedInput
    Comment?: CommentUpdateManyWithoutAuthorNestedInput
    Submission?: SubmissionUpdateManyWithoutUserNestedInput
    Grants?: GrantsUpdateManyWithoutPocNestedInput
    UserInvites?: UserInvitesUpdateManyWithoutSenderNestedInput
    SubscribeBounty?: SubscribeBountyUpdateManyWithoutUserNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    Hackathon?: HackathonUpdateOneWithoutUserNestedInput
    emailSettings?: EmailSettingsUpdateManyWithoutUserNestedInput
    TalentRankings?: TalentRankingsUpdateManyWithoutUserNestedInput
    Scouts?: ScoutsUpdateManyWithoutUserNestedInput
    GrantApplication?: GrantApplicationUpdateManyWithoutUserNestedInput
    SubscribeHackathon?: SubscribeHackathonUpdateManyWithoutUserNestedInput
    CreditLedger?: CreditLedgerUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutPoWInput = {
    id?: StringFieldUpdateOperationsInput | string
    publicKey?: NullableStringFieldUpdateOperationsInput | string | null
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    isTalentFilled?: BoolFieldUpdateOperationsInput | boolean
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    discord?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    community?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    superteamLevel?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    cryptoExperience?: NullableStringFieldUpdateOperationsInput | string | null
    workPrefernce?: NullableStringFieldUpdateOperationsInput | string | null
    currentEmployer?: NullableStringFieldUpdateOperationsInput | string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: BoolFieldUpdateOperationsInput | boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    currentSponsorId?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hackathonId?: NullableStringFieldUpdateOperationsInput | string | null
    featureModalShown?: BoolFieldUpdateOperationsInput | boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: BoolFieldUpdateOperationsInput | boolean
    acceptedTOS?: BoolFieldUpdateOperationsInput | boolean
    stLead?: NullableStringFieldUpdateOperationsInput | string | null
    isBlocked?: BoolFieldUpdateOperationsInput | boolean
    privyDid?: StringFieldUpdateOperationsInput | string
    isKYCVerified?: BoolFieldUpdateOperationsInput | boolean
    kycName?: NullableStringFieldUpdateOperationsInput | string | null
    kycCountry?: NullableStringFieldUpdateOperationsInput | string | null
    kycAddress?: NullableStringFieldUpdateOperationsInput | string | null
    kycDOB?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDNumber?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDType?: NullableStringFieldUpdateOperationsInput | string | null
    UserSponsors?: UserSponsorsUncheckedUpdateManyWithoutUserNestedInput
    poc?: BountiesUncheckedUpdateManyWithoutPocNestedInput
    templates?: BountiesTemplatesUncheckedUpdateManyWithoutPocNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutAuthorNestedInput
    Submission?: SubmissionUncheckedUpdateManyWithoutUserNestedInput
    Grants?: GrantsUncheckedUpdateManyWithoutPocNestedInput
    UserInvites?: UserInvitesUncheckedUpdateManyWithoutSenderNestedInput
    SubscribeBounty?: SubscribeBountyUncheckedUpdateManyWithoutUserNestedInput
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    emailSettings?: EmailSettingsUncheckedUpdateManyWithoutUserNestedInput
    TalentRankings?: TalentRankingsUncheckedUpdateManyWithoutUserNestedInput
    Scouts?: ScoutsUncheckedUpdateManyWithoutUserNestedInput
    GrantApplication?: GrantApplicationUncheckedUpdateManyWithoutUserNestedInput
    SubscribeHackathon?: SubscribeHackathonUncheckedUpdateManyWithoutUserNestedInput
    CreditLedger?: CreditLedgerUncheckedUpdateManyWithoutUserNestedInput
  }

  export type CommentUpsertWithWhereUniqueWithoutPowInput = {
    where: CommentWhereUniqueInput
    update: XOR<CommentUpdateWithoutPowInput, CommentUncheckedUpdateWithoutPowInput>
    create: XOR<CommentCreateWithoutPowInput, CommentUncheckedCreateWithoutPowInput>
  }

  export type CommentUpdateWithWhereUniqueWithoutPowInput = {
    where: CommentWhereUniqueInput
    data: XOR<CommentUpdateWithoutPowInput, CommentUncheckedUpdateWithoutPowInput>
  }

  export type CommentUpdateManyWithWhereWithoutPowInput = {
    where: CommentScalarWhereInput
    data: XOR<CommentUpdateManyMutationInput, CommentUncheckedUpdateManyWithoutPowInput>
  }

  export type UserCreateWithoutEmailSettingsInput = {
    id?: string
    publicKey?: string | null
    walletAddress?: string | null
    email: string
    username?: string | null
    photo?: string | null
    firstName?: string | null
    lastName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    role?: string
    isTalentFilled?: boolean
    interests?: string | null
    bio?: string | null
    twitter?: string | null
    discord?: string | null
    github?: string | null
    linkedin?: string | null
    website?: string | null
    telegram?: string | null
    community?: string | null
    experience?: string | null
    superteamLevel?: string | null
    location?: string | null
    cryptoExperience?: string | null
    workPrefernce?: string | null
    currentEmployer?: string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    emailVerified?: Date | string | null
    featureModalShown?: boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: boolean
    acceptedTOS?: boolean
    stLead?: string | null
    isBlocked?: boolean
    privyDid: string
    isKYCVerified?: boolean
    kycName?: string | null
    kycCountry?: string | null
    kycAddress?: string | null
    kycDOB?: string | null
    kycIDNumber?: string | null
    kycIDType?: string | null
    currentSponsor?: SponsorsCreateNestedOneWithoutUserInput
    UserSponsors?: UserSponsorsCreateNestedManyWithoutUserInput
    poc?: BountiesCreateNestedManyWithoutPocInput
    templates?: BountiesTemplatesCreateNestedManyWithoutPocInput
    Comment?: CommentCreateNestedManyWithoutAuthorInput
    Submission?: SubmissionCreateNestedManyWithoutUserInput
    Grants?: GrantsCreateNestedManyWithoutPocInput
    UserInvites?: UserInvitesCreateNestedManyWithoutSenderInput
    SubscribeBounty?: SubscribeBountyCreateNestedManyWithoutUserInput
    PoW?: PoWCreateNestedManyWithoutUserInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    Hackathon?: HackathonCreateNestedOneWithoutUserInput
    TalentRankings?: TalentRankingsCreateNestedManyWithoutUserInput
    Scouts?: ScoutsCreateNestedManyWithoutUserInput
    GrantApplication?: GrantApplicationCreateNestedManyWithoutUserInput
    SubscribeHackathon?: SubscribeHackathonCreateNestedManyWithoutUserInput
    CreditLedger?: CreditLedgerCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutEmailSettingsInput = {
    id?: string
    publicKey?: string | null
    walletAddress?: string | null
    email: string
    username?: string | null
    photo?: string | null
    firstName?: string | null
    lastName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    role?: string
    isTalentFilled?: boolean
    interests?: string | null
    bio?: string | null
    twitter?: string | null
    discord?: string | null
    github?: string | null
    linkedin?: string | null
    website?: string | null
    telegram?: string | null
    community?: string | null
    experience?: string | null
    superteamLevel?: string | null
    location?: string | null
    cryptoExperience?: string | null
    workPrefernce?: string | null
    currentEmployer?: string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    currentSponsorId?: string | null
    emailVerified?: Date | string | null
    hackathonId?: string | null
    featureModalShown?: boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: boolean
    acceptedTOS?: boolean
    stLead?: string | null
    isBlocked?: boolean
    privyDid: string
    isKYCVerified?: boolean
    kycName?: string | null
    kycCountry?: string | null
    kycAddress?: string | null
    kycDOB?: string | null
    kycIDNumber?: string | null
    kycIDType?: string | null
    UserSponsors?: UserSponsorsUncheckedCreateNestedManyWithoutUserInput
    poc?: BountiesUncheckedCreateNestedManyWithoutPocInput
    templates?: BountiesTemplatesUncheckedCreateNestedManyWithoutPocInput
    Comment?: CommentUncheckedCreateNestedManyWithoutAuthorInput
    Submission?: SubmissionUncheckedCreateNestedManyWithoutUserInput
    Grants?: GrantsUncheckedCreateNestedManyWithoutPocInput
    UserInvites?: UserInvitesUncheckedCreateNestedManyWithoutSenderInput
    SubscribeBounty?: SubscribeBountyUncheckedCreateNestedManyWithoutUserInput
    PoW?: PoWUncheckedCreateNestedManyWithoutUserInput
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    TalentRankings?: TalentRankingsUncheckedCreateNestedManyWithoutUserInput
    Scouts?: ScoutsUncheckedCreateNestedManyWithoutUserInput
    GrantApplication?: GrantApplicationUncheckedCreateNestedManyWithoutUserInput
    SubscribeHackathon?: SubscribeHackathonUncheckedCreateNestedManyWithoutUserInput
    CreditLedger?: CreditLedgerUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutEmailSettingsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutEmailSettingsInput, UserUncheckedCreateWithoutEmailSettingsInput>
  }

  export type UserUpsertWithoutEmailSettingsInput = {
    update: XOR<UserUpdateWithoutEmailSettingsInput, UserUncheckedUpdateWithoutEmailSettingsInput>
    create: XOR<UserCreateWithoutEmailSettingsInput, UserUncheckedCreateWithoutEmailSettingsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutEmailSettingsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutEmailSettingsInput, UserUncheckedUpdateWithoutEmailSettingsInput>
  }

  export type UserUpdateWithoutEmailSettingsInput = {
    id?: StringFieldUpdateOperationsInput | string
    publicKey?: NullableStringFieldUpdateOperationsInput | string | null
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    isTalentFilled?: BoolFieldUpdateOperationsInput | boolean
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    discord?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    community?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    superteamLevel?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    cryptoExperience?: NullableStringFieldUpdateOperationsInput | string | null
    workPrefernce?: NullableStringFieldUpdateOperationsInput | string | null
    currentEmployer?: NullableStringFieldUpdateOperationsInput | string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: BoolFieldUpdateOperationsInput | boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    featureModalShown?: BoolFieldUpdateOperationsInput | boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: BoolFieldUpdateOperationsInput | boolean
    acceptedTOS?: BoolFieldUpdateOperationsInput | boolean
    stLead?: NullableStringFieldUpdateOperationsInput | string | null
    isBlocked?: BoolFieldUpdateOperationsInput | boolean
    privyDid?: StringFieldUpdateOperationsInput | string
    isKYCVerified?: BoolFieldUpdateOperationsInput | boolean
    kycName?: NullableStringFieldUpdateOperationsInput | string | null
    kycCountry?: NullableStringFieldUpdateOperationsInput | string | null
    kycAddress?: NullableStringFieldUpdateOperationsInput | string | null
    kycDOB?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDNumber?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDType?: NullableStringFieldUpdateOperationsInput | string | null
    currentSponsor?: SponsorsUpdateOneWithoutUserNestedInput
    UserSponsors?: UserSponsorsUpdateManyWithoutUserNestedInput
    poc?: BountiesUpdateManyWithoutPocNestedInput
    templates?: BountiesTemplatesUpdateManyWithoutPocNestedInput
    Comment?: CommentUpdateManyWithoutAuthorNestedInput
    Submission?: SubmissionUpdateManyWithoutUserNestedInput
    Grants?: GrantsUpdateManyWithoutPocNestedInput
    UserInvites?: UserInvitesUpdateManyWithoutSenderNestedInput
    SubscribeBounty?: SubscribeBountyUpdateManyWithoutUserNestedInput
    PoW?: PoWUpdateManyWithoutUserNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    Hackathon?: HackathonUpdateOneWithoutUserNestedInput
    TalentRankings?: TalentRankingsUpdateManyWithoutUserNestedInput
    Scouts?: ScoutsUpdateManyWithoutUserNestedInput
    GrantApplication?: GrantApplicationUpdateManyWithoutUserNestedInput
    SubscribeHackathon?: SubscribeHackathonUpdateManyWithoutUserNestedInput
    CreditLedger?: CreditLedgerUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutEmailSettingsInput = {
    id?: StringFieldUpdateOperationsInput | string
    publicKey?: NullableStringFieldUpdateOperationsInput | string | null
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    isTalentFilled?: BoolFieldUpdateOperationsInput | boolean
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    discord?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    community?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    superteamLevel?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    cryptoExperience?: NullableStringFieldUpdateOperationsInput | string | null
    workPrefernce?: NullableStringFieldUpdateOperationsInput | string | null
    currentEmployer?: NullableStringFieldUpdateOperationsInput | string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: BoolFieldUpdateOperationsInput | boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    currentSponsorId?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hackathonId?: NullableStringFieldUpdateOperationsInput | string | null
    featureModalShown?: BoolFieldUpdateOperationsInput | boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: BoolFieldUpdateOperationsInput | boolean
    acceptedTOS?: BoolFieldUpdateOperationsInput | boolean
    stLead?: NullableStringFieldUpdateOperationsInput | string | null
    isBlocked?: BoolFieldUpdateOperationsInput | boolean
    privyDid?: StringFieldUpdateOperationsInput | string
    isKYCVerified?: BoolFieldUpdateOperationsInput | boolean
    kycName?: NullableStringFieldUpdateOperationsInput | string | null
    kycCountry?: NullableStringFieldUpdateOperationsInput | string | null
    kycAddress?: NullableStringFieldUpdateOperationsInput | string | null
    kycDOB?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDNumber?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDType?: NullableStringFieldUpdateOperationsInput | string | null
    UserSponsors?: UserSponsorsUncheckedUpdateManyWithoutUserNestedInput
    poc?: BountiesUncheckedUpdateManyWithoutPocNestedInput
    templates?: BountiesTemplatesUncheckedUpdateManyWithoutPocNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutAuthorNestedInput
    Submission?: SubmissionUncheckedUpdateManyWithoutUserNestedInput
    Grants?: GrantsUncheckedUpdateManyWithoutPocNestedInput
    UserInvites?: UserInvitesUncheckedUpdateManyWithoutSenderNestedInput
    SubscribeBounty?: SubscribeBountyUncheckedUpdateManyWithoutUserNestedInput
    PoW?: PoWUncheckedUpdateManyWithoutUserNestedInput
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    TalentRankings?: TalentRankingsUncheckedUpdateManyWithoutUserNestedInput
    Scouts?: ScoutsUncheckedUpdateManyWithoutUserNestedInput
    GrantApplication?: GrantApplicationUncheckedUpdateManyWithoutUserNestedInput
    SubscribeHackathon?: SubscribeHackathonUncheckedUpdateManyWithoutUserNestedInput
    CreditLedger?: CreditLedgerUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateWithoutUserSponsorsInput = {
    id?: string
    publicKey?: string | null
    walletAddress?: string | null
    email: string
    username?: string | null
    photo?: string | null
    firstName?: string | null
    lastName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    role?: string
    isTalentFilled?: boolean
    interests?: string | null
    bio?: string | null
    twitter?: string | null
    discord?: string | null
    github?: string | null
    linkedin?: string | null
    website?: string | null
    telegram?: string | null
    community?: string | null
    experience?: string | null
    superteamLevel?: string | null
    location?: string | null
    cryptoExperience?: string | null
    workPrefernce?: string | null
    currentEmployer?: string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    emailVerified?: Date | string | null
    featureModalShown?: boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: boolean
    acceptedTOS?: boolean
    stLead?: string | null
    isBlocked?: boolean
    privyDid: string
    isKYCVerified?: boolean
    kycName?: string | null
    kycCountry?: string | null
    kycAddress?: string | null
    kycDOB?: string | null
    kycIDNumber?: string | null
    kycIDType?: string | null
    currentSponsor?: SponsorsCreateNestedOneWithoutUserInput
    poc?: BountiesCreateNestedManyWithoutPocInput
    templates?: BountiesTemplatesCreateNestedManyWithoutPocInput
    Comment?: CommentCreateNestedManyWithoutAuthorInput
    Submission?: SubmissionCreateNestedManyWithoutUserInput
    Grants?: GrantsCreateNestedManyWithoutPocInput
    UserInvites?: UserInvitesCreateNestedManyWithoutSenderInput
    SubscribeBounty?: SubscribeBountyCreateNestedManyWithoutUserInput
    PoW?: PoWCreateNestedManyWithoutUserInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    Hackathon?: HackathonCreateNestedOneWithoutUserInput
    emailSettings?: EmailSettingsCreateNestedManyWithoutUserInput
    TalentRankings?: TalentRankingsCreateNestedManyWithoutUserInput
    Scouts?: ScoutsCreateNestedManyWithoutUserInput
    GrantApplication?: GrantApplicationCreateNestedManyWithoutUserInput
    SubscribeHackathon?: SubscribeHackathonCreateNestedManyWithoutUserInput
    CreditLedger?: CreditLedgerCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutUserSponsorsInput = {
    id?: string
    publicKey?: string | null
    walletAddress?: string | null
    email: string
    username?: string | null
    photo?: string | null
    firstName?: string | null
    lastName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    role?: string
    isTalentFilled?: boolean
    interests?: string | null
    bio?: string | null
    twitter?: string | null
    discord?: string | null
    github?: string | null
    linkedin?: string | null
    website?: string | null
    telegram?: string | null
    community?: string | null
    experience?: string | null
    superteamLevel?: string | null
    location?: string | null
    cryptoExperience?: string | null
    workPrefernce?: string | null
    currentEmployer?: string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    currentSponsorId?: string | null
    emailVerified?: Date | string | null
    hackathonId?: string | null
    featureModalShown?: boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: boolean
    acceptedTOS?: boolean
    stLead?: string | null
    isBlocked?: boolean
    privyDid: string
    isKYCVerified?: boolean
    kycName?: string | null
    kycCountry?: string | null
    kycAddress?: string | null
    kycDOB?: string | null
    kycIDNumber?: string | null
    kycIDType?: string | null
    poc?: BountiesUncheckedCreateNestedManyWithoutPocInput
    templates?: BountiesTemplatesUncheckedCreateNestedManyWithoutPocInput
    Comment?: CommentUncheckedCreateNestedManyWithoutAuthorInput
    Submission?: SubmissionUncheckedCreateNestedManyWithoutUserInput
    Grants?: GrantsUncheckedCreateNestedManyWithoutPocInput
    UserInvites?: UserInvitesUncheckedCreateNestedManyWithoutSenderInput
    SubscribeBounty?: SubscribeBountyUncheckedCreateNestedManyWithoutUserInput
    PoW?: PoWUncheckedCreateNestedManyWithoutUserInput
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    emailSettings?: EmailSettingsUncheckedCreateNestedManyWithoutUserInput
    TalentRankings?: TalentRankingsUncheckedCreateNestedManyWithoutUserInput
    Scouts?: ScoutsUncheckedCreateNestedManyWithoutUserInput
    GrantApplication?: GrantApplicationUncheckedCreateNestedManyWithoutUserInput
    SubscribeHackathon?: SubscribeHackathonUncheckedCreateNestedManyWithoutUserInput
    CreditLedger?: CreditLedgerUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutUserSponsorsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUserSponsorsInput, UserUncheckedCreateWithoutUserSponsorsInput>
  }

  export type SponsorsCreateWithoutUserSponsorsInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    url?: string | null
    industry: string
    twitter?: string | null
    bio?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    isActive?: boolean
    entityName?: string | null
    isVerified?: boolean
    isCaution?: boolean
    st?: boolean
    verificationInfo?: NullableJsonNullValueInput | InputJsonValue
    Hackathon?: HackathonCreateNestedOneWithoutSponsorInput
    Bounties?: BountiesCreateNestedManyWithoutSponsorInput
    Templates?: BountiesTemplatesCreateNestedManyWithoutSponsorInput
    Grants?: GrantsCreateNestedManyWithoutSponsorInput
    User?: UserCreateNestedManyWithoutCurrentSponsorInput
    UserInvites?: UserInvitesCreateNestedManyWithoutSponsorInput
  }

  export type SponsorsUncheckedCreateWithoutUserSponsorsInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    url?: string | null
    industry: string
    twitter?: string | null
    bio?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    isActive?: boolean
    entityName?: string | null
    isVerified?: boolean
    isCaution?: boolean
    st?: boolean
    verificationInfo?: NullableJsonNullValueInput | InputJsonValue
    Hackathon?: HackathonUncheckedCreateNestedOneWithoutSponsorInput
    Bounties?: BountiesUncheckedCreateNestedManyWithoutSponsorInput
    Templates?: BountiesTemplatesUncheckedCreateNestedManyWithoutSponsorInput
    Grants?: GrantsUncheckedCreateNestedManyWithoutSponsorInput
    User?: UserUncheckedCreateNestedManyWithoutCurrentSponsorInput
    UserInvites?: UserInvitesUncheckedCreateNestedManyWithoutSponsorInput
  }

  export type SponsorsCreateOrConnectWithoutUserSponsorsInput = {
    where: SponsorsWhereUniqueInput
    create: XOR<SponsorsCreateWithoutUserSponsorsInput, SponsorsUncheckedCreateWithoutUserSponsorsInput>
  }

  export type UserUpsertWithoutUserSponsorsInput = {
    update: XOR<UserUpdateWithoutUserSponsorsInput, UserUncheckedUpdateWithoutUserSponsorsInput>
    create: XOR<UserCreateWithoutUserSponsorsInput, UserUncheckedCreateWithoutUserSponsorsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUserSponsorsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUserSponsorsInput, UserUncheckedUpdateWithoutUserSponsorsInput>
  }

  export type UserUpdateWithoutUserSponsorsInput = {
    id?: StringFieldUpdateOperationsInput | string
    publicKey?: NullableStringFieldUpdateOperationsInput | string | null
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    isTalentFilled?: BoolFieldUpdateOperationsInput | boolean
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    discord?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    community?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    superteamLevel?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    cryptoExperience?: NullableStringFieldUpdateOperationsInput | string | null
    workPrefernce?: NullableStringFieldUpdateOperationsInput | string | null
    currentEmployer?: NullableStringFieldUpdateOperationsInput | string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: BoolFieldUpdateOperationsInput | boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    featureModalShown?: BoolFieldUpdateOperationsInput | boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: BoolFieldUpdateOperationsInput | boolean
    acceptedTOS?: BoolFieldUpdateOperationsInput | boolean
    stLead?: NullableStringFieldUpdateOperationsInput | string | null
    isBlocked?: BoolFieldUpdateOperationsInput | boolean
    privyDid?: StringFieldUpdateOperationsInput | string
    isKYCVerified?: BoolFieldUpdateOperationsInput | boolean
    kycName?: NullableStringFieldUpdateOperationsInput | string | null
    kycCountry?: NullableStringFieldUpdateOperationsInput | string | null
    kycAddress?: NullableStringFieldUpdateOperationsInput | string | null
    kycDOB?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDNumber?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDType?: NullableStringFieldUpdateOperationsInput | string | null
    currentSponsor?: SponsorsUpdateOneWithoutUserNestedInput
    poc?: BountiesUpdateManyWithoutPocNestedInput
    templates?: BountiesTemplatesUpdateManyWithoutPocNestedInput
    Comment?: CommentUpdateManyWithoutAuthorNestedInput
    Submission?: SubmissionUpdateManyWithoutUserNestedInput
    Grants?: GrantsUpdateManyWithoutPocNestedInput
    UserInvites?: UserInvitesUpdateManyWithoutSenderNestedInput
    SubscribeBounty?: SubscribeBountyUpdateManyWithoutUserNestedInput
    PoW?: PoWUpdateManyWithoutUserNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    Hackathon?: HackathonUpdateOneWithoutUserNestedInput
    emailSettings?: EmailSettingsUpdateManyWithoutUserNestedInput
    TalentRankings?: TalentRankingsUpdateManyWithoutUserNestedInput
    Scouts?: ScoutsUpdateManyWithoutUserNestedInput
    GrantApplication?: GrantApplicationUpdateManyWithoutUserNestedInput
    SubscribeHackathon?: SubscribeHackathonUpdateManyWithoutUserNestedInput
    CreditLedger?: CreditLedgerUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutUserSponsorsInput = {
    id?: StringFieldUpdateOperationsInput | string
    publicKey?: NullableStringFieldUpdateOperationsInput | string | null
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    isTalentFilled?: BoolFieldUpdateOperationsInput | boolean
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    discord?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    community?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    superteamLevel?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    cryptoExperience?: NullableStringFieldUpdateOperationsInput | string | null
    workPrefernce?: NullableStringFieldUpdateOperationsInput | string | null
    currentEmployer?: NullableStringFieldUpdateOperationsInput | string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: BoolFieldUpdateOperationsInput | boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    currentSponsorId?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hackathonId?: NullableStringFieldUpdateOperationsInput | string | null
    featureModalShown?: BoolFieldUpdateOperationsInput | boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: BoolFieldUpdateOperationsInput | boolean
    acceptedTOS?: BoolFieldUpdateOperationsInput | boolean
    stLead?: NullableStringFieldUpdateOperationsInput | string | null
    isBlocked?: BoolFieldUpdateOperationsInput | boolean
    privyDid?: StringFieldUpdateOperationsInput | string
    isKYCVerified?: BoolFieldUpdateOperationsInput | boolean
    kycName?: NullableStringFieldUpdateOperationsInput | string | null
    kycCountry?: NullableStringFieldUpdateOperationsInput | string | null
    kycAddress?: NullableStringFieldUpdateOperationsInput | string | null
    kycDOB?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDNumber?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDType?: NullableStringFieldUpdateOperationsInput | string | null
    poc?: BountiesUncheckedUpdateManyWithoutPocNestedInput
    templates?: BountiesTemplatesUncheckedUpdateManyWithoutPocNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutAuthorNestedInput
    Submission?: SubmissionUncheckedUpdateManyWithoutUserNestedInput
    Grants?: GrantsUncheckedUpdateManyWithoutPocNestedInput
    UserInvites?: UserInvitesUncheckedUpdateManyWithoutSenderNestedInput
    SubscribeBounty?: SubscribeBountyUncheckedUpdateManyWithoutUserNestedInput
    PoW?: PoWUncheckedUpdateManyWithoutUserNestedInput
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    emailSettings?: EmailSettingsUncheckedUpdateManyWithoutUserNestedInput
    TalentRankings?: TalentRankingsUncheckedUpdateManyWithoutUserNestedInput
    Scouts?: ScoutsUncheckedUpdateManyWithoutUserNestedInput
    GrantApplication?: GrantApplicationUncheckedUpdateManyWithoutUserNestedInput
    SubscribeHackathon?: SubscribeHackathonUncheckedUpdateManyWithoutUserNestedInput
    CreditLedger?: CreditLedgerUncheckedUpdateManyWithoutUserNestedInput
  }

  export type SponsorsUpsertWithoutUserSponsorsInput = {
    update: XOR<SponsorsUpdateWithoutUserSponsorsInput, SponsorsUncheckedUpdateWithoutUserSponsorsInput>
    create: XOR<SponsorsCreateWithoutUserSponsorsInput, SponsorsUncheckedCreateWithoutUserSponsorsInput>
    where?: SponsorsWhereInput
  }

  export type SponsorsUpdateToOneWithWhereWithoutUserSponsorsInput = {
    where?: SponsorsWhereInput
    data: XOR<SponsorsUpdateWithoutUserSponsorsInput, SponsorsUncheckedUpdateWithoutUserSponsorsInput>
  }

  export type SponsorsUpdateWithoutUserSponsorsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    industry?: StringFieldUpdateOperationsInput | string
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCaution?: BoolFieldUpdateOperationsInput | boolean
    st?: BoolFieldUpdateOperationsInput | boolean
    verificationInfo?: NullableJsonNullValueInput | InputJsonValue
    Hackathon?: HackathonUpdateOneWithoutSponsorNestedInput
    Bounties?: BountiesUpdateManyWithoutSponsorNestedInput
    Templates?: BountiesTemplatesUpdateManyWithoutSponsorNestedInput
    Grants?: GrantsUpdateManyWithoutSponsorNestedInput
    User?: UserUpdateManyWithoutCurrentSponsorNestedInput
    UserInvites?: UserInvitesUpdateManyWithoutSponsorNestedInput
  }

  export type SponsorsUncheckedUpdateWithoutUserSponsorsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    industry?: StringFieldUpdateOperationsInput | string
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCaution?: BoolFieldUpdateOperationsInput | boolean
    st?: BoolFieldUpdateOperationsInput | boolean
    verificationInfo?: NullableJsonNullValueInput | InputJsonValue
    Hackathon?: HackathonUncheckedUpdateOneWithoutSponsorNestedInput
    Bounties?: BountiesUncheckedUpdateManyWithoutSponsorNestedInput
    Templates?: BountiesTemplatesUncheckedUpdateManyWithoutSponsorNestedInput
    Grants?: GrantsUncheckedUpdateManyWithoutSponsorNestedInput
    User?: UserUncheckedUpdateManyWithoutCurrentSponsorNestedInput
    UserInvites?: UserInvitesUncheckedUpdateManyWithoutSponsorNestedInput
  }

  export type UserCreateWithoutUserInvitesInput = {
    id?: string
    publicKey?: string | null
    walletAddress?: string | null
    email: string
    username?: string | null
    photo?: string | null
    firstName?: string | null
    lastName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    role?: string
    isTalentFilled?: boolean
    interests?: string | null
    bio?: string | null
    twitter?: string | null
    discord?: string | null
    github?: string | null
    linkedin?: string | null
    website?: string | null
    telegram?: string | null
    community?: string | null
    experience?: string | null
    superteamLevel?: string | null
    location?: string | null
    cryptoExperience?: string | null
    workPrefernce?: string | null
    currentEmployer?: string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    emailVerified?: Date | string | null
    featureModalShown?: boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: boolean
    acceptedTOS?: boolean
    stLead?: string | null
    isBlocked?: boolean
    privyDid: string
    isKYCVerified?: boolean
    kycName?: string | null
    kycCountry?: string | null
    kycAddress?: string | null
    kycDOB?: string | null
    kycIDNumber?: string | null
    kycIDType?: string | null
    currentSponsor?: SponsorsCreateNestedOneWithoutUserInput
    UserSponsors?: UserSponsorsCreateNestedManyWithoutUserInput
    poc?: BountiesCreateNestedManyWithoutPocInput
    templates?: BountiesTemplatesCreateNestedManyWithoutPocInput
    Comment?: CommentCreateNestedManyWithoutAuthorInput
    Submission?: SubmissionCreateNestedManyWithoutUserInput
    Grants?: GrantsCreateNestedManyWithoutPocInput
    SubscribeBounty?: SubscribeBountyCreateNestedManyWithoutUserInput
    PoW?: PoWCreateNestedManyWithoutUserInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    Hackathon?: HackathonCreateNestedOneWithoutUserInput
    emailSettings?: EmailSettingsCreateNestedManyWithoutUserInput
    TalentRankings?: TalentRankingsCreateNestedManyWithoutUserInput
    Scouts?: ScoutsCreateNestedManyWithoutUserInput
    GrantApplication?: GrantApplicationCreateNestedManyWithoutUserInput
    SubscribeHackathon?: SubscribeHackathonCreateNestedManyWithoutUserInput
    CreditLedger?: CreditLedgerCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutUserInvitesInput = {
    id?: string
    publicKey?: string | null
    walletAddress?: string | null
    email: string
    username?: string | null
    photo?: string | null
    firstName?: string | null
    lastName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    role?: string
    isTalentFilled?: boolean
    interests?: string | null
    bio?: string | null
    twitter?: string | null
    discord?: string | null
    github?: string | null
    linkedin?: string | null
    website?: string | null
    telegram?: string | null
    community?: string | null
    experience?: string | null
    superteamLevel?: string | null
    location?: string | null
    cryptoExperience?: string | null
    workPrefernce?: string | null
    currentEmployer?: string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    currentSponsorId?: string | null
    emailVerified?: Date | string | null
    hackathonId?: string | null
    featureModalShown?: boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: boolean
    acceptedTOS?: boolean
    stLead?: string | null
    isBlocked?: boolean
    privyDid: string
    isKYCVerified?: boolean
    kycName?: string | null
    kycCountry?: string | null
    kycAddress?: string | null
    kycDOB?: string | null
    kycIDNumber?: string | null
    kycIDType?: string | null
    UserSponsors?: UserSponsorsUncheckedCreateNestedManyWithoutUserInput
    poc?: BountiesUncheckedCreateNestedManyWithoutPocInput
    templates?: BountiesTemplatesUncheckedCreateNestedManyWithoutPocInput
    Comment?: CommentUncheckedCreateNestedManyWithoutAuthorInput
    Submission?: SubmissionUncheckedCreateNestedManyWithoutUserInput
    Grants?: GrantsUncheckedCreateNestedManyWithoutPocInput
    SubscribeBounty?: SubscribeBountyUncheckedCreateNestedManyWithoutUserInput
    PoW?: PoWUncheckedCreateNestedManyWithoutUserInput
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    emailSettings?: EmailSettingsUncheckedCreateNestedManyWithoutUserInput
    TalentRankings?: TalentRankingsUncheckedCreateNestedManyWithoutUserInput
    Scouts?: ScoutsUncheckedCreateNestedManyWithoutUserInput
    GrantApplication?: GrantApplicationUncheckedCreateNestedManyWithoutUserInput
    SubscribeHackathon?: SubscribeHackathonUncheckedCreateNestedManyWithoutUserInput
    CreditLedger?: CreditLedgerUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutUserInvitesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUserInvitesInput, UserUncheckedCreateWithoutUserInvitesInput>
  }

  export type SponsorsCreateWithoutUserInvitesInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    url?: string | null
    industry: string
    twitter?: string | null
    bio?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    isActive?: boolean
    entityName?: string | null
    isVerified?: boolean
    isCaution?: boolean
    st?: boolean
    verificationInfo?: NullableJsonNullValueInput | InputJsonValue
    Hackathon?: HackathonCreateNestedOneWithoutSponsorInput
    UserSponsors?: UserSponsorsCreateNestedManyWithoutSponsorInput
    Bounties?: BountiesCreateNestedManyWithoutSponsorInput
    Templates?: BountiesTemplatesCreateNestedManyWithoutSponsorInput
    Grants?: GrantsCreateNestedManyWithoutSponsorInput
    User?: UserCreateNestedManyWithoutCurrentSponsorInput
  }

  export type SponsorsUncheckedCreateWithoutUserInvitesInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    url?: string | null
    industry: string
    twitter?: string | null
    bio?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    isActive?: boolean
    entityName?: string | null
    isVerified?: boolean
    isCaution?: boolean
    st?: boolean
    verificationInfo?: NullableJsonNullValueInput | InputJsonValue
    Hackathon?: HackathonUncheckedCreateNestedOneWithoutSponsorInput
    UserSponsors?: UserSponsorsUncheckedCreateNestedManyWithoutSponsorInput
    Bounties?: BountiesUncheckedCreateNestedManyWithoutSponsorInput
    Templates?: BountiesTemplatesUncheckedCreateNestedManyWithoutSponsorInput
    Grants?: GrantsUncheckedCreateNestedManyWithoutSponsorInput
    User?: UserUncheckedCreateNestedManyWithoutCurrentSponsorInput
  }

  export type SponsorsCreateOrConnectWithoutUserInvitesInput = {
    where: SponsorsWhereUniqueInput
    create: XOR<SponsorsCreateWithoutUserInvitesInput, SponsorsUncheckedCreateWithoutUserInvitesInput>
  }

  export type UserUpsertWithoutUserInvitesInput = {
    update: XOR<UserUpdateWithoutUserInvitesInput, UserUncheckedUpdateWithoutUserInvitesInput>
    create: XOR<UserCreateWithoutUserInvitesInput, UserUncheckedCreateWithoutUserInvitesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUserInvitesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUserInvitesInput, UserUncheckedUpdateWithoutUserInvitesInput>
  }

  export type UserUpdateWithoutUserInvitesInput = {
    id?: StringFieldUpdateOperationsInput | string
    publicKey?: NullableStringFieldUpdateOperationsInput | string | null
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    isTalentFilled?: BoolFieldUpdateOperationsInput | boolean
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    discord?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    community?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    superteamLevel?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    cryptoExperience?: NullableStringFieldUpdateOperationsInput | string | null
    workPrefernce?: NullableStringFieldUpdateOperationsInput | string | null
    currentEmployer?: NullableStringFieldUpdateOperationsInput | string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: BoolFieldUpdateOperationsInput | boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    featureModalShown?: BoolFieldUpdateOperationsInput | boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: BoolFieldUpdateOperationsInput | boolean
    acceptedTOS?: BoolFieldUpdateOperationsInput | boolean
    stLead?: NullableStringFieldUpdateOperationsInput | string | null
    isBlocked?: BoolFieldUpdateOperationsInput | boolean
    privyDid?: StringFieldUpdateOperationsInput | string
    isKYCVerified?: BoolFieldUpdateOperationsInput | boolean
    kycName?: NullableStringFieldUpdateOperationsInput | string | null
    kycCountry?: NullableStringFieldUpdateOperationsInput | string | null
    kycAddress?: NullableStringFieldUpdateOperationsInput | string | null
    kycDOB?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDNumber?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDType?: NullableStringFieldUpdateOperationsInput | string | null
    currentSponsor?: SponsorsUpdateOneWithoutUserNestedInput
    UserSponsors?: UserSponsorsUpdateManyWithoutUserNestedInput
    poc?: BountiesUpdateManyWithoutPocNestedInput
    templates?: BountiesTemplatesUpdateManyWithoutPocNestedInput
    Comment?: CommentUpdateManyWithoutAuthorNestedInput
    Submission?: SubmissionUpdateManyWithoutUserNestedInput
    Grants?: GrantsUpdateManyWithoutPocNestedInput
    SubscribeBounty?: SubscribeBountyUpdateManyWithoutUserNestedInput
    PoW?: PoWUpdateManyWithoutUserNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    Hackathon?: HackathonUpdateOneWithoutUserNestedInput
    emailSettings?: EmailSettingsUpdateManyWithoutUserNestedInput
    TalentRankings?: TalentRankingsUpdateManyWithoutUserNestedInput
    Scouts?: ScoutsUpdateManyWithoutUserNestedInput
    GrantApplication?: GrantApplicationUpdateManyWithoutUserNestedInput
    SubscribeHackathon?: SubscribeHackathonUpdateManyWithoutUserNestedInput
    CreditLedger?: CreditLedgerUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutUserInvitesInput = {
    id?: StringFieldUpdateOperationsInput | string
    publicKey?: NullableStringFieldUpdateOperationsInput | string | null
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    isTalentFilled?: BoolFieldUpdateOperationsInput | boolean
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    discord?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    community?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    superteamLevel?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    cryptoExperience?: NullableStringFieldUpdateOperationsInput | string | null
    workPrefernce?: NullableStringFieldUpdateOperationsInput | string | null
    currentEmployer?: NullableStringFieldUpdateOperationsInput | string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: BoolFieldUpdateOperationsInput | boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    currentSponsorId?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hackathonId?: NullableStringFieldUpdateOperationsInput | string | null
    featureModalShown?: BoolFieldUpdateOperationsInput | boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: BoolFieldUpdateOperationsInput | boolean
    acceptedTOS?: BoolFieldUpdateOperationsInput | boolean
    stLead?: NullableStringFieldUpdateOperationsInput | string | null
    isBlocked?: BoolFieldUpdateOperationsInput | boolean
    privyDid?: StringFieldUpdateOperationsInput | string
    isKYCVerified?: BoolFieldUpdateOperationsInput | boolean
    kycName?: NullableStringFieldUpdateOperationsInput | string | null
    kycCountry?: NullableStringFieldUpdateOperationsInput | string | null
    kycAddress?: NullableStringFieldUpdateOperationsInput | string | null
    kycDOB?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDNumber?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDType?: NullableStringFieldUpdateOperationsInput | string | null
    UserSponsors?: UserSponsorsUncheckedUpdateManyWithoutUserNestedInput
    poc?: BountiesUncheckedUpdateManyWithoutPocNestedInput
    templates?: BountiesTemplatesUncheckedUpdateManyWithoutPocNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutAuthorNestedInput
    Submission?: SubmissionUncheckedUpdateManyWithoutUserNestedInput
    Grants?: GrantsUncheckedUpdateManyWithoutPocNestedInput
    SubscribeBounty?: SubscribeBountyUncheckedUpdateManyWithoutUserNestedInput
    PoW?: PoWUncheckedUpdateManyWithoutUserNestedInput
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    emailSettings?: EmailSettingsUncheckedUpdateManyWithoutUserNestedInput
    TalentRankings?: TalentRankingsUncheckedUpdateManyWithoutUserNestedInput
    Scouts?: ScoutsUncheckedUpdateManyWithoutUserNestedInput
    GrantApplication?: GrantApplicationUncheckedUpdateManyWithoutUserNestedInput
    SubscribeHackathon?: SubscribeHackathonUncheckedUpdateManyWithoutUserNestedInput
    CreditLedger?: CreditLedgerUncheckedUpdateManyWithoutUserNestedInput
  }

  export type SponsorsUpsertWithoutUserInvitesInput = {
    update: XOR<SponsorsUpdateWithoutUserInvitesInput, SponsorsUncheckedUpdateWithoutUserInvitesInput>
    create: XOR<SponsorsCreateWithoutUserInvitesInput, SponsorsUncheckedCreateWithoutUserInvitesInput>
    where?: SponsorsWhereInput
  }

  export type SponsorsUpdateToOneWithWhereWithoutUserInvitesInput = {
    where?: SponsorsWhereInput
    data: XOR<SponsorsUpdateWithoutUserInvitesInput, SponsorsUncheckedUpdateWithoutUserInvitesInput>
  }

  export type SponsorsUpdateWithoutUserInvitesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    industry?: StringFieldUpdateOperationsInput | string
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCaution?: BoolFieldUpdateOperationsInput | boolean
    st?: BoolFieldUpdateOperationsInput | boolean
    verificationInfo?: NullableJsonNullValueInput | InputJsonValue
    Hackathon?: HackathonUpdateOneWithoutSponsorNestedInput
    UserSponsors?: UserSponsorsUpdateManyWithoutSponsorNestedInput
    Bounties?: BountiesUpdateManyWithoutSponsorNestedInput
    Templates?: BountiesTemplatesUpdateManyWithoutSponsorNestedInput
    Grants?: GrantsUpdateManyWithoutSponsorNestedInput
    User?: UserUpdateManyWithoutCurrentSponsorNestedInput
  }

  export type SponsorsUncheckedUpdateWithoutUserInvitesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    industry?: StringFieldUpdateOperationsInput | string
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCaution?: BoolFieldUpdateOperationsInput | boolean
    st?: BoolFieldUpdateOperationsInput | boolean
    verificationInfo?: NullableJsonNullValueInput | InputJsonValue
    Hackathon?: HackathonUncheckedUpdateOneWithoutSponsorNestedInput
    UserSponsors?: UserSponsorsUncheckedUpdateManyWithoutSponsorNestedInput
    Bounties?: BountiesUncheckedUpdateManyWithoutSponsorNestedInput
    Templates?: BountiesTemplatesUncheckedUpdateManyWithoutSponsorNestedInput
    Grants?: GrantsUncheckedUpdateManyWithoutSponsorNestedInput
    User?: UserUncheckedUpdateManyWithoutCurrentSponsorNestedInput
  }

  export type UserCreateWithoutSubscribeBountyInput = {
    id?: string
    publicKey?: string | null
    walletAddress?: string | null
    email: string
    username?: string | null
    photo?: string | null
    firstName?: string | null
    lastName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    role?: string
    isTalentFilled?: boolean
    interests?: string | null
    bio?: string | null
    twitter?: string | null
    discord?: string | null
    github?: string | null
    linkedin?: string | null
    website?: string | null
    telegram?: string | null
    community?: string | null
    experience?: string | null
    superteamLevel?: string | null
    location?: string | null
    cryptoExperience?: string | null
    workPrefernce?: string | null
    currentEmployer?: string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    emailVerified?: Date | string | null
    featureModalShown?: boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: boolean
    acceptedTOS?: boolean
    stLead?: string | null
    isBlocked?: boolean
    privyDid: string
    isKYCVerified?: boolean
    kycName?: string | null
    kycCountry?: string | null
    kycAddress?: string | null
    kycDOB?: string | null
    kycIDNumber?: string | null
    kycIDType?: string | null
    currentSponsor?: SponsorsCreateNestedOneWithoutUserInput
    UserSponsors?: UserSponsorsCreateNestedManyWithoutUserInput
    poc?: BountiesCreateNestedManyWithoutPocInput
    templates?: BountiesTemplatesCreateNestedManyWithoutPocInput
    Comment?: CommentCreateNestedManyWithoutAuthorInput
    Submission?: SubmissionCreateNestedManyWithoutUserInput
    Grants?: GrantsCreateNestedManyWithoutPocInput
    UserInvites?: UserInvitesCreateNestedManyWithoutSenderInput
    PoW?: PoWCreateNestedManyWithoutUserInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    Hackathon?: HackathonCreateNestedOneWithoutUserInput
    emailSettings?: EmailSettingsCreateNestedManyWithoutUserInput
    TalentRankings?: TalentRankingsCreateNestedManyWithoutUserInput
    Scouts?: ScoutsCreateNestedManyWithoutUserInput
    GrantApplication?: GrantApplicationCreateNestedManyWithoutUserInput
    SubscribeHackathon?: SubscribeHackathonCreateNestedManyWithoutUserInput
    CreditLedger?: CreditLedgerCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutSubscribeBountyInput = {
    id?: string
    publicKey?: string | null
    walletAddress?: string | null
    email: string
    username?: string | null
    photo?: string | null
    firstName?: string | null
    lastName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    role?: string
    isTalentFilled?: boolean
    interests?: string | null
    bio?: string | null
    twitter?: string | null
    discord?: string | null
    github?: string | null
    linkedin?: string | null
    website?: string | null
    telegram?: string | null
    community?: string | null
    experience?: string | null
    superteamLevel?: string | null
    location?: string | null
    cryptoExperience?: string | null
    workPrefernce?: string | null
    currentEmployer?: string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    currentSponsorId?: string | null
    emailVerified?: Date | string | null
    hackathonId?: string | null
    featureModalShown?: boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: boolean
    acceptedTOS?: boolean
    stLead?: string | null
    isBlocked?: boolean
    privyDid: string
    isKYCVerified?: boolean
    kycName?: string | null
    kycCountry?: string | null
    kycAddress?: string | null
    kycDOB?: string | null
    kycIDNumber?: string | null
    kycIDType?: string | null
    UserSponsors?: UserSponsorsUncheckedCreateNestedManyWithoutUserInput
    poc?: BountiesUncheckedCreateNestedManyWithoutPocInput
    templates?: BountiesTemplatesUncheckedCreateNestedManyWithoutPocInput
    Comment?: CommentUncheckedCreateNestedManyWithoutAuthorInput
    Submission?: SubmissionUncheckedCreateNestedManyWithoutUserInput
    Grants?: GrantsUncheckedCreateNestedManyWithoutPocInput
    UserInvites?: UserInvitesUncheckedCreateNestedManyWithoutSenderInput
    PoW?: PoWUncheckedCreateNestedManyWithoutUserInput
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    emailSettings?: EmailSettingsUncheckedCreateNestedManyWithoutUserInput
    TalentRankings?: TalentRankingsUncheckedCreateNestedManyWithoutUserInput
    Scouts?: ScoutsUncheckedCreateNestedManyWithoutUserInput
    GrantApplication?: GrantApplicationUncheckedCreateNestedManyWithoutUserInput
    SubscribeHackathon?: SubscribeHackathonUncheckedCreateNestedManyWithoutUserInput
    CreditLedger?: CreditLedgerUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutSubscribeBountyInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSubscribeBountyInput, UserUncheckedCreateWithoutSubscribeBountyInput>
  }

  export type BountiesCreateWithoutSubscribeBountyInput = {
    id?: string
    title: string
    slug: string
    description?: string | null
    deadline?: Date | string | null
    commitmentDate?: Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.status
    token?: string | null
    rewardAmount?: number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: number
    usdValue?: number | null
    source?: $Enums.Source
    isPublished?: boolean
    isFeatured?: boolean
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    applicationLink?: string | null
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: $Enums.BountyType
    requirements?: string | null
    isWinnersAnnounced?: boolean
    region?: string
    pocSocials?: string | null
    hackathonprize?: boolean
    applicationType?: $Enums.ApplicationType
    timeToComplete?: string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: string | null
    publishedAt?: Date | string | null
    isPrivate?: boolean
    compensationType?: $Enums.CompensationType
    maxRewardAsk?: number | null
    minRewardAsk?: number | null
    language?: string | null
    shouldSendEmail?: boolean
    isFndnPaying?: boolean
    winnersAnnouncedAt?: Date | string | null
    discordMessageIds?: NullableJsonNullValueInput | InputJsonValue
    template?: BountiesTemplatesCreateNestedOneWithoutBountiesInput
    sponsor: SponsorsCreateNestedOneWithoutBountiesInput
    poc: UserCreateNestedOneWithoutPocInput
    Submission?: SubmissionCreateNestedManyWithoutListingInput
    Hackathon?: HackathonCreateNestedOneWithoutListingsInput
    Scouts?: ScoutsCreateNestedManyWithoutListingInput
    Comments?: CommentCreateNestedManyWithoutListingInput
  }

  export type BountiesUncheckedCreateWithoutSubscribeBountyInput = {
    id?: string
    title: string
    slug: string
    description?: string | null
    deadline?: Date | string | null
    commitmentDate?: Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.status
    token?: string | null
    rewardAmount?: number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: number
    usdValue?: number | null
    sponsorId: string
    pocId: string
    source?: $Enums.Source
    isPublished?: boolean
    isFeatured?: boolean
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    applicationLink?: string | null
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: $Enums.BountyType
    requirements?: string | null
    isWinnersAnnounced?: boolean
    templateId?: string | null
    region?: string
    pocSocials?: string | null
    hackathonprize?: boolean
    applicationType?: $Enums.ApplicationType
    timeToComplete?: string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: string | null
    publishedAt?: Date | string | null
    isPrivate?: boolean
    hackathonId?: string | null
    compensationType?: $Enums.CompensationType
    maxRewardAsk?: number | null
    minRewardAsk?: number | null
    language?: string | null
    shouldSendEmail?: boolean
    isFndnPaying?: boolean
    winnersAnnouncedAt?: Date | string | null
    discordMessageIds?: NullableJsonNullValueInput | InputJsonValue
    Submission?: SubmissionUncheckedCreateNestedManyWithoutListingInput
    Scouts?: ScoutsUncheckedCreateNestedManyWithoutListingInput
    Comments?: CommentUncheckedCreateNestedManyWithoutListingInput
  }

  export type BountiesCreateOrConnectWithoutSubscribeBountyInput = {
    where: BountiesWhereUniqueInput
    create: XOR<BountiesCreateWithoutSubscribeBountyInput, BountiesUncheckedCreateWithoutSubscribeBountyInput>
  }

  export type UserUpsertWithoutSubscribeBountyInput = {
    update: XOR<UserUpdateWithoutSubscribeBountyInput, UserUncheckedUpdateWithoutSubscribeBountyInput>
    create: XOR<UserCreateWithoutSubscribeBountyInput, UserUncheckedCreateWithoutSubscribeBountyInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSubscribeBountyInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSubscribeBountyInput, UserUncheckedUpdateWithoutSubscribeBountyInput>
  }

  export type UserUpdateWithoutSubscribeBountyInput = {
    id?: StringFieldUpdateOperationsInput | string
    publicKey?: NullableStringFieldUpdateOperationsInput | string | null
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    isTalentFilled?: BoolFieldUpdateOperationsInput | boolean
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    discord?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    community?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    superteamLevel?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    cryptoExperience?: NullableStringFieldUpdateOperationsInput | string | null
    workPrefernce?: NullableStringFieldUpdateOperationsInput | string | null
    currentEmployer?: NullableStringFieldUpdateOperationsInput | string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: BoolFieldUpdateOperationsInput | boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    featureModalShown?: BoolFieldUpdateOperationsInput | boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: BoolFieldUpdateOperationsInput | boolean
    acceptedTOS?: BoolFieldUpdateOperationsInput | boolean
    stLead?: NullableStringFieldUpdateOperationsInput | string | null
    isBlocked?: BoolFieldUpdateOperationsInput | boolean
    privyDid?: StringFieldUpdateOperationsInput | string
    isKYCVerified?: BoolFieldUpdateOperationsInput | boolean
    kycName?: NullableStringFieldUpdateOperationsInput | string | null
    kycCountry?: NullableStringFieldUpdateOperationsInput | string | null
    kycAddress?: NullableStringFieldUpdateOperationsInput | string | null
    kycDOB?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDNumber?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDType?: NullableStringFieldUpdateOperationsInput | string | null
    currentSponsor?: SponsorsUpdateOneWithoutUserNestedInput
    UserSponsors?: UserSponsorsUpdateManyWithoutUserNestedInput
    poc?: BountiesUpdateManyWithoutPocNestedInput
    templates?: BountiesTemplatesUpdateManyWithoutPocNestedInput
    Comment?: CommentUpdateManyWithoutAuthorNestedInput
    Submission?: SubmissionUpdateManyWithoutUserNestedInput
    Grants?: GrantsUpdateManyWithoutPocNestedInput
    UserInvites?: UserInvitesUpdateManyWithoutSenderNestedInput
    PoW?: PoWUpdateManyWithoutUserNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    Hackathon?: HackathonUpdateOneWithoutUserNestedInput
    emailSettings?: EmailSettingsUpdateManyWithoutUserNestedInput
    TalentRankings?: TalentRankingsUpdateManyWithoutUserNestedInput
    Scouts?: ScoutsUpdateManyWithoutUserNestedInput
    GrantApplication?: GrantApplicationUpdateManyWithoutUserNestedInput
    SubscribeHackathon?: SubscribeHackathonUpdateManyWithoutUserNestedInput
    CreditLedger?: CreditLedgerUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutSubscribeBountyInput = {
    id?: StringFieldUpdateOperationsInput | string
    publicKey?: NullableStringFieldUpdateOperationsInput | string | null
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    isTalentFilled?: BoolFieldUpdateOperationsInput | boolean
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    discord?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    community?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    superteamLevel?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    cryptoExperience?: NullableStringFieldUpdateOperationsInput | string | null
    workPrefernce?: NullableStringFieldUpdateOperationsInput | string | null
    currentEmployer?: NullableStringFieldUpdateOperationsInput | string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: BoolFieldUpdateOperationsInput | boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    currentSponsorId?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hackathonId?: NullableStringFieldUpdateOperationsInput | string | null
    featureModalShown?: BoolFieldUpdateOperationsInput | boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: BoolFieldUpdateOperationsInput | boolean
    acceptedTOS?: BoolFieldUpdateOperationsInput | boolean
    stLead?: NullableStringFieldUpdateOperationsInput | string | null
    isBlocked?: BoolFieldUpdateOperationsInput | boolean
    privyDid?: StringFieldUpdateOperationsInput | string
    isKYCVerified?: BoolFieldUpdateOperationsInput | boolean
    kycName?: NullableStringFieldUpdateOperationsInput | string | null
    kycCountry?: NullableStringFieldUpdateOperationsInput | string | null
    kycAddress?: NullableStringFieldUpdateOperationsInput | string | null
    kycDOB?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDNumber?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDType?: NullableStringFieldUpdateOperationsInput | string | null
    UserSponsors?: UserSponsorsUncheckedUpdateManyWithoutUserNestedInput
    poc?: BountiesUncheckedUpdateManyWithoutPocNestedInput
    templates?: BountiesTemplatesUncheckedUpdateManyWithoutPocNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutAuthorNestedInput
    Submission?: SubmissionUncheckedUpdateManyWithoutUserNestedInput
    Grants?: GrantsUncheckedUpdateManyWithoutPocNestedInput
    UserInvites?: UserInvitesUncheckedUpdateManyWithoutSenderNestedInput
    PoW?: PoWUncheckedUpdateManyWithoutUserNestedInput
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    emailSettings?: EmailSettingsUncheckedUpdateManyWithoutUserNestedInput
    TalentRankings?: TalentRankingsUncheckedUpdateManyWithoutUserNestedInput
    Scouts?: ScoutsUncheckedUpdateManyWithoutUserNestedInput
    GrantApplication?: GrantApplicationUncheckedUpdateManyWithoutUserNestedInput
    SubscribeHackathon?: SubscribeHackathonUncheckedUpdateManyWithoutUserNestedInput
    CreditLedger?: CreditLedgerUncheckedUpdateManyWithoutUserNestedInput
  }

  export type BountiesUpsertWithoutSubscribeBountyInput = {
    update: XOR<BountiesUpdateWithoutSubscribeBountyInput, BountiesUncheckedUpdateWithoutSubscribeBountyInput>
    create: XOR<BountiesCreateWithoutSubscribeBountyInput, BountiesUncheckedCreateWithoutSubscribeBountyInput>
    where?: BountiesWhereInput
  }

  export type BountiesUpdateToOneWithWhereWithoutSubscribeBountyInput = {
    where?: BountiesWhereInput
    data: XOR<BountiesUpdateWithoutSubscribeBountyInput, BountiesUncheckedUpdateWithoutSubscribeBountyInput>
  }

  export type BountiesUpdateWithoutSubscribeBountyInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    commitmentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    token?: NullableStringFieldUpdateOperationsInput | string | null
    rewardAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: IntFieldUpdateOperationsInput | number
    usdValue?: NullableFloatFieldUpdateOperationsInput | number | null
    source?: EnumSourceFieldUpdateOperationsInput | $Enums.Source
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationLink?: NullableStringFieldUpdateOperationsInput | string | null
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: EnumBountyTypeFieldUpdateOperationsInput | $Enums.BountyType
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    isWinnersAnnounced?: BoolFieldUpdateOperationsInput | boolean
    region?: StringFieldUpdateOperationsInput | string
    pocSocials?: NullableStringFieldUpdateOperationsInput | string | null
    hackathonprize?: BoolFieldUpdateOperationsInput | boolean
    applicationType?: EnumApplicationTypeFieldUpdateOperationsInput | $Enums.ApplicationType
    timeToComplete?: NullableStringFieldUpdateOperationsInput | string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    compensationType?: EnumCompensationTypeFieldUpdateOperationsInput | $Enums.CompensationType
    maxRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    minRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    shouldSendEmail?: BoolFieldUpdateOperationsInput | boolean
    isFndnPaying?: BoolFieldUpdateOperationsInput | boolean
    winnersAnnouncedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discordMessageIds?: NullableJsonNullValueInput | InputJsonValue
    template?: BountiesTemplatesUpdateOneWithoutBountiesNestedInput
    sponsor?: SponsorsUpdateOneRequiredWithoutBountiesNestedInput
    poc?: UserUpdateOneRequiredWithoutPocNestedInput
    Submission?: SubmissionUpdateManyWithoutListingNestedInput
    Hackathon?: HackathonUpdateOneWithoutListingsNestedInput
    Scouts?: ScoutsUpdateManyWithoutListingNestedInput
    Comments?: CommentUpdateManyWithoutListingNestedInput
  }

  export type BountiesUncheckedUpdateWithoutSubscribeBountyInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    commitmentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    token?: NullableStringFieldUpdateOperationsInput | string | null
    rewardAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: IntFieldUpdateOperationsInput | number
    usdValue?: NullableFloatFieldUpdateOperationsInput | number | null
    sponsorId?: StringFieldUpdateOperationsInput | string
    pocId?: StringFieldUpdateOperationsInput | string
    source?: EnumSourceFieldUpdateOperationsInput | $Enums.Source
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationLink?: NullableStringFieldUpdateOperationsInput | string | null
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: EnumBountyTypeFieldUpdateOperationsInput | $Enums.BountyType
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    isWinnersAnnounced?: BoolFieldUpdateOperationsInput | boolean
    templateId?: NullableStringFieldUpdateOperationsInput | string | null
    region?: StringFieldUpdateOperationsInput | string
    pocSocials?: NullableStringFieldUpdateOperationsInput | string | null
    hackathonprize?: BoolFieldUpdateOperationsInput | boolean
    applicationType?: EnumApplicationTypeFieldUpdateOperationsInput | $Enums.ApplicationType
    timeToComplete?: NullableStringFieldUpdateOperationsInput | string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    hackathonId?: NullableStringFieldUpdateOperationsInput | string | null
    compensationType?: EnumCompensationTypeFieldUpdateOperationsInput | $Enums.CompensationType
    maxRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    minRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    shouldSendEmail?: BoolFieldUpdateOperationsInput | boolean
    isFndnPaying?: BoolFieldUpdateOperationsInput | boolean
    winnersAnnouncedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discordMessageIds?: NullableJsonNullValueInput | InputJsonValue
    Submission?: SubmissionUncheckedUpdateManyWithoutListingNestedInput
    Scouts?: ScoutsUncheckedUpdateManyWithoutListingNestedInput
    Comments?: CommentUncheckedUpdateManyWithoutListingNestedInput
  }

  export type UserCreateWithoutSubscribeHackathonInput = {
    id?: string
    publicKey?: string | null
    walletAddress?: string | null
    email: string
    username?: string | null
    photo?: string | null
    firstName?: string | null
    lastName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    role?: string
    isTalentFilled?: boolean
    interests?: string | null
    bio?: string | null
    twitter?: string | null
    discord?: string | null
    github?: string | null
    linkedin?: string | null
    website?: string | null
    telegram?: string | null
    community?: string | null
    experience?: string | null
    superteamLevel?: string | null
    location?: string | null
    cryptoExperience?: string | null
    workPrefernce?: string | null
    currentEmployer?: string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    emailVerified?: Date | string | null
    featureModalShown?: boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: boolean
    acceptedTOS?: boolean
    stLead?: string | null
    isBlocked?: boolean
    privyDid: string
    isKYCVerified?: boolean
    kycName?: string | null
    kycCountry?: string | null
    kycAddress?: string | null
    kycDOB?: string | null
    kycIDNumber?: string | null
    kycIDType?: string | null
    currentSponsor?: SponsorsCreateNestedOneWithoutUserInput
    UserSponsors?: UserSponsorsCreateNestedManyWithoutUserInput
    poc?: BountiesCreateNestedManyWithoutPocInput
    templates?: BountiesTemplatesCreateNestedManyWithoutPocInput
    Comment?: CommentCreateNestedManyWithoutAuthorInput
    Submission?: SubmissionCreateNestedManyWithoutUserInput
    Grants?: GrantsCreateNestedManyWithoutPocInput
    UserInvites?: UserInvitesCreateNestedManyWithoutSenderInput
    SubscribeBounty?: SubscribeBountyCreateNestedManyWithoutUserInput
    PoW?: PoWCreateNestedManyWithoutUserInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    Hackathon?: HackathonCreateNestedOneWithoutUserInput
    emailSettings?: EmailSettingsCreateNestedManyWithoutUserInput
    TalentRankings?: TalentRankingsCreateNestedManyWithoutUserInput
    Scouts?: ScoutsCreateNestedManyWithoutUserInput
    GrantApplication?: GrantApplicationCreateNestedManyWithoutUserInput
    CreditLedger?: CreditLedgerCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutSubscribeHackathonInput = {
    id?: string
    publicKey?: string | null
    walletAddress?: string | null
    email: string
    username?: string | null
    photo?: string | null
    firstName?: string | null
    lastName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    role?: string
    isTalentFilled?: boolean
    interests?: string | null
    bio?: string | null
    twitter?: string | null
    discord?: string | null
    github?: string | null
    linkedin?: string | null
    website?: string | null
    telegram?: string | null
    community?: string | null
    experience?: string | null
    superteamLevel?: string | null
    location?: string | null
    cryptoExperience?: string | null
    workPrefernce?: string | null
    currentEmployer?: string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    currentSponsorId?: string | null
    emailVerified?: Date | string | null
    hackathonId?: string | null
    featureModalShown?: boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: boolean
    acceptedTOS?: boolean
    stLead?: string | null
    isBlocked?: boolean
    privyDid: string
    isKYCVerified?: boolean
    kycName?: string | null
    kycCountry?: string | null
    kycAddress?: string | null
    kycDOB?: string | null
    kycIDNumber?: string | null
    kycIDType?: string | null
    UserSponsors?: UserSponsorsUncheckedCreateNestedManyWithoutUserInput
    poc?: BountiesUncheckedCreateNestedManyWithoutPocInput
    templates?: BountiesTemplatesUncheckedCreateNestedManyWithoutPocInput
    Comment?: CommentUncheckedCreateNestedManyWithoutAuthorInput
    Submission?: SubmissionUncheckedCreateNestedManyWithoutUserInput
    Grants?: GrantsUncheckedCreateNestedManyWithoutPocInput
    UserInvites?: UserInvitesUncheckedCreateNestedManyWithoutSenderInput
    SubscribeBounty?: SubscribeBountyUncheckedCreateNestedManyWithoutUserInput
    PoW?: PoWUncheckedCreateNestedManyWithoutUserInput
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    emailSettings?: EmailSettingsUncheckedCreateNestedManyWithoutUserInput
    TalentRankings?: TalentRankingsUncheckedCreateNestedManyWithoutUserInput
    Scouts?: ScoutsUncheckedCreateNestedManyWithoutUserInput
    GrantApplication?: GrantApplicationUncheckedCreateNestedManyWithoutUserInput
    CreditLedger?: CreditLedgerUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutSubscribeHackathonInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSubscribeHackathonInput, UserUncheckedCreateWithoutSubscribeHackathonInput>
  }

  export type HackathonCreateWithoutSubscribeHackathonInput = {
    id?: string
    slug: string
    name: string
    logo: string
    deadline?: Date | string | null
    startDate?: Date | string | null
    description: string
    altLogo?: string | null
    announceDate?: Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    listings?: BountiesCreateNestedManyWithoutHackathonInput
    Sponsor?: SponsorsCreateNestedOneWithoutHackathonInput
    User?: UserCreateNestedManyWithoutHackathonInput
  }

  export type HackathonUncheckedCreateWithoutSubscribeHackathonInput = {
    id?: string
    slug: string
    name: string
    logo: string
    sponsorId?: string | null
    deadline?: Date | string | null
    startDate?: Date | string | null
    description: string
    altLogo?: string | null
    announceDate?: Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    listings?: BountiesUncheckedCreateNestedManyWithoutHackathonInput
    User?: UserUncheckedCreateNestedManyWithoutHackathonInput
  }

  export type HackathonCreateOrConnectWithoutSubscribeHackathonInput = {
    where: HackathonWhereUniqueInput
    create: XOR<HackathonCreateWithoutSubscribeHackathonInput, HackathonUncheckedCreateWithoutSubscribeHackathonInput>
  }

  export type UserUpsertWithoutSubscribeHackathonInput = {
    update: XOR<UserUpdateWithoutSubscribeHackathonInput, UserUncheckedUpdateWithoutSubscribeHackathonInput>
    create: XOR<UserCreateWithoutSubscribeHackathonInput, UserUncheckedCreateWithoutSubscribeHackathonInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSubscribeHackathonInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSubscribeHackathonInput, UserUncheckedUpdateWithoutSubscribeHackathonInput>
  }

  export type UserUpdateWithoutSubscribeHackathonInput = {
    id?: StringFieldUpdateOperationsInput | string
    publicKey?: NullableStringFieldUpdateOperationsInput | string | null
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    isTalentFilled?: BoolFieldUpdateOperationsInput | boolean
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    discord?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    community?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    superteamLevel?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    cryptoExperience?: NullableStringFieldUpdateOperationsInput | string | null
    workPrefernce?: NullableStringFieldUpdateOperationsInput | string | null
    currentEmployer?: NullableStringFieldUpdateOperationsInput | string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: BoolFieldUpdateOperationsInput | boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    featureModalShown?: BoolFieldUpdateOperationsInput | boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: BoolFieldUpdateOperationsInput | boolean
    acceptedTOS?: BoolFieldUpdateOperationsInput | boolean
    stLead?: NullableStringFieldUpdateOperationsInput | string | null
    isBlocked?: BoolFieldUpdateOperationsInput | boolean
    privyDid?: StringFieldUpdateOperationsInput | string
    isKYCVerified?: BoolFieldUpdateOperationsInput | boolean
    kycName?: NullableStringFieldUpdateOperationsInput | string | null
    kycCountry?: NullableStringFieldUpdateOperationsInput | string | null
    kycAddress?: NullableStringFieldUpdateOperationsInput | string | null
    kycDOB?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDNumber?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDType?: NullableStringFieldUpdateOperationsInput | string | null
    currentSponsor?: SponsorsUpdateOneWithoutUserNestedInput
    UserSponsors?: UserSponsorsUpdateManyWithoutUserNestedInput
    poc?: BountiesUpdateManyWithoutPocNestedInput
    templates?: BountiesTemplatesUpdateManyWithoutPocNestedInput
    Comment?: CommentUpdateManyWithoutAuthorNestedInput
    Submission?: SubmissionUpdateManyWithoutUserNestedInput
    Grants?: GrantsUpdateManyWithoutPocNestedInput
    UserInvites?: UserInvitesUpdateManyWithoutSenderNestedInput
    SubscribeBounty?: SubscribeBountyUpdateManyWithoutUserNestedInput
    PoW?: PoWUpdateManyWithoutUserNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    Hackathon?: HackathonUpdateOneWithoutUserNestedInput
    emailSettings?: EmailSettingsUpdateManyWithoutUserNestedInput
    TalentRankings?: TalentRankingsUpdateManyWithoutUserNestedInput
    Scouts?: ScoutsUpdateManyWithoutUserNestedInput
    GrantApplication?: GrantApplicationUpdateManyWithoutUserNestedInput
    CreditLedger?: CreditLedgerUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutSubscribeHackathonInput = {
    id?: StringFieldUpdateOperationsInput | string
    publicKey?: NullableStringFieldUpdateOperationsInput | string | null
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    isTalentFilled?: BoolFieldUpdateOperationsInput | boolean
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    discord?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    community?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    superteamLevel?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    cryptoExperience?: NullableStringFieldUpdateOperationsInput | string | null
    workPrefernce?: NullableStringFieldUpdateOperationsInput | string | null
    currentEmployer?: NullableStringFieldUpdateOperationsInput | string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: BoolFieldUpdateOperationsInput | boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    currentSponsorId?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hackathonId?: NullableStringFieldUpdateOperationsInput | string | null
    featureModalShown?: BoolFieldUpdateOperationsInput | boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: BoolFieldUpdateOperationsInput | boolean
    acceptedTOS?: BoolFieldUpdateOperationsInput | boolean
    stLead?: NullableStringFieldUpdateOperationsInput | string | null
    isBlocked?: BoolFieldUpdateOperationsInput | boolean
    privyDid?: StringFieldUpdateOperationsInput | string
    isKYCVerified?: BoolFieldUpdateOperationsInput | boolean
    kycName?: NullableStringFieldUpdateOperationsInput | string | null
    kycCountry?: NullableStringFieldUpdateOperationsInput | string | null
    kycAddress?: NullableStringFieldUpdateOperationsInput | string | null
    kycDOB?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDNumber?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDType?: NullableStringFieldUpdateOperationsInput | string | null
    UserSponsors?: UserSponsorsUncheckedUpdateManyWithoutUserNestedInput
    poc?: BountiesUncheckedUpdateManyWithoutPocNestedInput
    templates?: BountiesTemplatesUncheckedUpdateManyWithoutPocNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutAuthorNestedInput
    Submission?: SubmissionUncheckedUpdateManyWithoutUserNestedInput
    Grants?: GrantsUncheckedUpdateManyWithoutPocNestedInput
    UserInvites?: UserInvitesUncheckedUpdateManyWithoutSenderNestedInput
    SubscribeBounty?: SubscribeBountyUncheckedUpdateManyWithoutUserNestedInput
    PoW?: PoWUncheckedUpdateManyWithoutUserNestedInput
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    emailSettings?: EmailSettingsUncheckedUpdateManyWithoutUserNestedInput
    TalentRankings?: TalentRankingsUncheckedUpdateManyWithoutUserNestedInput
    Scouts?: ScoutsUncheckedUpdateManyWithoutUserNestedInput
    GrantApplication?: GrantApplicationUncheckedUpdateManyWithoutUserNestedInput
    CreditLedger?: CreditLedgerUncheckedUpdateManyWithoutUserNestedInput
  }

  export type HackathonUpsertWithoutSubscribeHackathonInput = {
    update: XOR<HackathonUpdateWithoutSubscribeHackathonInput, HackathonUncheckedUpdateWithoutSubscribeHackathonInput>
    create: XOR<HackathonCreateWithoutSubscribeHackathonInput, HackathonUncheckedCreateWithoutSubscribeHackathonInput>
    where?: HackathonWhereInput
  }

  export type HackathonUpdateToOneWithWhereWithoutSubscribeHackathonInput = {
    where?: HackathonWhereInput
    data: XOR<HackathonUpdateWithoutSubscribeHackathonInput, HackathonUncheckedUpdateWithoutSubscribeHackathonInput>
  }

  export type HackathonUpdateWithoutSubscribeHackathonInput = {
    id?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    logo?: StringFieldUpdateOperationsInput | string
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    altLogo?: NullableStringFieldUpdateOperationsInput | string | null
    announceDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    listings?: BountiesUpdateManyWithoutHackathonNestedInput
    Sponsor?: SponsorsUpdateOneWithoutHackathonNestedInput
    User?: UserUpdateManyWithoutHackathonNestedInput
  }

  export type HackathonUncheckedUpdateWithoutSubscribeHackathonInput = {
    id?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    logo?: StringFieldUpdateOperationsInput | string
    sponsorId?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    altLogo?: NullableStringFieldUpdateOperationsInput | string | null
    announceDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    listings?: BountiesUncheckedUpdateManyWithoutHackathonNestedInput
    User?: UserUncheckedUpdateManyWithoutHackathonNestedInput
  }

  export type BountiesCreateWithoutHackathonInput = {
    id?: string
    title: string
    slug: string
    description?: string | null
    deadline?: Date | string | null
    commitmentDate?: Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.status
    token?: string | null
    rewardAmount?: number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: number
    usdValue?: number | null
    source?: $Enums.Source
    isPublished?: boolean
    isFeatured?: boolean
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    applicationLink?: string | null
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: $Enums.BountyType
    requirements?: string | null
    isWinnersAnnounced?: boolean
    region?: string
    pocSocials?: string | null
    hackathonprize?: boolean
    applicationType?: $Enums.ApplicationType
    timeToComplete?: string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: string | null
    publishedAt?: Date | string | null
    isPrivate?: boolean
    compensationType?: $Enums.CompensationType
    maxRewardAsk?: number | null
    minRewardAsk?: number | null
    language?: string | null
    shouldSendEmail?: boolean
    isFndnPaying?: boolean
    winnersAnnouncedAt?: Date | string | null
    discordMessageIds?: NullableJsonNullValueInput | InputJsonValue
    template?: BountiesTemplatesCreateNestedOneWithoutBountiesInput
    sponsor: SponsorsCreateNestedOneWithoutBountiesInput
    poc: UserCreateNestedOneWithoutPocInput
    Submission?: SubmissionCreateNestedManyWithoutListingInput
    SubscribeBounty?: SubscribeBountyCreateNestedManyWithoutBountiesInput
    Scouts?: ScoutsCreateNestedManyWithoutListingInput
    Comments?: CommentCreateNestedManyWithoutListingInput
  }

  export type BountiesUncheckedCreateWithoutHackathonInput = {
    id?: string
    title: string
    slug: string
    description?: string | null
    deadline?: Date | string | null
    commitmentDate?: Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.status
    token?: string | null
    rewardAmount?: number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: number
    usdValue?: number | null
    sponsorId: string
    pocId: string
    source?: $Enums.Source
    isPublished?: boolean
    isFeatured?: boolean
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    applicationLink?: string | null
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: $Enums.BountyType
    requirements?: string | null
    isWinnersAnnounced?: boolean
    templateId?: string | null
    region?: string
    pocSocials?: string | null
    hackathonprize?: boolean
    applicationType?: $Enums.ApplicationType
    timeToComplete?: string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: string | null
    publishedAt?: Date | string | null
    isPrivate?: boolean
    compensationType?: $Enums.CompensationType
    maxRewardAsk?: number | null
    minRewardAsk?: number | null
    language?: string | null
    shouldSendEmail?: boolean
    isFndnPaying?: boolean
    winnersAnnouncedAt?: Date | string | null
    discordMessageIds?: NullableJsonNullValueInput | InputJsonValue
    Submission?: SubmissionUncheckedCreateNestedManyWithoutListingInput
    SubscribeBounty?: SubscribeBountyUncheckedCreateNestedManyWithoutBountiesInput
    Scouts?: ScoutsUncheckedCreateNestedManyWithoutListingInput
    Comments?: CommentUncheckedCreateNestedManyWithoutListingInput
  }

  export type BountiesCreateOrConnectWithoutHackathonInput = {
    where: BountiesWhereUniqueInput
    create: XOR<BountiesCreateWithoutHackathonInput, BountiesUncheckedCreateWithoutHackathonInput>
  }

  export type BountiesCreateManyHackathonInputEnvelope = {
    data: BountiesCreateManyHackathonInput | BountiesCreateManyHackathonInput[]
    skipDuplicates?: boolean
  }

  export type SponsorsCreateWithoutHackathonInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    url?: string | null
    industry: string
    twitter?: string | null
    bio?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    isActive?: boolean
    entityName?: string | null
    isVerified?: boolean
    isCaution?: boolean
    st?: boolean
    verificationInfo?: NullableJsonNullValueInput | InputJsonValue
    UserSponsors?: UserSponsorsCreateNestedManyWithoutSponsorInput
    Bounties?: BountiesCreateNestedManyWithoutSponsorInput
    Templates?: BountiesTemplatesCreateNestedManyWithoutSponsorInput
    Grants?: GrantsCreateNestedManyWithoutSponsorInput
    User?: UserCreateNestedManyWithoutCurrentSponsorInput
    UserInvites?: UserInvitesCreateNestedManyWithoutSponsorInput
  }

  export type SponsorsUncheckedCreateWithoutHackathonInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    url?: string | null
    industry: string
    twitter?: string | null
    bio?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    isActive?: boolean
    entityName?: string | null
    isVerified?: boolean
    isCaution?: boolean
    st?: boolean
    verificationInfo?: NullableJsonNullValueInput | InputJsonValue
    UserSponsors?: UserSponsorsUncheckedCreateNestedManyWithoutSponsorInput
    Bounties?: BountiesUncheckedCreateNestedManyWithoutSponsorInput
    Templates?: BountiesTemplatesUncheckedCreateNestedManyWithoutSponsorInput
    Grants?: GrantsUncheckedCreateNestedManyWithoutSponsorInput
    User?: UserUncheckedCreateNestedManyWithoutCurrentSponsorInput
    UserInvites?: UserInvitesUncheckedCreateNestedManyWithoutSponsorInput
  }

  export type SponsorsCreateOrConnectWithoutHackathonInput = {
    where: SponsorsWhereUniqueInput
    create: XOR<SponsorsCreateWithoutHackathonInput, SponsorsUncheckedCreateWithoutHackathonInput>
  }

  export type UserCreateWithoutHackathonInput = {
    id?: string
    publicKey?: string | null
    walletAddress?: string | null
    email: string
    username?: string | null
    photo?: string | null
    firstName?: string | null
    lastName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    role?: string
    isTalentFilled?: boolean
    interests?: string | null
    bio?: string | null
    twitter?: string | null
    discord?: string | null
    github?: string | null
    linkedin?: string | null
    website?: string | null
    telegram?: string | null
    community?: string | null
    experience?: string | null
    superteamLevel?: string | null
    location?: string | null
    cryptoExperience?: string | null
    workPrefernce?: string | null
    currentEmployer?: string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    emailVerified?: Date | string | null
    featureModalShown?: boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: boolean
    acceptedTOS?: boolean
    stLead?: string | null
    isBlocked?: boolean
    privyDid: string
    isKYCVerified?: boolean
    kycName?: string | null
    kycCountry?: string | null
    kycAddress?: string | null
    kycDOB?: string | null
    kycIDNumber?: string | null
    kycIDType?: string | null
    currentSponsor?: SponsorsCreateNestedOneWithoutUserInput
    UserSponsors?: UserSponsorsCreateNestedManyWithoutUserInput
    poc?: BountiesCreateNestedManyWithoutPocInput
    templates?: BountiesTemplatesCreateNestedManyWithoutPocInput
    Comment?: CommentCreateNestedManyWithoutAuthorInput
    Submission?: SubmissionCreateNestedManyWithoutUserInput
    Grants?: GrantsCreateNestedManyWithoutPocInput
    UserInvites?: UserInvitesCreateNestedManyWithoutSenderInput
    SubscribeBounty?: SubscribeBountyCreateNestedManyWithoutUserInput
    PoW?: PoWCreateNestedManyWithoutUserInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    emailSettings?: EmailSettingsCreateNestedManyWithoutUserInput
    TalentRankings?: TalentRankingsCreateNestedManyWithoutUserInput
    Scouts?: ScoutsCreateNestedManyWithoutUserInput
    GrantApplication?: GrantApplicationCreateNestedManyWithoutUserInput
    SubscribeHackathon?: SubscribeHackathonCreateNestedManyWithoutUserInput
    CreditLedger?: CreditLedgerCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutHackathonInput = {
    id?: string
    publicKey?: string | null
    walletAddress?: string | null
    email: string
    username?: string | null
    photo?: string | null
    firstName?: string | null
    lastName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    role?: string
    isTalentFilled?: boolean
    interests?: string | null
    bio?: string | null
    twitter?: string | null
    discord?: string | null
    github?: string | null
    linkedin?: string | null
    website?: string | null
    telegram?: string | null
    community?: string | null
    experience?: string | null
    superteamLevel?: string | null
    location?: string | null
    cryptoExperience?: string | null
    workPrefernce?: string | null
    currentEmployer?: string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    currentSponsorId?: string | null
    emailVerified?: Date | string | null
    featureModalShown?: boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: boolean
    acceptedTOS?: boolean
    stLead?: string | null
    isBlocked?: boolean
    privyDid: string
    isKYCVerified?: boolean
    kycName?: string | null
    kycCountry?: string | null
    kycAddress?: string | null
    kycDOB?: string | null
    kycIDNumber?: string | null
    kycIDType?: string | null
    UserSponsors?: UserSponsorsUncheckedCreateNestedManyWithoutUserInput
    poc?: BountiesUncheckedCreateNestedManyWithoutPocInput
    templates?: BountiesTemplatesUncheckedCreateNestedManyWithoutPocInput
    Comment?: CommentUncheckedCreateNestedManyWithoutAuthorInput
    Submission?: SubmissionUncheckedCreateNestedManyWithoutUserInput
    Grants?: GrantsUncheckedCreateNestedManyWithoutPocInput
    UserInvites?: UserInvitesUncheckedCreateNestedManyWithoutSenderInput
    SubscribeBounty?: SubscribeBountyUncheckedCreateNestedManyWithoutUserInput
    PoW?: PoWUncheckedCreateNestedManyWithoutUserInput
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    emailSettings?: EmailSettingsUncheckedCreateNestedManyWithoutUserInput
    TalentRankings?: TalentRankingsUncheckedCreateNestedManyWithoutUserInput
    Scouts?: ScoutsUncheckedCreateNestedManyWithoutUserInput
    GrantApplication?: GrantApplicationUncheckedCreateNestedManyWithoutUserInput
    SubscribeHackathon?: SubscribeHackathonUncheckedCreateNestedManyWithoutUserInput
    CreditLedger?: CreditLedgerUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutHackathonInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutHackathonInput, UserUncheckedCreateWithoutHackathonInput>
  }

  export type UserCreateManyHackathonInputEnvelope = {
    data: UserCreateManyHackathonInput | UserCreateManyHackathonInput[]
    skipDuplicates?: boolean
  }

  export type SubscribeHackathonCreateWithoutHackthonsInput = {
    id?: string
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    User: UserCreateNestedOneWithoutSubscribeHackathonInput
  }

  export type SubscribeHackathonUncheckedCreateWithoutHackthonsInput = {
    id?: string
    userId: string
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SubscribeHackathonCreateOrConnectWithoutHackthonsInput = {
    where: SubscribeHackathonWhereUniqueInput
    create: XOR<SubscribeHackathonCreateWithoutHackthonsInput, SubscribeHackathonUncheckedCreateWithoutHackthonsInput>
  }

  export type SubscribeHackathonCreateManyHackthonsInputEnvelope = {
    data: SubscribeHackathonCreateManyHackthonsInput | SubscribeHackathonCreateManyHackthonsInput[]
    skipDuplicates?: boolean
  }

  export type BountiesUpsertWithWhereUniqueWithoutHackathonInput = {
    where: BountiesWhereUniqueInput
    update: XOR<BountiesUpdateWithoutHackathonInput, BountiesUncheckedUpdateWithoutHackathonInput>
    create: XOR<BountiesCreateWithoutHackathonInput, BountiesUncheckedCreateWithoutHackathonInput>
  }

  export type BountiesUpdateWithWhereUniqueWithoutHackathonInput = {
    where: BountiesWhereUniqueInput
    data: XOR<BountiesUpdateWithoutHackathonInput, BountiesUncheckedUpdateWithoutHackathonInput>
  }

  export type BountiesUpdateManyWithWhereWithoutHackathonInput = {
    where: BountiesScalarWhereInput
    data: XOR<BountiesUpdateManyMutationInput, BountiesUncheckedUpdateManyWithoutHackathonInput>
  }

  export type SponsorsUpsertWithoutHackathonInput = {
    update: XOR<SponsorsUpdateWithoutHackathonInput, SponsorsUncheckedUpdateWithoutHackathonInput>
    create: XOR<SponsorsCreateWithoutHackathonInput, SponsorsUncheckedCreateWithoutHackathonInput>
    where?: SponsorsWhereInput
  }

  export type SponsorsUpdateToOneWithWhereWithoutHackathonInput = {
    where?: SponsorsWhereInput
    data: XOR<SponsorsUpdateWithoutHackathonInput, SponsorsUncheckedUpdateWithoutHackathonInput>
  }

  export type SponsorsUpdateWithoutHackathonInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    industry?: StringFieldUpdateOperationsInput | string
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCaution?: BoolFieldUpdateOperationsInput | boolean
    st?: BoolFieldUpdateOperationsInput | boolean
    verificationInfo?: NullableJsonNullValueInput | InputJsonValue
    UserSponsors?: UserSponsorsUpdateManyWithoutSponsorNestedInput
    Bounties?: BountiesUpdateManyWithoutSponsorNestedInput
    Templates?: BountiesTemplatesUpdateManyWithoutSponsorNestedInput
    Grants?: GrantsUpdateManyWithoutSponsorNestedInput
    User?: UserUpdateManyWithoutCurrentSponsorNestedInput
    UserInvites?: UserInvitesUpdateManyWithoutSponsorNestedInput
  }

  export type SponsorsUncheckedUpdateWithoutHackathonInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    industry?: StringFieldUpdateOperationsInput | string
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCaution?: BoolFieldUpdateOperationsInput | boolean
    st?: BoolFieldUpdateOperationsInput | boolean
    verificationInfo?: NullableJsonNullValueInput | InputJsonValue
    UserSponsors?: UserSponsorsUncheckedUpdateManyWithoutSponsorNestedInput
    Bounties?: BountiesUncheckedUpdateManyWithoutSponsorNestedInput
    Templates?: BountiesTemplatesUncheckedUpdateManyWithoutSponsorNestedInput
    Grants?: GrantsUncheckedUpdateManyWithoutSponsorNestedInput
    User?: UserUncheckedUpdateManyWithoutCurrentSponsorNestedInput
    UserInvites?: UserInvitesUncheckedUpdateManyWithoutSponsorNestedInput
  }

  export type UserUpsertWithWhereUniqueWithoutHackathonInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutHackathonInput, UserUncheckedUpdateWithoutHackathonInput>
    create: XOR<UserCreateWithoutHackathonInput, UserUncheckedCreateWithoutHackathonInput>
  }

  export type UserUpdateWithWhereUniqueWithoutHackathonInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutHackathonInput, UserUncheckedUpdateWithoutHackathonInput>
  }

  export type UserUpdateManyWithWhereWithoutHackathonInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutHackathonInput>
  }

  export type SubscribeHackathonUpsertWithWhereUniqueWithoutHackthonsInput = {
    where: SubscribeHackathonWhereUniqueInput
    update: XOR<SubscribeHackathonUpdateWithoutHackthonsInput, SubscribeHackathonUncheckedUpdateWithoutHackthonsInput>
    create: XOR<SubscribeHackathonCreateWithoutHackthonsInput, SubscribeHackathonUncheckedCreateWithoutHackthonsInput>
  }

  export type SubscribeHackathonUpdateWithWhereUniqueWithoutHackthonsInput = {
    where: SubscribeHackathonWhereUniqueInput
    data: XOR<SubscribeHackathonUpdateWithoutHackthonsInput, SubscribeHackathonUncheckedUpdateWithoutHackthonsInput>
  }

  export type SubscribeHackathonUpdateManyWithWhereWithoutHackthonsInput = {
    where: SubscribeHackathonScalarWhereInput
    data: XOR<SubscribeHackathonUpdateManyMutationInput, SubscribeHackathonUncheckedUpdateManyWithoutHackthonsInput>
  }

  export type UserCreateWithoutCreditLedgerInput = {
    id?: string
    publicKey?: string | null
    walletAddress?: string | null
    email: string
    username?: string | null
    photo?: string | null
    firstName?: string | null
    lastName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    role?: string
    isTalentFilled?: boolean
    interests?: string | null
    bio?: string | null
    twitter?: string | null
    discord?: string | null
    github?: string | null
    linkedin?: string | null
    website?: string | null
    telegram?: string | null
    community?: string | null
    experience?: string | null
    superteamLevel?: string | null
    location?: string | null
    cryptoExperience?: string | null
    workPrefernce?: string | null
    currentEmployer?: string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    emailVerified?: Date | string | null
    featureModalShown?: boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: boolean
    acceptedTOS?: boolean
    stLead?: string | null
    isBlocked?: boolean
    privyDid: string
    isKYCVerified?: boolean
    kycName?: string | null
    kycCountry?: string | null
    kycAddress?: string | null
    kycDOB?: string | null
    kycIDNumber?: string | null
    kycIDType?: string | null
    currentSponsor?: SponsorsCreateNestedOneWithoutUserInput
    UserSponsors?: UserSponsorsCreateNestedManyWithoutUserInput
    poc?: BountiesCreateNestedManyWithoutPocInput
    templates?: BountiesTemplatesCreateNestedManyWithoutPocInput
    Comment?: CommentCreateNestedManyWithoutAuthorInput
    Submission?: SubmissionCreateNestedManyWithoutUserInput
    Grants?: GrantsCreateNestedManyWithoutPocInput
    UserInvites?: UserInvitesCreateNestedManyWithoutSenderInput
    SubscribeBounty?: SubscribeBountyCreateNestedManyWithoutUserInput
    PoW?: PoWCreateNestedManyWithoutUserInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    Hackathon?: HackathonCreateNestedOneWithoutUserInput
    emailSettings?: EmailSettingsCreateNestedManyWithoutUserInput
    TalentRankings?: TalentRankingsCreateNestedManyWithoutUserInput
    Scouts?: ScoutsCreateNestedManyWithoutUserInput
    GrantApplication?: GrantApplicationCreateNestedManyWithoutUserInput
    SubscribeHackathon?: SubscribeHackathonCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutCreditLedgerInput = {
    id?: string
    publicKey?: string | null
    walletAddress?: string | null
    email: string
    username?: string | null
    photo?: string | null
    firstName?: string | null
    lastName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    role?: string
    isTalentFilled?: boolean
    interests?: string | null
    bio?: string | null
    twitter?: string | null
    discord?: string | null
    github?: string | null
    linkedin?: string | null
    website?: string | null
    telegram?: string | null
    community?: string | null
    experience?: string | null
    superteamLevel?: string | null
    location?: string | null
    cryptoExperience?: string | null
    workPrefernce?: string | null
    currentEmployer?: string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    currentSponsorId?: string | null
    emailVerified?: Date | string | null
    hackathonId?: string | null
    featureModalShown?: boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: boolean
    acceptedTOS?: boolean
    stLead?: string | null
    isBlocked?: boolean
    privyDid: string
    isKYCVerified?: boolean
    kycName?: string | null
    kycCountry?: string | null
    kycAddress?: string | null
    kycDOB?: string | null
    kycIDNumber?: string | null
    kycIDType?: string | null
    UserSponsors?: UserSponsorsUncheckedCreateNestedManyWithoutUserInput
    poc?: BountiesUncheckedCreateNestedManyWithoutPocInput
    templates?: BountiesTemplatesUncheckedCreateNestedManyWithoutPocInput
    Comment?: CommentUncheckedCreateNestedManyWithoutAuthorInput
    Submission?: SubmissionUncheckedCreateNestedManyWithoutUserInput
    Grants?: GrantsUncheckedCreateNestedManyWithoutPocInput
    UserInvites?: UserInvitesUncheckedCreateNestedManyWithoutSenderInput
    SubscribeBounty?: SubscribeBountyUncheckedCreateNestedManyWithoutUserInput
    PoW?: PoWUncheckedCreateNestedManyWithoutUserInput
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    emailSettings?: EmailSettingsUncheckedCreateNestedManyWithoutUserInput
    TalentRankings?: TalentRankingsUncheckedCreateNestedManyWithoutUserInput
    Scouts?: ScoutsUncheckedCreateNestedManyWithoutUserInput
    GrantApplication?: GrantApplicationUncheckedCreateNestedManyWithoutUserInput
    SubscribeHackathon?: SubscribeHackathonUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutCreditLedgerInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCreditLedgerInput, UserUncheckedCreateWithoutCreditLedgerInput>
  }

  export type SubmissionCreateWithoutCreditLedgerInput = {
    id?: string
    link?: string | null
    tweet?: string | null
    status?: $Enums.SubmissionStatus
    eligibilityAnswers?: NullableJsonNullValueInput | InputJsonValue
    isWinner?: boolean
    winnerPosition?: number | null
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: number
    isPaid?: boolean
    paymentDetails?: NullableJsonNullValueInput | InputJsonValue
    otherInfo?: string | null
    ask?: number | null
    label?: $Enums.SubmissionLabels
    rewardInUSD?: number
    ogImage?: string | null
    notes?: string | null
    listing: BountiesCreateNestedOneWithoutSubmissionInput
    user: UserCreateNestedOneWithoutSubmissionInput
    Comments?: CommentCreateNestedManyWithoutSubmissionInput
  }

  export type SubmissionUncheckedCreateWithoutCreditLedgerInput = {
    id?: string
    link?: string | null
    tweet?: string | null
    status?: $Enums.SubmissionStatus
    eligibilityAnswers?: NullableJsonNullValueInput | InputJsonValue
    userId: string
    listingId: string
    isWinner?: boolean
    winnerPosition?: number | null
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: number
    isPaid?: boolean
    paymentDetails?: NullableJsonNullValueInput | InputJsonValue
    otherInfo?: string | null
    ask?: number | null
    label?: $Enums.SubmissionLabels
    rewardInUSD?: number
    ogImage?: string | null
    notes?: string | null
    Comments?: CommentUncheckedCreateNestedManyWithoutSubmissionInput
  }

  export type SubmissionCreateOrConnectWithoutCreditLedgerInput = {
    where: SubmissionWhereUniqueInput
    create: XOR<SubmissionCreateWithoutCreditLedgerInput, SubmissionUncheckedCreateWithoutCreditLedgerInput>
  }

  export type GrantApplicationCreateWithoutCreditLedgerInput = {
    id?: string
    applicationStatus?: $Enums.GrantApplicationStatus
    projectTitle: string
    projectOneLiner: string
    projectDetails: string
    projectTimeline: string
    proofOfWork: string
    walletAddress: string
    twitter?: string | null
    github?: string | null
    milestones?: string | null
    kpi?: string | null
    answers?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    label?: $Enums.SubmissionLabels
    ask?: number
    approvedAmount?: number
    approvedAmountInUSD?: number
    decidedAt?: Date | string | null
    totalPaid?: number
    isShipped?: boolean
    paymentDetails?: NullableJsonNullValueInput | InputJsonValue
    totalTranches?: number
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: number
    decidedBy?: string | null
    notes?: string | null
    ai?: NullableJsonNullValueInput | InputJsonValue
    user: UserCreateNestedOneWithoutGrantApplicationInput
    grant: GrantsCreateNestedOneWithoutGrantApplicationInput
    Comments?: CommentCreateNestedManyWithoutGrantApplicationInput
    GrantTranche?: GrantTrancheCreateNestedManyWithoutGrantApplicationInput
  }

  export type GrantApplicationUncheckedCreateWithoutCreditLedgerInput = {
    id?: string
    userId: string
    grantId: string
    applicationStatus?: $Enums.GrantApplicationStatus
    projectTitle: string
    projectOneLiner: string
    projectDetails: string
    projectTimeline: string
    proofOfWork: string
    walletAddress: string
    twitter?: string | null
    github?: string | null
    milestones?: string | null
    kpi?: string | null
    answers?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    label?: $Enums.SubmissionLabels
    ask?: number
    approvedAmount?: number
    approvedAmountInUSD?: number
    decidedAt?: Date | string | null
    totalPaid?: number
    isShipped?: boolean
    paymentDetails?: NullableJsonNullValueInput | InputJsonValue
    totalTranches?: number
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: number
    decidedBy?: string | null
    notes?: string | null
    ai?: NullableJsonNullValueInput | InputJsonValue
    Comments?: CommentUncheckedCreateNestedManyWithoutGrantApplicationInput
    GrantTranche?: GrantTrancheUncheckedCreateNestedManyWithoutGrantApplicationInput
  }

  export type GrantApplicationCreateOrConnectWithoutCreditLedgerInput = {
    where: GrantApplicationWhereUniqueInput
    create: XOR<GrantApplicationCreateWithoutCreditLedgerInput, GrantApplicationUncheckedCreateWithoutCreditLedgerInput>
  }

  export type UserUpsertWithoutCreditLedgerInput = {
    update: XOR<UserUpdateWithoutCreditLedgerInput, UserUncheckedUpdateWithoutCreditLedgerInput>
    create: XOR<UserCreateWithoutCreditLedgerInput, UserUncheckedCreateWithoutCreditLedgerInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCreditLedgerInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCreditLedgerInput, UserUncheckedUpdateWithoutCreditLedgerInput>
  }

  export type UserUpdateWithoutCreditLedgerInput = {
    id?: StringFieldUpdateOperationsInput | string
    publicKey?: NullableStringFieldUpdateOperationsInput | string | null
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    isTalentFilled?: BoolFieldUpdateOperationsInput | boolean
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    discord?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    community?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    superteamLevel?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    cryptoExperience?: NullableStringFieldUpdateOperationsInput | string | null
    workPrefernce?: NullableStringFieldUpdateOperationsInput | string | null
    currentEmployer?: NullableStringFieldUpdateOperationsInput | string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: BoolFieldUpdateOperationsInput | boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    featureModalShown?: BoolFieldUpdateOperationsInput | boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: BoolFieldUpdateOperationsInput | boolean
    acceptedTOS?: BoolFieldUpdateOperationsInput | boolean
    stLead?: NullableStringFieldUpdateOperationsInput | string | null
    isBlocked?: BoolFieldUpdateOperationsInput | boolean
    privyDid?: StringFieldUpdateOperationsInput | string
    isKYCVerified?: BoolFieldUpdateOperationsInput | boolean
    kycName?: NullableStringFieldUpdateOperationsInput | string | null
    kycCountry?: NullableStringFieldUpdateOperationsInput | string | null
    kycAddress?: NullableStringFieldUpdateOperationsInput | string | null
    kycDOB?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDNumber?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDType?: NullableStringFieldUpdateOperationsInput | string | null
    currentSponsor?: SponsorsUpdateOneWithoutUserNestedInput
    UserSponsors?: UserSponsorsUpdateManyWithoutUserNestedInput
    poc?: BountiesUpdateManyWithoutPocNestedInput
    templates?: BountiesTemplatesUpdateManyWithoutPocNestedInput
    Comment?: CommentUpdateManyWithoutAuthorNestedInput
    Submission?: SubmissionUpdateManyWithoutUserNestedInput
    Grants?: GrantsUpdateManyWithoutPocNestedInput
    UserInvites?: UserInvitesUpdateManyWithoutSenderNestedInput
    SubscribeBounty?: SubscribeBountyUpdateManyWithoutUserNestedInput
    PoW?: PoWUpdateManyWithoutUserNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    Hackathon?: HackathonUpdateOneWithoutUserNestedInput
    emailSettings?: EmailSettingsUpdateManyWithoutUserNestedInput
    TalentRankings?: TalentRankingsUpdateManyWithoutUserNestedInput
    Scouts?: ScoutsUpdateManyWithoutUserNestedInput
    GrantApplication?: GrantApplicationUpdateManyWithoutUserNestedInput
    SubscribeHackathon?: SubscribeHackathonUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutCreditLedgerInput = {
    id?: StringFieldUpdateOperationsInput | string
    publicKey?: NullableStringFieldUpdateOperationsInput | string | null
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    isTalentFilled?: BoolFieldUpdateOperationsInput | boolean
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    discord?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    community?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    superteamLevel?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    cryptoExperience?: NullableStringFieldUpdateOperationsInput | string | null
    workPrefernce?: NullableStringFieldUpdateOperationsInput | string | null
    currentEmployer?: NullableStringFieldUpdateOperationsInput | string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: BoolFieldUpdateOperationsInput | boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    currentSponsorId?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hackathonId?: NullableStringFieldUpdateOperationsInput | string | null
    featureModalShown?: BoolFieldUpdateOperationsInput | boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: BoolFieldUpdateOperationsInput | boolean
    acceptedTOS?: BoolFieldUpdateOperationsInput | boolean
    stLead?: NullableStringFieldUpdateOperationsInput | string | null
    isBlocked?: BoolFieldUpdateOperationsInput | boolean
    privyDid?: StringFieldUpdateOperationsInput | string
    isKYCVerified?: BoolFieldUpdateOperationsInput | boolean
    kycName?: NullableStringFieldUpdateOperationsInput | string | null
    kycCountry?: NullableStringFieldUpdateOperationsInput | string | null
    kycAddress?: NullableStringFieldUpdateOperationsInput | string | null
    kycDOB?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDNumber?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDType?: NullableStringFieldUpdateOperationsInput | string | null
    UserSponsors?: UserSponsorsUncheckedUpdateManyWithoutUserNestedInput
    poc?: BountiesUncheckedUpdateManyWithoutPocNestedInput
    templates?: BountiesTemplatesUncheckedUpdateManyWithoutPocNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutAuthorNestedInput
    Submission?: SubmissionUncheckedUpdateManyWithoutUserNestedInput
    Grants?: GrantsUncheckedUpdateManyWithoutPocNestedInput
    UserInvites?: UserInvitesUncheckedUpdateManyWithoutSenderNestedInput
    SubscribeBounty?: SubscribeBountyUncheckedUpdateManyWithoutUserNestedInput
    PoW?: PoWUncheckedUpdateManyWithoutUserNestedInput
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    emailSettings?: EmailSettingsUncheckedUpdateManyWithoutUserNestedInput
    TalentRankings?: TalentRankingsUncheckedUpdateManyWithoutUserNestedInput
    Scouts?: ScoutsUncheckedUpdateManyWithoutUserNestedInput
    GrantApplication?: GrantApplicationUncheckedUpdateManyWithoutUserNestedInput
    SubscribeHackathon?: SubscribeHackathonUncheckedUpdateManyWithoutUserNestedInput
  }

  export type SubmissionUpsertWithoutCreditLedgerInput = {
    update: XOR<SubmissionUpdateWithoutCreditLedgerInput, SubmissionUncheckedUpdateWithoutCreditLedgerInput>
    create: XOR<SubmissionCreateWithoutCreditLedgerInput, SubmissionUncheckedCreateWithoutCreditLedgerInput>
    where?: SubmissionWhereInput
  }

  export type SubmissionUpdateToOneWithWhereWithoutCreditLedgerInput = {
    where?: SubmissionWhereInput
    data: XOR<SubmissionUpdateWithoutCreditLedgerInput, SubmissionUncheckedUpdateWithoutCreditLedgerInput>
  }

  export type SubmissionUpdateWithoutCreditLedgerInput = {
    id?: StringFieldUpdateOperationsInput | string
    link?: NullableStringFieldUpdateOperationsInput | string | null
    tweet?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumSubmissionStatusFieldUpdateOperationsInput | $Enums.SubmissionStatus
    eligibilityAnswers?: NullableJsonNullValueInput | InputJsonValue
    isWinner?: BoolFieldUpdateOperationsInput | boolean
    winnerPosition?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: IntFieldUpdateOperationsInput | number
    isPaid?: BoolFieldUpdateOperationsInput | boolean
    paymentDetails?: NullableJsonNullValueInput | InputJsonValue
    otherInfo?: NullableStringFieldUpdateOperationsInput | string | null
    ask?: NullableIntFieldUpdateOperationsInput | number | null
    label?: EnumSubmissionLabelsFieldUpdateOperationsInput | $Enums.SubmissionLabels
    rewardInUSD?: FloatFieldUpdateOperationsInput | number
    ogImage?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    listing?: BountiesUpdateOneRequiredWithoutSubmissionNestedInput
    user?: UserUpdateOneRequiredWithoutSubmissionNestedInput
    Comments?: CommentUpdateManyWithoutSubmissionNestedInput
  }

  export type SubmissionUncheckedUpdateWithoutCreditLedgerInput = {
    id?: StringFieldUpdateOperationsInput | string
    link?: NullableStringFieldUpdateOperationsInput | string | null
    tweet?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumSubmissionStatusFieldUpdateOperationsInput | $Enums.SubmissionStatus
    eligibilityAnswers?: NullableJsonNullValueInput | InputJsonValue
    userId?: StringFieldUpdateOperationsInput | string
    listingId?: StringFieldUpdateOperationsInput | string
    isWinner?: BoolFieldUpdateOperationsInput | boolean
    winnerPosition?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: IntFieldUpdateOperationsInput | number
    isPaid?: BoolFieldUpdateOperationsInput | boolean
    paymentDetails?: NullableJsonNullValueInput | InputJsonValue
    otherInfo?: NullableStringFieldUpdateOperationsInput | string | null
    ask?: NullableIntFieldUpdateOperationsInput | number | null
    label?: EnumSubmissionLabelsFieldUpdateOperationsInput | $Enums.SubmissionLabels
    rewardInUSD?: FloatFieldUpdateOperationsInput | number
    ogImage?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    Comments?: CommentUncheckedUpdateManyWithoutSubmissionNestedInput
  }

  export type GrantApplicationUpsertWithoutCreditLedgerInput = {
    update: XOR<GrantApplicationUpdateWithoutCreditLedgerInput, GrantApplicationUncheckedUpdateWithoutCreditLedgerInput>
    create: XOR<GrantApplicationCreateWithoutCreditLedgerInput, GrantApplicationUncheckedCreateWithoutCreditLedgerInput>
    where?: GrantApplicationWhereInput
  }

  export type GrantApplicationUpdateToOneWithWhereWithoutCreditLedgerInput = {
    where?: GrantApplicationWhereInput
    data: XOR<GrantApplicationUpdateWithoutCreditLedgerInput, GrantApplicationUncheckedUpdateWithoutCreditLedgerInput>
  }

  export type GrantApplicationUpdateWithoutCreditLedgerInput = {
    id?: StringFieldUpdateOperationsInput | string
    applicationStatus?: EnumGrantApplicationStatusFieldUpdateOperationsInput | $Enums.GrantApplicationStatus
    projectTitle?: StringFieldUpdateOperationsInput | string
    projectOneLiner?: StringFieldUpdateOperationsInput | string
    projectDetails?: StringFieldUpdateOperationsInput | string
    projectTimeline?: StringFieldUpdateOperationsInput | string
    proofOfWork?: StringFieldUpdateOperationsInput | string
    walletAddress?: StringFieldUpdateOperationsInput | string
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    milestones?: NullableStringFieldUpdateOperationsInput | string | null
    kpi?: NullableStringFieldUpdateOperationsInput | string | null
    answers?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    label?: EnumSubmissionLabelsFieldUpdateOperationsInput | $Enums.SubmissionLabels
    ask?: FloatFieldUpdateOperationsInput | number
    approvedAmount?: FloatFieldUpdateOperationsInput | number
    approvedAmountInUSD?: FloatFieldUpdateOperationsInput | number
    decidedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalPaid?: FloatFieldUpdateOperationsInput | number
    isShipped?: BoolFieldUpdateOperationsInput | boolean
    paymentDetails?: NullableJsonNullValueInput | InputJsonValue
    totalTranches?: IntFieldUpdateOperationsInput | number
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: IntFieldUpdateOperationsInput | number
    decidedBy?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    ai?: NullableJsonNullValueInput | InputJsonValue
    user?: UserUpdateOneRequiredWithoutGrantApplicationNestedInput
    grant?: GrantsUpdateOneRequiredWithoutGrantApplicationNestedInput
    Comments?: CommentUpdateManyWithoutGrantApplicationNestedInput
    GrantTranche?: GrantTrancheUpdateManyWithoutGrantApplicationNestedInput
  }

  export type GrantApplicationUncheckedUpdateWithoutCreditLedgerInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    grantId?: StringFieldUpdateOperationsInput | string
    applicationStatus?: EnumGrantApplicationStatusFieldUpdateOperationsInput | $Enums.GrantApplicationStatus
    projectTitle?: StringFieldUpdateOperationsInput | string
    projectOneLiner?: StringFieldUpdateOperationsInput | string
    projectDetails?: StringFieldUpdateOperationsInput | string
    projectTimeline?: StringFieldUpdateOperationsInput | string
    proofOfWork?: StringFieldUpdateOperationsInput | string
    walletAddress?: StringFieldUpdateOperationsInput | string
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    milestones?: NullableStringFieldUpdateOperationsInput | string | null
    kpi?: NullableStringFieldUpdateOperationsInput | string | null
    answers?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    label?: EnumSubmissionLabelsFieldUpdateOperationsInput | $Enums.SubmissionLabels
    ask?: FloatFieldUpdateOperationsInput | number
    approvedAmount?: FloatFieldUpdateOperationsInput | number
    approvedAmountInUSD?: FloatFieldUpdateOperationsInput | number
    decidedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalPaid?: FloatFieldUpdateOperationsInput | number
    isShipped?: BoolFieldUpdateOperationsInput | boolean
    paymentDetails?: NullableJsonNullValueInput | InputJsonValue
    totalTranches?: IntFieldUpdateOperationsInput | number
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: IntFieldUpdateOperationsInput | number
    decidedBy?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    ai?: NullableJsonNullValueInput | InputJsonValue
    Comments?: CommentUncheckedUpdateManyWithoutGrantApplicationNestedInput
    GrantTranche?: GrantTrancheUncheckedUpdateManyWithoutGrantApplicationNestedInput
  }

  export type SubmissionCreateManyListingInput = {
    id?: string
    link?: string | null
    tweet?: string | null
    status?: $Enums.SubmissionStatus
    eligibilityAnswers?: NullableJsonNullValueInput | InputJsonValue
    userId: string
    isWinner?: boolean
    winnerPosition?: number | null
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: number
    isPaid?: boolean
    paymentDetails?: NullableJsonNullValueInput | InputJsonValue
    otherInfo?: string | null
    ask?: number | null
    label?: $Enums.SubmissionLabels
    rewardInUSD?: number
    ogImage?: string | null
    notes?: string | null
  }

  export type SubscribeBountyCreateManyBountiesInput = {
    id?: string
    userId: string
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ScoutsCreateManyListingInput = {
    id?: string
    userId: string
    dollarsEarned: number
    score: Decimal | DecimalJsLike | number | string
    invited: boolean
    skills: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
  }

  export type CommentCreateManyListingInput = {
    id?: string
    message: string
    authorId: string
    refType?: $Enums.CommentRefType
    isActive?: boolean
    isArchived?: boolean
    isPinned?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    replyToId?: string | null
    submissionId?: string | null
    type?: $Enums.CommentType
  }

  export type SubmissionUpdateWithoutListingInput = {
    id?: StringFieldUpdateOperationsInput | string
    link?: NullableStringFieldUpdateOperationsInput | string | null
    tweet?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumSubmissionStatusFieldUpdateOperationsInput | $Enums.SubmissionStatus
    eligibilityAnswers?: NullableJsonNullValueInput | InputJsonValue
    isWinner?: BoolFieldUpdateOperationsInput | boolean
    winnerPosition?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: IntFieldUpdateOperationsInput | number
    isPaid?: BoolFieldUpdateOperationsInput | boolean
    paymentDetails?: NullableJsonNullValueInput | InputJsonValue
    otherInfo?: NullableStringFieldUpdateOperationsInput | string | null
    ask?: NullableIntFieldUpdateOperationsInput | number | null
    label?: EnumSubmissionLabelsFieldUpdateOperationsInput | $Enums.SubmissionLabels
    rewardInUSD?: FloatFieldUpdateOperationsInput | number
    ogImage?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneRequiredWithoutSubmissionNestedInput
    Comments?: CommentUpdateManyWithoutSubmissionNestedInput
    CreditLedger?: CreditLedgerUpdateManyWithoutSubmissionNestedInput
  }

  export type SubmissionUncheckedUpdateWithoutListingInput = {
    id?: StringFieldUpdateOperationsInput | string
    link?: NullableStringFieldUpdateOperationsInput | string | null
    tweet?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumSubmissionStatusFieldUpdateOperationsInput | $Enums.SubmissionStatus
    eligibilityAnswers?: NullableJsonNullValueInput | InputJsonValue
    userId?: StringFieldUpdateOperationsInput | string
    isWinner?: BoolFieldUpdateOperationsInput | boolean
    winnerPosition?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: IntFieldUpdateOperationsInput | number
    isPaid?: BoolFieldUpdateOperationsInput | boolean
    paymentDetails?: NullableJsonNullValueInput | InputJsonValue
    otherInfo?: NullableStringFieldUpdateOperationsInput | string | null
    ask?: NullableIntFieldUpdateOperationsInput | number | null
    label?: EnumSubmissionLabelsFieldUpdateOperationsInput | $Enums.SubmissionLabels
    rewardInUSD?: FloatFieldUpdateOperationsInput | number
    ogImage?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    Comments?: CommentUncheckedUpdateManyWithoutSubmissionNestedInput
    CreditLedger?: CreditLedgerUncheckedUpdateManyWithoutSubmissionNestedInput
  }

  export type SubmissionUncheckedUpdateManyWithoutListingInput = {
    id?: StringFieldUpdateOperationsInput | string
    link?: NullableStringFieldUpdateOperationsInput | string | null
    tweet?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumSubmissionStatusFieldUpdateOperationsInput | $Enums.SubmissionStatus
    eligibilityAnswers?: NullableJsonNullValueInput | InputJsonValue
    userId?: StringFieldUpdateOperationsInput | string
    isWinner?: BoolFieldUpdateOperationsInput | boolean
    winnerPosition?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: IntFieldUpdateOperationsInput | number
    isPaid?: BoolFieldUpdateOperationsInput | boolean
    paymentDetails?: NullableJsonNullValueInput | InputJsonValue
    otherInfo?: NullableStringFieldUpdateOperationsInput | string | null
    ask?: NullableIntFieldUpdateOperationsInput | number | null
    label?: EnumSubmissionLabelsFieldUpdateOperationsInput | $Enums.SubmissionLabels
    rewardInUSD?: FloatFieldUpdateOperationsInput | number
    ogImage?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SubscribeBountyUpdateWithoutBountiesInput = {
    id?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    User?: UserUpdateOneRequiredWithoutSubscribeBountyNestedInput
  }

  export type SubscribeBountyUncheckedUpdateWithoutBountiesInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SubscribeBountyUncheckedUpdateManyWithoutBountiesInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ScoutsUpdateWithoutListingInput = {
    id?: StringFieldUpdateOperationsInput | string
    dollarsEarned?: IntFieldUpdateOperationsInput | number
    score?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    invited?: BoolFieldUpdateOperationsInput | boolean
    skills?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutScoutsNestedInput
  }

  export type ScoutsUncheckedUpdateWithoutListingInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    dollarsEarned?: IntFieldUpdateOperationsInput | number
    score?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    invited?: BoolFieldUpdateOperationsInput | boolean
    skills?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ScoutsUncheckedUpdateManyWithoutListingInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    dollarsEarned?: IntFieldUpdateOperationsInput | number
    score?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    invited?: BoolFieldUpdateOperationsInput | boolean
    skills?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CommentUpdateWithoutListingInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    refType?: EnumCommentRefTypeFieldUpdateOperationsInput | $Enums.CommentRefType
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    isPinned?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    submissionId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCommentTypeFieldUpdateOperationsInput | $Enums.CommentType
    author?: UserUpdateOneRequiredWithoutCommentNestedInput
    repliedTo?: CommentUpdateOneWithoutRepliesNestedInput
    replies?: CommentUpdateManyWithoutRepliedToNestedInput
    submission?: SubmissionUpdateOneWithoutCommentsNestedInput
    pow?: PoWUpdateOneWithoutCommentsNestedInput
    GrantApplication?: GrantApplicationUpdateOneWithoutCommentsNestedInput
  }

  export type CommentUncheckedUpdateWithoutListingInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    authorId?: StringFieldUpdateOperationsInput | string
    refType?: EnumCommentRefTypeFieldUpdateOperationsInput | $Enums.CommentRefType
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    isPinned?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    replyToId?: NullableStringFieldUpdateOperationsInput | string | null
    submissionId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCommentTypeFieldUpdateOperationsInput | $Enums.CommentType
    replies?: CommentUncheckedUpdateManyWithoutRepliedToNestedInput
  }

  export type CommentUncheckedUpdateManyWithoutListingInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    authorId?: StringFieldUpdateOperationsInput | string
    refType?: EnumCommentRefTypeFieldUpdateOperationsInput | $Enums.CommentRefType
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    isPinned?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    replyToId?: NullableStringFieldUpdateOperationsInput | string | null
    submissionId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCommentTypeFieldUpdateOperationsInput | $Enums.CommentType
  }

  export type BountiesCreateManyTemplateInput = {
    id?: string
    title: string
    slug: string
    description?: string | null
    deadline?: Date | string | null
    commitmentDate?: Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.status
    token?: string | null
    rewardAmount?: number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: number
    usdValue?: number | null
    sponsorId: string
    pocId: string
    source?: $Enums.Source
    isPublished?: boolean
    isFeatured?: boolean
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    applicationLink?: string | null
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: $Enums.BountyType
    requirements?: string | null
    isWinnersAnnounced?: boolean
    region?: string
    pocSocials?: string | null
    hackathonprize?: boolean
    applicationType?: $Enums.ApplicationType
    timeToComplete?: string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: string | null
    publishedAt?: Date | string | null
    isPrivate?: boolean
    hackathonId?: string | null
    compensationType?: $Enums.CompensationType
    maxRewardAsk?: number | null
    minRewardAsk?: number | null
    language?: string | null
    shouldSendEmail?: boolean
    isFndnPaying?: boolean
    winnersAnnouncedAt?: Date | string | null
    discordMessageIds?: NullableJsonNullValueInput | InputJsonValue
  }

  export type BountiesUpdateWithoutTemplateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    commitmentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    token?: NullableStringFieldUpdateOperationsInput | string | null
    rewardAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: IntFieldUpdateOperationsInput | number
    usdValue?: NullableFloatFieldUpdateOperationsInput | number | null
    source?: EnumSourceFieldUpdateOperationsInput | $Enums.Source
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationLink?: NullableStringFieldUpdateOperationsInput | string | null
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: EnumBountyTypeFieldUpdateOperationsInput | $Enums.BountyType
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    isWinnersAnnounced?: BoolFieldUpdateOperationsInput | boolean
    region?: StringFieldUpdateOperationsInput | string
    pocSocials?: NullableStringFieldUpdateOperationsInput | string | null
    hackathonprize?: BoolFieldUpdateOperationsInput | boolean
    applicationType?: EnumApplicationTypeFieldUpdateOperationsInput | $Enums.ApplicationType
    timeToComplete?: NullableStringFieldUpdateOperationsInput | string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    compensationType?: EnumCompensationTypeFieldUpdateOperationsInput | $Enums.CompensationType
    maxRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    minRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    shouldSendEmail?: BoolFieldUpdateOperationsInput | boolean
    isFndnPaying?: BoolFieldUpdateOperationsInput | boolean
    winnersAnnouncedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discordMessageIds?: NullableJsonNullValueInput | InputJsonValue
    sponsor?: SponsorsUpdateOneRequiredWithoutBountiesNestedInput
    poc?: UserUpdateOneRequiredWithoutPocNestedInput
    Submission?: SubmissionUpdateManyWithoutListingNestedInput
    SubscribeBounty?: SubscribeBountyUpdateManyWithoutBountiesNestedInput
    Hackathon?: HackathonUpdateOneWithoutListingsNestedInput
    Scouts?: ScoutsUpdateManyWithoutListingNestedInput
    Comments?: CommentUpdateManyWithoutListingNestedInput
  }

  export type BountiesUncheckedUpdateWithoutTemplateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    commitmentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    token?: NullableStringFieldUpdateOperationsInput | string | null
    rewardAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: IntFieldUpdateOperationsInput | number
    usdValue?: NullableFloatFieldUpdateOperationsInput | number | null
    sponsorId?: StringFieldUpdateOperationsInput | string
    pocId?: StringFieldUpdateOperationsInput | string
    source?: EnumSourceFieldUpdateOperationsInput | $Enums.Source
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationLink?: NullableStringFieldUpdateOperationsInput | string | null
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: EnumBountyTypeFieldUpdateOperationsInput | $Enums.BountyType
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    isWinnersAnnounced?: BoolFieldUpdateOperationsInput | boolean
    region?: StringFieldUpdateOperationsInput | string
    pocSocials?: NullableStringFieldUpdateOperationsInput | string | null
    hackathonprize?: BoolFieldUpdateOperationsInput | boolean
    applicationType?: EnumApplicationTypeFieldUpdateOperationsInput | $Enums.ApplicationType
    timeToComplete?: NullableStringFieldUpdateOperationsInput | string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    hackathonId?: NullableStringFieldUpdateOperationsInput | string | null
    compensationType?: EnumCompensationTypeFieldUpdateOperationsInput | $Enums.CompensationType
    maxRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    minRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    shouldSendEmail?: BoolFieldUpdateOperationsInput | boolean
    isFndnPaying?: BoolFieldUpdateOperationsInput | boolean
    winnersAnnouncedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discordMessageIds?: NullableJsonNullValueInput | InputJsonValue
    Submission?: SubmissionUncheckedUpdateManyWithoutListingNestedInput
    SubscribeBounty?: SubscribeBountyUncheckedUpdateManyWithoutBountiesNestedInput
    Scouts?: ScoutsUncheckedUpdateManyWithoutListingNestedInput
    Comments?: CommentUncheckedUpdateManyWithoutListingNestedInput
  }

  export type BountiesUncheckedUpdateManyWithoutTemplateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    commitmentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    token?: NullableStringFieldUpdateOperationsInput | string | null
    rewardAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: IntFieldUpdateOperationsInput | number
    usdValue?: NullableFloatFieldUpdateOperationsInput | number | null
    sponsorId?: StringFieldUpdateOperationsInput | string
    pocId?: StringFieldUpdateOperationsInput | string
    source?: EnumSourceFieldUpdateOperationsInput | $Enums.Source
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationLink?: NullableStringFieldUpdateOperationsInput | string | null
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: EnumBountyTypeFieldUpdateOperationsInput | $Enums.BountyType
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    isWinnersAnnounced?: BoolFieldUpdateOperationsInput | boolean
    region?: StringFieldUpdateOperationsInput | string
    pocSocials?: NullableStringFieldUpdateOperationsInput | string | null
    hackathonprize?: BoolFieldUpdateOperationsInput | boolean
    applicationType?: EnumApplicationTypeFieldUpdateOperationsInput | $Enums.ApplicationType
    timeToComplete?: NullableStringFieldUpdateOperationsInput | string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    hackathonId?: NullableStringFieldUpdateOperationsInput | string | null
    compensationType?: EnumCompensationTypeFieldUpdateOperationsInput | $Enums.CompensationType
    maxRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    minRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    shouldSendEmail?: BoolFieldUpdateOperationsInput | boolean
    isFndnPaying?: BoolFieldUpdateOperationsInput | boolean
    winnersAnnouncedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discordMessageIds?: NullableJsonNullValueInput | InputJsonValue
  }

  export type CommentCreateManyRepliedToInput = {
    id?: string
    message: string
    authorId: string
    refType?: $Enums.CommentRefType
    refId: string
    isActive?: boolean
    isArchived?: boolean
    isPinned?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    submissionId?: string | null
    type?: $Enums.CommentType
  }

  export type CommentUpdateWithoutRepliedToInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    refType?: EnumCommentRefTypeFieldUpdateOperationsInput | $Enums.CommentRefType
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    isPinned?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    submissionId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCommentTypeFieldUpdateOperationsInput | $Enums.CommentType
    author?: UserUpdateOneRequiredWithoutCommentNestedInput
    replies?: CommentUpdateManyWithoutRepliedToNestedInput
    listing?: BountiesUpdateOneWithoutCommentsNestedInput
    submission?: SubmissionUpdateOneWithoutCommentsNestedInput
    pow?: PoWUpdateOneWithoutCommentsNestedInput
    GrantApplication?: GrantApplicationUpdateOneWithoutCommentsNestedInput
  }

  export type CommentUncheckedUpdateWithoutRepliedToInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    authorId?: StringFieldUpdateOperationsInput | string
    refType?: EnumCommentRefTypeFieldUpdateOperationsInput | $Enums.CommentRefType
    refId?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    isPinned?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    submissionId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCommentTypeFieldUpdateOperationsInput | $Enums.CommentType
    replies?: CommentUncheckedUpdateManyWithoutRepliedToNestedInput
  }

  export type CommentUncheckedUpdateManyWithoutRepliedToInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    authorId?: StringFieldUpdateOperationsInput | string
    refType?: EnumCommentRefTypeFieldUpdateOperationsInput | $Enums.CommentRefType
    refId?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    isPinned?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    submissionId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCommentTypeFieldUpdateOperationsInput | $Enums.CommentType
  }

  export type GrantApplicationCreateManyGrantInput = {
    id?: string
    userId: string
    applicationStatus?: $Enums.GrantApplicationStatus
    projectTitle: string
    projectOneLiner: string
    projectDetails: string
    projectTimeline: string
    proofOfWork: string
    walletAddress: string
    twitter?: string | null
    github?: string | null
    milestones?: string | null
    kpi?: string | null
    answers?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    label?: $Enums.SubmissionLabels
    ask?: number
    approvedAmount?: number
    approvedAmountInUSD?: number
    decidedAt?: Date | string | null
    totalPaid?: number
    isShipped?: boolean
    paymentDetails?: NullableJsonNullValueInput | InputJsonValue
    totalTranches?: number
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: number
    decidedBy?: string | null
    notes?: string | null
    ai?: NullableJsonNullValueInput | InputJsonValue
  }

  export type GrantTrancheCreateManyGrantInput = {
    id?: string
    applicationId: string
    ask: number
    update?: string | null
    helpWanted?: string | null
    status?: $Enums.GrantTrancheStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    approvedAmount?: number | null
    decidedAt?: Date | string | null
    trancheNumber: number
  }

  export type GrantApplicationUpdateWithoutGrantInput = {
    id?: StringFieldUpdateOperationsInput | string
    applicationStatus?: EnumGrantApplicationStatusFieldUpdateOperationsInput | $Enums.GrantApplicationStatus
    projectTitle?: StringFieldUpdateOperationsInput | string
    projectOneLiner?: StringFieldUpdateOperationsInput | string
    projectDetails?: StringFieldUpdateOperationsInput | string
    projectTimeline?: StringFieldUpdateOperationsInput | string
    proofOfWork?: StringFieldUpdateOperationsInput | string
    walletAddress?: StringFieldUpdateOperationsInput | string
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    milestones?: NullableStringFieldUpdateOperationsInput | string | null
    kpi?: NullableStringFieldUpdateOperationsInput | string | null
    answers?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    label?: EnumSubmissionLabelsFieldUpdateOperationsInput | $Enums.SubmissionLabels
    ask?: FloatFieldUpdateOperationsInput | number
    approvedAmount?: FloatFieldUpdateOperationsInput | number
    approvedAmountInUSD?: FloatFieldUpdateOperationsInput | number
    decidedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalPaid?: FloatFieldUpdateOperationsInput | number
    isShipped?: BoolFieldUpdateOperationsInput | boolean
    paymentDetails?: NullableJsonNullValueInput | InputJsonValue
    totalTranches?: IntFieldUpdateOperationsInput | number
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: IntFieldUpdateOperationsInput | number
    decidedBy?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    ai?: NullableJsonNullValueInput | InputJsonValue
    user?: UserUpdateOneRequiredWithoutGrantApplicationNestedInput
    Comments?: CommentUpdateManyWithoutGrantApplicationNestedInput
    GrantTranche?: GrantTrancheUpdateManyWithoutGrantApplicationNestedInput
    CreditLedger?: CreditLedgerUpdateManyWithoutApplicationNestedInput
  }

  export type GrantApplicationUncheckedUpdateWithoutGrantInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    applicationStatus?: EnumGrantApplicationStatusFieldUpdateOperationsInput | $Enums.GrantApplicationStatus
    projectTitle?: StringFieldUpdateOperationsInput | string
    projectOneLiner?: StringFieldUpdateOperationsInput | string
    projectDetails?: StringFieldUpdateOperationsInput | string
    projectTimeline?: StringFieldUpdateOperationsInput | string
    proofOfWork?: StringFieldUpdateOperationsInput | string
    walletAddress?: StringFieldUpdateOperationsInput | string
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    milestones?: NullableStringFieldUpdateOperationsInput | string | null
    kpi?: NullableStringFieldUpdateOperationsInput | string | null
    answers?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    label?: EnumSubmissionLabelsFieldUpdateOperationsInput | $Enums.SubmissionLabels
    ask?: FloatFieldUpdateOperationsInput | number
    approvedAmount?: FloatFieldUpdateOperationsInput | number
    approvedAmountInUSD?: FloatFieldUpdateOperationsInput | number
    decidedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalPaid?: FloatFieldUpdateOperationsInput | number
    isShipped?: BoolFieldUpdateOperationsInput | boolean
    paymentDetails?: NullableJsonNullValueInput | InputJsonValue
    totalTranches?: IntFieldUpdateOperationsInput | number
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: IntFieldUpdateOperationsInput | number
    decidedBy?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    ai?: NullableJsonNullValueInput | InputJsonValue
    Comments?: CommentUncheckedUpdateManyWithoutGrantApplicationNestedInput
    GrantTranche?: GrantTrancheUncheckedUpdateManyWithoutGrantApplicationNestedInput
    CreditLedger?: CreditLedgerUncheckedUpdateManyWithoutApplicationNestedInput
  }

  export type GrantApplicationUncheckedUpdateManyWithoutGrantInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    applicationStatus?: EnumGrantApplicationStatusFieldUpdateOperationsInput | $Enums.GrantApplicationStatus
    projectTitle?: StringFieldUpdateOperationsInput | string
    projectOneLiner?: StringFieldUpdateOperationsInput | string
    projectDetails?: StringFieldUpdateOperationsInput | string
    projectTimeline?: StringFieldUpdateOperationsInput | string
    proofOfWork?: StringFieldUpdateOperationsInput | string
    walletAddress?: StringFieldUpdateOperationsInput | string
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    milestones?: NullableStringFieldUpdateOperationsInput | string | null
    kpi?: NullableStringFieldUpdateOperationsInput | string | null
    answers?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    label?: EnumSubmissionLabelsFieldUpdateOperationsInput | $Enums.SubmissionLabels
    ask?: FloatFieldUpdateOperationsInput | number
    approvedAmount?: FloatFieldUpdateOperationsInput | number
    approvedAmountInUSD?: FloatFieldUpdateOperationsInput | number
    decidedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalPaid?: FloatFieldUpdateOperationsInput | number
    isShipped?: BoolFieldUpdateOperationsInput | boolean
    paymentDetails?: NullableJsonNullValueInput | InputJsonValue
    totalTranches?: IntFieldUpdateOperationsInput | number
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: IntFieldUpdateOperationsInput | number
    decidedBy?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    ai?: NullableJsonNullValueInput | InputJsonValue
  }

  export type GrantTrancheUpdateWithoutGrantInput = {
    id?: StringFieldUpdateOperationsInput | string
    ask?: FloatFieldUpdateOperationsInput | number
    update?: NullableStringFieldUpdateOperationsInput | string | null
    helpWanted?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumGrantTrancheStatusFieldUpdateOperationsInput | $Enums.GrantTrancheStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    approvedAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    decidedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trancheNumber?: IntFieldUpdateOperationsInput | number
    GrantApplication?: GrantApplicationUpdateOneRequiredWithoutGrantTrancheNestedInput
  }

  export type GrantTrancheUncheckedUpdateWithoutGrantInput = {
    id?: StringFieldUpdateOperationsInput | string
    applicationId?: StringFieldUpdateOperationsInput | string
    ask?: FloatFieldUpdateOperationsInput | number
    update?: NullableStringFieldUpdateOperationsInput | string | null
    helpWanted?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumGrantTrancheStatusFieldUpdateOperationsInput | $Enums.GrantTrancheStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    approvedAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    decidedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trancheNumber?: IntFieldUpdateOperationsInput | number
  }

  export type GrantTrancheUncheckedUpdateManyWithoutGrantInput = {
    id?: StringFieldUpdateOperationsInput | string
    applicationId?: StringFieldUpdateOperationsInput | string
    ask?: FloatFieldUpdateOperationsInput | number
    update?: NullableStringFieldUpdateOperationsInput | string | null
    helpWanted?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumGrantTrancheStatusFieldUpdateOperationsInput | $Enums.GrantTrancheStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    approvedAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    decidedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trancheNumber?: IntFieldUpdateOperationsInput | number
  }

  export type CommentCreateManyGrantApplicationInput = {
    id?: string
    message: string
    authorId: string
    refType?: $Enums.CommentRefType
    isActive?: boolean
    isArchived?: boolean
    isPinned?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    replyToId?: string | null
    submissionId?: string | null
    type?: $Enums.CommentType
  }

  export type GrantTrancheCreateManyGrantApplicationInput = {
    id?: string
    grantId: string
    ask: number
    update?: string | null
    helpWanted?: string | null
    status?: $Enums.GrantTrancheStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    approvedAmount?: number | null
    decidedAt?: Date | string | null
    trancheNumber: number
  }

  export type CreditLedgerCreateManyApplicationInput = {
    id?: string
    userId: string
    submissionId?: string | null
    type: $Enums.CreditEventType
    change: number
    effectiveMonth: Date | string
    createdAt?: Date | string
  }

  export type CommentUpdateWithoutGrantApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    refType?: EnumCommentRefTypeFieldUpdateOperationsInput | $Enums.CommentRefType
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    isPinned?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    submissionId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCommentTypeFieldUpdateOperationsInput | $Enums.CommentType
    author?: UserUpdateOneRequiredWithoutCommentNestedInput
    repliedTo?: CommentUpdateOneWithoutRepliesNestedInput
    replies?: CommentUpdateManyWithoutRepliedToNestedInput
    listing?: BountiesUpdateOneWithoutCommentsNestedInput
    submission?: SubmissionUpdateOneWithoutCommentsNestedInput
    pow?: PoWUpdateOneWithoutCommentsNestedInput
  }

  export type CommentUncheckedUpdateWithoutGrantApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    authorId?: StringFieldUpdateOperationsInput | string
    refType?: EnumCommentRefTypeFieldUpdateOperationsInput | $Enums.CommentRefType
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    isPinned?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    replyToId?: NullableStringFieldUpdateOperationsInput | string | null
    submissionId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCommentTypeFieldUpdateOperationsInput | $Enums.CommentType
    replies?: CommentUncheckedUpdateManyWithoutRepliedToNestedInput
  }

  export type CommentUncheckedUpdateManyWithoutGrantApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    authorId?: StringFieldUpdateOperationsInput | string
    refType?: EnumCommentRefTypeFieldUpdateOperationsInput | $Enums.CommentRefType
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    isPinned?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    replyToId?: NullableStringFieldUpdateOperationsInput | string | null
    submissionId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCommentTypeFieldUpdateOperationsInput | $Enums.CommentType
  }

  export type GrantTrancheUpdateWithoutGrantApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    ask?: FloatFieldUpdateOperationsInput | number
    update?: NullableStringFieldUpdateOperationsInput | string | null
    helpWanted?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumGrantTrancheStatusFieldUpdateOperationsInput | $Enums.GrantTrancheStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    approvedAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    decidedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trancheNumber?: IntFieldUpdateOperationsInput | number
    Grant?: GrantsUpdateOneRequiredWithoutGrantTrancheNestedInput
  }

  export type GrantTrancheUncheckedUpdateWithoutGrantApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    grantId?: StringFieldUpdateOperationsInput | string
    ask?: FloatFieldUpdateOperationsInput | number
    update?: NullableStringFieldUpdateOperationsInput | string | null
    helpWanted?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumGrantTrancheStatusFieldUpdateOperationsInput | $Enums.GrantTrancheStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    approvedAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    decidedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trancheNumber?: IntFieldUpdateOperationsInput | number
  }

  export type GrantTrancheUncheckedUpdateManyWithoutGrantApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    grantId?: StringFieldUpdateOperationsInput | string
    ask?: FloatFieldUpdateOperationsInput | number
    update?: NullableStringFieldUpdateOperationsInput | string | null
    helpWanted?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumGrantTrancheStatusFieldUpdateOperationsInput | $Enums.GrantTrancheStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    approvedAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    decidedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trancheNumber?: IntFieldUpdateOperationsInput | number
  }

  export type CreditLedgerUpdateWithoutApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumCreditEventTypeFieldUpdateOperationsInput | $Enums.CreditEventType
    change?: IntFieldUpdateOperationsInput | number
    effectiveMonth?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutCreditLedgerNestedInput
    submission?: SubmissionUpdateOneWithoutCreditLedgerNestedInput
  }

  export type CreditLedgerUncheckedUpdateWithoutApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    submissionId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCreditEventTypeFieldUpdateOperationsInput | $Enums.CreditEventType
    change?: IntFieldUpdateOperationsInput | number
    effectiveMonth?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CreditLedgerUncheckedUpdateManyWithoutApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    submissionId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCreditEventTypeFieldUpdateOperationsInput | $Enums.CreditEventType
    change?: IntFieldUpdateOperationsInput | number
    effectiveMonth?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CommentCreateManySubmissionInput = {
    id?: string
    message: string
    authorId: string
    refType?: $Enums.CommentRefType
    isActive?: boolean
    isArchived?: boolean
    isPinned?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    replyToId?: string | null
    submissionId?: string | null
    type?: $Enums.CommentType
  }

  export type CreditLedgerCreateManySubmissionInput = {
    id?: string
    userId: string
    applicationId?: string | null
    type: $Enums.CreditEventType
    change: number
    effectiveMonth: Date | string
    createdAt?: Date | string
  }

  export type CommentUpdateWithoutSubmissionInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    refType?: EnumCommentRefTypeFieldUpdateOperationsInput | $Enums.CommentRefType
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    isPinned?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    submissionId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCommentTypeFieldUpdateOperationsInput | $Enums.CommentType
    author?: UserUpdateOneRequiredWithoutCommentNestedInput
    repliedTo?: CommentUpdateOneWithoutRepliesNestedInput
    replies?: CommentUpdateManyWithoutRepliedToNestedInput
    listing?: BountiesUpdateOneWithoutCommentsNestedInput
    pow?: PoWUpdateOneWithoutCommentsNestedInput
    GrantApplication?: GrantApplicationUpdateOneWithoutCommentsNestedInput
  }

  export type CommentUncheckedUpdateWithoutSubmissionInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    authorId?: StringFieldUpdateOperationsInput | string
    refType?: EnumCommentRefTypeFieldUpdateOperationsInput | $Enums.CommentRefType
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    isPinned?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    replyToId?: NullableStringFieldUpdateOperationsInput | string | null
    submissionId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCommentTypeFieldUpdateOperationsInput | $Enums.CommentType
    replies?: CommentUncheckedUpdateManyWithoutRepliedToNestedInput
  }

  export type CommentUncheckedUpdateManyWithoutSubmissionInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    authorId?: StringFieldUpdateOperationsInput | string
    refType?: EnumCommentRefTypeFieldUpdateOperationsInput | $Enums.CommentRefType
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    isPinned?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    replyToId?: NullableStringFieldUpdateOperationsInput | string | null
    submissionId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCommentTypeFieldUpdateOperationsInput | $Enums.CommentType
  }

  export type CreditLedgerUpdateWithoutSubmissionInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumCreditEventTypeFieldUpdateOperationsInput | $Enums.CreditEventType
    change?: IntFieldUpdateOperationsInput | number
    effectiveMonth?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutCreditLedgerNestedInput
    application?: GrantApplicationUpdateOneWithoutCreditLedgerNestedInput
  }

  export type CreditLedgerUncheckedUpdateWithoutSubmissionInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    applicationId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCreditEventTypeFieldUpdateOperationsInput | $Enums.CreditEventType
    change?: IntFieldUpdateOperationsInput | number
    effectiveMonth?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CreditLedgerUncheckedUpdateManyWithoutSubmissionInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    applicationId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCreditEventTypeFieldUpdateOperationsInput | $Enums.CreditEventType
    change?: IntFieldUpdateOperationsInput | number
    effectiveMonth?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserSponsorsCreateManySponsorInput = {
    userId: string
    role?: $Enums.Role
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BountiesCreateManySponsorInput = {
    id?: string
    title: string
    slug: string
    description?: string | null
    deadline?: Date | string | null
    commitmentDate?: Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.status
    token?: string | null
    rewardAmount?: number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: number
    usdValue?: number | null
    pocId: string
    source?: $Enums.Source
    isPublished?: boolean
    isFeatured?: boolean
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    applicationLink?: string | null
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: $Enums.BountyType
    requirements?: string | null
    isWinnersAnnounced?: boolean
    templateId?: string | null
    region?: string
    pocSocials?: string | null
    hackathonprize?: boolean
    applicationType?: $Enums.ApplicationType
    timeToComplete?: string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: string | null
    publishedAt?: Date | string | null
    isPrivate?: boolean
    hackathonId?: string | null
    compensationType?: $Enums.CompensationType
    maxRewardAsk?: number | null
    minRewardAsk?: number | null
    language?: string | null
    shouldSendEmail?: boolean
    isFndnPaying?: boolean
    winnersAnnouncedAt?: Date | string | null
    discordMessageIds?: NullableJsonNullValueInput | InputJsonValue
  }

  export type BountiesTemplatesCreateManySponsorInput = {
    id?: string
    title?: string | null
    deadline?: Date | string | null
    slug?: string | null
    description?: string | null
    color?: string | null
    emoji?: string | null
    isFeatured?: boolean
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: $Enums.BountyType
    requirements?: string | null
    region?: string
    applicationType?: $Enums.ApplicationType
    status?: $Enums.status
    timeToComplete?: string | null
    token?: string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: string | null
    publishedAt?: Date | string | null
    compensationType?: $Enums.CompensationType
    maxRewardAsk?: number | null
    minRewardAsk?: number | null
    language?: string | null
    rewardAmount?: number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: number
    usdValue?: number | null
    pocId: string
    pocSocials?: string | null
    source?: $Enums.Source
    isPublished?: boolean
  }

  export type GrantsCreateManySponsorInput = {
    id?: string
    title: string
    slug: string
    description?: string | null
    shortDescription?: string | null
    token?: string | null
    minReward?: number | null
    maxReward?: number | null
    totalPaid?: number
    totalApproved?: number
    historicalApplications?: number
    historicalPaid?: number
    link?: string | null
    pocId: string
    isPublished?: boolean
    isFeatured?: boolean
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    skills?: NullableJsonNullValueInput | InputJsonValue
    logo?: string | null
    region?: string
    questions?: NullableJsonNullValueInput | InputJsonValue
    pocSocials?: string | null
    status?: $Enums.GrantStatus
    airtableId?: string | null
    avgResponseTime?: string | null
    isNative?: boolean
    isPrivate?: boolean
    references?: NullableJsonNullValueInput | InputJsonValue
    ai?: NullableJsonNullValueInput | InputJsonValue
    approverRecordId?: string | null
    emailSender?: string | null
    replyToEmail?: string | null
    emailSalutation?: string | null
    communityLink?: string | null
  }

  export type UserCreateManyCurrentSponsorInput = {
    id?: string
    publicKey?: string | null
    walletAddress?: string | null
    email: string
    username?: string | null
    photo?: string | null
    firstName?: string | null
    lastName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    role?: string
    isTalentFilled?: boolean
    interests?: string | null
    bio?: string | null
    twitter?: string | null
    discord?: string | null
    github?: string | null
    linkedin?: string | null
    website?: string | null
    telegram?: string | null
    community?: string | null
    experience?: string | null
    superteamLevel?: string | null
    location?: string | null
    cryptoExperience?: string | null
    workPrefernce?: string | null
    currentEmployer?: string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    emailVerified?: Date | string | null
    hackathonId?: string | null
    featureModalShown?: boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: boolean
    acceptedTOS?: boolean
    stLead?: string | null
    isBlocked?: boolean
    privyDid: string
    isKYCVerified?: boolean
    kycName?: string | null
    kycCountry?: string | null
    kycAddress?: string | null
    kycDOB?: string | null
    kycIDNumber?: string | null
    kycIDType?: string | null
  }

  export type UserInvitesCreateManySponsorInput = {
    id?: string
    email: string
    senderId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    memberType?: $Enums.Role
    token: string
    expires: Date | string
  }

  export type UserSponsorsUpdateWithoutSponsorInput = {
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutUserSponsorsNestedInput
  }

  export type UserSponsorsUncheckedUpdateWithoutSponsorInput = {
    userId?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserSponsorsUncheckedUpdateManyWithoutSponsorInput = {
    userId?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BountiesUpdateWithoutSponsorInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    commitmentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    token?: NullableStringFieldUpdateOperationsInput | string | null
    rewardAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: IntFieldUpdateOperationsInput | number
    usdValue?: NullableFloatFieldUpdateOperationsInput | number | null
    source?: EnumSourceFieldUpdateOperationsInput | $Enums.Source
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationLink?: NullableStringFieldUpdateOperationsInput | string | null
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: EnumBountyTypeFieldUpdateOperationsInput | $Enums.BountyType
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    isWinnersAnnounced?: BoolFieldUpdateOperationsInput | boolean
    region?: StringFieldUpdateOperationsInput | string
    pocSocials?: NullableStringFieldUpdateOperationsInput | string | null
    hackathonprize?: BoolFieldUpdateOperationsInput | boolean
    applicationType?: EnumApplicationTypeFieldUpdateOperationsInput | $Enums.ApplicationType
    timeToComplete?: NullableStringFieldUpdateOperationsInput | string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    compensationType?: EnumCompensationTypeFieldUpdateOperationsInput | $Enums.CompensationType
    maxRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    minRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    shouldSendEmail?: BoolFieldUpdateOperationsInput | boolean
    isFndnPaying?: BoolFieldUpdateOperationsInput | boolean
    winnersAnnouncedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discordMessageIds?: NullableJsonNullValueInput | InputJsonValue
    template?: BountiesTemplatesUpdateOneWithoutBountiesNestedInput
    poc?: UserUpdateOneRequiredWithoutPocNestedInput
    Submission?: SubmissionUpdateManyWithoutListingNestedInput
    SubscribeBounty?: SubscribeBountyUpdateManyWithoutBountiesNestedInput
    Hackathon?: HackathonUpdateOneWithoutListingsNestedInput
    Scouts?: ScoutsUpdateManyWithoutListingNestedInput
    Comments?: CommentUpdateManyWithoutListingNestedInput
  }

  export type BountiesUncheckedUpdateWithoutSponsorInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    commitmentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    token?: NullableStringFieldUpdateOperationsInput | string | null
    rewardAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: IntFieldUpdateOperationsInput | number
    usdValue?: NullableFloatFieldUpdateOperationsInput | number | null
    pocId?: StringFieldUpdateOperationsInput | string
    source?: EnumSourceFieldUpdateOperationsInput | $Enums.Source
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationLink?: NullableStringFieldUpdateOperationsInput | string | null
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: EnumBountyTypeFieldUpdateOperationsInput | $Enums.BountyType
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    isWinnersAnnounced?: BoolFieldUpdateOperationsInput | boolean
    templateId?: NullableStringFieldUpdateOperationsInput | string | null
    region?: StringFieldUpdateOperationsInput | string
    pocSocials?: NullableStringFieldUpdateOperationsInput | string | null
    hackathonprize?: BoolFieldUpdateOperationsInput | boolean
    applicationType?: EnumApplicationTypeFieldUpdateOperationsInput | $Enums.ApplicationType
    timeToComplete?: NullableStringFieldUpdateOperationsInput | string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    hackathonId?: NullableStringFieldUpdateOperationsInput | string | null
    compensationType?: EnumCompensationTypeFieldUpdateOperationsInput | $Enums.CompensationType
    maxRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    minRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    shouldSendEmail?: BoolFieldUpdateOperationsInput | boolean
    isFndnPaying?: BoolFieldUpdateOperationsInput | boolean
    winnersAnnouncedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discordMessageIds?: NullableJsonNullValueInput | InputJsonValue
    Submission?: SubmissionUncheckedUpdateManyWithoutListingNestedInput
    SubscribeBounty?: SubscribeBountyUncheckedUpdateManyWithoutBountiesNestedInput
    Scouts?: ScoutsUncheckedUpdateManyWithoutListingNestedInput
    Comments?: CommentUncheckedUpdateManyWithoutListingNestedInput
  }

  export type BountiesUncheckedUpdateManyWithoutSponsorInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    commitmentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    token?: NullableStringFieldUpdateOperationsInput | string | null
    rewardAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: IntFieldUpdateOperationsInput | number
    usdValue?: NullableFloatFieldUpdateOperationsInput | number | null
    pocId?: StringFieldUpdateOperationsInput | string
    source?: EnumSourceFieldUpdateOperationsInput | $Enums.Source
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationLink?: NullableStringFieldUpdateOperationsInput | string | null
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: EnumBountyTypeFieldUpdateOperationsInput | $Enums.BountyType
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    isWinnersAnnounced?: BoolFieldUpdateOperationsInput | boolean
    templateId?: NullableStringFieldUpdateOperationsInput | string | null
    region?: StringFieldUpdateOperationsInput | string
    pocSocials?: NullableStringFieldUpdateOperationsInput | string | null
    hackathonprize?: BoolFieldUpdateOperationsInput | boolean
    applicationType?: EnumApplicationTypeFieldUpdateOperationsInput | $Enums.ApplicationType
    timeToComplete?: NullableStringFieldUpdateOperationsInput | string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    hackathonId?: NullableStringFieldUpdateOperationsInput | string | null
    compensationType?: EnumCompensationTypeFieldUpdateOperationsInput | $Enums.CompensationType
    maxRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    minRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    shouldSendEmail?: BoolFieldUpdateOperationsInput | boolean
    isFndnPaying?: BoolFieldUpdateOperationsInput | boolean
    winnersAnnouncedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discordMessageIds?: NullableJsonNullValueInput | InputJsonValue
  }

  export type BountiesTemplatesUpdateWithoutSponsorInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    emoji?: NullableStringFieldUpdateOperationsInput | string | null
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: EnumBountyTypeFieldUpdateOperationsInput | $Enums.BountyType
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    region?: StringFieldUpdateOperationsInput | string
    applicationType?: EnumApplicationTypeFieldUpdateOperationsInput | $Enums.ApplicationType
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    timeToComplete?: NullableStringFieldUpdateOperationsInput | string | null
    token?: NullableStringFieldUpdateOperationsInput | string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    compensationType?: EnumCompensationTypeFieldUpdateOperationsInput | $Enums.CompensationType
    maxRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    minRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    rewardAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: IntFieldUpdateOperationsInput | number
    usdValue?: NullableFloatFieldUpdateOperationsInput | number | null
    pocSocials?: NullableStringFieldUpdateOperationsInput | string | null
    source?: EnumSourceFieldUpdateOperationsInput | $Enums.Source
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    Bounties?: BountiesUpdateManyWithoutTemplateNestedInput
    poc?: UserUpdateOneRequiredWithoutTemplatesNestedInput
  }

  export type BountiesTemplatesUncheckedUpdateWithoutSponsorInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    emoji?: NullableStringFieldUpdateOperationsInput | string | null
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: EnumBountyTypeFieldUpdateOperationsInput | $Enums.BountyType
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    region?: StringFieldUpdateOperationsInput | string
    applicationType?: EnumApplicationTypeFieldUpdateOperationsInput | $Enums.ApplicationType
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    timeToComplete?: NullableStringFieldUpdateOperationsInput | string | null
    token?: NullableStringFieldUpdateOperationsInput | string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    compensationType?: EnumCompensationTypeFieldUpdateOperationsInput | $Enums.CompensationType
    maxRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    minRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    rewardAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: IntFieldUpdateOperationsInput | number
    usdValue?: NullableFloatFieldUpdateOperationsInput | number | null
    pocId?: StringFieldUpdateOperationsInput | string
    pocSocials?: NullableStringFieldUpdateOperationsInput | string | null
    source?: EnumSourceFieldUpdateOperationsInput | $Enums.Source
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    Bounties?: BountiesUncheckedUpdateManyWithoutTemplateNestedInput
  }

  export type BountiesTemplatesUncheckedUpdateManyWithoutSponsorInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    emoji?: NullableStringFieldUpdateOperationsInput | string | null
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: EnumBountyTypeFieldUpdateOperationsInput | $Enums.BountyType
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    region?: StringFieldUpdateOperationsInput | string
    applicationType?: EnumApplicationTypeFieldUpdateOperationsInput | $Enums.ApplicationType
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    timeToComplete?: NullableStringFieldUpdateOperationsInput | string | null
    token?: NullableStringFieldUpdateOperationsInput | string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    compensationType?: EnumCompensationTypeFieldUpdateOperationsInput | $Enums.CompensationType
    maxRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    minRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    rewardAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: IntFieldUpdateOperationsInput | number
    usdValue?: NullableFloatFieldUpdateOperationsInput | number | null
    pocId?: StringFieldUpdateOperationsInput | string
    pocSocials?: NullableStringFieldUpdateOperationsInput | string | null
    source?: EnumSourceFieldUpdateOperationsInput | $Enums.Source
    isPublished?: BoolFieldUpdateOperationsInput | boolean
  }

  export type GrantsUpdateWithoutSponsorInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    token?: NullableStringFieldUpdateOperationsInput | string | null
    minReward?: NullableFloatFieldUpdateOperationsInput | number | null
    maxReward?: NullableFloatFieldUpdateOperationsInput | number | null
    totalPaid?: FloatFieldUpdateOperationsInput | number
    totalApproved?: FloatFieldUpdateOperationsInput | number
    historicalApplications?: IntFieldUpdateOperationsInput | number
    historicalPaid?: FloatFieldUpdateOperationsInput | number
    link?: NullableStringFieldUpdateOperationsInput | string | null
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    skills?: NullableJsonNullValueInput | InputJsonValue
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    region?: StringFieldUpdateOperationsInput | string
    questions?: NullableJsonNullValueInput | InputJsonValue
    pocSocials?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumGrantStatusFieldUpdateOperationsInput | $Enums.GrantStatus
    airtableId?: NullableStringFieldUpdateOperationsInput | string | null
    avgResponseTime?: NullableStringFieldUpdateOperationsInput | string | null
    isNative?: BoolFieldUpdateOperationsInput | boolean
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    references?: NullableJsonNullValueInput | InputJsonValue
    ai?: NullableJsonNullValueInput | InputJsonValue
    approverRecordId?: NullableStringFieldUpdateOperationsInput | string | null
    emailSender?: NullableStringFieldUpdateOperationsInput | string | null
    replyToEmail?: NullableStringFieldUpdateOperationsInput | string | null
    emailSalutation?: NullableStringFieldUpdateOperationsInput | string | null
    communityLink?: NullableStringFieldUpdateOperationsInput | string | null
    poc?: UserUpdateOneRequiredWithoutGrantsNestedInput
    GrantApplication?: GrantApplicationUpdateManyWithoutGrantNestedInput
    GrantTranche?: GrantTrancheUpdateManyWithoutGrantNestedInput
  }

  export type GrantsUncheckedUpdateWithoutSponsorInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    token?: NullableStringFieldUpdateOperationsInput | string | null
    minReward?: NullableFloatFieldUpdateOperationsInput | number | null
    maxReward?: NullableFloatFieldUpdateOperationsInput | number | null
    totalPaid?: FloatFieldUpdateOperationsInput | number
    totalApproved?: FloatFieldUpdateOperationsInput | number
    historicalApplications?: IntFieldUpdateOperationsInput | number
    historicalPaid?: FloatFieldUpdateOperationsInput | number
    link?: NullableStringFieldUpdateOperationsInput | string | null
    pocId?: StringFieldUpdateOperationsInput | string
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    skills?: NullableJsonNullValueInput | InputJsonValue
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    region?: StringFieldUpdateOperationsInput | string
    questions?: NullableJsonNullValueInput | InputJsonValue
    pocSocials?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumGrantStatusFieldUpdateOperationsInput | $Enums.GrantStatus
    airtableId?: NullableStringFieldUpdateOperationsInput | string | null
    avgResponseTime?: NullableStringFieldUpdateOperationsInput | string | null
    isNative?: BoolFieldUpdateOperationsInput | boolean
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    references?: NullableJsonNullValueInput | InputJsonValue
    ai?: NullableJsonNullValueInput | InputJsonValue
    approverRecordId?: NullableStringFieldUpdateOperationsInput | string | null
    emailSender?: NullableStringFieldUpdateOperationsInput | string | null
    replyToEmail?: NullableStringFieldUpdateOperationsInput | string | null
    emailSalutation?: NullableStringFieldUpdateOperationsInput | string | null
    communityLink?: NullableStringFieldUpdateOperationsInput | string | null
    GrantApplication?: GrantApplicationUncheckedUpdateManyWithoutGrantNestedInput
    GrantTranche?: GrantTrancheUncheckedUpdateManyWithoutGrantNestedInput
  }

  export type GrantsUncheckedUpdateManyWithoutSponsorInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    token?: NullableStringFieldUpdateOperationsInput | string | null
    minReward?: NullableFloatFieldUpdateOperationsInput | number | null
    maxReward?: NullableFloatFieldUpdateOperationsInput | number | null
    totalPaid?: FloatFieldUpdateOperationsInput | number
    totalApproved?: FloatFieldUpdateOperationsInput | number
    historicalApplications?: IntFieldUpdateOperationsInput | number
    historicalPaid?: FloatFieldUpdateOperationsInput | number
    link?: NullableStringFieldUpdateOperationsInput | string | null
    pocId?: StringFieldUpdateOperationsInput | string
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    skills?: NullableJsonNullValueInput | InputJsonValue
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    region?: StringFieldUpdateOperationsInput | string
    questions?: NullableJsonNullValueInput | InputJsonValue
    pocSocials?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumGrantStatusFieldUpdateOperationsInput | $Enums.GrantStatus
    airtableId?: NullableStringFieldUpdateOperationsInput | string | null
    avgResponseTime?: NullableStringFieldUpdateOperationsInput | string | null
    isNative?: BoolFieldUpdateOperationsInput | boolean
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    references?: NullableJsonNullValueInput | InputJsonValue
    ai?: NullableJsonNullValueInput | InputJsonValue
    approverRecordId?: NullableStringFieldUpdateOperationsInput | string | null
    emailSender?: NullableStringFieldUpdateOperationsInput | string | null
    replyToEmail?: NullableStringFieldUpdateOperationsInput | string | null
    emailSalutation?: NullableStringFieldUpdateOperationsInput | string | null
    communityLink?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserUpdateWithoutCurrentSponsorInput = {
    id?: StringFieldUpdateOperationsInput | string
    publicKey?: NullableStringFieldUpdateOperationsInput | string | null
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    isTalentFilled?: BoolFieldUpdateOperationsInput | boolean
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    discord?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    community?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    superteamLevel?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    cryptoExperience?: NullableStringFieldUpdateOperationsInput | string | null
    workPrefernce?: NullableStringFieldUpdateOperationsInput | string | null
    currentEmployer?: NullableStringFieldUpdateOperationsInput | string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: BoolFieldUpdateOperationsInput | boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    featureModalShown?: BoolFieldUpdateOperationsInput | boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: BoolFieldUpdateOperationsInput | boolean
    acceptedTOS?: BoolFieldUpdateOperationsInput | boolean
    stLead?: NullableStringFieldUpdateOperationsInput | string | null
    isBlocked?: BoolFieldUpdateOperationsInput | boolean
    privyDid?: StringFieldUpdateOperationsInput | string
    isKYCVerified?: BoolFieldUpdateOperationsInput | boolean
    kycName?: NullableStringFieldUpdateOperationsInput | string | null
    kycCountry?: NullableStringFieldUpdateOperationsInput | string | null
    kycAddress?: NullableStringFieldUpdateOperationsInput | string | null
    kycDOB?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDNumber?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDType?: NullableStringFieldUpdateOperationsInput | string | null
    UserSponsors?: UserSponsorsUpdateManyWithoutUserNestedInput
    poc?: BountiesUpdateManyWithoutPocNestedInput
    templates?: BountiesTemplatesUpdateManyWithoutPocNestedInput
    Comment?: CommentUpdateManyWithoutAuthorNestedInput
    Submission?: SubmissionUpdateManyWithoutUserNestedInput
    Grants?: GrantsUpdateManyWithoutPocNestedInput
    UserInvites?: UserInvitesUpdateManyWithoutSenderNestedInput
    SubscribeBounty?: SubscribeBountyUpdateManyWithoutUserNestedInput
    PoW?: PoWUpdateManyWithoutUserNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    Hackathon?: HackathonUpdateOneWithoutUserNestedInput
    emailSettings?: EmailSettingsUpdateManyWithoutUserNestedInput
    TalentRankings?: TalentRankingsUpdateManyWithoutUserNestedInput
    Scouts?: ScoutsUpdateManyWithoutUserNestedInput
    GrantApplication?: GrantApplicationUpdateManyWithoutUserNestedInput
    SubscribeHackathon?: SubscribeHackathonUpdateManyWithoutUserNestedInput
    CreditLedger?: CreditLedgerUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutCurrentSponsorInput = {
    id?: StringFieldUpdateOperationsInput | string
    publicKey?: NullableStringFieldUpdateOperationsInput | string | null
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    isTalentFilled?: BoolFieldUpdateOperationsInput | boolean
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    discord?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    community?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    superteamLevel?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    cryptoExperience?: NullableStringFieldUpdateOperationsInput | string | null
    workPrefernce?: NullableStringFieldUpdateOperationsInput | string | null
    currentEmployer?: NullableStringFieldUpdateOperationsInput | string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: BoolFieldUpdateOperationsInput | boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hackathonId?: NullableStringFieldUpdateOperationsInput | string | null
    featureModalShown?: BoolFieldUpdateOperationsInput | boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: BoolFieldUpdateOperationsInput | boolean
    acceptedTOS?: BoolFieldUpdateOperationsInput | boolean
    stLead?: NullableStringFieldUpdateOperationsInput | string | null
    isBlocked?: BoolFieldUpdateOperationsInput | boolean
    privyDid?: StringFieldUpdateOperationsInput | string
    isKYCVerified?: BoolFieldUpdateOperationsInput | boolean
    kycName?: NullableStringFieldUpdateOperationsInput | string | null
    kycCountry?: NullableStringFieldUpdateOperationsInput | string | null
    kycAddress?: NullableStringFieldUpdateOperationsInput | string | null
    kycDOB?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDNumber?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDType?: NullableStringFieldUpdateOperationsInput | string | null
    UserSponsors?: UserSponsorsUncheckedUpdateManyWithoutUserNestedInput
    poc?: BountiesUncheckedUpdateManyWithoutPocNestedInput
    templates?: BountiesTemplatesUncheckedUpdateManyWithoutPocNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutAuthorNestedInput
    Submission?: SubmissionUncheckedUpdateManyWithoutUserNestedInput
    Grants?: GrantsUncheckedUpdateManyWithoutPocNestedInput
    UserInvites?: UserInvitesUncheckedUpdateManyWithoutSenderNestedInput
    SubscribeBounty?: SubscribeBountyUncheckedUpdateManyWithoutUserNestedInput
    PoW?: PoWUncheckedUpdateManyWithoutUserNestedInput
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    emailSettings?: EmailSettingsUncheckedUpdateManyWithoutUserNestedInput
    TalentRankings?: TalentRankingsUncheckedUpdateManyWithoutUserNestedInput
    Scouts?: ScoutsUncheckedUpdateManyWithoutUserNestedInput
    GrantApplication?: GrantApplicationUncheckedUpdateManyWithoutUserNestedInput
    SubscribeHackathon?: SubscribeHackathonUncheckedUpdateManyWithoutUserNestedInput
    CreditLedger?: CreditLedgerUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateManyWithoutCurrentSponsorInput = {
    id?: StringFieldUpdateOperationsInput | string
    publicKey?: NullableStringFieldUpdateOperationsInput | string | null
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    isTalentFilled?: BoolFieldUpdateOperationsInput | boolean
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    discord?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    community?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    superteamLevel?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    cryptoExperience?: NullableStringFieldUpdateOperationsInput | string | null
    workPrefernce?: NullableStringFieldUpdateOperationsInput | string | null
    currentEmployer?: NullableStringFieldUpdateOperationsInput | string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: BoolFieldUpdateOperationsInput | boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hackathonId?: NullableStringFieldUpdateOperationsInput | string | null
    featureModalShown?: BoolFieldUpdateOperationsInput | boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: BoolFieldUpdateOperationsInput | boolean
    acceptedTOS?: BoolFieldUpdateOperationsInput | boolean
    stLead?: NullableStringFieldUpdateOperationsInput | string | null
    isBlocked?: BoolFieldUpdateOperationsInput | boolean
    privyDid?: StringFieldUpdateOperationsInput | string
    isKYCVerified?: BoolFieldUpdateOperationsInput | boolean
    kycName?: NullableStringFieldUpdateOperationsInput | string | null
    kycCountry?: NullableStringFieldUpdateOperationsInput | string | null
    kycAddress?: NullableStringFieldUpdateOperationsInput | string | null
    kycDOB?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDNumber?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDType?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserInvitesUpdateWithoutSponsorInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    memberType?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    token?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
    sender?: UserUpdateOneRequiredWithoutUserInvitesNestedInput
  }

  export type UserInvitesUncheckedUpdateWithoutSponsorInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senderId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    memberType?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    token?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserInvitesUncheckedUpdateManyWithoutSponsorInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senderId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    memberType?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    token?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserSponsorsCreateManyUserInput = {
    sponsorId: string
    role?: $Enums.Role
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BountiesCreateManyPocInput = {
    id?: string
    title: string
    slug: string
    description?: string | null
    deadline?: Date | string | null
    commitmentDate?: Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.status
    token?: string | null
    rewardAmount?: number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: number
    usdValue?: number | null
    sponsorId: string
    source?: $Enums.Source
    isPublished?: boolean
    isFeatured?: boolean
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    applicationLink?: string | null
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: $Enums.BountyType
    requirements?: string | null
    isWinnersAnnounced?: boolean
    templateId?: string | null
    region?: string
    pocSocials?: string | null
    hackathonprize?: boolean
    applicationType?: $Enums.ApplicationType
    timeToComplete?: string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: string | null
    publishedAt?: Date | string | null
    isPrivate?: boolean
    hackathonId?: string | null
    compensationType?: $Enums.CompensationType
    maxRewardAsk?: number | null
    minRewardAsk?: number | null
    language?: string | null
    shouldSendEmail?: boolean
    isFndnPaying?: boolean
    winnersAnnouncedAt?: Date | string | null
    discordMessageIds?: NullableJsonNullValueInput | InputJsonValue
  }

  export type BountiesTemplatesCreateManyPocInput = {
    id?: string
    title?: string | null
    deadline?: Date | string | null
    slug?: string | null
    description?: string | null
    color?: string | null
    emoji?: string | null
    isFeatured?: boolean
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: $Enums.BountyType
    requirements?: string | null
    region?: string
    applicationType?: $Enums.ApplicationType
    status?: $Enums.status
    timeToComplete?: string | null
    token?: string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: string | null
    publishedAt?: Date | string | null
    compensationType?: $Enums.CompensationType
    maxRewardAsk?: number | null
    minRewardAsk?: number | null
    language?: string | null
    rewardAmount?: number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: number
    usdValue?: number | null
    sponsorId: string
    pocSocials?: string | null
    source?: $Enums.Source
    isPublished?: boolean
  }

  export type CommentCreateManyAuthorInput = {
    id?: string
    message: string
    refType?: $Enums.CommentRefType
    refId: string
    isActive?: boolean
    isArchived?: boolean
    isPinned?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    replyToId?: string | null
    submissionId?: string | null
    type?: $Enums.CommentType
  }

  export type SubmissionCreateManyUserInput = {
    id?: string
    link?: string | null
    tweet?: string | null
    status?: $Enums.SubmissionStatus
    eligibilityAnswers?: NullableJsonNullValueInput | InputJsonValue
    listingId: string
    isWinner?: boolean
    winnerPosition?: number | null
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: number
    isPaid?: boolean
    paymentDetails?: NullableJsonNullValueInput | InputJsonValue
    otherInfo?: string | null
    ask?: number | null
    label?: $Enums.SubmissionLabels
    rewardInUSD?: number
    ogImage?: string | null
    notes?: string | null
  }

  export type GrantsCreateManyPocInput = {
    id?: string
    title: string
    slug: string
    description?: string | null
    shortDescription?: string | null
    token?: string | null
    minReward?: number | null
    maxReward?: number | null
    totalPaid?: number
    totalApproved?: number
    historicalApplications?: number
    historicalPaid?: number
    link?: string | null
    sponsorId: string
    isPublished?: boolean
    isFeatured?: boolean
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    skills?: NullableJsonNullValueInput | InputJsonValue
    logo?: string | null
    region?: string
    questions?: NullableJsonNullValueInput | InputJsonValue
    pocSocials?: string | null
    status?: $Enums.GrantStatus
    airtableId?: string | null
    avgResponseTime?: string | null
    isNative?: boolean
    isPrivate?: boolean
    references?: NullableJsonNullValueInput | InputJsonValue
    ai?: NullableJsonNullValueInput | InputJsonValue
    approverRecordId?: string | null
    emailSender?: string | null
    replyToEmail?: string | null
    emailSalutation?: string | null
    communityLink?: string | null
  }

  export type UserInvitesCreateManySenderInput = {
    id?: string
    email: string
    createdAt?: Date | string
    updatedAt?: Date | string
    sponsorId: string
    memberType?: $Enums.Role
    token: string
    expires: Date | string
  }

  export type SubscribeBountyCreateManyUserInput = {
    id?: string
    bountyId: string
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PoWCreateManyUserInput = {
    id?: string
    title: string
    description: string
    skills?: NullableJsonNullValueInput | InputJsonValue
    link: string
    createdAt?: Date | string
    subSkills?: NullableJsonNullValueInput | InputJsonValue
    updatedAt?: Date | string
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: number
    ogImage?: string | null
  }

  export type AccountCreateManyUserInput = {
    id?: string
    type: string
    provider: string
    providerAccountId: string
    refresh_token?: string | null
    access_token?: string | null
    expires_at?: number | null
    token_type?: string | null
    scope?: string | null
    id_token?: string | null
    session_state?: string | null
  }

  export type SessionCreateManyUserInput = {
    id?: string
    sessionToken: string
    expires: Date | string
  }

  export type EmailSettingsCreateManyUserInput = {
    id?: number
    category: string
  }

  export type TalentRankingsCreateManyUserInput = {
    id?: string
    skill?: $Enums.TalentRankingSkills
    timeframe?: $Enums.TalentRankingTimeframe
    rank: number
    submissions?: number
    winRate?: number
    wins?: number
    totalEarnedInUSD: number
  }

  export type ScoutsCreateManyUserInput = {
    id?: string
    listingId: string
    dollarsEarned: number
    score: Decimal | DecimalJsLike | number | string
    invited: boolean
    skills: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
  }

  export type GrantApplicationCreateManyUserInput = {
    id?: string
    grantId: string
    applicationStatus?: $Enums.GrantApplicationStatus
    projectTitle: string
    projectOneLiner: string
    projectDetails: string
    projectTimeline: string
    proofOfWork: string
    walletAddress: string
    twitter?: string | null
    github?: string | null
    milestones?: string | null
    kpi?: string | null
    answers?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    label?: $Enums.SubmissionLabels
    ask?: number
    approvedAmount?: number
    approvedAmountInUSD?: number
    decidedAt?: Date | string | null
    totalPaid?: number
    isShipped?: boolean
    paymentDetails?: NullableJsonNullValueInput | InputJsonValue
    totalTranches?: number
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: number
    decidedBy?: string | null
    notes?: string | null
    ai?: NullableJsonNullValueInput | InputJsonValue
  }

  export type SubscribeHackathonCreateManyUserInput = {
    id?: string
    hackathonId: string
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CreditLedgerCreateManyUserInput = {
    id?: string
    submissionId?: string | null
    applicationId?: string | null
    type: $Enums.CreditEventType
    change: number
    effectiveMonth: Date | string
    createdAt?: Date | string
  }

  export type UserSponsorsUpdateWithoutUserInput = {
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sponsor?: SponsorsUpdateOneRequiredWithoutUserSponsorsNestedInput
  }

  export type UserSponsorsUncheckedUpdateWithoutUserInput = {
    sponsorId?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserSponsorsUncheckedUpdateManyWithoutUserInput = {
    sponsorId?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BountiesUpdateWithoutPocInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    commitmentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    token?: NullableStringFieldUpdateOperationsInput | string | null
    rewardAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: IntFieldUpdateOperationsInput | number
    usdValue?: NullableFloatFieldUpdateOperationsInput | number | null
    source?: EnumSourceFieldUpdateOperationsInput | $Enums.Source
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationLink?: NullableStringFieldUpdateOperationsInput | string | null
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: EnumBountyTypeFieldUpdateOperationsInput | $Enums.BountyType
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    isWinnersAnnounced?: BoolFieldUpdateOperationsInput | boolean
    region?: StringFieldUpdateOperationsInput | string
    pocSocials?: NullableStringFieldUpdateOperationsInput | string | null
    hackathonprize?: BoolFieldUpdateOperationsInput | boolean
    applicationType?: EnumApplicationTypeFieldUpdateOperationsInput | $Enums.ApplicationType
    timeToComplete?: NullableStringFieldUpdateOperationsInput | string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    compensationType?: EnumCompensationTypeFieldUpdateOperationsInput | $Enums.CompensationType
    maxRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    minRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    shouldSendEmail?: BoolFieldUpdateOperationsInput | boolean
    isFndnPaying?: BoolFieldUpdateOperationsInput | boolean
    winnersAnnouncedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discordMessageIds?: NullableJsonNullValueInput | InputJsonValue
    template?: BountiesTemplatesUpdateOneWithoutBountiesNestedInput
    sponsor?: SponsorsUpdateOneRequiredWithoutBountiesNestedInput
    Submission?: SubmissionUpdateManyWithoutListingNestedInput
    SubscribeBounty?: SubscribeBountyUpdateManyWithoutBountiesNestedInput
    Hackathon?: HackathonUpdateOneWithoutListingsNestedInput
    Scouts?: ScoutsUpdateManyWithoutListingNestedInput
    Comments?: CommentUpdateManyWithoutListingNestedInput
  }

  export type BountiesUncheckedUpdateWithoutPocInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    commitmentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    token?: NullableStringFieldUpdateOperationsInput | string | null
    rewardAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: IntFieldUpdateOperationsInput | number
    usdValue?: NullableFloatFieldUpdateOperationsInput | number | null
    sponsorId?: StringFieldUpdateOperationsInput | string
    source?: EnumSourceFieldUpdateOperationsInput | $Enums.Source
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationLink?: NullableStringFieldUpdateOperationsInput | string | null
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: EnumBountyTypeFieldUpdateOperationsInput | $Enums.BountyType
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    isWinnersAnnounced?: BoolFieldUpdateOperationsInput | boolean
    templateId?: NullableStringFieldUpdateOperationsInput | string | null
    region?: StringFieldUpdateOperationsInput | string
    pocSocials?: NullableStringFieldUpdateOperationsInput | string | null
    hackathonprize?: BoolFieldUpdateOperationsInput | boolean
    applicationType?: EnumApplicationTypeFieldUpdateOperationsInput | $Enums.ApplicationType
    timeToComplete?: NullableStringFieldUpdateOperationsInput | string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    hackathonId?: NullableStringFieldUpdateOperationsInput | string | null
    compensationType?: EnumCompensationTypeFieldUpdateOperationsInput | $Enums.CompensationType
    maxRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    minRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    shouldSendEmail?: BoolFieldUpdateOperationsInput | boolean
    isFndnPaying?: BoolFieldUpdateOperationsInput | boolean
    winnersAnnouncedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discordMessageIds?: NullableJsonNullValueInput | InputJsonValue
    Submission?: SubmissionUncheckedUpdateManyWithoutListingNestedInput
    SubscribeBounty?: SubscribeBountyUncheckedUpdateManyWithoutBountiesNestedInput
    Scouts?: ScoutsUncheckedUpdateManyWithoutListingNestedInput
    Comments?: CommentUncheckedUpdateManyWithoutListingNestedInput
  }

  export type BountiesUncheckedUpdateManyWithoutPocInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    commitmentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    token?: NullableStringFieldUpdateOperationsInput | string | null
    rewardAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: IntFieldUpdateOperationsInput | number
    usdValue?: NullableFloatFieldUpdateOperationsInput | number | null
    sponsorId?: StringFieldUpdateOperationsInput | string
    source?: EnumSourceFieldUpdateOperationsInput | $Enums.Source
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationLink?: NullableStringFieldUpdateOperationsInput | string | null
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: EnumBountyTypeFieldUpdateOperationsInput | $Enums.BountyType
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    isWinnersAnnounced?: BoolFieldUpdateOperationsInput | boolean
    templateId?: NullableStringFieldUpdateOperationsInput | string | null
    region?: StringFieldUpdateOperationsInput | string
    pocSocials?: NullableStringFieldUpdateOperationsInput | string | null
    hackathonprize?: BoolFieldUpdateOperationsInput | boolean
    applicationType?: EnumApplicationTypeFieldUpdateOperationsInput | $Enums.ApplicationType
    timeToComplete?: NullableStringFieldUpdateOperationsInput | string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    hackathonId?: NullableStringFieldUpdateOperationsInput | string | null
    compensationType?: EnumCompensationTypeFieldUpdateOperationsInput | $Enums.CompensationType
    maxRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    minRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    shouldSendEmail?: BoolFieldUpdateOperationsInput | boolean
    isFndnPaying?: BoolFieldUpdateOperationsInput | boolean
    winnersAnnouncedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discordMessageIds?: NullableJsonNullValueInput | InputJsonValue
  }

  export type BountiesTemplatesUpdateWithoutPocInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    emoji?: NullableStringFieldUpdateOperationsInput | string | null
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: EnumBountyTypeFieldUpdateOperationsInput | $Enums.BountyType
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    region?: StringFieldUpdateOperationsInput | string
    applicationType?: EnumApplicationTypeFieldUpdateOperationsInput | $Enums.ApplicationType
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    timeToComplete?: NullableStringFieldUpdateOperationsInput | string | null
    token?: NullableStringFieldUpdateOperationsInput | string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    compensationType?: EnumCompensationTypeFieldUpdateOperationsInput | $Enums.CompensationType
    maxRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    minRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    rewardAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: IntFieldUpdateOperationsInput | number
    usdValue?: NullableFloatFieldUpdateOperationsInput | number | null
    pocSocials?: NullableStringFieldUpdateOperationsInput | string | null
    source?: EnumSourceFieldUpdateOperationsInput | $Enums.Source
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    Bounties?: BountiesUpdateManyWithoutTemplateNestedInput
    sponsor?: SponsorsUpdateOneRequiredWithoutTemplatesNestedInput
  }

  export type BountiesTemplatesUncheckedUpdateWithoutPocInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    emoji?: NullableStringFieldUpdateOperationsInput | string | null
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: EnumBountyTypeFieldUpdateOperationsInput | $Enums.BountyType
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    region?: StringFieldUpdateOperationsInput | string
    applicationType?: EnumApplicationTypeFieldUpdateOperationsInput | $Enums.ApplicationType
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    timeToComplete?: NullableStringFieldUpdateOperationsInput | string | null
    token?: NullableStringFieldUpdateOperationsInput | string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    compensationType?: EnumCompensationTypeFieldUpdateOperationsInput | $Enums.CompensationType
    maxRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    minRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    rewardAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: IntFieldUpdateOperationsInput | number
    usdValue?: NullableFloatFieldUpdateOperationsInput | number | null
    sponsorId?: StringFieldUpdateOperationsInput | string
    pocSocials?: NullableStringFieldUpdateOperationsInput | string | null
    source?: EnumSourceFieldUpdateOperationsInput | $Enums.Source
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    Bounties?: BountiesUncheckedUpdateManyWithoutTemplateNestedInput
  }

  export type BountiesTemplatesUncheckedUpdateManyWithoutPocInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    emoji?: NullableStringFieldUpdateOperationsInput | string | null
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: EnumBountyTypeFieldUpdateOperationsInput | $Enums.BountyType
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    region?: StringFieldUpdateOperationsInput | string
    applicationType?: EnumApplicationTypeFieldUpdateOperationsInput | $Enums.ApplicationType
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    timeToComplete?: NullableStringFieldUpdateOperationsInput | string | null
    token?: NullableStringFieldUpdateOperationsInput | string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    compensationType?: EnumCompensationTypeFieldUpdateOperationsInput | $Enums.CompensationType
    maxRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    minRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    rewardAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: IntFieldUpdateOperationsInput | number
    usdValue?: NullableFloatFieldUpdateOperationsInput | number | null
    sponsorId?: StringFieldUpdateOperationsInput | string
    pocSocials?: NullableStringFieldUpdateOperationsInput | string | null
    source?: EnumSourceFieldUpdateOperationsInput | $Enums.Source
    isPublished?: BoolFieldUpdateOperationsInput | boolean
  }

  export type CommentUpdateWithoutAuthorInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    refType?: EnumCommentRefTypeFieldUpdateOperationsInput | $Enums.CommentRefType
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    isPinned?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    submissionId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCommentTypeFieldUpdateOperationsInput | $Enums.CommentType
    repliedTo?: CommentUpdateOneWithoutRepliesNestedInput
    replies?: CommentUpdateManyWithoutRepliedToNestedInput
    listing?: BountiesUpdateOneWithoutCommentsNestedInput
    submission?: SubmissionUpdateOneWithoutCommentsNestedInput
    pow?: PoWUpdateOneWithoutCommentsNestedInput
    GrantApplication?: GrantApplicationUpdateOneWithoutCommentsNestedInput
  }

  export type CommentUncheckedUpdateWithoutAuthorInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    refType?: EnumCommentRefTypeFieldUpdateOperationsInput | $Enums.CommentRefType
    refId?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    isPinned?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    replyToId?: NullableStringFieldUpdateOperationsInput | string | null
    submissionId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCommentTypeFieldUpdateOperationsInput | $Enums.CommentType
    replies?: CommentUncheckedUpdateManyWithoutRepliedToNestedInput
  }

  export type CommentUncheckedUpdateManyWithoutAuthorInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    refType?: EnumCommentRefTypeFieldUpdateOperationsInput | $Enums.CommentRefType
    refId?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    isPinned?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    replyToId?: NullableStringFieldUpdateOperationsInput | string | null
    submissionId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCommentTypeFieldUpdateOperationsInput | $Enums.CommentType
  }

  export type SubmissionUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    link?: NullableStringFieldUpdateOperationsInput | string | null
    tweet?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumSubmissionStatusFieldUpdateOperationsInput | $Enums.SubmissionStatus
    eligibilityAnswers?: NullableJsonNullValueInput | InputJsonValue
    isWinner?: BoolFieldUpdateOperationsInput | boolean
    winnerPosition?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: IntFieldUpdateOperationsInput | number
    isPaid?: BoolFieldUpdateOperationsInput | boolean
    paymentDetails?: NullableJsonNullValueInput | InputJsonValue
    otherInfo?: NullableStringFieldUpdateOperationsInput | string | null
    ask?: NullableIntFieldUpdateOperationsInput | number | null
    label?: EnumSubmissionLabelsFieldUpdateOperationsInput | $Enums.SubmissionLabels
    rewardInUSD?: FloatFieldUpdateOperationsInput | number
    ogImage?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    listing?: BountiesUpdateOneRequiredWithoutSubmissionNestedInput
    Comments?: CommentUpdateManyWithoutSubmissionNestedInput
    CreditLedger?: CreditLedgerUpdateManyWithoutSubmissionNestedInput
  }

  export type SubmissionUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    link?: NullableStringFieldUpdateOperationsInput | string | null
    tweet?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumSubmissionStatusFieldUpdateOperationsInput | $Enums.SubmissionStatus
    eligibilityAnswers?: NullableJsonNullValueInput | InputJsonValue
    listingId?: StringFieldUpdateOperationsInput | string
    isWinner?: BoolFieldUpdateOperationsInput | boolean
    winnerPosition?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: IntFieldUpdateOperationsInput | number
    isPaid?: BoolFieldUpdateOperationsInput | boolean
    paymentDetails?: NullableJsonNullValueInput | InputJsonValue
    otherInfo?: NullableStringFieldUpdateOperationsInput | string | null
    ask?: NullableIntFieldUpdateOperationsInput | number | null
    label?: EnumSubmissionLabelsFieldUpdateOperationsInput | $Enums.SubmissionLabels
    rewardInUSD?: FloatFieldUpdateOperationsInput | number
    ogImage?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    Comments?: CommentUncheckedUpdateManyWithoutSubmissionNestedInput
    CreditLedger?: CreditLedgerUncheckedUpdateManyWithoutSubmissionNestedInput
  }

  export type SubmissionUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    link?: NullableStringFieldUpdateOperationsInput | string | null
    tweet?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumSubmissionStatusFieldUpdateOperationsInput | $Enums.SubmissionStatus
    eligibilityAnswers?: NullableJsonNullValueInput | InputJsonValue
    listingId?: StringFieldUpdateOperationsInput | string
    isWinner?: BoolFieldUpdateOperationsInput | boolean
    winnerPosition?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: IntFieldUpdateOperationsInput | number
    isPaid?: BoolFieldUpdateOperationsInput | boolean
    paymentDetails?: NullableJsonNullValueInput | InputJsonValue
    otherInfo?: NullableStringFieldUpdateOperationsInput | string | null
    ask?: NullableIntFieldUpdateOperationsInput | number | null
    label?: EnumSubmissionLabelsFieldUpdateOperationsInput | $Enums.SubmissionLabels
    rewardInUSD?: FloatFieldUpdateOperationsInput | number
    ogImage?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type GrantsUpdateWithoutPocInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    token?: NullableStringFieldUpdateOperationsInput | string | null
    minReward?: NullableFloatFieldUpdateOperationsInput | number | null
    maxReward?: NullableFloatFieldUpdateOperationsInput | number | null
    totalPaid?: FloatFieldUpdateOperationsInput | number
    totalApproved?: FloatFieldUpdateOperationsInput | number
    historicalApplications?: IntFieldUpdateOperationsInput | number
    historicalPaid?: FloatFieldUpdateOperationsInput | number
    link?: NullableStringFieldUpdateOperationsInput | string | null
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    skills?: NullableJsonNullValueInput | InputJsonValue
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    region?: StringFieldUpdateOperationsInput | string
    questions?: NullableJsonNullValueInput | InputJsonValue
    pocSocials?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumGrantStatusFieldUpdateOperationsInput | $Enums.GrantStatus
    airtableId?: NullableStringFieldUpdateOperationsInput | string | null
    avgResponseTime?: NullableStringFieldUpdateOperationsInput | string | null
    isNative?: BoolFieldUpdateOperationsInput | boolean
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    references?: NullableJsonNullValueInput | InputJsonValue
    ai?: NullableJsonNullValueInput | InputJsonValue
    approverRecordId?: NullableStringFieldUpdateOperationsInput | string | null
    emailSender?: NullableStringFieldUpdateOperationsInput | string | null
    replyToEmail?: NullableStringFieldUpdateOperationsInput | string | null
    emailSalutation?: NullableStringFieldUpdateOperationsInput | string | null
    communityLink?: NullableStringFieldUpdateOperationsInput | string | null
    sponsor?: SponsorsUpdateOneRequiredWithoutGrantsNestedInput
    GrantApplication?: GrantApplicationUpdateManyWithoutGrantNestedInput
    GrantTranche?: GrantTrancheUpdateManyWithoutGrantNestedInput
  }

  export type GrantsUncheckedUpdateWithoutPocInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    token?: NullableStringFieldUpdateOperationsInput | string | null
    minReward?: NullableFloatFieldUpdateOperationsInput | number | null
    maxReward?: NullableFloatFieldUpdateOperationsInput | number | null
    totalPaid?: FloatFieldUpdateOperationsInput | number
    totalApproved?: FloatFieldUpdateOperationsInput | number
    historicalApplications?: IntFieldUpdateOperationsInput | number
    historicalPaid?: FloatFieldUpdateOperationsInput | number
    link?: NullableStringFieldUpdateOperationsInput | string | null
    sponsorId?: StringFieldUpdateOperationsInput | string
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    skills?: NullableJsonNullValueInput | InputJsonValue
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    region?: StringFieldUpdateOperationsInput | string
    questions?: NullableJsonNullValueInput | InputJsonValue
    pocSocials?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumGrantStatusFieldUpdateOperationsInput | $Enums.GrantStatus
    airtableId?: NullableStringFieldUpdateOperationsInput | string | null
    avgResponseTime?: NullableStringFieldUpdateOperationsInput | string | null
    isNative?: BoolFieldUpdateOperationsInput | boolean
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    references?: NullableJsonNullValueInput | InputJsonValue
    ai?: NullableJsonNullValueInput | InputJsonValue
    approverRecordId?: NullableStringFieldUpdateOperationsInput | string | null
    emailSender?: NullableStringFieldUpdateOperationsInput | string | null
    replyToEmail?: NullableStringFieldUpdateOperationsInput | string | null
    emailSalutation?: NullableStringFieldUpdateOperationsInput | string | null
    communityLink?: NullableStringFieldUpdateOperationsInput | string | null
    GrantApplication?: GrantApplicationUncheckedUpdateManyWithoutGrantNestedInput
    GrantTranche?: GrantTrancheUncheckedUpdateManyWithoutGrantNestedInput
  }

  export type GrantsUncheckedUpdateManyWithoutPocInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    token?: NullableStringFieldUpdateOperationsInput | string | null
    minReward?: NullableFloatFieldUpdateOperationsInput | number | null
    maxReward?: NullableFloatFieldUpdateOperationsInput | number | null
    totalPaid?: FloatFieldUpdateOperationsInput | number
    totalApproved?: FloatFieldUpdateOperationsInput | number
    historicalApplications?: IntFieldUpdateOperationsInput | number
    historicalPaid?: FloatFieldUpdateOperationsInput | number
    link?: NullableStringFieldUpdateOperationsInput | string | null
    sponsorId?: StringFieldUpdateOperationsInput | string
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    skills?: NullableJsonNullValueInput | InputJsonValue
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    region?: StringFieldUpdateOperationsInput | string
    questions?: NullableJsonNullValueInput | InputJsonValue
    pocSocials?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumGrantStatusFieldUpdateOperationsInput | $Enums.GrantStatus
    airtableId?: NullableStringFieldUpdateOperationsInput | string | null
    avgResponseTime?: NullableStringFieldUpdateOperationsInput | string | null
    isNative?: BoolFieldUpdateOperationsInput | boolean
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    references?: NullableJsonNullValueInput | InputJsonValue
    ai?: NullableJsonNullValueInput | InputJsonValue
    approverRecordId?: NullableStringFieldUpdateOperationsInput | string | null
    emailSender?: NullableStringFieldUpdateOperationsInput | string | null
    replyToEmail?: NullableStringFieldUpdateOperationsInput | string | null
    emailSalutation?: NullableStringFieldUpdateOperationsInput | string | null
    communityLink?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserInvitesUpdateWithoutSenderInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    memberType?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    token?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
    sponsor?: SponsorsUpdateOneRequiredWithoutUserInvitesNestedInput
  }

  export type UserInvitesUncheckedUpdateWithoutSenderInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sponsorId?: StringFieldUpdateOperationsInput | string
    memberType?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    token?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserInvitesUncheckedUpdateManyWithoutSenderInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sponsorId?: StringFieldUpdateOperationsInput | string
    memberType?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    token?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SubscribeBountyUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Bounties?: BountiesUpdateOneWithoutSubscribeBountyNestedInput
  }

  export type SubscribeBountyUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    bountyId?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SubscribeBountyUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    bountyId?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PoWUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    skills?: NullableJsonNullValueInput | InputJsonValue
    link?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    subSkills?: NullableJsonNullValueInput | InputJsonValue
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: IntFieldUpdateOperationsInput | number
    ogImage?: NullableStringFieldUpdateOperationsInput | string | null
    Comments?: CommentUpdateManyWithoutPowNestedInput
  }

  export type PoWUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    skills?: NullableJsonNullValueInput | InputJsonValue
    link?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    subSkills?: NullableJsonNullValueInput | InputJsonValue
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: IntFieldUpdateOperationsInput | number
    ogImage?: NullableStringFieldUpdateOperationsInput | string | null
    Comments?: CommentUncheckedUpdateManyWithoutPowNestedInput
  }

  export type PoWUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    skills?: NullableJsonNullValueInput | InputJsonValue
    link?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    subSkills?: NullableJsonNullValueInput | InputJsonValue
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: IntFieldUpdateOperationsInput | number
    ogImage?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AccountUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    expires_at?: NullableIntFieldUpdateOperationsInput | number | null
    token_type?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    id_token?: NullableStringFieldUpdateOperationsInput | string | null
    session_state?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AccountUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    expires_at?: NullableIntFieldUpdateOperationsInput | number | null
    token_type?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    id_token?: NullableStringFieldUpdateOperationsInput | string | null
    session_state?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AccountUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    expires_at?: NullableIntFieldUpdateOperationsInput | number | null
    token_type?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    id_token?: NullableStringFieldUpdateOperationsInput | string | null
    session_state?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SessionUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SessionUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SessionUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EmailSettingsUpdateWithoutUserInput = {
    category?: StringFieldUpdateOperationsInput | string
  }

  export type EmailSettingsUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    category?: StringFieldUpdateOperationsInput | string
  }

  export type EmailSettingsUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    category?: StringFieldUpdateOperationsInput | string
  }

  export type TalentRankingsUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    skill?: EnumTalentRankingSkillsFieldUpdateOperationsInput | $Enums.TalentRankingSkills
    timeframe?: EnumTalentRankingTimeframeFieldUpdateOperationsInput | $Enums.TalentRankingTimeframe
    rank?: IntFieldUpdateOperationsInput | number
    submissions?: IntFieldUpdateOperationsInput | number
    winRate?: IntFieldUpdateOperationsInput | number
    wins?: IntFieldUpdateOperationsInput | number
    totalEarnedInUSD?: IntFieldUpdateOperationsInput | number
  }

  export type TalentRankingsUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    skill?: EnumTalentRankingSkillsFieldUpdateOperationsInput | $Enums.TalentRankingSkills
    timeframe?: EnumTalentRankingTimeframeFieldUpdateOperationsInput | $Enums.TalentRankingTimeframe
    rank?: IntFieldUpdateOperationsInput | number
    submissions?: IntFieldUpdateOperationsInput | number
    winRate?: IntFieldUpdateOperationsInput | number
    wins?: IntFieldUpdateOperationsInput | number
    totalEarnedInUSD?: IntFieldUpdateOperationsInput | number
  }

  export type TalentRankingsUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    skill?: EnumTalentRankingSkillsFieldUpdateOperationsInput | $Enums.TalentRankingSkills
    timeframe?: EnumTalentRankingTimeframeFieldUpdateOperationsInput | $Enums.TalentRankingTimeframe
    rank?: IntFieldUpdateOperationsInput | number
    submissions?: IntFieldUpdateOperationsInput | number
    winRate?: IntFieldUpdateOperationsInput | number
    wins?: IntFieldUpdateOperationsInput | number
    totalEarnedInUSD?: IntFieldUpdateOperationsInput | number
  }

  export type ScoutsUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    dollarsEarned?: IntFieldUpdateOperationsInput | number
    score?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    invited?: BoolFieldUpdateOperationsInput | boolean
    skills?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listing?: BountiesUpdateOneRequiredWithoutScoutsNestedInput
  }

  export type ScoutsUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    listingId?: StringFieldUpdateOperationsInput | string
    dollarsEarned?: IntFieldUpdateOperationsInput | number
    score?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    invited?: BoolFieldUpdateOperationsInput | boolean
    skills?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ScoutsUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    listingId?: StringFieldUpdateOperationsInput | string
    dollarsEarned?: IntFieldUpdateOperationsInput | number
    score?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    invited?: BoolFieldUpdateOperationsInput | boolean
    skills?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type GrantApplicationUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    applicationStatus?: EnumGrantApplicationStatusFieldUpdateOperationsInput | $Enums.GrantApplicationStatus
    projectTitle?: StringFieldUpdateOperationsInput | string
    projectOneLiner?: StringFieldUpdateOperationsInput | string
    projectDetails?: StringFieldUpdateOperationsInput | string
    projectTimeline?: StringFieldUpdateOperationsInput | string
    proofOfWork?: StringFieldUpdateOperationsInput | string
    walletAddress?: StringFieldUpdateOperationsInput | string
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    milestones?: NullableStringFieldUpdateOperationsInput | string | null
    kpi?: NullableStringFieldUpdateOperationsInput | string | null
    answers?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    label?: EnumSubmissionLabelsFieldUpdateOperationsInput | $Enums.SubmissionLabels
    ask?: FloatFieldUpdateOperationsInput | number
    approvedAmount?: FloatFieldUpdateOperationsInput | number
    approvedAmountInUSD?: FloatFieldUpdateOperationsInput | number
    decidedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalPaid?: FloatFieldUpdateOperationsInput | number
    isShipped?: BoolFieldUpdateOperationsInput | boolean
    paymentDetails?: NullableJsonNullValueInput | InputJsonValue
    totalTranches?: IntFieldUpdateOperationsInput | number
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: IntFieldUpdateOperationsInput | number
    decidedBy?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    ai?: NullableJsonNullValueInput | InputJsonValue
    grant?: GrantsUpdateOneRequiredWithoutGrantApplicationNestedInput
    Comments?: CommentUpdateManyWithoutGrantApplicationNestedInput
    GrantTranche?: GrantTrancheUpdateManyWithoutGrantApplicationNestedInput
    CreditLedger?: CreditLedgerUpdateManyWithoutApplicationNestedInput
  }

  export type GrantApplicationUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    grantId?: StringFieldUpdateOperationsInput | string
    applicationStatus?: EnumGrantApplicationStatusFieldUpdateOperationsInput | $Enums.GrantApplicationStatus
    projectTitle?: StringFieldUpdateOperationsInput | string
    projectOneLiner?: StringFieldUpdateOperationsInput | string
    projectDetails?: StringFieldUpdateOperationsInput | string
    projectTimeline?: StringFieldUpdateOperationsInput | string
    proofOfWork?: StringFieldUpdateOperationsInput | string
    walletAddress?: StringFieldUpdateOperationsInput | string
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    milestones?: NullableStringFieldUpdateOperationsInput | string | null
    kpi?: NullableStringFieldUpdateOperationsInput | string | null
    answers?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    label?: EnumSubmissionLabelsFieldUpdateOperationsInput | $Enums.SubmissionLabels
    ask?: FloatFieldUpdateOperationsInput | number
    approvedAmount?: FloatFieldUpdateOperationsInput | number
    approvedAmountInUSD?: FloatFieldUpdateOperationsInput | number
    decidedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalPaid?: FloatFieldUpdateOperationsInput | number
    isShipped?: BoolFieldUpdateOperationsInput | boolean
    paymentDetails?: NullableJsonNullValueInput | InputJsonValue
    totalTranches?: IntFieldUpdateOperationsInput | number
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: IntFieldUpdateOperationsInput | number
    decidedBy?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    ai?: NullableJsonNullValueInput | InputJsonValue
    Comments?: CommentUncheckedUpdateManyWithoutGrantApplicationNestedInput
    GrantTranche?: GrantTrancheUncheckedUpdateManyWithoutGrantApplicationNestedInput
    CreditLedger?: CreditLedgerUncheckedUpdateManyWithoutApplicationNestedInput
  }

  export type GrantApplicationUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    grantId?: StringFieldUpdateOperationsInput | string
    applicationStatus?: EnumGrantApplicationStatusFieldUpdateOperationsInput | $Enums.GrantApplicationStatus
    projectTitle?: StringFieldUpdateOperationsInput | string
    projectOneLiner?: StringFieldUpdateOperationsInput | string
    projectDetails?: StringFieldUpdateOperationsInput | string
    projectTimeline?: StringFieldUpdateOperationsInput | string
    proofOfWork?: StringFieldUpdateOperationsInput | string
    walletAddress?: StringFieldUpdateOperationsInput | string
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    milestones?: NullableStringFieldUpdateOperationsInput | string | null
    kpi?: NullableStringFieldUpdateOperationsInput | string | null
    answers?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    label?: EnumSubmissionLabelsFieldUpdateOperationsInput | $Enums.SubmissionLabels
    ask?: FloatFieldUpdateOperationsInput | number
    approvedAmount?: FloatFieldUpdateOperationsInput | number
    approvedAmountInUSD?: FloatFieldUpdateOperationsInput | number
    decidedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalPaid?: FloatFieldUpdateOperationsInput | number
    isShipped?: BoolFieldUpdateOperationsInput | boolean
    paymentDetails?: NullableJsonNullValueInput | InputJsonValue
    totalTranches?: IntFieldUpdateOperationsInput | number
    like?: NullableJsonNullValueInput | InputJsonValue
    likeCount?: IntFieldUpdateOperationsInput | number
    decidedBy?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    ai?: NullableJsonNullValueInput | InputJsonValue
  }

  export type SubscribeHackathonUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Hackthons?: HackathonUpdateOneWithoutSubscribeHackathonNestedInput
  }

  export type SubscribeHackathonUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    hackathonId?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SubscribeHackathonUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    hackathonId?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CreditLedgerUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumCreditEventTypeFieldUpdateOperationsInput | $Enums.CreditEventType
    change?: IntFieldUpdateOperationsInput | number
    effectiveMonth?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    submission?: SubmissionUpdateOneWithoutCreditLedgerNestedInput
    application?: GrantApplicationUpdateOneWithoutCreditLedgerNestedInput
  }

  export type CreditLedgerUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    submissionId?: NullableStringFieldUpdateOperationsInput | string | null
    applicationId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCreditEventTypeFieldUpdateOperationsInput | $Enums.CreditEventType
    change?: IntFieldUpdateOperationsInput | number
    effectiveMonth?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CreditLedgerUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    submissionId?: NullableStringFieldUpdateOperationsInput | string | null
    applicationId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCreditEventTypeFieldUpdateOperationsInput | $Enums.CreditEventType
    change?: IntFieldUpdateOperationsInput | number
    effectiveMonth?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CommentCreateManyPowInput = {
    id?: string
    message: string
    authorId: string
    refType?: $Enums.CommentRefType
    isActive?: boolean
    isArchived?: boolean
    isPinned?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    replyToId?: string | null
    submissionId?: string | null
    type?: $Enums.CommentType
  }

  export type CommentUpdateWithoutPowInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    refType?: EnumCommentRefTypeFieldUpdateOperationsInput | $Enums.CommentRefType
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    isPinned?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    submissionId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCommentTypeFieldUpdateOperationsInput | $Enums.CommentType
    author?: UserUpdateOneRequiredWithoutCommentNestedInput
    repliedTo?: CommentUpdateOneWithoutRepliesNestedInput
    replies?: CommentUpdateManyWithoutRepliedToNestedInput
    listing?: BountiesUpdateOneWithoutCommentsNestedInput
    submission?: SubmissionUpdateOneWithoutCommentsNestedInput
    GrantApplication?: GrantApplicationUpdateOneWithoutCommentsNestedInput
  }

  export type CommentUncheckedUpdateWithoutPowInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    authorId?: StringFieldUpdateOperationsInput | string
    refType?: EnumCommentRefTypeFieldUpdateOperationsInput | $Enums.CommentRefType
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    isPinned?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    replyToId?: NullableStringFieldUpdateOperationsInput | string | null
    submissionId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCommentTypeFieldUpdateOperationsInput | $Enums.CommentType
    replies?: CommentUncheckedUpdateManyWithoutRepliedToNestedInput
  }

  export type CommentUncheckedUpdateManyWithoutPowInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    authorId?: StringFieldUpdateOperationsInput | string
    refType?: EnumCommentRefTypeFieldUpdateOperationsInput | $Enums.CommentRefType
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    isPinned?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    replyToId?: NullableStringFieldUpdateOperationsInput | string | null
    submissionId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumCommentTypeFieldUpdateOperationsInput | $Enums.CommentType
  }

  export type BountiesCreateManyHackathonInput = {
    id?: string
    title: string
    slug: string
    description?: string | null
    deadline?: Date | string | null
    commitmentDate?: Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.status
    token?: string | null
    rewardAmount?: number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: number
    usdValue?: number | null
    sponsorId: string
    pocId: string
    source?: $Enums.Source
    isPublished?: boolean
    isFeatured?: boolean
    isActive?: boolean
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    applicationLink?: string | null
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: $Enums.BountyType
    requirements?: string | null
    isWinnersAnnounced?: boolean
    templateId?: string | null
    region?: string
    pocSocials?: string | null
    hackathonprize?: boolean
    applicationType?: $Enums.ApplicationType
    timeToComplete?: string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: string | null
    publishedAt?: Date | string | null
    isPrivate?: boolean
    compensationType?: $Enums.CompensationType
    maxRewardAsk?: number | null
    minRewardAsk?: number | null
    language?: string | null
    shouldSendEmail?: boolean
    isFndnPaying?: boolean
    winnersAnnouncedAt?: Date | string | null
    discordMessageIds?: NullableJsonNullValueInput | InputJsonValue
  }

  export type UserCreateManyHackathonInput = {
    id?: string
    publicKey?: string | null
    walletAddress?: string | null
    email: string
    username?: string | null
    photo?: string | null
    firstName?: string | null
    lastName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    role?: string
    isTalentFilled?: boolean
    interests?: string | null
    bio?: string | null
    twitter?: string | null
    discord?: string | null
    github?: string | null
    linkedin?: string | null
    website?: string | null
    telegram?: string | null
    community?: string | null
    experience?: string | null
    superteamLevel?: string | null
    location?: string | null
    cryptoExperience?: string | null
    workPrefernce?: string | null
    currentEmployer?: string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    currentSponsorId?: string | null
    emailVerified?: Date | string | null
    featureModalShown?: boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: boolean
    acceptedTOS?: boolean
    stLead?: string | null
    isBlocked?: boolean
    privyDid: string
    isKYCVerified?: boolean
    kycName?: string | null
    kycCountry?: string | null
    kycAddress?: string | null
    kycDOB?: string | null
    kycIDNumber?: string | null
    kycIDType?: string | null
  }

  export type SubscribeHackathonCreateManyHackthonsInput = {
    id?: string
    userId: string
    isArchived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BountiesUpdateWithoutHackathonInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    commitmentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    token?: NullableStringFieldUpdateOperationsInput | string | null
    rewardAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: IntFieldUpdateOperationsInput | number
    usdValue?: NullableFloatFieldUpdateOperationsInput | number | null
    source?: EnumSourceFieldUpdateOperationsInput | $Enums.Source
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationLink?: NullableStringFieldUpdateOperationsInput | string | null
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: EnumBountyTypeFieldUpdateOperationsInput | $Enums.BountyType
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    isWinnersAnnounced?: BoolFieldUpdateOperationsInput | boolean
    region?: StringFieldUpdateOperationsInput | string
    pocSocials?: NullableStringFieldUpdateOperationsInput | string | null
    hackathonprize?: BoolFieldUpdateOperationsInput | boolean
    applicationType?: EnumApplicationTypeFieldUpdateOperationsInput | $Enums.ApplicationType
    timeToComplete?: NullableStringFieldUpdateOperationsInput | string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    compensationType?: EnumCompensationTypeFieldUpdateOperationsInput | $Enums.CompensationType
    maxRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    minRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    shouldSendEmail?: BoolFieldUpdateOperationsInput | boolean
    isFndnPaying?: BoolFieldUpdateOperationsInput | boolean
    winnersAnnouncedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discordMessageIds?: NullableJsonNullValueInput | InputJsonValue
    template?: BountiesTemplatesUpdateOneWithoutBountiesNestedInput
    sponsor?: SponsorsUpdateOneRequiredWithoutBountiesNestedInput
    poc?: UserUpdateOneRequiredWithoutPocNestedInput
    Submission?: SubmissionUpdateManyWithoutListingNestedInput
    SubscribeBounty?: SubscribeBountyUpdateManyWithoutBountiesNestedInput
    Scouts?: ScoutsUpdateManyWithoutListingNestedInput
    Comments?: CommentUpdateManyWithoutListingNestedInput
  }

  export type BountiesUncheckedUpdateWithoutHackathonInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    commitmentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    token?: NullableStringFieldUpdateOperationsInput | string | null
    rewardAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: IntFieldUpdateOperationsInput | number
    usdValue?: NullableFloatFieldUpdateOperationsInput | number | null
    sponsorId?: StringFieldUpdateOperationsInput | string
    pocId?: StringFieldUpdateOperationsInput | string
    source?: EnumSourceFieldUpdateOperationsInput | $Enums.Source
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationLink?: NullableStringFieldUpdateOperationsInput | string | null
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: EnumBountyTypeFieldUpdateOperationsInput | $Enums.BountyType
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    isWinnersAnnounced?: BoolFieldUpdateOperationsInput | boolean
    templateId?: NullableStringFieldUpdateOperationsInput | string | null
    region?: StringFieldUpdateOperationsInput | string
    pocSocials?: NullableStringFieldUpdateOperationsInput | string | null
    hackathonprize?: BoolFieldUpdateOperationsInput | boolean
    applicationType?: EnumApplicationTypeFieldUpdateOperationsInput | $Enums.ApplicationType
    timeToComplete?: NullableStringFieldUpdateOperationsInput | string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    compensationType?: EnumCompensationTypeFieldUpdateOperationsInput | $Enums.CompensationType
    maxRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    minRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    shouldSendEmail?: BoolFieldUpdateOperationsInput | boolean
    isFndnPaying?: BoolFieldUpdateOperationsInput | boolean
    winnersAnnouncedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discordMessageIds?: NullableJsonNullValueInput | InputJsonValue
    Submission?: SubmissionUncheckedUpdateManyWithoutListingNestedInput
    SubscribeBounty?: SubscribeBountyUncheckedUpdateManyWithoutBountiesNestedInput
    Scouts?: ScoutsUncheckedUpdateManyWithoutListingNestedInput
    Comments?: CommentUncheckedUpdateManyWithoutListingNestedInput
  }

  export type BountiesUncheckedUpdateManyWithoutHackathonInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    deadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    commitmentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    eligibility?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumstatusFieldUpdateOperationsInput | $Enums.status
    token?: NullableStringFieldUpdateOperationsInput | string | null
    rewardAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    rewards?: NullableJsonNullValueInput | InputJsonValue
    maxBonusSpots?: IntFieldUpdateOperationsInput | number
    usdValue?: NullableFloatFieldUpdateOperationsInput | number | null
    sponsorId?: StringFieldUpdateOperationsInput | string
    pocId?: StringFieldUpdateOperationsInput | string
    source?: EnumSourceFieldUpdateOperationsInput | $Enums.Source
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationLink?: NullableStringFieldUpdateOperationsInput | string | null
    skills?: NullableJsonNullValueInput | InputJsonValue
    type?: EnumBountyTypeFieldUpdateOperationsInput | $Enums.BountyType
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    isWinnersAnnounced?: BoolFieldUpdateOperationsInput | boolean
    templateId?: NullableStringFieldUpdateOperationsInput | string | null
    region?: StringFieldUpdateOperationsInput | string
    pocSocials?: NullableStringFieldUpdateOperationsInput | string | null
    hackathonprize?: BoolFieldUpdateOperationsInput | boolean
    applicationType?: EnumApplicationTypeFieldUpdateOperationsInput | $Enums.ApplicationType
    timeToComplete?: NullableStringFieldUpdateOperationsInput | string | null
    references?: NullableJsonNullValueInput | InputJsonValue
    referredBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    compensationType?: EnumCompensationTypeFieldUpdateOperationsInput | $Enums.CompensationType
    maxRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    minRewardAsk?: NullableIntFieldUpdateOperationsInput | number | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    shouldSendEmail?: BoolFieldUpdateOperationsInput | boolean
    isFndnPaying?: BoolFieldUpdateOperationsInput | boolean
    winnersAnnouncedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discordMessageIds?: NullableJsonNullValueInput | InputJsonValue
  }

  export type UserUpdateWithoutHackathonInput = {
    id?: StringFieldUpdateOperationsInput | string
    publicKey?: NullableStringFieldUpdateOperationsInput | string | null
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    isTalentFilled?: BoolFieldUpdateOperationsInput | boolean
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    discord?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    community?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    superteamLevel?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    cryptoExperience?: NullableStringFieldUpdateOperationsInput | string | null
    workPrefernce?: NullableStringFieldUpdateOperationsInput | string | null
    currentEmployer?: NullableStringFieldUpdateOperationsInput | string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: BoolFieldUpdateOperationsInput | boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    featureModalShown?: BoolFieldUpdateOperationsInput | boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: BoolFieldUpdateOperationsInput | boolean
    acceptedTOS?: BoolFieldUpdateOperationsInput | boolean
    stLead?: NullableStringFieldUpdateOperationsInput | string | null
    isBlocked?: BoolFieldUpdateOperationsInput | boolean
    privyDid?: StringFieldUpdateOperationsInput | string
    isKYCVerified?: BoolFieldUpdateOperationsInput | boolean
    kycName?: NullableStringFieldUpdateOperationsInput | string | null
    kycCountry?: NullableStringFieldUpdateOperationsInput | string | null
    kycAddress?: NullableStringFieldUpdateOperationsInput | string | null
    kycDOB?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDNumber?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDType?: NullableStringFieldUpdateOperationsInput | string | null
    currentSponsor?: SponsorsUpdateOneWithoutUserNestedInput
    UserSponsors?: UserSponsorsUpdateManyWithoutUserNestedInput
    poc?: BountiesUpdateManyWithoutPocNestedInput
    templates?: BountiesTemplatesUpdateManyWithoutPocNestedInput
    Comment?: CommentUpdateManyWithoutAuthorNestedInput
    Submission?: SubmissionUpdateManyWithoutUserNestedInput
    Grants?: GrantsUpdateManyWithoutPocNestedInput
    UserInvites?: UserInvitesUpdateManyWithoutSenderNestedInput
    SubscribeBounty?: SubscribeBountyUpdateManyWithoutUserNestedInput
    PoW?: PoWUpdateManyWithoutUserNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    emailSettings?: EmailSettingsUpdateManyWithoutUserNestedInput
    TalentRankings?: TalentRankingsUpdateManyWithoutUserNestedInput
    Scouts?: ScoutsUpdateManyWithoutUserNestedInput
    GrantApplication?: GrantApplicationUpdateManyWithoutUserNestedInput
    SubscribeHackathon?: SubscribeHackathonUpdateManyWithoutUserNestedInput
    CreditLedger?: CreditLedgerUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutHackathonInput = {
    id?: StringFieldUpdateOperationsInput | string
    publicKey?: NullableStringFieldUpdateOperationsInput | string | null
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    isTalentFilled?: BoolFieldUpdateOperationsInput | boolean
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    discord?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    community?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    superteamLevel?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    cryptoExperience?: NullableStringFieldUpdateOperationsInput | string | null
    workPrefernce?: NullableStringFieldUpdateOperationsInput | string | null
    currentEmployer?: NullableStringFieldUpdateOperationsInput | string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: BoolFieldUpdateOperationsInput | boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    currentSponsorId?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    featureModalShown?: BoolFieldUpdateOperationsInput | boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: BoolFieldUpdateOperationsInput | boolean
    acceptedTOS?: BoolFieldUpdateOperationsInput | boolean
    stLead?: NullableStringFieldUpdateOperationsInput | string | null
    isBlocked?: BoolFieldUpdateOperationsInput | boolean
    privyDid?: StringFieldUpdateOperationsInput | string
    isKYCVerified?: BoolFieldUpdateOperationsInput | boolean
    kycName?: NullableStringFieldUpdateOperationsInput | string | null
    kycCountry?: NullableStringFieldUpdateOperationsInput | string | null
    kycAddress?: NullableStringFieldUpdateOperationsInput | string | null
    kycDOB?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDNumber?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDType?: NullableStringFieldUpdateOperationsInput | string | null
    UserSponsors?: UserSponsorsUncheckedUpdateManyWithoutUserNestedInput
    poc?: BountiesUncheckedUpdateManyWithoutPocNestedInput
    templates?: BountiesTemplatesUncheckedUpdateManyWithoutPocNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutAuthorNestedInput
    Submission?: SubmissionUncheckedUpdateManyWithoutUserNestedInput
    Grants?: GrantsUncheckedUpdateManyWithoutPocNestedInput
    UserInvites?: UserInvitesUncheckedUpdateManyWithoutSenderNestedInput
    SubscribeBounty?: SubscribeBountyUncheckedUpdateManyWithoutUserNestedInput
    PoW?: PoWUncheckedUpdateManyWithoutUserNestedInput
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    emailSettings?: EmailSettingsUncheckedUpdateManyWithoutUserNestedInput
    TalentRankings?: TalentRankingsUncheckedUpdateManyWithoutUserNestedInput
    Scouts?: ScoutsUncheckedUpdateManyWithoutUserNestedInput
    GrantApplication?: GrantApplicationUncheckedUpdateManyWithoutUserNestedInput
    SubscribeHackathon?: SubscribeHackathonUncheckedUpdateManyWithoutUserNestedInput
    CreditLedger?: CreditLedgerUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateManyWithoutHackathonInput = {
    id?: StringFieldUpdateOperationsInput | string
    publicKey?: NullableStringFieldUpdateOperationsInput | string | null
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    isTalentFilled?: BoolFieldUpdateOperationsInput | boolean
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    discord?: NullableStringFieldUpdateOperationsInput | string | null
    github?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    community?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    superteamLevel?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    cryptoExperience?: NullableStringFieldUpdateOperationsInput | string | null
    workPrefernce?: NullableStringFieldUpdateOperationsInput | string | null
    currentEmployer?: NullableStringFieldUpdateOperationsInput | string | null
    notifications?: NullableJsonNullValueInput | InputJsonValue
    private?: BoolFieldUpdateOperationsInput | boolean
    skills?: NullableJsonNullValueInput | InputJsonValue
    currentSponsorId?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    featureModalShown?: BoolFieldUpdateOperationsInput | boolean
    surveysShown?: NullableJsonNullValueInput | InputJsonValue
    stRecommended?: BoolFieldUpdateOperationsInput | boolean
    acceptedTOS?: BoolFieldUpdateOperationsInput | boolean
    stLead?: NullableStringFieldUpdateOperationsInput | string | null
    isBlocked?: BoolFieldUpdateOperationsInput | boolean
    privyDid?: StringFieldUpdateOperationsInput | string
    isKYCVerified?: BoolFieldUpdateOperationsInput | boolean
    kycName?: NullableStringFieldUpdateOperationsInput | string | null
    kycCountry?: NullableStringFieldUpdateOperationsInput | string | null
    kycAddress?: NullableStringFieldUpdateOperationsInput | string | null
    kycDOB?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDNumber?: NullableStringFieldUpdateOperationsInput | string | null
    kycIDType?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SubscribeHackathonUpdateWithoutHackthonsInput = {
    id?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    User?: UserUpdateOneRequiredWithoutSubscribeHackathonNestedInput
  }

  export type SubscribeHackathonUncheckedUpdateWithoutHackthonsInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SubscribeHackathonUncheckedUpdateManyWithoutHackthonsInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}